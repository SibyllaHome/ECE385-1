
lab9_app.elf:     file format elf32-littlenios2
lab9_app.elf
architecture: nios2, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x100001b8

Program Header:
    LOAD off    0x00001000 vaddr 0x10000000 paddr 0x10000000 align 2**12
         filesz 0x00000020 memsz 0x00000020 flags r-x
    LOAD off    0x00001020 vaddr 0x10000020 paddr 0x10000020 align 2**12
         filesz 0x00012a5c memsz 0x00012a5c flags r-x
    LOAD off    0x00013a7c vaddr 0x10012a7c paddr 0x1001462c align 2**12
         filesz 0x00001bb0 memsz 0x00001bb0 flags rw-
    LOAD off    0x000161dc vaddr 0x100161dc paddr 0x100161dc align 2**12
         filesz 0x00000000 memsz 0x000003ec flags rw-

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .entry        00000020  10000000  10000000  00001000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .exceptions   00000198  10000020  10000020  00001020  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .text         00012278  100001b8  100001b8  000011b8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  3 .rodata       0000064c  10012430  10012430  00013430  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  4 .rwdata       00001bb0  10012a7c  1001462c  00013a7c  2**2
                  CONTENTS, ALLOC, LOAD, DATA, SMALL_DATA
  5 .bss          000003ec  100161dc  100161dc  000161dc  2**2
                  ALLOC, SMALL_DATA
  6 .comment      00000023  00000000  00000000  0001562c  2**0
                  CONTENTS, READONLY
  7 .debug_aranges 00001118  00000000  00000000  00015650  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   00031413  00000000  00000000  00016768  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 0000c497  00000000  00000000  00047b7b  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   0000e1a3  00000000  00000000  00054012  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  00001f60  00000000  00000000  000621b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    00003815  00000000  00000000  00064118  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    0001864d  00000000  00000000  0006792d  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_alt_sim_info 00000010  00000000  00000000  0007ff7c  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000dd0  00000000  00000000  0007ff90  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .thread_model 00000003  00000000  00000000  0008451d  2**0
                  CONTENTS, READONLY
 17 .cpu          0000000c  00000000  00000000  00084520  2**0
                  CONTENTS, READONLY
 18 .qsys         00000001  00000000  00000000  0008452c  2**0
                  CONTENTS, READONLY
 19 .simulation_enabled 00000001  00000000  00000000  0008452d  2**0
                  CONTENTS, READONLY
 20 .sysid_hash   00000004  00000000  00000000  0008452e  2**0
                  CONTENTS, READONLY
 21 .sysid_base   00000004  00000000  00000000  00084532  2**0
                  CONTENTS, READONLY
 22 .sysid_time   00000004  00000000  00000000  00084536  2**0
                  CONTENTS, READONLY
 23 .stderr_dev   0000000b  00000000  00000000  0008453a  2**0
                  CONTENTS, READONLY
 24 .stdin_dev    0000000b  00000000  00000000  00084545  2**0
                  CONTENTS, READONLY
 25 .stdout_dev   0000000b  00000000  00000000  00084550  2**0
                  CONTENTS, READONLY
 26 .sopc_system_name 00000008  00000000  00000000  0008455b  2**0
                  CONTENTS, READONLY
 27 .quartus_project_dir 0000002b  00000000  00000000  00084563  2**0
                  CONTENTS, READONLY
 28 .sopcinfo     0006241e  00000000  00000000  0008458e  2**0
                  CONTENTS, READONLY
SYMBOL TABLE:
10000000 l    d  .entry	00000000 .entry
10000020 l    d  .exceptions	00000000 .exceptions
100001b8 l    d  .text	00000000 .text
10012430 l    d  .rodata	00000000 .rodata
10012a7c l    d  .rwdata	00000000 .rwdata
100161dc l    d  .bss	00000000 .bss
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_alt_sim_info	00000000 .debug_alt_sim_info
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 ../lab9_app_bsp//obj/HAL/src/crt0.o
100001f0 l       .text	00000000 alt_after_alt_main
00000000 l    df *ABS*	00000000 alt_exception_entry.o
10000094 l       .exceptions	00000000 alt_exception_unknown
00000000 l    df *ABS*	00000000 alt_irq_handler.c
00000000 l    df *ABS*	00000000 main.c
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 printf.c
00000000 l    df *ABS*	00000000 putchar.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 scanf.c
00000000 l    df *ABS*	00000000 vfprintf.c
100017bc l     F .text	00000034 __sprint_r
1001249a l     O .rodata	00000010 blanks.3546
100124aa l     O .rodata	00000010 zeroes.3547
00000000 l    df *ABS*	00000000 vfscanf.c
100124c2 l     O .rodata	00000022 basefix.3458
00000000 l    df *ABS*	00000000 wsetup.c
00000000 l    df *ABS*	00000000 ctype_.c
100125e5 l     O .rodata	00000180 _ctype_b
00000000 l    df *ABS*	00000000 dtoa.c
10004f8c l     F .text	0000023c quorem
00000000 l    df *ABS*	00000000 fflush.c
00000000 l    df *ABS*	00000000 findfp.c
100069fc l     F .text	00000008 __fp_lock
10006a04 l     F .text	00000008 __fp_unlock
00000000 l    df *ABS*	00000000 fread.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 fvwrite.c
00000000 l    df *ABS*	00000000 fwalk.c
00000000 l    df *ABS*	00000000 impure.c
10012fb0 l     O .rwdata	00000400 impure_data
00000000 l    df *ABS*	00000000 int_errno.c
00000000 l    df *ABS*	00000000 iswspace.c
00000000 l    df *ABS*	00000000 locale.c
1001278c l     O .rodata	00000030 lconv
00000000 l    df *ABS*	00000000 makebuf.c
00000000 l    df *ABS*	00000000 mbrtowc.c
00000000 l    df *ABS*	00000000 mbtowc_r.c
00000000 l    df *ABS*	00000000 memchr.c
00000000 l    df *ABS*	00000000 memcpy.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 mprec.c
100128d4 l     O .rodata	0000000c p05.2466
00000000 l    df *ABS*	00000000 putc.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 refill.c
100099f0 l     F .text	0000001c lflush
00000000 l    df *ABS*	00000000 s_isinfd.c
00000000 l    df *ABS*	00000000 s_isnand.c
00000000 l    df *ABS*	00000000 sccl.c
00000000 l    df *ABS*	00000000 sf_nan.c
00000000 l    df *ABS*	00000000 sprintf.c
00000000 l    df *ABS*	00000000 stdio.c
00000000 l    df *ABS*	00000000 strcmp.c
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 strtod.c
100133bc l     O .rwdata	00000014 fpi.2046
100128f0 l     O .rodata	00000028 tinytens
100133d0 l     O .rwdata	00000014 fpinan.2082
00000000 l    df *ABS*	00000000 strtol.c
00000000 l    df *ABS*	00000000 strtoll_r.c
00000000 l    df *ABS*	00000000 strtoul.c
00000000 l    df *ABS*	00000000 strtoull_r.c
00000000 l    df *ABS*	00000000 ungetc.c
00000000 l    df *ABS*	00000000 wbuf.c
00000000 l    df *ABS*	00000000 writer.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 closer.c
00000000 l    df *ABS*	00000000 fclose.c
00000000 l    df *ABS*	00000000 fstatr.c
00000000 l    df *ABS*	00000000 gdtoa-gethex.c
1000ca48 l     F .text	00000110 rshift
00000000 l    df *ABS*	00000000 gdtoa-hexnan.c
00000000 l    df *ABS*	00000000 isattyr.c
00000000 l    df *ABS*	00000000 lseekr.c
00000000 l    df *ABS*	00000000 readr.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
1000e638 l     F .text	00000354 _fpadd_parts
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 lib2-divmod.c
1000f424 l     F .text	00000074 udivmodsi4
00000000 l    df *ABS*	00000000 lib2-mul.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 fp-bit.c
00000000 l    df *ABS*	00000000 alt_close.c
1000fd84 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_dev.c
1000fea0 l     F .text	0000002c alt_dev_null_write
00000000 l    df *ABS*	00000000 alt_errno.c
00000000 l    df *ABS*	00000000 alt_fstat.c
1000fecc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_isatty.c
1000ffcc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_load.c
100100c0 l     F .text	0000006c alt_load_section
00000000 l    df *ABS*	00000000 alt_lseek.c
100101ac l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_main.c
00000000 l    df *ABS*	00000000 alt_malloc_lock.c
00000000 l    df *ABS*	00000000 alt_read.c
10010388 l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_release_fd.c
00000000 l    df *ABS*	00000000 alt_sbrk.c
1001461c l     O .rwdata	00000004 heap_end
00000000 l    df *ABS*	00000000 alt_write.c
100105fc l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_sys_init.c
1001073c l     F .text	00000038 alt_dev_reg
1001358c l     O .rwdata	00001060 jtag_uart_0
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_fd.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_init.c
10010a14 l     F .text	00000204 altera_avalon_jtag_uart_irq
10010c18 l     F .text	000000a4 altera_avalon_jtag_uart_timeout
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_ioctl.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_read.c
00000000 l    df *ABS*	00000000 altera_avalon_jtag_uart_write.c
00000000 l    df *ABS*	00000000 alt_alarm_start.c
00000000 l    df *ABS*	00000000 alt_dcache_flush_all.c
00000000 l    df *ABS*	00000000 alt_dev_llist_insert.c
100113ac l     F .text	00000050 alt_get_errno
00000000 l    df *ABS*	00000000 alt_do_ctors.c
00000000 l    df *ABS*	00000000 alt_do_dtors.c
00000000 l    df *ABS*	00000000 alt_icache_flush_all.c
00000000 l    df *ABS*	00000000 alt_iic.c
00000000 l    df *ABS*	00000000 alt_iic_isr_register.c
00000000 l    df *ABS*	00000000 alt_io_redirect.c
10011838 l     F .text	000000e0 alt_open_fd
00000000 l    df *ABS*	00000000 alt_irq_vars.c
00000000 l    df *ABS*	00000000 alt_open.c
10011990 l     F .text	00000050 alt_get_errno
100119e0 l     F .text	000000f0 alt_file_locked
00000000 l    df *ABS*	00000000 alt_tick.c
00000000 l    df *ABS*	00000000 altera_nios2_qsys_irq.c
00000000 l    df *ABS*	00000000 alt_find_dev.c
00000000 l    df *ABS*	00000000 alt_find_file.c
00000000 l    df *ABS*	00000000 alt_get_fd.c
00000000 l    df *ABS*	00000000 atexit.c
00000000 l    df *ABS*	00000000 exit.c
00000000 l    df *ABS*	00000000 memcmp.c
00000000 l    df *ABS*	00000000 __atexit.c
00000000 l    df *ABS*	00000000 __call_atexit.c
00000000 l    df *ABS*	00000000 alt_exit.c
00000000 l    df *ABS*	00000000 
100016d0 g     F .text	0000001c putchar
100090d4 g     F .text	00000074 _mprec_log10
100091c4 g     F .text	00000084 __any_on
1000d5ec g     F .text	00000064 _isatty_r
100127bc g     O .rodata	00000028 __mprec_tinytens
100102d0 g     F .text	00000078 alt_main
1000fc14 g     F .text	00000044 __ashldi3
10016338 g     O .bss	00000100 alt_irq
1000d650 g     F .text	0000006c _lseek_r
1001462c g       *ABS*	00000000 __flash_rwdata_start
1000eed8 g     F .text	0000005c __eqdf2
100165c8 g       *ABS*	00000000 __alt_heap_start
1000168c g     F .text	0000003c printf
100001f4 g     F .text	00000068 RotWord
1000025c g     F .text	000000f0 SubWord
10009ec8 g     F .text	0000005c __sseek
10006aa0 g     F .text	0000010c __sinit
1000c59c g     F .text	0000013c __swbuf_r
100079ec g     F .text	0000009c _setlocale_r
10006a18 g     F .text	00000078 __sfmoreglue
1000c580 g     F .text	0000001c ungetc
10010368 g     F .text	00000020 __malloc_unlock
1000a05c g     F .text	00001548 _strtod_r
10007f90 g     F .text	0000018c memmove
10006a90 g     F .text	00000010 _cleanup
100081f8 g     F .text	000000a8 _Balloc
1000ef90 g     F .text	00000064 __gtdf2
00000000  w      *UND*	00000000 __errno
10000000 g     F .entry	0000000c __reset
10000020 g       *ABS*	00000000 __flash_exceptions_start
1000c9e0 g     F .text	00000068 _fstat_r
100161e8 g     O .bss	00000004 errno
10004d84 g     F .text	00000024 __svfscanf
1000f7ac g     F .text	0000002c __make_fp
100161fc g     O .bss	00000004 alt_argv
10000768 g     F .text	00000140 ShiftRows
1001c5ec g       *ABS*	00000000 _gp
1001340c g     O .rwdata	00000180 alt_fd_list
100016c8 g     F .text	00000008 _putchar_r
10011de4 g     F .text	00000090 alt_find_dev
10007e50 g     F .text	00000140 memcpy
1000d360 g     F .text	0000028c __hexnan
10006a0c g     F .text	0000000c _cleanup_r
1000f110 g     F .text	000000d4 __floatsidf
10011918 g     F .text	00000078 alt_io_redirect
1000f058 g     F .text	0000005c __ltdf2
10012430 g       *ABS*	00000000 __DTOR_END__
10007cd4 g     F .text	00000040 mbrtowc
10004d38 g     F .text	0000004c _vfscanf_r
10009030 g     F .text	000000a4 __ratio
10010e18 g     F .text	00000218 altera_avalon_jtag_uart_read
10000eb4 g     F .text	00000014 malloc
10001660 g     F .text	0000002c _printf_r
00000000 g       *ABS*	00000000 __alt_mem_onchip_memory2_0
1000f544 g     F .text	00000008 __udivsi3
1001001c g     F .text	000000a4 isatty
100079b4 g     F .text	00000038 iswspace
1001280c g     O .rodata	000000c8 __mprec_tens
10007a88 g     F .text	0000000c __locale_charset
1000d838 g     F .text	00000084 __fixunsdfsi
100161e4 g     O .bss	00000004 __malloc_top_pad
1000bf3c g     F .text	00000024 strtoul
10014600 g     O .rwdata	00000004 __mb_cur_max
10007a94 g     F .text	0000000c _localeconv_r
1000bf60 g     F .text	00000394 _strtoull_r
10008628 g     F .text	0000003c __i2b
10007370 g     F .text	000004e4 __sfvwrite_r
100016ec g     F .text	00000064 _sbrk_r
1000d6bc g     F .text	0000006c _read_r
100133b0 g     O .rwdata	0000000c __lc_ctype
10014614 g     O .rwdata	00000004 alt_max_fd
1000f9fc g     F .text	00000104 __unpack_d
1000c890 g     F .text	0000013c _fclose_r
100069cc g     F .text	00000030 fflush
100161e0 g     O .bss	00000004 __malloc_max_sbrked_mem
1000034c g     F .text	000002a0 KeyExpansion
1000e98c g     F .text	00000054 __adddf3
1000e534 g     F .text	00000054 __nesf2
10008da4 g     F .text	00000148 __b2d
1000df0c g     F .text	00000628 __umoddi3
100101fc g     F .text	000000d4 lseek
100145f8 g     O .rwdata	00000004 _global_impure_ptr
100093f4 g     F .text	000005fc _realloc_r
100165c8 g       *ABS*	00000000 __bss_end
10011748 g     F .text	000000f0 alt_iic_isr_register
10011cc0 g     F .text	00000104 alt_tick
10016238 g     O .bss	00000100 __hexdig
1000d8bc g     F .text	00000650 __udivdi3
100127e4 g     O .rodata	00000028 __mprec_bigtens
1000840c g     F .text	00000104 __s2b
1000f308 g     F .text	0000011c __floatunsidf
10008b44 g     F .text	00000058 __mcmp
100145f4 g     O .rwdata	00000004 __ctype_ptr
10006cb8 g     F .text	00000018 __fp_lock_all
100116fc g     F .text	0000004c alt_ic_irq_enabled
10011c28 g     F .text	00000098 alt_alarm_stop
1000b944 g     F .text	00000024 strtol
10016204 g     O .bss	00000004 alt_irq_active
100000ec g     F .exceptions	000000cc alt_irq_handler
100133e4 g     O .rwdata	00000028 alt_dev_null
1000f628 g     F .text	000000c8 __unpack_f
10011390 g     F .text	0000001c alt_dcache_flush_all
10008510 g     F .text	00000068 __hi0bits
1000f1e4 g     F .text	000000c4 __fixdfsi
1000b5a4 g     F .text	0000001c strtod
1001462c g       *ABS*	00000000 __ram_rwdata_end
1001460c g     O .rwdata	00000008 alt_dev_list
1001064c g     F .text	000000f0 write
10009248 g     F .text	000000bc _putc_r
1000e588 g     F .text	0000005c __gtsf2
10012a7c g       *ABS*	00000000 __ram_rodata_end
1000ff1c g     F .text	000000b0 fstat
1000fbd0 g     F .text	00000044 __lshrdi3
1000f0b4 g     F .text	0000005c __ledf2
100088bc g     F .text	0000012c __pow5mult
100161f4 g     O .bss	00000004 __nlocale_changed
1000f54c g     F .text	00000008 __umodsi3
10001790 g     F .text	0000002c _scanf_r
100165c8 g       *ABS*	00000000 end
1000fc58 g     F .text	0000012c __pack_f
10010954 g     F .text	000000c0 altera_avalon_jtag_uart_init
10012430 g       *ABS*	00000000 __CTOR_LIST__
18000000 g       *ABS*	00000000 __alt_stack_pointer
1000f57c g     F .text	000000ac __clzsi2
10011030 g     F .text	00000220 altera_avalon_jtag_uart_write
10006ca8 g     F .text	00000004 __sfp_lock_acquire
10007d58 g     F .text	000000f8 memchr
100017f0 g     F .text	00001e7c ___vfprintf_internal_r
10009d28 g     F .text	00000058 _sprintf_r
100070a0 g     F .text	000002d0 _free_r
100008a8 g     F .text	0000027c MixColumns
10012254 g     F .text	000001a0 __call_exitprocs
100161f0 g     O .bss	00000004 __mlocale_changed
100145ec g     O .rwdata	00000004 __malloc_sbrk_base
100001b8 g     F .text	0000003c _start
10016208 g     O .bss	00000004 _alt_tick_rate
1000b968 g     F .text	00000330 _strtoll_r
100089e8 g     F .text	0000015c __lshift
1001620c g     O .bss	00000004 _alt_nticks
100103d8 g     F .text	000000f4 read
100107a8 g     F .text	00000048 alt_sys_init
10012124 g     F .text	00000130 __register_exitproc
10008664 g     F .text	00000258 __multiply
10010cbc g     F .text	00000068 altera_avalon_jtag_uart_close
1000f554 g     F .text	00000028 __mulsi3
10012a7c g       *ABS*	00000000 __ram_rwdata_start
10012430 g       *ABS*	00000000 __ram_rodata_start
10016210 g     O .bss	00000028 __malloc_current_mallinfo
10008eec g     F .text	00000144 __d2b
100107f0 g     F .text	00000060 altera_avalon_jtag_uart_read_fd
1000bc98 g     F .text	000002a4 _strtoul_r
10011f88 g     F .text	000000d4 alt_get_fd
1000fb00 g     F .text	000000d0 __fpcmp_parts_d
1000c82c g     F .text	00000064 _close_r
100120a8 g     F .text	0000007c memcmp
100108b0 g     F .text	00000050 altera_avalon_jtag_uart_close_fd
100165c8 g       *ABS*	00000000 __alt_stack_base
10010900 g     F .text	00000054 altera_avalon_jtag_uart_ioctl_fd
10004e18 g     F .text	00000174 __swsetup_r
1000ed24 g     F .text	000001b4 __divdf3
10006bac g     F .text	000000fc __sfp
10009148 g     F .text	0000007c __copybits
10012ba8 g     O .rwdata	00000408 __malloc_av_
10006cb4 g     F .text	00000004 __sinit_lock_release
1000ea40 g     F .text	000002e4 __muldf3
10009dec g     F .text	00000054 __sread
10006f24 g     F .text	00000040 fread
10011e74 g     F .text	00000114 alt_find_file
100113fc g     F .text	000000a0 alt_dev_llist_insert
10010348 g     F .text	00000020 __malloc_lock
1001054c g     F .text	000000b0 sbrk
100067e4 g     F .text	000001e8 _fflush_r
100006f0 g     F .text	00000078 SubBytes
1000c760 g     F .text	000000cc _calloc_r
100161dc g       *ABS*	00000000 __bss_start
1000811c g     F .text	000000dc memset
10000ddc g     F .text	000000d8 main
10016200 g     O .bss	00000004 alt_envp
100161dc g     O .bss	00000004 __malloc_max_total_mem
10010850 g     F .text	00000060 altera_avalon_jtag_uart_write_fd
1000c6d8 g     F .text	0000001c __swbuf
1000e5e4 g     F .text	00000054 __ltsf2
10006ce8 g     F .text	0000023c _fread_r
10009f24 g     F .text	00000008 __sclose
18000000 g       *ABS*	00000000 __alt_heap_limit
1000c9cc g     F .text	00000014 fclose
1000b6e0 g     F .text	00000264 _strtol_r
1000f2a8 g     F .text	00000060 __truncdfsf2
10016438 g     O .bss	00000190 _atexit0
100051c8 g     F .text	0000161c _dtoa_r
10000edc g     F .text	00000784 _malloc_r
10014618 g     O .rwdata	00000004 alt_errno
1000c2f4 g     F .text	000000f0 __submore
10007854 g     F .text	000000a8 _fwalk
10007d14 g     F .text	00000044 _mbtowc_r
10009304 g     F .text	000000f0 putc
1000f498 g     F .text	00000050 __divsi3
10012934 g     O .rodata	00000014 __thenan_df
10006f64 g     F .text	0000013c _malloc_trim_r
10012430 g       *ABS*	00000000 __CTOR_END__
10009f2c g     F .text	000000a4 strcmp
10012430 g       *ABS*	00000000 __flash_rodata_start
10012430 g       *ABS*	00000000 __DTOR_LIST__
1000ef34 g     F .text	0000005c __nedf2
10010774 g     F .text	00000034 alt_irq_init
100104cc g     F .text	00000080 alt_release_fd
10009d80 g     F .text	0000006c sprintf
10012948 g     O .rodata	00000100 __clz_tab
100161ec g     O .bss	00000004 _PathLocale
1000b5c0 g     F .text	00000120 strtof
1001205c g     F .text	00000014 atexit
1000c6f4 g     F .text	0000006c _write_r
10007aa0 g     F .text	0000001c setlocale
10001750 g     F .text	00000040 scanf
10009d20 g     F .text	00000008 nanf
100145fc g     O .rwdata	00000004 _impure_ptr
100161f8 g     O .bss	00000004 alt_argc
10007c70 g     F .text	00000064 _mbrtowc_r
100114f8 g     F .text	0000005c _do_dtors
10009a0c g     F .text	000001ec __srefill_r
10000020 g       .exceptions	00000000 alt_irq_entry
10008d44 g     F .text	00000060 __ulp
10009bf8 g     F .text	00000038 __isinfd
10006cd0 g     F .text	00000018 __fp_unlock_all
10014604 g     O .rwdata	00000008 alt_fs_list
10012a7c g     O .rwdata	0000002c Rcon
10000020 g       *ABS*	00000000 __ram_exceptions_start
10007abc g     F .text	0000000c localeconv
10011570 g     F .text	00000050 alt_ic_isr_register
1000cb58 g     F .text	00000090 __hexdig_init
1001462c g       *ABS*	00000000 _edata
100165c8 g       *ABS*	00000000 _end
100001b8 g       *ABS*	00000000 __ram_exceptions_end
10004da8 g     F .text	00000070 vfscanf
10010d24 g     F .text	000000f4 altera_avalon_jtag_uart_ioctl
1001165c g     F .text	000000a0 alt_ic_irq_disable
10009e40 g     F .text	00000088 __swrite
100145f0 g     O .rwdata	00000004 __malloc_trim_threshold
10011dc4 g     F .text	00000020 altera_nios2_qsys_irq_init
10012070 g     F .text	00000038 exit
100078fc g     F .text	000000b8 _fwalk_reent
10008b9c g     F .text	000001a8 __mdiff
1000f4e8 g     F .text	0000005c __modsi3
18000000 g       *ABS*	00000000 __alt_data_end
10000020 g     F .exceptions	00000000 alt_exception
10006cac g     F .text	00000004 __sfp_lock_release
10000000 g       *ABS*	00000000 __alt_mem_sdram
10009c5c g     F .text	000000c4 __sccl
100124e4 g     O .rodata	00000101 _ctype_
1000f6f0 g     F .text	000000bc __fpcmp_parts_f
100123f4 g     F .text	0000003c _exit
10009c30 g     F .text	0000002c __isnand
10011250 g     F .text	00000140 alt_alarm_start
1000d728 g     F .text	00000110 __muldi3
10007ac8 g     F .text	000001a8 __smakebuf_r
10012aa8 g     O .rwdata	00000100 Sbox
10009fd0 g     F .text	0000008c strlen
10011ad0 g     F .text	00000158 open
1000eff4 g     F .text	00000064 __gedf2
1000cbe8 g     F .text	00000778 __gethex
10011554 g     F .text	0000001c alt_icache_flush_all
10014620 g     O .rwdata	00000004 alt_priority_mask
100115c0 g     F .text	0000009c alt_ic_irq_enable
1000366c g     F .text	00000024 __vfprintf_internal
1000e9e0 g     F .text	00000060 __subdf3
10008578 g     F .text	000000b0 __lo0bits
10003690 g     F .text	000016a8 __svfscanf_r
10014624 g     O .rwdata	00000008 alt_alarm_list
1000c3e4 g     F .text	0000019c _ungetc_r
100005ec g     F .text	00000104 AddRoundKey
1001149c g     F .text	0000005c _do_ctors
10000b24 g     F .text	000002b8 Encrypt
1000fdd4 g     F .text	000000cc close
1001012c g     F .text	00000080 alt_load
1000f7d8 g     F .text	00000224 __pack_d
10000ec8 g     F .text	00000014 free
10006cb0 g     F .text	00000004 __sinit_lock_acquire
100082c8 g     F .text	00000144 __multadd
100082a0 g     F .text	00000028 _Bfree



Disassembly of section .entry:

10000000 <__reset>:
 * Jump to the _start entry point in the .text section if reset code
 * is allowed or if optimizing for RTL simulation.
 */
#if defined(ALT_ALLOW_CODE_AT_RESET) || defined(ALT_SIM_OPTIMIZE)
    /* Jump to the _start entry point in the .text section. */
    movhi r1, %hi(_start)
10000000:	00440034 	movhi	at,4096
    ori r1, r1, %lo(_start)
10000004:	08406e14 	ori	at,at,440
    jmp r1
10000008:	0800683a 	jmp	at
	...

Disassembly of section .exceptions:

10000020 <alt_exception>:

#else /* ALT_EXCEPTION_STACK disabled */
        /* 
         * Reserve space on normal stack for registers about to be pushed.
         */
        addi  sp, sp, -76
10000020:	deffed04 	addi	sp,sp,-76
         * documentation for details).
         *
         * Leave a gap in the stack frame at 4(sp) for the muldiv handler to
         * store zero into.
         */
        stw   ra,  0(sp)
10000024:	dfc00015 	stw	ra,0(sp)
        stw   r1,   8(sp)
10000028:	d8400215 	stw	at,8(sp)
        stw   r2,  12(sp)
1000002c:	d8800315 	stw	r2,12(sp)
        stw   r3,  16(sp)
10000030:	d8c00415 	stw	r3,16(sp)
        stw   r4,  20(sp)
10000034:	d9000515 	stw	r4,20(sp)
        stw   r5,  24(sp)
10000038:	d9400615 	stw	r5,24(sp)
        stw   r6,  28(sp)
1000003c:	d9800715 	stw	r6,28(sp)
        stw   r7,  32(sp)
10000040:	d9c00815 	stw	r7,32(sp)
        rdctl r5, estatus   /* Read early to avoid usage stall */
10000044:	000b307a 	rdctl	r5,estatus
        stw   r8,  36(sp)
10000048:	da000915 	stw	r8,36(sp)
        stw   r9,  40(sp)
1000004c:	da400a15 	stw	r9,40(sp)
        stw   r10, 44(sp)
10000050:	da800b15 	stw	r10,44(sp)
        stw   r11, 48(sp)
10000054:	dac00c15 	stw	r11,48(sp)
        stw   r12, 52(sp)
10000058:	db000d15 	stw	r12,52(sp)
        stw   r13, 56(sp)
1000005c:	db400e15 	stw	r13,56(sp)
        stw   r14, 60(sp)
10000060:	db800f15 	stw	r14,60(sp)
        stw   r15, 64(sp)
10000064:	dbc01015 	stw	r15,64(sp)
        /*
         * ea-4 contains the address of the instruction being executed
         * when the exception occured. For interrupt exceptions, we will
         * will be re-issue the isntruction. Store it in 72(sp)
         */
        stw   r5,  68(sp)  /* estatus */
10000068:	d9401115 	stw	r5,68(sp)
        addi  r15, ea, -4  /* instruction that caused exception */
1000006c:	ebffff04 	addi	r15,ea,-4
        stw   r15,  72(sp)
10000070:	dbc01215 	stw	r15,72(sp)
#else
        /*
         * Test to see if the exception was a software exception or caused 
         * by an external interrupt, and vector accordingly.
         */
        rdctl r4, ipending
10000074:	0009313a 	rdctl	r4,ipending
        andi  r2, r5, 1
10000078:	2880004c 	andi	r2,r5,1
        beq   r2, zero, .Lnot_irq
1000007c:	10000326 	beq	r2,zero,1000008c <alt_exception+0x6c>
        beq   r4, zero, .Lnot_irq
10000080:	20000226 	beq	r4,zero,1000008c <alt_exception+0x6c>
        /*
         * Now that all necessary registers have been preserved, call 
         * alt_irq_handler() to process the interrupts.
         */

        call alt_irq_handler
10000084:	00000ec0 	call	100000ec <alt_irq_handler>

        .section .exceptions.irqreturn, "xa"

        br    .Lexception_exit
10000088:	00000306 	br	10000098 <alt_exception_unknown+0x4>
         * upon completion, so we write ea (address of instruction *after*
         * the one where the exception occured) into 72(sp). The actual
         * instruction that caused the exception is written in r2, which these
         * handlers will utilize.
         */
        stw   ea,  72(sp)  /* Don't re-issue */
1000008c:	df401215 	stw	ea,72(sp)
        ldw   r2, -4(ea)   /* Instruction that caused exception */
10000090:	e8bfff17 	ldw	r2,-4(ea)

10000094 <alt_exception_unknown>:
#ifdef NIOS2_HAS_DEBUG_STUB
       /*
        *  Either tell the user now (if there is a debugger attached) or go into
        *  the debug monitor which will loop until a debugger is attached.
        */
        break
10000094:	003da03a 	break	0
        /* 
         * Restore the saved registers, so that all general purpose registers 
         * have been restored to their state at the time the interrupt occured.
         */

        ldw   r5,  68(sp)
10000098:	d9401117 	ldw	r5,68(sp)
        ldw   ea,  72(sp)  /* This becomes the PC once eret is executed */
1000009c:	df401217 	ldw	ea,72(sp)
        ldw   ra,   0(sp)
100000a0:	dfc00017 	ldw	ra,0(sp)

        wrctl estatus, r5
100000a4:	2801707a 	wrctl	estatus,r5

        ldw   r1,   8(sp)
100000a8:	d8400217 	ldw	at,8(sp)
        ldw   r2,  12(sp)
100000ac:	d8800317 	ldw	r2,12(sp)
        ldw   r3,  16(sp)
100000b0:	d8c00417 	ldw	r3,16(sp)
        ldw   r4,  20(sp)
100000b4:	d9000517 	ldw	r4,20(sp)
        ldw   r5,  24(sp)
100000b8:	d9400617 	ldw	r5,24(sp)
        ldw   r6,  28(sp)
100000bc:	d9800717 	ldw	r6,28(sp)
        ldw   r7,  32(sp)
100000c0:	d9c00817 	ldw	r7,32(sp)

#if defined(ALT_EXCEPTION_STACK) && defined(ALT_STACK_CHECK)
        ldw   et, %gprel(alt_exception_old_stack_limit)(gp)
#endif

        ldw   r8,  36(sp)
100000c4:	da000917 	ldw	r8,36(sp)
        ldw   r9,  40(sp)
100000c8:	da400a17 	ldw	r9,40(sp)
        ldw   r10, 44(sp)
100000cc:	da800b17 	ldw	r10,44(sp)
        ldw   r11, 48(sp)
100000d0:	dac00c17 	ldw	r11,48(sp)
        ldw   r12, 52(sp)
100000d4:	db000d17 	ldw	r12,52(sp)
        ldw   r13, 56(sp)
100000d8:	db400e17 	ldw	r13,56(sp)
        ldw   r14, 60(sp)
100000dc:	db800f17 	ldw	r14,60(sp)
        ldw   r15, 64(sp)
100000e0:	dbc01017 	ldw	r15,64(sp)
        stw   et, %gprel(alt_stack_limit_value)(gp)
        stw   zero, %gprel(alt_exception_old_stack_limit)(gp)
#endif /* ALT_STACK_CHECK */
        ldw   sp,  76(sp)
#else /* ALT_EXCEPTION_STACK disabled */
        addi  sp, sp, 76
100000e4:	dec01304 	addi	sp,sp,76

        /*
         * Return to the interrupted instruction.
         */

        eret
100000e8:	ef80083a 	eret

100000ec <alt_irq_handler>:
 * instruction is present if the macro ALT_CI_INTERRUPT_VECTOR defined.
 */

void alt_irq_handler (void) __attribute__ ((section (".exceptions")));
void alt_irq_handler (void)
{
100000ec:	defff904 	addi	sp,sp,-28
100000f0:	dfc00615 	stw	ra,24(sp)
100000f4:	df000515 	stw	fp,20(sp)
100000f8:	df000504 	addi	fp,sp,20
  
  /*
   * Notify the operating system that we are at interrupt level.
   */ 
  
  ALT_OS_INT_ENTER();
100000fc:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
10000100:	0005313a 	rdctl	r2,ipending
10000104:	e0bffe15 	stw	r2,-8(fp)

  return active;
10000108:	e0bffe17 	ldw	r2,-8(fp)
   * Consider the case where the high priority interupt is asserted during
   * the interrupt entry sequence for a lower priority interrupt to see why
   * this is the case.
   */

  active = alt_irq_pending ();
1000010c:	e0bffb15 	stw	r2,-20(fp)

  do
  {
    i = 0;
10000110:	e03ffd15 	stw	zero,-12(fp)
    mask = 1;
10000114:	00800044 	movi	r2,1
10000118:	e0bffc15 	stw	r2,-16(fp)
     * called to clear the interrupt condition.
     */

    do
    {
      if (active & mask)
1000011c:	e0fffb17 	ldw	r3,-20(fp)
10000120:	e0bffc17 	ldw	r2,-16(fp)
10000124:	1884703a 	and	r2,r3,r2
10000128:	10001726 	beq	r2,zero,10000188 <alt_irq_handler+0x9c>
      { 
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
        alt_irq[i].handler(alt_irq[i].context); 
1000012c:	00c40074 	movhi	r3,4097
10000130:	18d8ce04 	addi	r3,r3,25400
10000134:	e0bffd17 	ldw	r2,-12(fp)
10000138:	100490fa 	slli	r2,r2,3
1000013c:	1885883a 	add	r2,r3,r2
10000140:	10c00017 	ldw	r3,0(r2)
10000144:	01040074 	movhi	r4,4097
10000148:	2118ce04 	addi	r4,r4,25400
1000014c:	e0bffd17 	ldw	r2,-12(fp)
10000150:	100490fa 	slli	r2,r2,3
10000154:	2085883a 	add	r2,r4,r2
10000158:	10800104 	addi	r2,r2,4
1000015c:	10800017 	ldw	r2,0(r2)
10000160:	1009883a 	mov	r4,r2
10000164:	183ee83a 	callr	r3
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
10000168:	0001883a 	nop
#ifndef NIOS2_EIC_PRESENT
static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_irq_pending (void)
{
  alt_u32 active;

  NIOS2_READ_IPENDING (active);
1000016c:	0005313a 	rdctl	r2,ipending
10000170:	e0bfff15 	stw	r2,-4(fp)

  return active;
10000174:	e0bfff17 	ldw	r2,-4(fp)
      mask <<= 1;
      i++;

    } while (1);

    active = alt_irq_pending ();
10000178:	e0bffb15 	stw	r2,-20(fp)
    
  } while (active);
1000017c:	e0bffb17 	ldw	r2,-20(fp)
10000180:	103fe31e 	bne	r2,zero,10000110 <__alt_data_end+0xf8000110>

  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
10000184:	00000706 	br	100001a4 <alt_irq_handler+0xb8>
#else
        alt_irq[i].handler(alt_irq[i].context, i); 
#endif
        break;
      }
      mask <<= 1;
10000188:	e0bffc17 	ldw	r2,-16(fp)
1000018c:	1085883a 	add	r2,r2,r2
10000190:	e0bffc15 	stw	r2,-16(fp)
      i++;
10000194:	e0bffd17 	ldw	r2,-12(fp)
10000198:	10800044 	addi	r2,r2,1
1000019c:	e0bffd15 	stw	r2,-12(fp)

    } while (1);
100001a0:	003fde06 	br	1000011c <__alt_data_end+0xf800011c>
  /*
   * Notify the operating system that interrupt processing is complete.
   */ 

  ALT_OS_INT_EXIT();
}
100001a4:	e037883a 	mov	sp,fp
100001a8:	dfc00117 	ldw	ra,4(sp)
100001ac:	df000017 	ldw	fp,0(sp)
100001b0:	dec00204 	addi	sp,sp,8
100001b4:	f800283a 	ret

Disassembly of section .text:

100001b8 <_start>:

    /*
     * Now that the caches are initialized, set up the stack pointer and global pointer.
     * The values provided by the linker are assumed to be correctly aligned.
     */
    movhi sp, %hi(__alt_stack_pointer)
100001b8:	06c60034 	movhi	sp,6144
    ori sp, sp, %lo(__alt_stack_pointer)
100001bc:	dec00014 	ori	sp,sp,0
    movhi gp, %hi(_gp)
100001c0:	06840074 	movhi	gp,4097
    ori gp, gp, %lo(_gp)
100001c4:	d6b17b14 	ori	gp,gp,50668
 */
#ifndef ALT_SIM_OPTIMIZE
    /* Log that the BSS is about to be cleared. */
    ALT_LOG_PUTS(alt_log_msg_bss)

    movhi r2, %hi(__bss_start)
100001c8:	00840074 	movhi	r2,4097
    ori r2, r2, %lo(__bss_start)
100001cc:	10987714 	ori	r2,r2,25052

    movhi r3, %hi(__bss_end)
100001d0:	00c40074 	movhi	r3,4097
    ori r3, r3, %lo(__bss_end)
100001d4:	18d97214 	ori	r3,r3,26056

    beq r2, r3, 1f
100001d8:	10c00326 	beq	r2,r3,100001e8 <_start+0x30>

0:
    stw zero, (r2)
100001dc:	10000015 	stw	zero,0(r2)
    addi r2, r2, 4
100001e0:	10800104 	addi	r2,r2,4
    bltu r2, r3, 0b
100001e4:	10fffd36 	bltu	r2,r3,100001dc <__alt_data_end+0xf80001dc>
     * section aren't defined until alt_load() has been called).
     */
    mov   et, zero
#endif

    call alt_load
100001e8:	001012c0 	call	1001012c <alt_load>

    /* Log that alt_main is about to be called. */
    ALT_LOG_PUTS(alt_log_msg_alt_main)

    /* Call the C entry point. It should never return. */
    call alt_main
100001ec:	00102d00 	call	100102d0 <alt_main>

100001f0 <alt_after_alt_main>:

    /* Wait in infinite loop in case alt_main does return. */
alt_after_alt_main:
    br alt_after_alt_main
100001f0:	003fff06 	br	100001f0 <__alt_data_end+0xf80001f0>

100001f4 <RotWord>:
0x70, 0x3e, 0xb5, 0x66, 0x48, 0x03, 0xf6, 0x0e, 0x61, 0x35, 0x57, 0xb9, 0x86, 0xc1, 0x1d, 0x9e,
0xe1, 0xf8, 0x98, 0x11, 0x69, 0xd9, 0x8e, 0x94, 0x9b, 0x1e, 0x87, 0xe9, 0xce, 0x55, 0x28, 0xdf,
0x8c, 0xa1, 0x89, 0x0d, 0xbf, 0xe6, 0x42, 0x68, 0x41, 0x99, 0x2d, 0x0f, 0xb0, 0x54, 0xbb, 0x16};


void RotWord(uint32_t *in) {
100001f4:	defffd04 	addi	sp,sp,-12
100001f8:	df000215 	stw	fp,8(sp)
100001fc:	df000204 	addi	fp,sp,8
10000200:	e13fff15 	stw	r4,-4(fp)
    uint32_t temp;

    // get first 8 bits and put it on the LSB
    temp = *in & 0xFF000000;
10000204:	e0bfff17 	ldw	r2,-4(fp)
10000208:	10800017 	ldw	r2,0(r2)
1000020c:	10bfc02c 	andhi	r2,r2,65280
10000210:	e0bffe15 	stw	r2,-8(fp)
    temp >>= 24;
10000214:	e0bffe17 	ldw	r2,-8(fp)
10000218:	1004d63a 	srli	r2,r2,24
1000021c:	e0bffe15 	stw	r2,-8(fp)

    // shift in left 8 bits, then fill LSB with temp
    *in <<= 8;
10000220:	e0bfff17 	ldw	r2,-4(fp)
10000224:	10800017 	ldw	r2,0(r2)
10000228:	1006923a 	slli	r3,r2,8
1000022c:	e0bfff17 	ldw	r2,-4(fp)
10000230:	10c00015 	stw	r3,0(r2)
    *in |= temp;
10000234:	e0bfff17 	ldw	r2,-4(fp)
10000238:	10c00017 	ldw	r3,0(r2)
1000023c:	e0bffe17 	ldw	r2,-8(fp)
10000240:	1886b03a 	or	r3,r3,r2
10000244:	e0bfff17 	ldw	r2,-4(fp)
10000248:	10c00015 	stw	r3,0(r2)
}
1000024c:	e037883a 	mov	sp,fp
10000250:	df000017 	ldw	fp,0(sp)
10000254:	dec00104 	addi	sp,sp,4
10000258:	f800283a 	ret

1000025c <SubWord>:

void SubWord(uint32_t* in) {
1000025c:	defffd04 	addi	sp,sp,-12
10000260:	df000215 	stw	fp,8(sp)
10000264:	df000204 	addi	fp,sp,8
10000268:	e13fff15 	stw	r4,-4(fp)
	uint8_t a = *in;
1000026c:	e0bfff17 	ldw	r2,-4(fp)
10000270:	10800017 	ldw	r2,0(r2)
10000274:	e0bffe05 	stb	r2,-8(fp)
	uint8_t b = *in >> 8;
10000278:	e0bfff17 	ldw	r2,-4(fp)
1000027c:	10800017 	ldw	r2,0(r2)
10000280:	1004d23a 	srli	r2,r2,8
10000284:	e0bffe45 	stb	r2,-7(fp)
	uint8_t c = *in >> 16;
10000288:	e0bfff17 	ldw	r2,-4(fp)
1000028c:	10800017 	ldw	r2,0(r2)
10000290:	1004d43a 	srli	r2,r2,16
10000294:	e0bffe85 	stb	r2,-6(fp)
	uint8_t d = *in >> 24;
10000298:	e0bfff17 	ldw	r2,-4(fp)
1000029c:	10800017 	ldw	r2,0(r2)
100002a0:	1004d63a 	srli	r2,r2,24
100002a4:	e0bffec5 	stb	r2,-5(fp)

	a = Sbox[a];
100002a8:	e0bffe03 	ldbu	r2,-8(fp)
100002ac:	00c40074 	movhi	r3,4097
100002b0:	18caaa04 	addi	r3,r3,10920
100002b4:	1885883a 	add	r2,r3,r2
100002b8:	10800003 	ldbu	r2,0(r2)
100002bc:	e0bffe05 	stb	r2,-8(fp)
	b = Sbox[b];
100002c0:	e0bffe43 	ldbu	r2,-7(fp)
100002c4:	00c40074 	movhi	r3,4097
100002c8:	18caaa04 	addi	r3,r3,10920
100002cc:	1885883a 	add	r2,r3,r2
100002d0:	10800003 	ldbu	r2,0(r2)
100002d4:	e0bffe45 	stb	r2,-7(fp)
	c = Sbox[c];
100002d8:	e0bffe83 	ldbu	r2,-6(fp)
100002dc:	00c40074 	movhi	r3,4097
100002e0:	18caaa04 	addi	r3,r3,10920
100002e4:	1885883a 	add	r2,r3,r2
100002e8:	10800003 	ldbu	r2,0(r2)
100002ec:	e0bffe85 	stb	r2,-6(fp)
	d = Sbox[d];
100002f0:	e0bffec3 	ldbu	r2,-5(fp)
100002f4:	00c40074 	movhi	r3,4097
100002f8:	18caaa04 	addi	r3,r3,10920
100002fc:	1885883a 	add	r2,r3,r2
10000300:	10800003 	ldbu	r2,0(r2)
10000304:	e0bffec5 	stb	r2,-5(fp)

	*in = (d << 24) | (c << 16) | (b << 8) | (a);
10000308:	e0bffec3 	ldbu	r2,-5(fp)
1000030c:	1006963a 	slli	r3,r2,24
10000310:	e0bffe83 	ldbu	r2,-6(fp)
10000314:	1004943a 	slli	r2,r2,16
10000318:	1886b03a 	or	r3,r3,r2
1000031c:	e0bffe43 	ldbu	r2,-7(fp)
10000320:	1004923a 	slli	r2,r2,8
10000324:	1886b03a 	or	r3,r3,r2
10000328:	e0bffe03 	ldbu	r2,-8(fp)
1000032c:	1884b03a 	or	r2,r3,r2
10000330:	1007883a 	mov	r3,r2
10000334:	e0bfff17 	ldw	r2,-4(fp)
10000338:	10c00015 	stw	r3,0(r2)
}
1000033c:	e037883a 	mov	sp,fp
10000340:	df000017 	ldw	fp,0(sp)
10000344:	dec00104 	addi	sp,sp,4
10000348:	f800283a 	ret

1000034c <KeyExpansion>:

uint32_t* KeyExpansion(uint8_t* key) {
1000034c:	defffa04 	addi	sp,sp,-24
10000350:	dfc00515 	stw	ra,20(sp)
10000354:	df000415 	stw	fp,16(sp)
10000358:	df000404 	addi	fp,sp,16
1000035c:	e13fff15 	stw	r4,-4(fp)
	uint32_t* KeyS = (uint32_t*)malloc(sizeof(uint32_t) * 4 * 11);; // 11 expanded keys of 4 words (128bits) each. total of 1408 bits.
10000360:	01002c04 	movi	r4,176
10000364:	0000eb40 	call	10000eb4 <malloc>
10000368:	e0bffd15 	stw	r2,-12(fp)
	uint32_t temp;

	// fill in first row with the provided key
	KeyS[0] = (key[0] << 24) | (key[1] << 16) | (key[2] << 8) | (key[3]);
1000036c:	e0bfff17 	ldw	r2,-4(fp)
10000370:	10800003 	ldbu	r2,0(r2)
10000374:	10803fcc 	andi	r2,r2,255
10000378:	1006963a 	slli	r3,r2,24
1000037c:	e0bfff17 	ldw	r2,-4(fp)
10000380:	10800044 	addi	r2,r2,1
10000384:	10800003 	ldbu	r2,0(r2)
10000388:	10803fcc 	andi	r2,r2,255
1000038c:	1004943a 	slli	r2,r2,16
10000390:	1886b03a 	or	r3,r3,r2
10000394:	e0bfff17 	ldw	r2,-4(fp)
10000398:	10800084 	addi	r2,r2,2
1000039c:	10800003 	ldbu	r2,0(r2)
100003a0:	10803fcc 	andi	r2,r2,255
100003a4:	1004923a 	slli	r2,r2,8
100003a8:	1886b03a 	or	r3,r3,r2
100003ac:	e0bfff17 	ldw	r2,-4(fp)
100003b0:	108000c4 	addi	r2,r2,3
100003b4:	10800003 	ldbu	r2,0(r2)
100003b8:	10803fcc 	andi	r2,r2,255
100003bc:	1884b03a 	or	r2,r3,r2
100003c0:	1007883a 	mov	r3,r2
100003c4:	e0bffd17 	ldw	r2,-12(fp)
100003c8:	10c00015 	stw	r3,0(r2)
	KeyS[1] = (key[4] << 24) | (key[5] << 16) | (key[6] << 8) | (key[7]);
100003cc:	e0bffd17 	ldw	r2,-12(fp)
100003d0:	10800104 	addi	r2,r2,4
100003d4:	e0ffff17 	ldw	r3,-4(fp)
100003d8:	18c00104 	addi	r3,r3,4
100003dc:	18c00003 	ldbu	r3,0(r3)
100003e0:	18c03fcc 	andi	r3,r3,255
100003e4:	1808963a 	slli	r4,r3,24
100003e8:	e0ffff17 	ldw	r3,-4(fp)
100003ec:	18c00144 	addi	r3,r3,5
100003f0:	18c00003 	ldbu	r3,0(r3)
100003f4:	18c03fcc 	andi	r3,r3,255
100003f8:	1806943a 	slli	r3,r3,16
100003fc:	20c8b03a 	or	r4,r4,r3
10000400:	e0ffff17 	ldw	r3,-4(fp)
10000404:	18c00184 	addi	r3,r3,6
10000408:	18c00003 	ldbu	r3,0(r3)
1000040c:	18c03fcc 	andi	r3,r3,255
10000410:	1806923a 	slli	r3,r3,8
10000414:	20c8b03a 	or	r4,r4,r3
10000418:	e0ffff17 	ldw	r3,-4(fp)
1000041c:	18c001c4 	addi	r3,r3,7
10000420:	18c00003 	ldbu	r3,0(r3)
10000424:	18c03fcc 	andi	r3,r3,255
10000428:	20c6b03a 	or	r3,r4,r3
1000042c:	10c00015 	stw	r3,0(r2)
	KeyS[2] = (key[8] << 24) | (key[9] << 16) | (key[10] << 8) | (key[11]);
10000430:	e0bffd17 	ldw	r2,-12(fp)
10000434:	10800204 	addi	r2,r2,8
10000438:	e0ffff17 	ldw	r3,-4(fp)
1000043c:	18c00204 	addi	r3,r3,8
10000440:	18c00003 	ldbu	r3,0(r3)
10000444:	18c03fcc 	andi	r3,r3,255
10000448:	1808963a 	slli	r4,r3,24
1000044c:	e0ffff17 	ldw	r3,-4(fp)
10000450:	18c00244 	addi	r3,r3,9
10000454:	18c00003 	ldbu	r3,0(r3)
10000458:	18c03fcc 	andi	r3,r3,255
1000045c:	1806943a 	slli	r3,r3,16
10000460:	20c8b03a 	or	r4,r4,r3
10000464:	e0ffff17 	ldw	r3,-4(fp)
10000468:	18c00284 	addi	r3,r3,10
1000046c:	18c00003 	ldbu	r3,0(r3)
10000470:	18c03fcc 	andi	r3,r3,255
10000474:	1806923a 	slli	r3,r3,8
10000478:	20c8b03a 	or	r4,r4,r3
1000047c:	e0ffff17 	ldw	r3,-4(fp)
10000480:	18c002c4 	addi	r3,r3,11
10000484:	18c00003 	ldbu	r3,0(r3)
10000488:	18c03fcc 	andi	r3,r3,255
1000048c:	20c6b03a 	or	r3,r4,r3
10000490:	10c00015 	stw	r3,0(r2)
	KeyS[3] = (key[12] << 24) | (key[13] << 16) | (key[14] << 8) | (key[15]);
10000494:	e0bffd17 	ldw	r2,-12(fp)
10000498:	10800304 	addi	r2,r2,12
1000049c:	e0ffff17 	ldw	r3,-4(fp)
100004a0:	18c00304 	addi	r3,r3,12
100004a4:	18c00003 	ldbu	r3,0(r3)
100004a8:	18c03fcc 	andi	r3,r3,255
100004ac:	1808963a 	slli	r4,r3,24
100004b0:	e0ffff17 	ldw	r3,-4(fp)
100004b4:	18c00344 	addi	r3,r3,13
100004b8:	18c00003 	ldbu	r3,0(r3)
100004bc:	18c03fcc 	andi	r3,r3,255
100004c0:	1806943a 	slli	r3,r3,16
100004c4:	20c8b03a 	or	r4,r4,r3
100004c8:	e0ffff17 	ldw	r3,-4(fp)
100004cc:	18c00384 	addi	r3,r3,14
100004d0:	18c00003 	ldbu	r3,0(r3)
100004d4:	18c03fcc 	andi	r3,r3,255
100004d8:	1806923a 	slli	r3,r3,8
100004dc:	20c8b03a 	or	r4,r4,r3
100004e0:	e0ffff17 	ldw	r3,-4(fp)
100004e4:	18c003c4 	addi	r3,r3,15
100004e8:	18c00003 	ldbu	r3,0(r3)
100004ec:	18c03fcc 	andi	r3,r3,255
100004f0:	20c6b03a 	or	r3,r4,r3
100004f4:	10c00015 	stw	r3,0(r2)

	int i = 0;
100004f8:	e03ffc15 	stw	zero,-16(fp)
	for(i=4; i<44; i++) {
100004fc:	00800104 	movi	r2,4
10000500:	e0bffc15 	stw	r2,-16(fp)
10000504:	00003006 	br	100005c8 <KeyExpansion+0x27c>
		temp = KeyS[i-1];
10000508:	e0bffc17 	ldw	r2,-16(fp)
1000050c:	10bfffc4 	addi	r2,r2,-1
10000510:	1085883a 	add	r2,r2,r2
10000514:	1085883a 	add	r2,r2,r2
10000518:	e0fffd17 	ldw	r3,-12(fp)
1000051c:	1885883a 	add	r2,r3,r2
10000520:	10800017 	ldw	r2,0(r2)
10000524:	e0bffe15 	stw	r2,-8(fp)
		if(i % 4 == 0) {
10000528:	e0bffc17 	ldw	r2,-16(fp)
1000052c:	108000cc 	andi	r2,r2,3
10000530:	1000131e 	bne	r2,zero,10000580 <KeyExpansion+0x234>
			RotWord(&temp);
10000534:	e0bffe04 	addi	r2,fp,-8
10000538:	1009883a 	mov	r4,r2
1000053c:	00001f40 	call	100001f4 <RotWord>
			SubWord(&temp);
10000540:	e0bffe04 	addi	r2,fp,-8
10000544:	1009883a 	mov	r4,r2
10000548:	000025c0 	call	1000025c <SubWord>
			temp ^= Rcon[i/4];
1000054c:	e0bffc17 	ldw	r2,-16(fp)
10000550:	1000010e 	bge	r2,zero,10000558 <KeyExpansion+0x20c>
10000554:	108000c4 	addi	r2,r2,3
10000558:	1005d0ba 	srai	r2,r2,2
1000055c:	00c40074 	movhi	r3,4097
10000560:	18ca9f04 	addi	r3,r3,10876
10000564:	1085883a 	add	r2,r2,r2
10000568:	1085883a 	add	r2,r2,r2
1000056c:	1885883a 	add	r2,r3,r2
10000570:	10c00017 	ldw	r3,0(r2)
10000574:	e0bffe17 	ldw	r2,-8(fp)
10000578:	1884f03a 	xor	r2,r3,r2
1000057c:	e0bffe15 	stw	r2,-8(fp)
		}
		KeyS[i] =  KeyS[i-4] ^ temp;
10000580:	e0bffc17 	ldw	r2,-16(fp)
10000584:	1085883a 	add	r2,r2,r2
10000588:	1085883a 	add	r2,r2,r2
1000058c:	e0fffd17 	ldw	r3,-12(fp)
10000590:	1887883a 	add	r3,r3,r2
10000594:	e0bffc17 	ldw	r2,-16(fp)
10000598:	10bfff04 	addi	r2,r2,-4
1000059c:	1085883a 	add	r2,r2,r2
100005a0:	1085883a 	add	r2,r2,r2
100005a4:	e13ffd17 	ldw	r4,-12(fp)
100005a8:	2085883a 	add	r2,r4,r2
100005ac:	11000017 	ldw	r4,0(r2)
100005b0:	e0bffe17 	ldw	r2,-8(fp)
100005b4:	2084f03a 	xor	r2,r4,r2
100005b8:	18800015 	stw	r2,0(r3)
	KeyS[1] = (key[4] << 24) | (key[5] << 16) | (key[6] << 8) | (key[7]);
	KeyS[2] = (key[8] << 24) | (key[9] << 16) | (key[10] << 8) | (key[11]);
	KeyS[3] = (key[12] << 24) | (key[13] << 16) | (key[14] << 8) | (key[15]);

	int i = 0;
	for(i=4; i<44; i++) {
100005bc:	e0bffc17 	ldw	r2,-16(fp)
100005c0:	10800044 	addi	r2,r2,1
100005c4:	e0bffc15 	stw	r2,-16(fp)
100005c8:	e0bffc17 	ldw	r2,-16(fp)
100005cc:	10800b10 	cmplti	r2,r2,44
100005d0:	103fcd1e 	bne	r2,zero,10000508 <__alt_data_end+0xf8000508>
			temp ^= Rcon[i/4];
		}
		KeyS[i] =  KeyS[i-4] ^ temp;
	}

	return KeyS;
100005d4:	e0bffd17 	ldw	r2,-12(fp)
}
100005d8:	e037883a 	mov	sp,fp
100005dc:	dfc00117 	ldw	ra,4(sp)
100005e0:	df000017 	ldw	fp,0(sp)
100005e4:	dec00204 	addi	sp,sp,8
100005e8:	f800283a 	ret

100005ec <AddRoundKey>:


void AddRoundKey(uint8_t* state, uint32_t* w, int step) {
100005ec:	defff904 	addi	sp,sp,-28
100005f0:	df000615 	stw	fp,24(sp)
100005f4:	df000604 	addi	fp,sp,24
100005f8:	e13ffd15 	stw	r4,-12(fp)
100005fc:	e17ffe15 	stw	r5,-8(fp)
10000600:	e1bfff15 	stw	r6,-4(fp)
	uint8_t temp;
	int temp_shift;
	step *= 4;
10000604:	e0bfff17 	ldw	r2,-4(fp)
10000608:	1085883a 	add	r2,r2,r2
1000060c:	1085883a 	add	r2,r2,r2
10000610:	e0bfff15 	stw	r2,-4(fp)

	int i = 0;
10000614:	e03ffa15 	stw	zero,-24(fp)
	for(i=0; i<16; i++) {
10000618:	e03ffa15 	stw	zero,-24(fp)
1000061c:	00002d06 	br	100006d4 <AddRoundKey+0xe8>
		temp_shift = (3-(i/4)) * 8;
10000620:	e0bffa17 	ldw	r2,-24(fp)
10000624:	1000010e 	bge	r2,zero,1000062c <AddRoundKey+0x40>
10000628:	108000c4 	addi	r2,r2,3
1000062c:	1005d0ba 	srai	r2,r2,2
10000630:	00c000c4 	movi	r3,3
10000634:	1885c83a 	sub	r2,r3,r2
10000638:	100490fa 	slli	r2,r2,3
1000063c:	e0bffb15 	stw	r2,-20(fp)
		temp = (w[step+ (i%4)] & ((0xFF) << temp_shift)) >> temp_shift;
10000640:	e0fffa17 	ldw	r3,-24(fp)
10000644:	00a00034 	movhi	r2,32768
10000648:	108000c4 	addi	r2,r2,3
1000064c:	1884703a 	and	r2,r3,r2
10000650:	1000040e 	bge	r2,zero,10000664 <AddRoundKey+0x78>
10000654:	10bfffc4 	addi	r2,r2,-1
10000658:	00ffff04 	movi	r3,-4
1000065c:	10c4b03a 	or	r2,r2,r3
10000660:	10800044 	addi	r2,r2,1
10000664:	1007883a 	mov	r3,r2
10000668:	e0bfff17 	ldw	r2,-4(fp)
1000066c:	1885883a 	add	r2,r3,r2
10000670:	1085883a 	add	r2,r2,r2
10000674:	1085883a 	add	r2,r2,r2
10000678:	e0fffe17 	ldw	r3,-8(fp)
1000067c:	1885883a 	add	r2,r3,r2
10000680:	10c00017 	ldw	r3,0(r2)
10000684:	01003fc4 	movi	r4,255
10000688:	e0bffb17 	ldw	r2,-20(fp)
1000068c:	2084983a 	sll	r2,r4,r2
10000690:	1886703a 	and	r3,r3,r2
10000694:	e0bffb17 	ldw	r2,-20(fp)
10000698:	1884d83a 	srl	r2,r3,r2
1000069c:	e0bffc05 	stb	r2,-16(fp)
		state[i] ^= temp;
100006a0:	e0bffa17 	ldw	r2,-24(fp)
100006a4:	e0fffd17 	ldw	r3,-12(fp)
100006a8:	1885883a 	add	r2,r3,r2
100006ac:	e0fffa17 	ldw	r3,-24(fp)
100006b0:	e13ffd17 	ldw	r4,-12(fp)
100006b4:	20c7883a 	add	r3,r4,r3
100006b8:	19000003 	ldbu	r4,0(r3)
100006bc:	e0fffc03 	ldbu	r3,-16(fp)
100006c0:	20c6f03a 	xor	r3,r4,r3
100006c4:	10c00005 	stb	r3,0(r2)
	uint8_t temp;
	int temp_shift;
	step *= 4;

	int i = 0;
	for(i=0; i<16; i++) {
100006c8:	e0bffa17 	ldw	r2,-24(fp)
100006cc:	10800044 	addi	r2,r2,1
100006d0:	e0bffa15 	stw	r2,-24(fp)
100006d4:	e0bffa17 	ldw	r2,-24(fp)
100006d8:	10800410 	cmplti	r2,r2,16
100006dc:	103fd01e 	bne	r2,zero,10000620 <__alt_data_end+0xf8000620>
		temp_shift = (3-(i/4)) * 8;
		temp = (w[step+ (i%4)] & ((0xFF) << temp_shift)) >> temp_shift;
		state[i] ^= temp;
	}

}
100006e0:	e037883a 	mov	sp,fp
100006e4:	df000017 	ldw	fp,0(sp)
100006e8:	dec00104 	addi	sp,sp,4
100006ec:	f800283a 	ret

100006f0 <SubBytes>:

void SubBytes(uint8_t* state) {
100006f0:	defffd04 	addi	sp,sp,-12
100006f4:	df000215 	stw	fp,8(sp)
100006f8:	df000204 	addi	fp,sp,8
100006fc:	e13fff15 	stw	r4,-4(fp)
	int i = 0;
10000700:	e03ffe15 	stw	zero,-8(fp)
	for(i=0; i<16; i++)
10000704:	e03ffe15 	stw	zero,-8(fp)
10000708:	00001006 	br	1000074c <SubBytes+0x5c>
		state[i] = Sbox[state[i]];
1000070c:	e0bffe17 	ldw	r2,-8(fp)
10000710:	e0ffff17 	ldw	r3,-4(fp)
10000714:	1885883a 	add	r2,r3,r2
10000718:	e0fffe17 	ldw	r3,-8(fp)
1000071c:	e13fff17 	ldw	r4,-4(fp)
10000720:	20c7883a 	add	r3,r4,r3
10000724:	18c00003 	ldbu	r3,0(r3)
10000728:	18c03fcc 	andi	r3,r3,255
1000072c:	01040074 	movhi	r4,4097
10000730:	210aaa04 	addi	r4,r4,10920
10000734:	20c7883a 	add	r3,r4,r3
10000738:	18c00003 	ldbu	r3,0(r3)
1000073c:	10c00005 	stb	r3,0(r2)

}

void SubBytes(uint8_t* state) {
	int i = 0;
	for(i=0; i<16; i++)
10000740:	e0bffe17 	ldw	r2,-8(fp)
10000744:	10800044 	addi	r2,r2,1
10000748:	e0bffe15 	stw	r2,-8(fp)
1000074c:	e0bffe17 	ldw	r2,-8(fp)
10000750:	10800410 	cmplti	r2,r2,16
10000754:	103fed1e 	bne	r2,zero,1000070c <__alt_data_end+0xf800070c>
		state[i] = Sbox[state[i]];
}
10000758:	e037883a 	mov	sp,fp
1000075c:	df000017 	ldw	fp,0(sp)
10000760:	dec00104 	addi	sp,sp,4
10000764:	f800283a 	ret

10000768 <ShiftRows>:

void ShiftRows(uint8_t* state) {
10000768:	defffd04 	addi	sp,sp,-12
1000076c:	df000215 	stw	fp,8(sp)
10000770:	df000204 	addi	fp,sp,8
10000774:	e13fff15 	stw	r4,-4(fp)
		0 1 2 3
		4 5 6 7
		8 9 a b
		c d e f
	*/
	temp[0] = state[4];
10000778:	e0bfff17 	ldw	r2,-4(fp)
1000077c:	10800103 	ldbu	r2,4(r2)
10000780:	e0bffe05 	stb	r2,-8(fp)
	state[4] = state[5];
10000784:	e0bfff17 	ldw	r2,-4(fp)
10000788:	10800104 	addi	r2,r2,4
1000078c:	e0ffff17 	ldw	r3,-4(fp)
10000790:	18c00143 	ldbu	r3,5(r3)
10000794:	10c00005 	stb	r3,0(r2)
	state[5] = state[6];
10000798:	e0bfff17 	ldw	r2,-4(fp)
1000079c:	10800144 	addi	r2,r2,5
100007a0:	e0ffff17 	ldw	r3,-4(fp)
100007a4:	18c00183 	ldbu	r3,6(r3)
100007a8:	10c00005 	stb	r3,0(r2)
	state[6] = state[7];
100007ac:	e0bfff17 	ldw	r2,-4(fp)
100007b0:	10800184 	addi	r2,r2,6
100007b4:	e0ffff17 	ldw	r3,-4(fp)
100007b8:	18c001c3 	ldbu	r3,7(r3)
100007bc:	10c00005 	stb	r3,0(r2)
	state[7] = temp[0];
100007c0:	e0bfff17 	ldw	r2,-4(fp)
100007c4:	108001c4 	addi	r2,r2,7
100007c8:	e0fffe03 	ldbu	r3,-8(fp)
100007cc:	10c00005 	stb	r3,0(r2)

	temp[0] = state[8];
100007d0:	e0bfff17 	ldw	r2,-4(fp)
100007d4:	10800203 	ldbu	r2,8(r2)
100007d8:	e0bffe05 	stb	r2,-8(fp)
	temp[1] = state[9];
100007dc:	e0bfff17 	ldw	r2,-4(fp)
100007e0:	10800243 	ldbu	r2,9(r2)
100007e4:	e0bffe45 	stb	r2,-7(fp)
	state[8] = state[10];
100007e8:	e0bfff17 	ldw	r2,-4(fp)
100007ec:	10800204 	addi	r2,r2,8
100007f0:	e0ffff17 	ldw	r3,-4(fp)
100007f4:	18c00283 	ldbu	r3,10(r3)
100007f8:	10c00005 	stb	r3,0(r2)
	state[9] = state[11];
100007fc:	e0bfff17 	ldw	r2,-4(fp)
10000800:	10800244 	addi	r2,r2,9
10000804:	e0ffff17 	ldw	r3,-4(fp)
10000808:	18c002c3 	ldbu	r3,11(r3)
1000080c:	10c00005 	stb	r3,0(r2)
	state[10] = temp[0];
10000810:	e0bfff17 	ldw	r2,-4(fp)
10000814:	10800284 	addi	r2,r2,10
10000818:	e0fffe03 	ldbu	r3,-8(fp)
1000081c:	10c00005 	stb	r3,0(r2)
	state[11] = temp[1];
10000820:	e0bfff17 	ldw	r2,-4(fp)
10000824:	108002c4 	addi	r2,r2,11
10000828:	e0fffe43 	ldbu	r3,-7(fp)
1000082c:	10c00005 	stb	r3,0(r2)

	temp[0] = state[12];
10000830:	e0bfff17 	ldw	r2,-4(fp)
10000834:	10800303 	ldbu	r2,12(r2)
10000838:	e0bffe05 	stb	r2,-8(fp)
	temp[1] = state[13];
1000083c:	e0bfff17 	ldw	r2,-4(fp)
10000840:	10800343 	ldbu	r2,13(r2)
10000844:	e0bffe45 	stb	r2,-7(fp)
	temp[2] = state[14];
10000848:	e0bfff17 	ldw	r2,-4(fp)
1000084c:	10800383 	ldbu	r2,14(r2)
10000850:	e0bffe85 	stb	r2,-6(fp)
	state[12] = state[15];
10000854:	e0bfff17 	ldw	r2,-4(fp)
10000858:	10800304 	addi	r2,r2,12
1000085c:	e0ffff17 	ldw	r3,-4(fp)
10000860:	18c003c3 	ldbu	r3,15(r3)
10000864:	10c00005 	stb	r3,0(r2)
	state[13] = temp[0];
10000868:	e0bfff17 	ldw	r2,-4(fp)
1000086c:	10800344 	addi	r2,r2,13
10000870:	e0fffe03 	ldbu	r3,-8(fp)
10000874:	10c00005 	stb	r3,0(r2)
	state[14] = temp[1];
10000878:	e0bfff17 	ldw	r2,-4(fp)
1000087c:	10800384 	addi	r2,r2,14
10000880:	e0fffe43 	ldbu	r3,-7(fp)
10000884:	10c00005 	stb	r3,0(r2)
	state[15] = temp[2];
10000888:	e0bfff17 	ldw	r2,-4(fp)
1000088c:	108003c4 	addi	r2,r2,15
10000890:	e0fffe83 	ldbu	r3,-6(fp)
10000894:	10c00005 	stb	r3,0(r2)
}
10000898:	e037883a 	mov	sp,fp
1000089c:	df000017 	ldw	fp,0(sp)
100008a0:	dec00104 	addi	sp,sp,4
100008a4:	f800283a 	ret

100008a8 <MixColumns>:

void MixColumns(uint8_t* state) {
100008a8:	defffb04 	addi	sp,sp,-20
100008ac:	df000415 	stw	fp,16(sp)
100008b0:	df000404 	addi	fp,sp,16
100008b4:	e13fff15 	stw	r4,-4(fp)
	uint8_t	a[4], b[4];

	int i = 0;
100008b8:	e03ffc15 	stw	zero,-16(fp)
	for(i=0; i<4; i++) {
100008bc:	e03ffc15 	stw	zero,-16(fp)
100008c0:	00009106 	br	10000b08 <MixColumns+0x260>
		a[0]=state[0+i];
100008c4:	e0bffc17 	ldw	r2,-16(fp)
100008c8:	e0ffff17 	ldw	r3,-4(fp)
100008cc:	1885883a 	add	r2,r3,r2
100008d0:	10800003 	ldbu	r2,0(r2)
100008d4:	e0bffd05 	stb	r2,-12(fp)
		a[1]=state[4+i];
100008d8:	e0bffc17 	ldw	r2,-16(fp)
100008dc:	10800104 	addi	r2,r2,4
100008e0:	e0ffff17 	ldw	r3,-4(fp)
100008e4:	1885883a 	add	r2,r3,r2
100008e8:	10800003 	ldbu	r2,0(r2)
100008ec:	e0bffd45 	stb	r2,-11(fp)
		a[2]=state[8+i];
100008f0:	e0bffc17 	ldw	r2,-16(fp)
100008f4:	10800204 	addi	r2,r2,8
100008f8:	e0ffff17 	ldw	r3,-4(fp)
100008fc:	1885883a 	add	r2,r3,r2
10000900:	10800003 	ldbu	r2,0(r2)
10000904:	e0bffd85 	stb	r2,-10(fp)
		a[3]=state[12+i];
10000908:	e0bffc17 	ldw	r2,-16(fp)
1000090c:	10800304 	addi	r2,r2,12
10000910:	e0ffff17 	ldw	r3,-4(fp)
10000914:	1885883a 	add	r2,r3,r2
10000918:	10800003 	ldbu	r2,0(r2)
1000091c:	e0bffdc5 	stb	r2,-9(fp)
		b[0] = (a[0] & 0x80) ? (a[0] << 1) ^ 0x1B : (a[0] << 1);
10000920:	e0bffd03 	ldbu	r2,-12(fp)
10000924:	10803fcc 	andi	r2,r2,255
10000928:	1080201c 	xori	r2,r2,128
1000092c:	10bfe004 	addi	r2,r2,-128
10000930:	1000050e 	bge	r2,zero,10000948 <MixColumns+0xa0>
10000934:	e0bffd03 	ldbu	r2,-12(fp)
10000938:	10803fcc 	andi	r2,r2,255
1000093c:	1085883a 	add	r2,r2,r2
10000940:	108006dc 	xori	r2,r2,27
10000944:	00000206 	br	10000950 <MixColumns+0xa8>
10000948:	e0bffd03 	ldbu	r2,-12(fp)
1000094c:	1085883a 	add	r2,r2,r2
10000950:	e0bffe05 	stb	r2,-8(fp)
		b[1] = (a[1] & 0x80) ? (a[1] << 1) ^ 0x1B : (a[1] << 1);
10000954:	e0bffd43 	ldbu	r2,-11(fp)
10000958:	10803fcc 	andi	r2,r2,255
1000095c:	1080201c 	xori	r2,r2,128
10000960:	10bfe004 	addi	r2,r2,-128
10000964:	1000050e 	bge	r2,zero,1000097c <MixColumns+0xd4>
10000968:	e0bffd43 	ldbu	r2,-11(fp)
1000096c:	10803fcc 	andi	r2,r2,255
10000970:	1085883a 	add	r2,r2,r2
10000974:	108006dc 	xori	r2,r2,27
10000978:	00000206 	br	10000984 <MixColumns+0xdc>
1000097c:	e0bffd43 	ldbu	r2,-11(fp)
10000980:	1085883a 	add	r2,r2,r2
10000984:	e0bffe45 	stb	r2,-7(fp)
		b[2] = (a[2] & 0x80) ? (a[2] << 1) ^ 0x1B : (a[2] << 1);
10000988:	e0bffd83 	ldbu	r2,-10(fp)
1000098c:	10803fcc 	andi	r2,r2,255
10000990:	1080201c 	xori	r2,r2,128
10000994:	10bfe004 	addi	r2,r2,-128
10000998:	1000050e 	bge	r2,zero,100009b0 <MixColumns+0x108>
1000099c:	e0bffd83 	ldbu	r2,-10(fp)
100009a0:	10803fcc 	andi	r2,r2,255
100009a4:	1085883a 	add	r2,r2,r2
100009a8:	108006dc 	xori	r2,r2,27
100009ac:	00000206 	br	100009b8 <MixColumns+0x110>
100009b0:	e0bffd83 	ldbu	r2,-10(fp)
100009b4:	1085883a 	add	r2,r2,r2
100009b8:	e0bffe85 	stb	r2,-6(fp)
		b[3] = (a[3] & 0x80) ? (a[3] << 1) ^ 0x1B : (a[3] << 1);
100009bc:	e0bffdc3 	ldbu	r2,-9(fp)
100009c0:	10803fcc 	andi	r2,r2,255
100009c4:	1080201c 	xori	r2,r2,128
100009c8:	10bfe004 	addi	r2,r2,-128
100009cc:	1000050e 	bge	r2,zero,100009e4 <MixColumns+0x13c>
100009d0:	e0bffdc3 	ldbu	r2,-9(fp)
100009d4:	10803fcc 	andi	r2,r2,255
100009d8:	1085883a 	add	r2,r2,r2
100009dc:	108006dc 	xori	r2,r2,27
100009e0:	00000206 	br	100009ec <MixColumns+0x144>
100009e4:	e0bffdc3 	ldbu	r2,-9(fp)
100009e8:	1085883a 	add	r2,r2,r2
100009ec:	e0bffec5 	stb	r2,-5(fp)

        state[0+i] = b[0] ^ a[3] ^ a[2] ^ b[1] ^ a[1]; /* 2 * a0 + a3 + a2 + 3 * a1 */
100009f0:	e0bffc17 	ldw	r2,-16(fp)
100009f4:	e0ffff17 	ldw	r3,-4(fp)
100009f8:	1885883a 	add	r2,r3,r2
100009fc:	e13ffe03 	ldbu	r4,-8(fp)
10000a00:	e0fffdc3 	ldbu	r3,-9(fp)
10000a04:	20c6f03a 	xor	r3,r4,r3
10000a08:	1809883a 	mov	r4,r3
10000a0c:	e0fffd83 	ldbu	r3,-10(fp)
10000a10:	20c6f03a 	xor	r3,r4,r3
10000a14:	1809883a 	mov	r4,r3
10000a18:	e0fffe43 	ldbu	r3,-7(fp)
10000a1c:	20c6f03a 	xor	r3,r4,r3
10000a20:	1809883a 	mov	r4,r3
10000a24:	e0fffd43 	ldbu	r3,-11(fp)
10000a28:	20c6f03a 	xor	r3,r4,r3
10000a2c:	10c00005 	stb	r3,0(r2)
        state[4+i] = b[1] ^ a[0] ^ a[3] ^ b[2] ^ a[2]; /* 2 * a1 + a0 + a3 + 3 * a2 */
10000a30:	e0bffc17 	ldw	r2,-16(fp)
10000a34:	10800104 	addi	r2,r2,4
10000a38:	e0ffff17 	ldw	r3,-4(fp)
10000a3c:	1885883a 	add	r2,r3,r2
10000a40:	e13ffe43 	ldbu	r4,-7(fp)
10000a44:	e0fffd03 	ldbu	r3,-12(fp)
10000a48:	20c6f03a 	xor	r3,r4,r3
10000a4c:	1809883a 	mov	r4,r3
10000a50:	e0fffdc3 	ldbu	r3,-9(fp)
10000a54:	20c6f03a 	xor	r3,r4,r3
10000a58:	1809883a 	mov	r4,r3
10000a5c:	e0fffe83 	ldbu	r3,-6(fp)
10000a60:	20c6f03a 	xor	r3,r4,r3
10000a64:	1809883a 	mov	r4,r3
10000a68:	e0fffd83 	ldbu	r3,-10(fp)
10000a6c:	20c6f03a 	xor	r3,r4,r3
10000a70:	10c00005 	stb	r3,0(r2)
        state[8+i] = b[2] ^ a[1] ^ a[0] ^ b[3] ^ a[3]; /* 2 * a2 + a1 + a0 + 3 * a3 */
10000a74:	e0bffc17 	ldw	r2,-16(fp)
10000a78:	10800204 	addi	r2,r2,8
10000a7c:	e0ffff17 	ldw	r3,-4(fp)
10000a80:	1885883a 	add	r2,r3,r2
10000a84:	e13ffe83 	ldbu	r4,-6(fp)
10000a88:	e0fffd43 	ldbu	r3,-11(fp)
10000a8c:	20c6f03a 	xor	r3,r4,r3
10000a90:	1809883a 	mov	r4,r3
10000a94:	e0fffd03 	ldbu	r3,-12(fp)
10000a98:	20c6f03a 	xor	r3,r4,r3
10000a9c:	1809883a 	mov	r4,r3
10000aa0:	e0fffec3 	ldbu	r3,-5(fp)
10000aa4:	20c6f03a 	xor	r3,r4,r3
10000aa8:	1809883a 	mov	r4,r3
10000aac:	e0fffdc3 	ldbu	r3,-9(fp)
10000ab0:	20c6f03a 	xor	r3,r4,r3
10000ab4:	10c00005 	stb	r3,0(r2)
        state[12+i] = b[3] ^ a[2] ^ a[1] ^ b[0] ^ a[0]; /* 2 * a3 + a2 + a1 + 3 * a0 */
10000ab8:	e0bffc17 	ldw	r2,-16(fp)
10000abc:	10800304 	addi	r2,r2,12
10000ac0:	e0ffff17 	ldw	r3,-4(fp)
10000ac4:	1885883a 	add	r2,r3,r2
10000ac8:	e13ffec3 	ldbu	r4,-5(fp)
10000acc:	e0fffd83 	ldbu	r3,-10(fp)
10000ad0:	20c6f03a 	xor	r3,r4,r3
10000ad4:	1809883a 	mov	r4,r3
10000ad8:	e0fffd43 	ldbu	r3,-11(fp)
10000adc:	20c6f03a 	xor	r3,r4,r3
10000ae0:	1809883a 	mov	r4,r3
10000ae4:	e0fffe03 	ldbu	r3,-8(fp)
10000ae8:	20c6f03a 	xor	r3,r4,r3
10000aec:	1809883a 	mov	r4,r3
10000af0:	e0fffd03 	ldbu	r3,-12(fp)
10000af4:	20c6f03a 	xor	r3,r4,r3
10000af8:	10c00005 	stb	r3,0(r2)

void MixColumns(uint8_t* state) {
	uint8_t	a[4], b[4];

	int i = 0;
	for(i=0; i<4; i++) {
10000afc:	e0bffc17 	ldw	r2,-16(fp)
10000b00:	10800044 	addi	r2,r2,1
10000b04:	e0bffc15 	stw	r2,-16(fp)
10000b08:	e0bffc17 	ldw	r2,-16(fp)
10000b0c:	10800110 	cmplti	r2,r2,4
10000b10:	103f6c1e 	bne	r2,zero,100008c4 <__alt_data_end+0xf80008c4>
        state[4+i] = b[1] ^ a[0] ^ a[3] ^ b[2] ^ a[2]; /* 2 * a1 + a0 + a3 + 3 * a2 */
        state[8+i] = b[2] ^ a[1] ^ a[0] ^ b[3] ^ a[3]; /* 2 * a2 + a1 + a0 + 3 * a3 */
        state[12+i] = b[3] ^ a[2] ^ a[1] ^ b[0] ^ a[0]; /* 2 * a3 + a2 + a1 + 3 * a0 */

	}
}
10000b14:	e037883a 	mov	sp,fp
10000b18:	df000017 	ldw	fp,0(sp)
10000b1c:	dec00104 	addi	sp,sp,4
10000b20:	f800283a 	ret

10000b24 <Encrypt>:

void Encrypt(uint8_t* in, uint8_t* key) {
10000b24:	defff504 	addi	sp,sp,-44
10000b28:	dfc00a15 	stw	ra,40(sp)
10000b2c:	df000915 	stw	fp,36(sp)
10000b30:	df000904 	addi	fp,sp,36
10000b34:	e13ffe15 	stw	r4,-8(fp)
10000b38:	e17fff15 	stw	r5,-4(fp)
	uint8_t state[16];
	uint32_t* w;

	/* copy plaintext into state */
	//memcpy(&state, in, sizeof(state));
	int i = 0;
10000b3c:	e03ff715 	stw	zero,-36(fp)
	for(i=0; i<4; i++) {
10000b40:	e03ff715 	stw	zero,-36(fp)
10000b44:	00003106 	br	10000c0c <Encrypt+0xe8>
		state[0+i] = in[0+(i*4)];
10000b48:	e0bff717 	ldw	r2,-36(fp)
10000b4c:	1085883a 	add	r2,r2,r2
10000b50:	1085883a 	add	r2,r2,r2
10000b54:	e0fffe17 	ldw	r3,-8(fp)
10000b58:	1885883a 	add	r2,r3,r2
10000b5c:	10c00003 	ldbu	r3,0(r2)
10000b60:	e13ffa04 	addi	r4,fp,-24
10000b64:	e0bff717 	ldw	r2,-36(fp)
10000b68:	2085883a 	add	r2,r4,r2
10000b6c:	10c00005 	stb	r3,0(r2)
		state[4+i] = in[1+(i*4)];
10000b70:	e0bff717 	ldw	r2,-36(fp)
10000b74:	11000104 	addi	r4,r2,4
10000b78:	e0bff717 	ldw	r2,-36(fp)
10000b7c:	1085883a 	add	r2,r2,r2
10000b80:	1085883a 	add	r2,r2,r2
10000b84:	10800044 	addi	r2,r2,1
10000b88:	e0fffe17 	ldw	r3,-8(fp)
10000b8c:	1885883a 	add	r2,r3,r2
10000b90:	10c00003 	ldbu	r3,0(r2)
10000b94:	e0bffa04 	addi	r2,fp,-24
10000b98:	1105883a 	add	r2,r2,r4
10000b9c:	10c00005 	stb	r3,0(r2)
		state[8+i] = in[2+(i*4)];
10000ba0:	e0bff717 	ldw	r2,-36(fp)
10000ba4:	11000204 	addi	r4,r2,8
10000ba8:	e0bff717 	ldw	r2,-36(fp)
10000bac:	1085883a 	add	r2,r2,r2
10000bb0:	1085883a 	add	r2,r2,r2
10000bb4:	10800084 	addi	r2,r2,2
10000bb8:	e0fffe17 	ldw	r3,-8(fp)
10000bbc:	1885883a 	add	r2,r3,r2
10000bc0:	10c00003 	ldbu	r3,0(r2)
10000bc4:	e0bffa04 	addi	r2,fp,-24
10000bc8:	1105883a 	add	r2,r2,r4
10000bcc:	10c00005 	stb	r3,0(r2)
		state[12+i] = in[3+(i*4)];
10000bd0:	e0bff717 	ldw	r2,-36(fp)
10000bd4:	11000304 	addi	r4,r2,12
10000bd8:	e0bff717 	ldw	r2,-36(fp)
10000bdc:	1085883a 	add	r2,r2,r2
10000be0:	1085883a 	add	r2,r2,r2
10000be4:	108000c4 	addi	r2,r2,3
10000be8:	e0fffe17 	ldw	r3,-8(fp)
10000bec:	1885883a 	add	r2,r3,r2
10000bf0:	10c00003 	ldbu	r3,0(r2)
10000bf4:	e0bffa04 	addi	r2,fp,-24
10000bf8:	1105883a 	add	r2,r2,r4
10000bfc:	10c00005 	stb	r3,0(r2)
	uint32_t* w;

	/* copy plaintext into state */
	//memcpy(&state, in, sizeof(state));
	int i = 0;
	for(i=0; i<4; i++) {
10000c00:	e0bff717 	ldw	r2,-36(fp)
10000c04:	10800044 	addi	r2,r2,1
10000c08:	e0bff715 	stw	r2,-36(fp)
10000c0c:	e0bff717 	ldw	r2,-36(fp)
10000c10:	10800110 	cmplti	r2,r2,4
10000c14:	103fcc1e 	bne	r2,zero,10000b48 <__alt_data_end+0xf8000b48>
		state[0+i] = in[0+(i*4)];
		state[4+i] = in[1+(i*4)];
		state[8+i] = in[2+(i*4)];
		state[12+i] = in[3+(i*4)];
	}
	w = KeyExpansion(key);
10000c18:	e13fff17 	ldw	r4,-4(fp)
10000c1c:	000034c0 	call	1000034c <KeyExpansion>
10000c20:	e0bff915 	stw	r2,-28(fp)

	// print keyschedule
	int q = 0;
10000c24:	e03ff815 	stw	zero,-32(fp)
	for(q=0; q<44; q++) {
10000c28:	e03ff815 	stw	zero,-32(fp)
10000c2c:	00001306 	br	10000c7c <Encrypt+0x158>
		printf("%08X ", w[q]);
10000c30:	e0bff817 	ldw	r2,-32(fp)
10000c34:	1085883a 	add	r2,r2,r2
10000c38:	1085883a 	add	r2,r2,r2
10000c3c:	e0fff917 	ldw	r3,-28(fp)
10000c40:	1885883a 	add	r2,r3,r2
10000c44:	10800017 	ldw	r2,0(r2)
10000c48:	01040074 	movhi	r4,4097
10000c4c:	21090c04 	addi	r4,r4,9264
10000c50:	100b883a 	mov	r5,r2
10000c54:	000168c0 	call	1000168c <printf>
		if((q+1)%4 == 0) printf("\n");
10000c58:	e0bff817 	ldw	r2,-32(fp)
10000c5c:	10800044 	addi	r2,r2,1
10000c60:	108000cc 	andi	r2,r2,3
10000c64:	1000021e 	bne	r2,zero,10000c70 <Encrypt+0x14c>
10000c68:	01000284 	movi	r4,10
10000c6c:	00016d00 	call	100016d0 <putchar>
	}
	w = KeyExpansion(key);

	// print keyschedule
	int q = 0;
	for(q=0; q<44; q++) {
10000c70:	e0bff817 	ldw	r2,-32(fp)
10000c74:	10800044 	addi	r2,r2,1
10000c78:	e0bff815 	stw	r2,-32(fp)
10000c7c:	e0bff817 	ldw	r2,-32(fp)
10000c80:	10800b10 	cmplti	r2,r2,44
10000c84:	103fea1e 	bne	r2,zero,10000c30 <__alt_data_end+0xf8000c30>
		printf("%08X ", w[q]);
		if((q+1)%4 == 0) printf("\n");
	}

	AddRoundKey((uint8_t*)&state, w, 0);
10000c88:	e0bffa04 	addi	r2,fp,-24
10000c8c:	1009883a 	mov	r4,r2
10000c90:	e17ff917 	ldw	r5,-28(fp)
10000c94:	000d883a 	mov	r6,zero
10000c98:	00005ec0 	call	100005ec <AddRoundKey>

	for(i=1; i<10; i++) {
10000c9c:	00800044 	movi	r2,1
10000ca0:	e0bff715 	stw	r2,-36(fp)
10000ca4:	00001106 	br	10000cec <Encrypt+0x1c8>
		SubBytes((uint8_t*)&state);
10000ca8:	e0bffa04 	addi	r2,fp,-24
10000cac:	1009883a 	mov	r4,r2
10000cb0:	00006f00 	call	100006f0 <SubBytes>
		ShiftRows((uint8_t*)&state);
10000cb4:	e0bffa04 	addi	r2,fp,-24
10000cb8:	1009883a 	mov	r4,r2
10000cbc:	00007680 	call	10000768 <ShiftRows>
		MixColumns((uint8_t*)&state);
10000cc0:	e0bffa04 	addi	r2,fp,-24
10000cc4:	1009883a 	mov	r4,r2
10000cc8:	00008a80 	call	100008a8 <MixColumns>
		AddRoundKey((uint8_t*)&state, w, i);
10000ccc:	e0bffa04 	addi	r2,fp,-24
10000cd0:	1009883a 	mov	r4,r2
10000cd4:	e17ff917 	ldw	r5,-28(fp)
10000cd8:	e1bff717 	ldw	r6,-36(fp)
10000cdc:	00005ec0 	call	100005ec <AddRoundKey>
		if((q+1)%4 == 0) printf("\n");
	}

	AddRoundKey((uint8_t*)&state, w, 0);

	for(i=1; i<10; i++) {
10000ce0:	e0bff717 	ldw	r2,-36(fp)
10000ce4:	10800044 	addi	r2,r2,1
10000ce8:	e0bff715 	stw	r2,-36(fp)
10000cec:	e0bff717 	ldw	r2,-36(fp)
10000cf0:	10800290 	cmplti	r2,r2,10
10000cf4:	103fec1e 	bne	r2,zero,10000ca8 <__alt_data_end+0xf8000ca8>
		ShiftRows((uint8_t*)&state);
		MixColumns((uint8_t*)&state);
		AddRoundKey((uint8_t*)&state, w, i);
	}

	SubBytes((uint8_t*)&state);
10000cf8:	e0bffa04 	addi	r2,fp,-24
10000cfc:	1009883a 	mov	r4,r2
10000d00:	00006f00 	call	100006f0 <SubBytes>
	ShiftRows((uint8_t*)&state);
10000d04:	e0bffa04 	addi	r2,fp,-24
10000d08:	1009883a 	mov	r4,r2
10000d0c:	00007680 	call	10000768 <ShiftRows>
	AddRoundKey((uint8_t*)&state, w, 10);
10000d10:	e0bffa04 	addi	r2,fp,-24
10000d14:	1009883a 	mov	r4,r2
10000d18:	e17ff917 	ldw	r5,-28(fp)
10000d1c:	01800284 	movi	r6,10
10000d20:	00005ec0 	call	100005ec <AddRoundKey>

	// print state
	for(q=0; q<16; q++){
10000d24:	e03ff815 	stw	zero,-32(fp)
10000d28:	00002206 	br	10000db4 <Encrypt+0x290>
		printf("%02X ", state[(q/4) + (q%4)*4]);
10000d2c:	e0bff817 	ldw	r2,-32(fp)
10000d30:	1000010e 	bge	r2,zero,10000d38 <Encrypt+0x214>
10000d34:	108000c4 	addi	r2,r2,3
10000d38:	1005d0ba 	srai	r2,r2,2
10000d3c:	1007883a 	mov	r3,r2
10000d40:	e13ff817 	ldw	r4,-32(fp)
10000d44:	00a00034 	movhi	r2,32768
10000d48:	108000c4 	addi	r2,r2,3
10000d4c:	2084703a 	and	r2,r4,r2
10000d50:	1000040e 	bge	r2,zero,10000d64 <Encrypt+0x240>
10000d54:	10bfffc4 	addi	r2,r2,-1
10000d58:	013fff04 	movi	r4,-4
10000d5c:	1104b03a 	or	r2,r2,r4
10000d60:	10800044 	addi	r2,r2,1
10000d64:	1085883a 	add	r2,r2,r2
10000d68:	1085883a 	add	r2,r2,r2
10000d6c:	1885883a 	add	r2,r3,r2
10000d70:	e0fffa04 	addi	r3,fp,-24
10000d74:	1885883a 	add	r2,r3,r2
10000d78:	10800003 	ldbu	r2,0(r2)
10000d7c:	10803fcc 	andi	r2,r2,255
10000d80:	01040074 	movhi	r4,4097
10000d84:	21090e04 	addi	r4,r4,9272
10000d88:	100b883a 	mov	r5,r2
10000d8c:	000168c0 	call	1000168c <printf>
		if((q+1)%4==0) printf("\n");
10000d90:	e0bff817 	ldw	r2,-32(fp)
10000d94:	10800044 	addi	r2,r2,1
10000d98:	108000cc 	andi	r2,r2,3
10000d9c:	1000021e 	bne	r2,zero,10000da8 <Encrypt+0x284>
10000da0:	01000284 	movi	r4,10
10000da4:	00016d00 	call	100016d0 <putchar>
	SubBytes((uint8_t*)&state);
	ShiftRows((uint8_t*)&state);
	AddRoundKey((uint8_t*)&state, w, 10);

	// print state
	for(q=0; q<16; q++){
10000da8:	e0bff817 	ldw	r2,-32(fp)
10000dac:	10800044 	addi	r2,r2,1
10000db0:	e0bff815 	stw	r2,-32(fp)
10000db4:	e0bff817 	ldw	r2,-32(fp)
10000db8:	10800410 	cmplti	r2,r2,16
10000dbc:	103fdb1e 	bne	r2,zero,10000d2c <__alt_data_end+0xf8000d2c>
		printf("%02X ", state[(q/4) + (q%4)*4]);
		if((q+1)%4==0) printf("\n");
	}

	// free key_schedule
	free(w);
10000dc0:	e13ff917 	ldw	r4,-28(fp)
10000dc4:	0000ec80 	call	10000ec8 <free>
}
10000dc8:	e037883a 	mov	sp,fp
10000dcc:	dfc00117 	ldw	ra,4(sp)
10000dd0:	df000017 	ldw	fp,0(sp)
10000dd4:	dec00204 	addi	sp,sp,8
10000dd8:	f800283a 	ret

10000ddc <main>:

int main() {
10000ddc:	defff404 	addi	sp,sp,-48
10000de0:	dfc00b15 	stw	ra,44(sp)
10000de4:	df000a15 	stw	fp,40(sp)
10000de8:	df000a04 	addi	fp,sp,40
	//uint8_t cipherkey[16] = {0x0f, 0x15, 0x71, 0xc9, 0x47, 0xd9, 0xe8, 0x59, 0x0c, 0xb7, 0xad, 0xd6, 0xaf, 0x7f, 0x67, 0x98};
	//uint8_t cipherkey[16] = {0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00};
	//uint8_t cipherkey[16] = {0x00, 0x01, 0x02, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f};

	uint8_t temp;
	printf("Enter plaintext: ");
10000dec:	01040074 	movhi	r4,4097
10000df0:	21091004 	addi	r4,r4,9280
10000df4:	000168c0 	call	1000168c <printf>


	int i = 0;
10000df8:	e03ff615 	stw	zero,-40(fp)
	for(i=0; i<16; i++) {
10000dfc:	e03ff615 	stw	zero,-40(fp)
10000e00:	00000d06 	br	10000e38 <main+0x5c>
		scanf("%2x", &temp);
10000e04:	e0bfff04 	addi	r2,fp,-4
10000e08:	01040074 	movhi	r4,4097
10000e0c:	21091504 	addi	r4,r4,9300
10000e10:	100b883a 	mov	r5,r2
10000e14:	00017500 	call	10001750 <scanf>
		plaintext[i] = temp;
10000e18:	e0ffff03 	ldbu	r3,-4(fp)
10000e1c:	e13ff704 	addi	r4,fp,-36
10000e20:	e0bff617 	ldw	r2,-40(fp)
10000e24:	2085883a 	add	r2,r4,r2
10000e28:	10c00005 	stb	r3,0(r2)
	uint8_t temp;
	printf("Enter plaintext: ");


	int i = 0;
	for(i=0; i<16; i++) {
10000e2c:	e0bff617 	ldw	r2,-40(fp)
10000e30:	10800044 	addi	r2,r2,1
10000e34:	e0bff615 	stw	r2,-40(fp)
10000e38:	e0bff617 	ldw	r2,-40(fp)
10000e3c:	10800410 	cmplti	r2,r2,16
10000e40:	103ff01e 	bne	r2,zero,10000e04 <__alt_data_end+0xf8000e04>
		scanf("%2x", &temp);
		plaintext[i] = temp;
	}
	for(i=0; i<16; i++) {
10000e44:	e03ff615 	stw	zero,-40(fp)
10000e48:	00000d06 	br	10000e80 <main+0xa4>
		scanf("%2x", &temp);
10000e4c:	e0bfff04 	addi	r2,fp,-4
10000e50:	01040074 	movhi	r4,4097
10000e54:	21091504 	addi	r4,r4,9300
10000e58:	100b883a 	mov	r5,r2
10000e5c:	00017500 	call	10001750 <scanf>
		cipherkey[i] = temp;
10000e60:	e0ffff03 	ldbu	r3,-4(fp)
10000e64:	e13ffb04 	addi	r4,fp,-20
10000e68:	e0bff617 	ldw	r2,-40(fp)
10000e6c:	2085883a 	add	r2,r4,r2
10000e70:	10c00005 	stb	r3,0(r2)
	int i = 0;
	for(i=0; i<16; i++) {
		scanf("%2x", &temp);
		plaintext[i] = temp;
	}
	for(i=0; i<16; i++) {
10000e74:	e0bff617 	ldw	r2,-40(fp)
10000e78:	10800044 	addi	r2,r2,1
10000e7c:	e0bff615 	stw	r2,-40(fp)
10000e80:	e0bff617 	ldw	r2,-40(fp)
10000e84:	10800410 	cmplti	r2,r2,16
10000e88:	103ff01e 	bne	r2,zero,10000e4c <__alt_data_end+0xf8000e4c>
		scanf("%2x", &temp);
		cipherkey[i] = temp;
	}

	Encrypt((uint8_t*)&plaintext, (uint8_t*)&cipherkey);
10000e8c:	e0fff704 	addi	r3,fp,-36
10000e90:	e0bffb04 	addi	r2,fp,-20
10000e94:	1809883a 	mov	r4,r3
10000e98:	100b883a 	mov	r5,r2
10000e9c:	0000b240 	call	10000b24 <Encrypt>
}
10000ea0:	e037883a 	mov	sp,fp
10000ea4:	dfc00117 	ldw	ra,4(sp)
10000ea8:	df000017 	ldw	fp,0(sp)
10000eac:	dec00204 	addi	sp,sp,8
10000eb0:	f800283a 	ret

10000eb4 <malloc>:
10000eb4:	00840074 	movhi	r2,4097
10000eb8:	10917f04 	addi	r2,r2,17916
10000ebc:	200b883a 	mov	r5,r4
10000ec0:	11000017 	ldw	r4,0(r2)
10000ec4:	0000edc1 	jmpi	10000edc <_malloc_r>

10000ec8 <free>:
10000ec8:	00840074 	movhi	r2,4097
10000ecc:	10917f04 	addi	r2,r2,17916
10000ed0:	200b883a 	mov	r5,r4
10000ed4:	11000017 	ldw	r4,0(r2)
10000ed8:	00070a01 	jmpi	100070a0 <_free_r>

10000edc <_malloc_r>:
10000edc:	defff604 	addi	sp,sp,-40
10000ee0:	dc800215 	stw	r18,8(sp)
10000ee4:	dfc00915 	stw	ra,36(sp)
10000ee8:	df000815 	stw	fp,32(sp)
10000eec:	ddc00715 	stw	r23,28(sp)
10000ef0:	dd800615 	stw	r22,24(sp)
10000ef4:	dd400515 	stw	r21,20(sp)
10000ef8:	dd000415 	stw	r20,16(sp)
10000efc:	dcc00315 	stw	r19,12(sp)
10000f00:	dc400115 	stw	r17,4(sp)
10000f04:	dc000015 	stw	r16,0(sp)
10000f08:	288002c4 	addi	r2,r5,11
10000f0c:	00c00584 	movi	r3,22
10000f10:	2025883a 	mov	r18,r4
10000f14:	18802b2e 	bgeu	r3,r2,10000fc4 <_malloc_r+0xe8>
10000f18:	047ffe04 	movi	r17,-8
10000f1c:	1462703a 	and	r17,r2,r17
10000f20:	88002a16 	blt	r17,zero,10000fcc <_malloc_r+0xf0>
10000f24:	89402936 	bltu	r17,r5,10000fcc <_malloc_r+0xf0>
10000f28:	9009883a 	mov	r4,r18
10000f2c:	00103480 	call	10010348 <__malloc_lock>
10000f30:	00807dc4 	movi	r2,503
10000f34:	14402936 	bltu	r2,r17,10000fdc <_malloc_r+0x100>
10000f38:	8808d0fa 	srli	r4,r17,3
10000f3c:	04c40074 	movhi	r19,4097
10000f40:	9ccaea04 	addi	r19,r19,11176
10000f44:	2105883a 	add	r2,r4,r4
10000f48:	1085883a 	add	r2,r2,r2
10000f4c:	1085883a 	add	r2,r2,r2
10000f50:	9885883a 	add	r2,r19,r2
10000f54:	14000317 	ldw	r16,12(r2)
10000f58:	80815526 	beq	r16,r2,100014b0 <_malloc_r+0x5d4>
10000f5c:	81000117 	ldw	r4,4(r16)
10000f60:	00bfff04 	movi	r2,-4
10000f64:	80c00317 	ldw	r3,12(r16)
10000f68:	2084703a 	and	r2,r4,r2
10000f6c:	8085883a 	add	r2,r16,r2
10000f70:	11800117 	ldw	r6,4(r2)
10000f74:	81400217 	ldw	r5,8(r16)
10000f78:	9009883a 	mov	r4,r18
10000f7c:	31800054 	ori	r6,r6,1
10000f80:	11800115 	stw	r6,4(r2)
10000f84:	28c00315 	stw	r3,12(r5)
10000f88:	19400215 	stw	r5,8(r3)
10000f8c:	00103680 	call	10010368 <__malloc_unlock>
10000f90:	80800204 	addi	r2,r16,8
10000f94:	dfc00917 	ldw	ra,36(sp)
10000f98:	df000817 	ldw	fp,32(sp)
10000f9c:	ddc00717 	ldw	r23,28(sp)
10000fa0:	dd800617 	ldw	r22,24(sp)
10000fa4:	dd400517 	ldw	r21,20(sp)
10000fa8:	dd000417 	ldw	r20,16(sp)
10000fac:	dcc00317 	ldw	r19,12(sp)
10000fb0:	dc800217 	ldw	r18,8(sp)
10000fb4:	dc400117 	ldw	r17,4(sp)
10000fb8:	dc000017 	ldw	r16,0(sp)
10000fbc:	dec00a04 	addi	sp,sp,40
10000fc0:	f800283a 	ret
10000fc4:	04400404 	movi	r17,16
10000fc8:	897fd72e 	bgeu	r17,r5,10000f28 <__alt_data_end+0xf8000f28>
10000fcc:	00800304 	movi	r2,12
10000fd0:	90800015 	stw	r2,0(r18)
10000fd4:	0005883a 	mov	r2,zero
10000fd8:	003fee06 	br	10000f94 <__alt_data_end+0xf8000f94>
10000fdc:	8808d27a 	srli	r4,r17,9
10000fe0:	20007126 	beq	r4,zero,100011a8 <_malloc_r+0x2cc>
10000fe4:	00800104 	movi	r2,4
10000fe8:	1100eb36 	bltu	r2,r4,10001398 <_malloc_r+0x4bc>
10000fec:	8808d1ba 	srli	r4,r17,6
10000ff0:	21000e04 	addi	r4,r4,56
10000ff4:	210b883a 	add	r5,r4,r4
10000ff8:	294b883a 	add	r5,r5,r5
10000ffc:	294b883a 	add	r5,r5,r5
10001000:	04c40074 	movhi	r19,4097
10001004:	9ccaea04 	addi	r19,r19,11176
10001008:	994b883a 	add	r5,r19,r5
1000100c:	2c000317 	ldw	r16,12(r5)
10001010:	2c000e26 	beq	r5,r16,1000104c <_malloc_r+0x170>
10001014:	80c00117 	ldw	r3,4(r16)
10001018:	01ffff04 	movi	r7,-4
1000101c:	018003c4 	movi	r6,15
10001020:	19c6703a 	and	r3,r3,r7
10001024:	1c45c83a 	sub	r2,r3,r17
10001028:	30800716 	blt	r6,r2,10001048 <_malloc_r+0x16c>
1000102c:	1000610e 	bge	r2,zero,100011b4 <_malloc_r+0x2d8>
10001030:	84000317 	ldw	r16,12(r16)
10001034:	2c000526 	beq	r5,r16,1000104c <_malloc_r+0x170>
10001038:	80c00117 	ldw	r3,4(r16)
1000103c:	19c6703a 	and	r3,r3,r7
10001040:	1c45c83a 	sub	r2,r3,r17
10001044:	30bff90e 	bge	r6,r2,1000102c <__alt_data_end+0xf800102c>
10001048:	213fffc4 	addi	r4,r4,-1
1000104c:	21000044 	addi	r4,r4,1
10001050:	9c000417 	ldw	r16,16(r19)
10001054:	00c40074 	movhi	r3,4097
10001058:	18caea04 	addi	r3,r3,11176
1000105c:	1a400204 	addi	r9,r3,8
10001060:	8240ff26 	beq	r16,r9,10001460 <_malloc_r+0x584>
10001064:	81400117 	ldw	r5,4(r16)
10001068:	00bfff04 	movi	r2,-4
1000106c:	018003c4 	movi	r6,15
10001070:	2884703a 	and	r2,r5,r2
10001074:	144bc83a 	sub	r5,r2,r17
10001078:	3140ea16 	blt	r6,r5,10001424 <_malloc_r+0x548>
1000107c:	1a400515 	stw	r9,20(r3)
10001080:	1a400415 	stw	r9,16(r3)
10001084:	2800570e 	bge	r5,zero,100011e4 <_malloc_r+0x308>
10001088:	01407fc4 	movi	r5,511
1000108c:	2880ca36 	bltu	r5,r2,100013b8 <_malloc_r+0x4dc>
10001090:	1004d0fa 	srli	r2,r2,3
10001094:	02000044 	movi	r8,1
10001098:	19c00117 	ldw	r7,4(r3)
1000109c:	108b883a 	add	r5,r2,r2
100010a0:	294b883a 	add	r5,r5,r5
100010a4:	1005d0ba 	srai	r2,r2,2
100010a8:	294b883a 	add	r5,r5,r5
100010ac:	28cb883a 	add	r5,r5,r3
100010b0:	29800217 	ldw	r6,8(r5)
100010b4:	4084983a 	sll	r2,r8,r2
100010b8:	81400315 	stw	r5,12(r16)
100010bc:	81800215 	stw	r6,8(r16)
100010c0:	11c4b03a 	or	r2,r2,r7
100010c4:	18800115 	stw	r2,4(r3)
100010c8:	2c000215 	stw	r16,8(r5)
100010cc:	34000315 	stw	r16,12(r6)
100010d0:	200bd0ba 	srai	r5,r4,2
100010d4:	00c00044 	movi	r3,1
100010d8:	194a983a 	sll	r5,r3,r5
100010dc:	11404936 	bltu	r2,r5,10001204 <_malloc_r+0x328>
100010e0:	1146703a 	and	r3,r2,r5
100010e4:	18000a1e 	bne	r3,zero,10001110 <_malloc_r+0x234>
100010e8:	00ffff04 	movi	r3,-4
100010ec:	294b883a 	add	r5,r5,r5
100010f0:	20c8703a 	and	r4,r4,r3
100010f4:	1146703a 	and	r3,r2,r5
100010f8:	21000104 	addi	r4,r4,4
100010fc:	1800041e 	bne	r3,zero,10001110 <_malloc_r+0x234>
10001100:	294b883a 	add	r5,r5,r5
10001104:	1146703a 	and	r3,r2,r5
10001108:	21000104 	addi	r4,r4,4
1000110c:	183ffc26 	beq	r3,zero,10001100 <__alt_data_end+0xf8001100>
10001110:	023fff04 	movi	r8,-4
10001114:	01c003c4 	movi	r7,15
10001118:	2105883a 	add	r2,r4,r4
1000111c:	1085883a 	add	r2,r2,r2
10001120:	1085883a 	add	r2,r2,r2
10001124:	9899883a 	add	r12,r19,r2
10001128:	62800304 	addi	r10,r12,12
1000112c:	2017883a 	mov	r11,r4
10001130:	54000017 	ldw	r16,0(r10)
10001134:	51bffd04 	addi	r6,r10,-12
10001138:	8180041e 	bne	r16,r6,1000114c <_malloc_r+0x270>
1000113c:	0000ca06 	br	10001468 <_malloc_r+0x58c>
10001140:	10001c0e 	bge	r2,zero,100011b4 <_malloc_r+0x2d8>
10001144:	84000317 	ldw	r16,12(r16)
10001148:	8180c726 	beq	r16,r6,10001468 <_malloc_r+0x58c>
1000114c:	80c00117 	ldw	r3,4(r16)
10001150:	1a06703a 	and	r3,r3,r8
10001154:	1c45c83a 	sub	r2,r3,r17
10001158:	38bff90e 	bge	r7,r2,10001140 <__alt_data_end+0xf8001140>
1000115c:	81000317 	ldw	r4,12(r16)
10001160:	81400217 	ldw	r5,8(r16)
10001164:	8447883a 	add	r3,r16,r17
10001168:	8c400054 	ori	r17,r17,1
1000116c:	29000315 	stw	r4,12(r5)
10001170:	21400215 	stw	r5,8(r4)
10001174:	84400115 	stw	r17,4(r16)
10001178:	1889883a 	add	r4,r3,r2
1000117c:	11400054 	ori	r5,r2,1
10001180:	98c00515 	stw	r3,20(r19)
10001184:	98c00415 	stw	r3,16(r19)
10001188:	20800015 	stw	r2,0(r4)
1000118c:	1a400315 	stw	r9,12(r3)
10001190:	1a400215 	stw	r9,8(r3)
10001194:	19400115 	stw	r5,4(r3)
10001198:	9009883a 	mov	r4,r18
1000119c:	00103680 	call	10010368 <__malloc_unlock>
100011a0:	80800204 	addi	r2,r16,8
100011a4:	003f7b06 	br	10000f94 <__alt_data_end+0xf8000f94>
100011a8:	8808d0fa 	srli	r4,r17,3
100011ac:	210b883a 	add	r5,r4,r4
100011b0:	003f9106 	br	10000ff8 <__alt_data_end+0xf8000ff8>
100011b4:	80c7883a 	add	r3,r16,r3
100011b8:	19400117 	ldw	r5,4(r3)
100011bc:	80800317 	ldw	r2,12(r16)
100011c0:	81000217 	ldw	r4,8(r16)
100011c4:	29400054 	ori	r5,r5,1
100011c8:	19400115 	stw	r5,4(r3)
100011cc:	20800315 	stw	r2,12(r4)
100011d0:	11000215 	stw	r4,8(r2)
100011d4:	9009883a 	mov	r4,r18
100011d8:	00103680 	call	10010368 <__malloc_unlock>
100011dc:	80800204 	addi	r2,r16,8
100011e0:	003f6c06 	br	10000f94 <__alt_data_end+0xf8000f94>
100011e4:	8085883a 	add	r2,r16,r2
100011e8:	10c00117 	ldw	r3,4(r2)
100011ec:	9009883a 	mov	r4,r18
100011f0:	18c00054 	ori	r3,r3,1
100011f4:	10c00115 	stw	r3,4(r2)
100011f8:	00103680 	call	10010368 <__malloc_unlock>
100011fc:	80800204 	addi	r2,r16,8
10001200:	003f6406 	br	10000f94 <__alt_data_end+0xf8000f94>
10001204:	9c000217 	ldw	r16,8(r19)
10001208:	00bfff04 	movi	r2,-4
1000120c:	85400117 	ldw	r21,4(r16)
10001210:	a8aa703a 	and	r21,r21,r2
10001214:	ac400336 	bltu	r21,r17,10001224 <_malloc_r+0x348>
10001218:	ac45c83a 	sub	r2,r21,r17
1000121c:	00c003c4 	movi	r3,15
10001220:	18805316 	blt	r3,r2,10001370 <_malloc_r+0x494>
10001224:	d5e6fe17 	ldw	r23,-25608(gp)
10001228:	d0e00017 	ldw	r3,-32768(gp)
1000122c:	00bfffc4 	movi	r2,-1
10001230:	8579883a 	add	fp,r16,r21
10001234:	8def883a 	add	r23,r17,r23
10001238:	1880d226 	beq	r3,r2,10001584 <_malloc_r+0x6a8>
1000123c:	bdc403c4 	addi	r23,r23,4111
10001240:	00bc0004 	movi	r2,-4096
10001244:	b8ae703a 	and	r23,r23,r2
10001248:	9009883a 	mov	r4,r18
1000124c:	b80b883a 	mov	r5,r23
10001250:	00016ec0 	call	100016ec <_sbrk_r>
10001254:	1029883a 	mov	r20,r2
10001258:	00bfffc4 	movi	r2,-1
1000125c:	a080d126 	beq	r20,r2,100015a4 <_malloc_r+0x6c8>
10001260:	a7009f36 	bltu	r20,fp,100014e0 <_malloc_r+0x604>
10001264:	05840074 	movhi	r22,4097
10001268:	b5988404 	addi	r22,r22,25104
1000126c:	b0800017 	ldw	r2,0(r22)
10001270:	b885883a 	add	r2,r23,r2
10001274:	b0800015 	stw	r2,0(r22)
10001278:	e500cf26 	beq	fp,r20,100015b8 <_malloc_r+0x6dc>
1000127c:	d1200017 	ldw	r4,-32768(gp)
10001280:	00ffffc4 	movi	r3,-1
10001284:	20c0e026 	beq	r4,r3,10001608 <_malloc_r+0x72c>
10001288:	a739c83a 	sub	fp,r20,fp
1000128c:	1705883a 	add	r2,r2,fp
10001290:	b0800015 	stw	r2,0(r22)
10001294:	a08001cc 	andi	r2,r20,7
10001298:	1000a526 	beq	r2,zero,10001530 <_malloc_r+0x654>
1000129c:	a0a9c83a 	sub	r20,r20,r2
100012a0:	00c40204 	movi	r3,4104
100012a4:	a5000204 	addi	r20,r20,8
100012a8:	1885c83a 	sub	r2,r3,r2
100012ac:	a5c7883a 	add	r3,r20,r23
100012b0:	18c3ffcc 	andi	r3,r3,4095
100012b4:	10efc83a 	sub	r23,r2,r3
100012b8:	9009883a 	mov	r4,r18
100012bc:	b80b883a 	mov	r5,r23
100012c0:	00016ec0 	call	100016ec <_sbrk_r>
100012c4:	00ffffc4 	movi	r3,-1
100012c8:	10c0cc26 	beq	r2,r3,100015fc <_malloc_r+0x720>
100012cc:	1505c83a 	sub	r2,r2,r20
100012d0:	b887883a 	add	r3,r23,r2
100012d4:	18c00054 	ori	r3,r3,1
100012d8:	b0800017 	ldw	r2,0(r22)
100012dc:	9d000215 	stw	r20,8(r19)
100012e0:	a0c00115 	stw	r3,4(r20)
100012e4:	b885883a 	add	r2,r23,r2
100012e8:	b0800015 	stw	r2,0(r22)
100012ec:	84c00e26 	beq	r16,r19,10001328 <_malloc_r+0x44c>
100012f0:	00c003c4 	movi	r3,15
100012f4:	1d40902e 	bgeu	r3,r21,10001538 <_malloc_r+0x65c>
100012f8:	ad7ffd04 	addi	r21,r21,-12
100012fc:	013ffe04 	movi	r4,-8
10001300:	a908703a 	and	r4,r21,r4
10001304:	810b883a 	add	r5,r16,r4
10001308:	01800144 	movi	r6,5
1000130c:	29800115 	stw	r6,4(r5)
10001310:	29800215 	stw	r6,8(r5)
10001314:	81400117 	ldw	r5,4(r16)
10001318:	2940004c 	andi	r5,r5,1
1000131c:	214ab03a 	or	r5,r4,r5
10001320:	81400115 	stw	r5,4(r16)
10001324:	1900ae36 	bltu	r3,r4,100015e0 <_malloc_r+0x704>
10001328:	d0e6fd17 	ldw	r3,-25612(gp)
1000132c:	1880012e 	bgeu	r3,r2,10001334 <_malloc_r+0x458>
10001330:	d0a6fd15 	stw	r2,-25612(gp)
10001334:	d0e6fc17 	ldw	r3,-25616(gp)
10001338:	9c000217 	ldw	r16,8(r19)
1000133c:	1880012e 	bgeu	r3,r2,10001344 <_malloc_r+0x468>
10001340:	d0a6fc15 	stw	r2,-25616(gp)
10001344:	80c00117 	ldw	r3,4(r16)
10001348:	00bfff04 	movi	r2,-4
1000134c:	1886703a 	and	r3,r3,r2
10001350:	1c45c83a 	sub	r2,r3,r17
10001354:	1c400236 	bltu	r3,r17,10001360 <_malloc_r+0x484>
10001358:	00c003c4 	movi	r3,15
1000135c:	18800416 	blt	r3,r2,10001370 <_malloc_r+0x494>
10001360:	9009883a 	mov	r4,r18
10001364:	00103680 	call	10010368 <__malloc_unlock>
10001368:	0005883a 	mov	r2,zero
1000136c:	003f0906 	br	10000f94 <__alt_data_end+0xf8000f94>
10001370:	88c00054 	ori	r3,r17,1
10001374:	10800054 	ori	r2,r2,1
10001378:	80c00115 	stw	r3,4(r16)
1000137c:	8463883a 	add	r17,r16,r17
10001380:	88800115 	stw	r2,4(r17)
10001384:	9009883a 	mov	r4,r18
10001388:	9c400215 	stw	r17,8(r19)
1000138c:	00103680 	call	10010368 <__malloc_unlock>
10001390:	80800204 	addi	r2,r16,8
10001394:	003eff06 	br	10000f94 <__alt_data_end+0xf8000f94>
10001398:	00800504 	movi	r2,20
1000139c:	1100492e 	bgeu	r2,r4,100014c4 <_malloc_r+0x5e8>
100013a0:	00801504 	movi	r2,84
100013a4:	11005c36 	bltu	r2,r4,10001518 <_malloc_r+0x63c>
100013a8:	8808d33a 	srli	r4,r17,12
100013ac:	21001b84 	addi	r4,r4,110
100013b0:	210b883a 	add	r5,r4,r4
100013b4:	003f1006 	br	10000ff8 <__alt_data_end+0xf8000ff8>
100013b8:	1006d27a 	srli	r3,r2,9
100013bc:	01400104 	movi	r5,4
100013c0:	28c0432e 	bgeu	r5,r3,100014d0 <_malloc_r+0x5f4>
100013c4:	01400504 	movi	r5,20
100013c8:	28c07036 	bltu	r5,r3,1000158c <_malloc_r+0x6b0>
100013cc:	194016c4 	addi	r5,r3,91
100013d0:	294d883a 	add	r6,r5,r5
100013d4:	318d883a 	add	r6,r6,r6
100013d8:	318d883a 	add	r6,r6,r6
100013dc:	998d883a 	add	r6,r19,r6
100013e0:	30c00217 	ldw	r3,8(r6)
100013e4:	01c40074 	movhi	r7,4097
100013e8:	39caea04 	addi	r7,r7,11176
100013ec:	19805726 	beq	r3,r6,1000154c <_malloc_r+0x670>
100013f0:	01ffff04 	movi	r7,-4
100013f4:	19400117 	ldw	r5,4(r3)
100013f8:	29ca703a 	and	r5,r5,r7
100013fc:	1140022e 	bgeu	r2,r5,10001408 <_malloc_r+0x52c>
10001400:	18c00217 	ldw	r3,8(r3)
10001404:	30fffb1e 	bne	r6,r3,100013f4 <__alt_data_end+0xf80013f4>
10001408:	19400317 	ldw	r5,12(r3)
1000140c:	98800117 	ldw	r2,4(r19)
10001410:	81400315 	stw	r5,12(r16)
10001414:	80c00215 	stw	r3,8(r16)
10001418:	2c000215 	stw	r16,8(r5)
1000141c:	1c000315 	stw	r16,12(r3)
10001420:	003f2b06 	br	100010d0 <__alt_data_end+0xf80010d0>
10001424:	8445883a 	add	r2,r16,r17
10001428:	8c400054 	ori	r17,r17,1
1000142c:	18800515 	stw	r2,20(r3)
10001430:	18800415 	stw	r2,16(r3)
10001434:	29000054 	ori	r4,r5,1
10001438:	1147883a 	add	r3,r2,r5
1000143c:	84400115 	stw	r17,4(r16)
10001440:	11000115 	stw	r4,4(r2)
10001444:	12400315 	stw	r9,12(r2)
10001448:	12400215 	stw	r9,8(r2)
1000144c:	19400015 	stw	r5,0(r3)
10001450:	9009883a 	mov	r4,r18
10001454:	00103680 	call	10010368 <__malloc_unlock>
10001458:	80800204 	addi	r2,r16,8
1000145c:	003ecd06 	br	10000f94 <__alt_data_end+0xf8000f94>
10001460:	18800117 	ldw	r2,4(r3)
10001464:	003f1a06 	br	100010d0 <__alt_data_end+0xf80010d0>
10001468:	5ac00044 	addi	r11,r11,1
1000146c:	588000cc 	andi	r2,r11,3
10001470:	52800204 	addi	r10,r10,8
10001474:	103f2e1e 	bne	r2,zero,10001130 <__alt_data_end+0xf8001130>
10001478:	20c000cc 	andi	r3,r4,3
1000147c:	60bffe04 	addi	r2,r12,-8
10001480:	18006f26 	beq	r3,zero,10001640 <_malloc_r+0x764>
10001484:	63000017 	ldw	r12,0(r12)
10001488:	213fffc4 	addi	r4,r4,-1
1000148c:	60bffa26 	beq	r12,r2,10001478 <__alt_data_end+0xf8001478>
10001490:	98800117 	ldw	r2,4(r19)
10001494:	294b883a 	add	r5,r5,r5
10001498:	117f5a36 	bltu	r2,r5,10001204 <__alt_data_end+0xf8001204>
1000149c:	283f5926 	beq	r5,zero,10001204 <__alt_data_end+0xf8001204>
100014a0:	1146703a 	and	r3,r2,r5
100014a4:	18001626 	beq	r3,zero,10001500 <_malloc_r+0x624>
100014a8:	5809883a 	mov	r4,r11
100014ac:	003f1a06 	br	10001118 <__alt_data_end+0xf8001118>
100014b0:	80800204 	addi	r2,r16,8
100014b4:	84000517 	ldw	r16,20(r16)
100014b8:	143ea81e 	bne	r2,r16,10000f5c <__alt_data_end+0xf8000f5c>
100014bc:	21000084 	addi	r4,r4,2
100014c0:	003ee306 	br	10001050 <__alt_data_end+0xf8001050>
100014c4:	210016c4 	addi	r4,r4,91
100014c8:	210b883a 	add	r5,r4,r4
100014cc:	003eca06 	br	10000ff8 <__alt_data_end+0xf8000ff8>
100014d0:	100ad1ba 	srli	r5,r2,6
100014d4:	29400e04 	addi	r5,r5,56
100014d8:	294d883a 	add	r6,r5,r5
100014dc:	003fbd06 	br	100013d4 <__alt_data_end+0xf80013d4>
100014e0:	84ff6026 	beq	r16,r19,10001264 <__alt_data_end+0xf8001264>
100014e4:	00840074 	movhi	r2,4097
100014e8:	108aea04 	addi	r2,r2,11176
100014ec:	14000217 	ldw	r16,8(r2)
100014f0:	00bfff04 	movi	r2,-4
100014f4:	80c00117 	ldw	r3,4(r16)
100014f8:	1886703a 	and	r3,r3,r2
100014fc:	003f9406 	br	10001350 <__alt_data_end+0xf8001350>
10001500:	294b883a 	add	r5,r5,r5
10001504:	1146703a 	and	r3,r2,r5
10001508:	5ac00104 	addi	r11,r11,4
1000150c:	183ffc26 	beq	r3,zero,10001500 <__alt_data_end+0xf8001500>
10001510:	5809883a 	mov	r4,r11
10001514:	003f0006 	br	10001118 <__alt_data_end+0xf8001118>
10001518:	00805504 	movi	r2,340
1000151c:	11001336 	bltu	r2,r4,1000156c <_malloc_r+0x690>
10001520:	8808d3fa 	srli	r4,r17,15
10001524:	21001dc4 	addi	r4,r4,119
10001528:	210b883a 	add	r5,r4,r4
1000152c:	003eb206 	br	10000ff8 <__alt_data_end+0xf8000ff8>
10001530:	00840004 	movi	r2,4096
10001534:	003f5d06 	br	100012ac <__alt_data_end+0xf80012ac>
10001538:	00800044 	movi	r2,1
1000153c:	a0800115 	stw	r2,4(r20)
10001540:	a021883a 	mov	r16,r20
10001544:	0007883a 	mov	r3,zero
10001548:	003f8106 	br	10001350 <__alt_data_end+0xf8001350>
1000154c:	280bd0ba 	srai	r5,r5,2
10001550:	01800044 	movi	r6,1
10001554:	38800117 	ldw	r2,4(r7)
10001558:	314c983a 	sll	r6,r6,r5
1000155c:	180b883a 	mov	r5,r3
10001560:	3084b03a 	or	r2,r6,r2
10001564:	38800115 	stw	r2,4(r7)
10001568:	003fa906 	br	10001410 <__alt_data_end+0xf8001410>
1000156c:	00815504 	movi	r2,1364
10001570:	11001836 	bltu	r2,r4,100015d4 <_malloc_r+0x6f8>
10001574:	8808d4ba 	srli	r4,r17,18
10001578:	21001f04 	addi	r4,r4,124
1000157c:	210b883a 	add	r5,r4,r4
10001580:	003e9d06 	br	10000ff8 <__alt_data_end+0xf8000ff8>
10001584:	bdc00404 	addi	r23,r23,16
10001588:	003f2f06 	br	10001248 <__alt_data_end+0xf8001248>
1000158c:	01401504 	movi	r5,84
10001590:	28c01f36 	bltu	r5,r3,10001610 <_malloc_r+0x734>
10001594:	100ad33a 	srli	r5,r2,12
10001598:	29401b84 	addi	r5,r5,110
1000159c:	294d883a 	add	r6,r5,r5
100015a0:	003f8c06 	br	100013d4 <__alt_data_end+0xf80013d4>
100015a4:	9c000217 	ldw	r16,8(r19)
100015a8:	00bfff04 	movi	r2,-4
100015ac:	80c00117 	ldw	r3,4(r16)
100015b0:	1886703a 	and	r3,r3,r2
100015b4:	003f6606 	br	10001350 <__alt_data_end+0xf8001350>
100015b8:	e0c3ffcc 	andi	r3,fp,4095
100015bc:	183f2f1e 	bne	r3,zero,1000127c <__alt_data_end+0xf800127c>
100015c0:	98c00217 	ldw	r3,8(r19)
100015c4:	bd49883a 	add	r4,r23,r21
100015c8:	21000054 	ori	r4,r4,1
100015cc:	19000115 	stw	r4,4(r3)
100015d0:	003f5506 	br	10001328 <__alt_data_end+0xf8001328>
100015d4:	01403f04 	movi	r5,252
100015d8:	01001f84 	movi	r4,126
100015dc:	003e8606 	br	10000ff8 <__alt_data_end+0xf8000ff8>
100015e0:	9009883a 	mov	r4,r18
100015e4:	81400204 	addi	r5,r16,8
100015e8:	00070a00 	call	100070a0 <_free_r>
100015ec:	00840074 	movhi	r2,4097
100015f0:	10988404 	addi	r2,r2,25104
100015f4:	10800017 	ldw	r2,0(r2)
100015f8:	003f4b06 	br	10001328 <__alt_data_end+0xf8001328>
100015fc:	00c00044 	movi	r3,1
10001600:	002f883a 	mov	r23,zero
10001604:	003f3406 	br	100012d8 <__alt_data_end+0xf80012d8>
10001608:	d5200015 	stw	r20,-32768(gp)
1000160c:	003f2106 	br	10001294 <__alt_data_end+0xf8001294>
10001610:	01405504 	movi	r5,340
10001614:	28c00436 	bltu	r5,r3,10001628 <_malloc_r+0x74c>
10001618:	100ad3fa 	srli	r5,r2,15
1000161c:	29401dc4 	addi	r5,r5,119
10001620:	294d883a 	add	r6,r5,r5
10001624:	003f6b06 	br	100013d4 <__alt_data_end+0xf80013d4>
10001628:	01415504 	movi	r5,1364
1000162c:	28c00936 	bltu	r5,r3,10001654 <_malloc_r+0x778>
10001630:	100ad4ba 	srli	r5,r2,18
10001634:	29401f04 	addi	r5,r5,124
10001638:	294d883a 	add	r6,r5,r5
1000163c:	003f6506 	br	100013d4 <__alt_data_end+0xf80013d4>
10001640:	98800117 	ldw	r2,4(r19)
10001644:	0146303a 	nor	r3,zero,r5
10001648:	1884703a 	and	r2,r3,r2
1000164c:	98800115 	stw	r2,4(r19)
10001650:	003f9006 	br	10001494 <__alt_data_end+0xf8001494>
10001654:	01803f04 	movi	r6,252
10001658:	01401f84 	movi	r5,126
1000165c:	003f5d06 	br	100013d4 <__alt_data_end+0xf80013d4>

10001660 <_printf_r>:
10001660:	defffd04 	addi	sp,sp,-12
10001664:	dfc00015 	stw	ra,0(sp)
10001668:	d9800115 	stw	r6,4(sp)
1000166c:	d9c00215 	stw	r7,8(sp)
10001670:	280d883a 	mov	r6,r5
10001674:	21400217 	ldw	r5,8(r4)
10001678:	d9c00104 	addi	r7,sp,4
1000167c:	00017f00 	call	100017f0 <___vfprintf_internal_r>
10001680:	dfc00017 	ldw	ra,0(sp)
10001684:	dec00304 	addi	sp,sp,12
10001688:	f800283a 	ret

1000168c <printf>:
1000168c:	defffc04 	addi	sp,sp,-16
10001690:	dfc00015 	stw	ra,0(sp)
10001694:	d9400115 	stw	r5,4(sp)
10001698:	d9800215 	stw	r6,8(sp)
1000169c:	d9c00315 	stw	r7,12(sp)
100016a0:	00840074 	movhi	r2,4097
100016a4:	10917f04 	addi	r2,r2,17916
100016a8:	10800017 	ldw	r2,0(r2)
100016ac:	200b883a 	mov	r5,r4
100016b0:	d9800104 	addi	r6,sp,4
100016b4:	11000217 	ldw	r4,8(r2)
100016b8:	000366c0 	call	1000366c <__vfprintf_internal>
100016bc:	dfc00017 	ldw	ra,0(sp)
100016c0:	dec00404 	addi	sp,sp,16
100016c4:	f800283a 	ret

100016c8 <_putchar_r>:
100016c8:	21800217 	ldw	r6,8(r4)
100016cc:	00092481 	jmpi	10009248 <_putc_r>

100016d0 <putchar>:
100016d0:	00840074 	movhi	r2,4097
100016d4:	10917f04 	addi	r2,r2,17916
100016d8:	10800017 	ldw	r2,0(r2)
100016dc:	200b883a 	mov	r5,r4
100016e0:	11800217 	ldw	r6,8(r2)
100016e4:	1009883a 	mov	r4,r2
100016e8:	00092481 	jmpi	10009248 <_putc_r>

100016ec <_sbrk_r>:
100016ec:	defffd04 	addi	sp,sp,-12
100016f0:	dc400115 	stw	r17,4(sp)
100016f4:	dc000015 	stw	r16,0(sp)
100016f8:	2023883a 	mov	r17,r4
100016fc:	04040074 	movhi	r16,4097
10001700:	84187a04 	addi	r16,r16,25064
10001704:	2809883a 	mov	r4,r5
10001708:	dfc00215 	stw	ra,8(sp)
1000170c:	80000015 	stw	zero,0(r16)
10001710:	001054c0 	call	1001054c <sbrk>
10001714:	00ffffc4 	movi	r3,-1
10001718:	10c00526 	beq	r2,r3,10001730 <_sbrk_r+0x44>
1000171c:	dfc00217 	ldw	ra,8(sp)
10001720:	dc400117 	ldw	r17,4(sp)
10001724:	dc000017 	ldw	r16,0(sp)
10001728:	dec00304 	addi	sp,sp,12
1000172c:	f800283a 	ret
10001730:	80c00017 	ldw	r3,0(r16)
10001734:	183ff926 	beq	r3,zero,1000171c <__alt_data_end+0xf800171c>
10001738:	88c00015 	stw	r3,0(r17)
1000173c:	dfc00217 	ldw	ra,8(sp)
10001740:	dc400117 	ldw	r17,4(sp)
10001744:	dc000017 	ldw	r16,0(sp)
10001748:	dec00304 	addi	sp,sp,12
1000174c:	f800283a 	ret

10001750 <scanf>:
10001750:	defffc04 	addi	sp,sp,-16
10001754:	dfc00015 	stw	ra,0(sp)
10001758:	d9400115 	stw	r5,4(sp)
1000175c:	d9800215 	stw	r6,8(sp)
10001760:	d9c00315 	stw	r7,12(sp)
10001764:	00840074 	movhi	r2,4097
10001768:	10917f04 	addi	r2,r2,17916
1000176c:	10800017 	ldw	r2,0(r2)
10001770:	200d883a 	mov	r6,r4
10001774:	d9c00104 	addi	r7,sp,4
10001778:	11400117 	ldw	r5,4(r2)
1000177c:	1009883a 	mov	r4,r2
10001780:	00036900 	call	10003690 <__svfscanf_r>
10001784:	dfc00017 	ldw	ra,0(sp)
10001788:	dec00404 	addi	sp,sp,16
1000178c:	f800283a 	ret

10001790 <_scanf_r>:
10001790:	defffd04 	addi	sp,sp,-12
10001794:	dfc00015 	stw	ra,0(sp)
10001798:	d9800115 	stw	r6,4(sp)
1000179c:	d9c00215 	stw	r7,8(sp)
100017a0:	280d883a 	mov	r6,r5
100017a4:	21400117 	ldw	r5,4(r4)
100017a8:	d9c00104 	addi	r7,sp,4
100017ac:	00036900 	call	10003690 <__svfscanf_r>
100017b0:	dfc00017 	ldw	ra,0(sp)
100017b4:	dec00304 	addi	sp,sp,12
100017b8:	f800283a 	ret

100017bc <__sprint_r>:
100017bc:	30800217 	ldw	r2,8(r6)
100017c0:	defffe04 	addi	sp,sp,-8
100017c4:	dc000015 	stw	r16,0(sp)
100017c8:	dfc00115 	stw	ra,4(sp)
100017cc:	3021883a 	mov	r16,r6
100017d0:	10000226 	beq	r2,zero,100017dc <__sprint_r+0x20>
100017d4:	00073700 	call	10007370 <__sfvwrite_r>
100017d8:	80000215 	stw	zero,8(r16)
100017dc:	80000115 	stw	zero,4(r16)
100017e0:	dfc00117 	ldw	ra,4(sp)
100017e4:	dc000017 	ldw	r16,0(sp)
100017e8:	dec00204 	addi	sp,sp,8
100017ec:	f800283a 	ret

100017f0 <___vfprintf_internal_r>:
100017f0:	defeb904 	addi	sp,sp,-1308
100017f4:	dc013d15 	stw	r16,1268(sp)
100017f8:	d9013015 	stw	r4,1216(sp)
100017fc:	dfc14615 	stw	ra,1304(sp)
10001800:	df014515 	stw	fp,1300(sp)
10001804:	ddc14415 	stw	r23,1296(sp)
10001808:	dd814315 	stw	r22,1292(sp)
1000180c:	dd414215 	stw	r21,1288(sp)
10001810:	dd014115 	stw	r20,1284(sp)
10001814:	dcc14015 	stw	r19,1280(sp)
10001818:	dc813f15 	stw	r18,1276(sp)
1000181c:	dc413e15 	stw	r17,1272(sp)
10001820:	d9412915 	stw	r5,1188(sp)
10001824:	3021883a 	mov	r16,r6
10001828:	d9c12d15 	stw	r7,1204(sp)
1000182c:	0007a940 	call	10007a94 <_localeconv_r>
10001830:	10800017 	ldw	r2,0(r2)
10001834:	d9013017 	ldw	r4,1216(sp)
10001838:	d8013315 	stw	zero,1228(sp)
1000183c:	d8813715 	stw	r2,1244(sp)
10001840:	d8013415 	stw	zero,1232(sp)
10001844:	20000226 	beq	r4,zero,10001850 <___vfprintf_internal_r+0x60>
10001848:	20800e17 	ldw	r2,56(r4)
1000184c:	10014b26 	beq	r2,zero,10001d7c <___vfprintf_internal_r+0x58c>
10001850:	d8c12917 	ldw	r3,1188(sp)
10001854:	1880030b 	ldhu	r2,12(r3)
10001858:	10c0020c 	andi	r3,r2,8
1000185c:	18ffffcc 	andi	r3,r3,65535
10001860:	18e0001c 	xori	r3,r3,32768
10001864:	18e00004 	addi	r3,r3,-32768
10001868:	1800ed26 	beq	r3,zero,10001c20 <___vfprintf_internal_r+0x430>
1000186c:	d9012917 	ldw	r4,1188(sp)
10001870:	20c00417 	ldw	r3,16(r4)
10001874:	1800ea26 	beq	r3,zero,10001c20 <___vfprintf_internal_r+0x430>
10001878:	1100068c 	andi	r4,r2,26
1000187c:	00c00284 	movi	r3,10
10001880:	20c0f026 	beq	r4,r3,10001c44 <___vfprintf_internal_r+0x454>
10001884:	d9010dc4 	addi	r4,sp,1079
10001888:	d8810e04 	addi	r2,sp,1080
1000188c:	dc413017 	ldw	r17,1216(sp)
10001890:	d8c00404 	addi	r3,sp,16
10001894:	d9012615 	stw	r4,1176(sp)
10001898:	1109c83a 	sub	r4,r2,r4
1000189c:	d8812715 	stw	r2,1180(sp)
100018a0:	d8c11b15 	stw	r3,1132(sp)
100018a4:	d8011d15 	stw	zero,1140(sp)
100018a8:	d8011c15 	stw	zero,1136(sp)
100018ac:	802b883a 	mov	r21,r16
100018b0:	d8013215 	stw	zero,1224(sp)
100018b4:	d8013615 	stw	zero,1240(sp)
100018b8:	d8013515 	stw	zero,1236(sp)
100018bc:	d8012c15 	stw	zero,1200(sp)
100018c0:	1813883a 	mov	r9,r3
100018c4:	d9013915 	stw	r4,1252(sp)
100018c8:	a8800007 	ldb	r2,0(r21)
100018cc:	1002f326 	beq	r2,zero,1000249c <___vfprintf_internal_r+0xcac>
100018d0:	00c00944 	movi	r3,37
100018d4:	a825883a 	mov	r18,r21
100018d8:	10c0021e 	bne	r2,r3,100018e4 <___vfprintf_internal_r+0xf4>
100018dc:	00001406 	br	10001930 <___vfprintf_internal_r+0x140>
100018e0:	10c00326 	beq	r2,r3,100018f0 <___vfprintf_internal_r+0x100>
100018e4:	94800044 	addi	r18,r18,1
100018e8:	90800007 	ldb	r2,0(r18)
100018ec:	103ffc1e 	bne	r2,zero,100018e0 <__alt_data_end+0xf80018e0>
100018f0:	9561c83a 	sub	r16,r18,r21
100018f4:	80000e26 	beq	r16,zero,10001930 <___vfprintf_internal_r+0x140>
100018f8:	da011d17 	ldw	r8,1140(sp)
100018fc:	d8c11c17 	ldw	r3,1136(sp)
10001900:	4d400015 	stw	r21,0(r9)
10001904:	4c000115 	stw	r16,4(r9)
10001908:	4411883a 	add	r8,r8,r16
1000190c:	18c00044 	addi	r3,r3,1
10001910:	da011d15 	stw	r8,1140(sp)
10001914:	d8c11c15 	stw	r3,1136(sp)
10001918:	008001c4 	movi	r2,7
1000191c:	10c11016 	blt	r2,r3,10001d60 <___vfprintf_internal_r+0x570>
10001920:	4a400204 	addi	r9,r9,8
10001924:	d8812c17 	ldw	r2,1200(sp)
10001928:	1405883a 	add	r2,r2,r16
1000192c:	d8812c15 	stw	r2,1200(sp)
10001930:	90800007 	ldb	r2,0(r18)
10001934:	1000ee26 	beq	r2,zero,10001cf0 <___vfprintf_internal_r+0x500>
10001938:	95400044 	addi	r21,r18,1
1000193c:	94800047 	ldb	r18,1(r18)
10001940:	073fffc4 	movi	fp,-1
10001944:	e007883a 	mov	r3,fp
10001948:	d8012585 	stb	zero,1174(sp)
1000194c:	d8012e15 	stw	zero,1208(sp)
10001950:	0021883a 	mov	r16,zero
10001954:	05001604 	movi	r20,88
10001958:	04c00244 	movi	r19,9
1000195c:	4839883a 	mov	fp,r9
10001960:	ad400044 	addi	r21,r21,1
10001964:	90bff804 	addi	r2,r18,-32
10001968:	a080462e 	bgeu	r20,r2,10001a84 <___vfprintf_internal_r+0x294>
1000196c:	e013883a 	mov	r9,fp
10001970:	9000df26 	beq	r18,zero,10001cf0 <___vfprintf_internal_r+0x500>
10001974:	00c00044 	movi	r3,1
10001978:	d8c12815 	stw	r3,1184(sp)
1000197c:	dc810405 	stb	r18,1040(sp)
10001980:	d8012585 	stb	zero,1174(sp)
10001984:	d8c12b15 	stw	r3,1196(sp)
10001988:	dcc10404 	addi	r19,sp,1040
1000198c:	d8013115 	stw	zero,1220(sp)
10001990:	80c0008c 	andi	r3,r16,2
10001994:	d8c12a15 	stw	r3,1192(sp)
10001998:	18000326 	beq	r3,zero,100019a8 <___vfprintf_internal_r+0x1b8>
1000199c:	d8c12817 	ldw	r3,1184(sp)
100019a0:	18c00084 	addi	r3,r3,2
100019a4:	d8c12815 	stw	r3,1184(sp)
100019a8:	80c0210c 	andi	r3,r16,132
100019ac:	d8c12f15 	stw	r3,1212(sp)
100019b0:	1802251e 	bne	r3,zero,10002248 <___vfprintf_internal_r+0xa58>
100019b4:	d9012e17 	ldw	r4,1208(sp)
100019b8:	d8c12817 	ldw	r3,1184(sp)
100019bc:	20edc83a 	sub	r22,r4,r3
100019c0:	0582210e 	bge	zero,r22,10002248 <___vfprintf_internal_r+0xa58>
100019c4:	02800404 	movi	r10,16
100019c8:	da011d17 	ldw	r8,1140(sp)
100019cc:	d8c11c17 	ldw	r3,1136(sp)
100019d0:	05c40074 	movhi	r23,4097
100019d4:	bdc92684 	addi	r23,r23,9370
100019d8:	5580200e 	bge	r10,r22,10001a5c <___vfprintf_internal_r+0x26c>
100019dc:	dc813815 	stw	r18,1248(sp)
100019e0:	5039883a 	mov	fp,r10
100019e4:	b825883a 	mov	r18,r23
100019e8:	050001c4 	movi	r20,7
100019ec:	b02f883a 	mov	r23,r22
100019f0:	802d883a 	mov	r22,r16
100019f4:	dc012917 	ldw	r16,1188(sp)
100019f8:	00000306 	br	10001a08 <___vfprintf_internal_r+0x218>
100019fc:	bdfffc04 	addi	r23,r23,-16
10001a00:	4a400204 	addi	r9,r9,8
10001a04:	e5c0110e 	bge	fp,r23,10001a4c <___vfprintf_internal_r+0x25c>
10001a08:	4c800015 	stw	r18,0(r9)
10001a0c:	4f000115 	stw	fp,4(r9)
10001a10:	42000404 	addi	r8,r8,16
10001a14:	18c00044 	addi	r3,r3,1
10001a18:	da011d15 	stw	r8,1140(sp)
10001a1c:	d8c11c15 	stw	r3,1136(sp)
10001a20:	a0fff60e 	bge	r20,r3,100019fc <__alt_data_end+0xf80019fc>
10001a24:	8809883a 	mov	r4,r17
10001a28:	800b883a 	mov	r5,r16
10001a2c:	d9811b04 	addi	r6,sp,1132
10001a30:	00017bc0 	call	100017bc <__sprint_r>
10001a34:	1000b41e 	bne	r2,zero,10001d08 <___vfprintf_internal_r+0x518>
10001a38:	bdfffc04 	addi	r23,r23,-16
10001a3c:	da011d17 	ldw	r8,1140(sp)
10001a40:	d8c11c17 	ldw	r3,1136(sp)
10001a44:	da400404 	addi	r9,sp,16
10001a48:	e5ffef16 	blt	fp,r23,10001a08 <__alt_data_end+0xf8001a08>
10001a4c:	b021883a 	mov	r16,r22
10001a50:	b82d883a 	mov	r22,r23
10001a54:	902f883a 	mov	r23,r18
10001a58:	dc813817 	ldw	r18,1248(sp)
10001a5c:	4dc00015 	stw	r23,0(r9)
10001a60:	4d800115 	stw	r22,4(r9)
10001a64:	4591883a 	add	r8,r8,r22
10001a68:	18c00044 	addi	r3,r3,1
10001a6c:	da011d15 	stw	r8,1140(sp)
10001a70:	d8c11c15 	stw	r3,1136(sp)
10001a74:	008001c4 	movi	r2,7
10001a78:	10c3fe16 	blt	r2,r3,10002a74 <___vfprintf_internal_r+0x1284>
10001a7c:	4a400204 	addi	r9,r9,8
10001a80:	0001f306 	br	10002250 <___vfprintf_internal_r+0xa60>
10001a84:	1085883a 	add	r2,r2,r2
10001a88:	1085883a 	add	r2,r2,r2
10001a8c:	01040034 	movhi	r4,4096
10001a90:	2106a804 	addi	r4,r4,6816
10001a94:	1105883a 	add	r2,r2,r4
10001a98:	10800017 	ldw	r2,0(r2)
10001a9c:	1000683a 	jmp	r2
10001aa0:	1000217c 	xorhi	zero,r2,133
10001aa4:	1000196c 	andhi	zero,r2,101
10001aa8:	1000196c 	andhi	zero,r2,101
10001aac:	10002194 	ori	zero,r2,134
10001ab0:	1000196c 	andhi	zero,r2,101
10001ab4:	1000196c 	andhi	zero,r2,101
10001ab8:	1000196c 	andhi	zero,r2,101
10001abc:	1000196c 	andhi	zero,r2,101
10001ac0:	1000196c 	andhi	zero,r2,101
10001ac4:	1000196c 	andhi	zero,r2,101
10001ac8:	1000204c 	andi	zero,r2,129
10001acc:	100021e0 	cmpeqi	zero,r2,135
10001ad0:	1000196c 	andhi	zero,r2,101
10001ad4:	10001c14 	ori	zero,r2,112
10001ad8:	10001fb4 	orhi	zero,r2,126
10001adc:	1000196c 	andhi	zero,r2,101
10001ae0:	100021a0 	cmpeqi	zero,r2,134
10001ae4:	100021ac 	andhi	zero,r2,134
10001ae8:	100021ac 	andhi	zero,r2,134
10001aec:	100021ac 	andhi	zero,r2,134
10001af0:	100021ac 	andhi	zero,r2,134
10001af4:	100021ac 	andhi	zero,r2,134
10001af8:	100021ac 	andhi	zero,r2,134
10001afc:	100021ac 	andhi	zero,r2,134
10001b00:	100021ac 	andhi	zero,r2,134
10001b04:	100021ac 	andhi	zero,r2,134
10001b08:	1000196c 	andhi	zero,r2,101
10001b0c:	1000196c 	andhi	zero,r2,101
10001b10:	1000196c 	andhi	zero,r2,101
10001b14:	1000196c 	andhi	zero,r2,101
10001b18:	1000196c 	andhi	zero,r2,101
10001b1c:	1000196c 	andhi	zero,r2,101
10001b20:	1000196c 	andhi	zero,r2,101
10001b24:	1000196c 	andhi	zero,r2,101
10001b28:	1000196c 	andhi	zero,r2,101
10001b2c:	1000196c 	andhi	zero,r2,101
10001b30:	10001d84 	addi	zero,r2,118
10001b34:	10001e44 	addi	zero,r2,121
10001b38:	1000196c 	andhi	zero,r2,101
10001b3c:	10001e44 	addi	zero,r2,121
10001b40:	1000196c 	andhi	zero,r2,101
10001b44:	1000196c 	andhi	zero,r2,101
10001b48:	1000196c 	andhi	zero,r2,101
10001b4c:	1000196c 	andhi	zero,r2,101
10001b50:	10001ed8 	cmpnei	zero,r2,123
10001b54:	1000196c 	andhi	zero,r2,101
10001b58:	1000196c 	andhi	zero,r2,101
10001b5c:	10001ee4 	muli	zero,r2,123
10001b60:	1000196c 	andhi	zero,r2,101
10001b64:	1000196c 	andhi	zero,r2,101
10001b68:	1000196c 	andhi	zero,r2,101
10001b6c:	1000196c 	andhi	zero,r2,101
10001b70:	1000196c 	andhi	zero,r2,101
10001b74:	10001f1c 	xori	zero,r2,124
10001b78:	1000196c 	andhi	zero,r2,101
10001b7c:	1000196c 	andhi	zero,r2,101
10001b80:	10001f58 	cmpnei	zero,r2,125
10001b84:	1000196c 	andhi	zero,r2,101
10001b88:	1000196c 	andhi	zero,r2,101
10001b8c:	1000196c 	andhi	zero,r2,101
10001b90:	1000196c 	andhi	zero,r2,101
10001b94:	1000196c 	andhi	zero,r2,101
10001b98:	1000196c 	andhi	zero,r2,101
10001b9c:	1000196c 	andhi	zero,r2,101
10001ba0:	1000196c 	andhi	zero,r2,101
10001ba4:	1000196c 	andhi	zero,r2,101
10001ba8:	1000196c 	andhi	zero,r2,101
10001bac:	100021f0 	cmpltui	zero,r2,135
10001bb0:	10002224 	muli	zero,r2,136
10001bb4:	10001e44 	addi	zero,r2,121
10001bb8:	10001e44 	addi	zero,r2,121
10001bbc:	10001e44 	addi	zero,r2,121
10001bc0:	10002170 	cmpltui	zero,r2,133
10001bc4:	10002224 	muli	zero,r2,136
10001bc8:	1000196c 	andhi	zero,r2,101
10001bcc:	1000196c 	andhi	zero,r2,101
10001bd0:	10001ffc 	xorhi	zero,r2,127
10001bd4:	1000196c 	andhi	zero,r2,101
10001bd8:	10002014 	ori	zero,r2,128
10001bdc:	10002230 	cmpltui	zero,r2,136
10001be0:	10002074 	orhi	zero,r2,129
10001be4:	100020c4 	addi	zero,r2,131
10001be8:	1000196c 	andhi	zero,r2,101
10001bec:	100020d0 	cmplti	zero,r2,131
10001bf0:	1000196c 	andhi	zero,r2,101
10001bf4:	1000223c 	xorhi	zero,r2,136
10001bf8:	1000196c 	andhi	zero,r2,101
10001bfc:	1000196c 	andhi	zero,r2,101
10001c00:	10002134 	orhi	zero,r2,132
10001c04:	d9012e17 	ldw	r4,1208(sp)
10001c08:	d8812d15 	stw	r2,1204(sp)
10001c0c:	0109c83a 	sub	r4,zero,r4
10001c10:	d9012e15 	stw	r4,1208(sp)
10001c14:	84000114 	ori	r16,r16,4
10001c18:	ac800007 	ldb	r18,0(r21)
10001c1c:	003f5006 	br	10001960 <__alt_data_end+0xf8001960>
10001c20:	d9013017 	ldw	r4,1216(sp)
10001c24:	d9412917 	ldw	r5,1188(sp)
10001c28:	0004e180 	call	10004e18 <__swsetup_r>
10001c2c:	10003d1e 	bne	r2,zero,10001d24 <___vfprintf_internal_r+0x534>
10001c30:	d8c12917 	ldw	r3,1188(sp)
10001c34:	1880030b 	ldhu	r2,12(r3)
10001c38:	00c00284 	movi	r3,10
10001c3c:	1100068c 	andi	r4,r2,26
10001c40:	20ff101e 	bne	r4,r3,10001884 <__alt_data_end+0xf8001884>
10001c44:	d9012917 	ldw	r4,1188(sp)
10001c48:	20c0038b 	ldhu	r3,14(r4)
10001c4c:	193fffcc 	andi	r4,r3,65535
10001c50:	2120001c 	xori	r4,r4,32768
10001c54:	21200004 	addi	r4,r4,-32768
10001c58:	203f0a16 	blt	r4,zero,10001884 <__alt_data_end+0xf8001884>
10001c5c:	d9012917 	ldw	r4,1188(sp)
10001c60:	d9c12d17 	ldw	r7,1204(sp)
10001c64:	10bfff4c 	andi	r2,r2,65533
10001c68:	22800717 	ldw	r10,28(r4)
10001c6c:	22400917 	ldw	r9,36(r4)
10001c70:	d9013017 	ldw	r4,1216(sp)
10001c74:	02010004 	movi	r8,1024
10001c78:	d881070d 	sth	r2,1052(sp)
10001c7c:	d9410404 	addi	r5,sp,1040
10001c80:	d8800404 	addi	r2,sp,16
10001c84:	800d883a 	mov	r6,r16
10001c88:	d8c1078d 	sth	r3,1054(sp)
10001c8c:	da810b15 	stw	r10,1068(sp)
10001c90:	da410d15 	stw	r9,1076(sp)
10001c94:	d8810415 	stw	r2,1040(sp)
10001c98:	d8810815 	stw	r2,1056(sp)
10001c9c:	da010615 	stw	r8,1048(sp)
10001ca0:	da010915 	stw	r8,1060(sp)
10001ca4:	d8010a15 	stw	zero,1064(sp)
10001ca8:	00017f00 	call	100017f0 <___vfprintf_internal_r>
10001cac:	d8812c15 	stw	r2,1200(sp)
10001cb0:	10000416 	blt	r2,zero,10001cc4 <___vfprintf_internal_r+0x4d4>
10001cb4:	d9013017 	ldw	r4,1216(sp)
10001cb8:	d9410404 	addi	r5,sp,1040
10001cbc:	00067e40 	call	100067e4 <_fflush_r>
10001cc0:	1006501e 	bne	r2,zero,10003604 <___vfprintf_internal_r+0x1e14>
10001cc4:	d881070b 	ldhu	r2,1052(sp)
10001cc8:	1080100c 	andi	r2,r2,64
10001ccc:	10bfffcc 	andi	r2,r2,65535
10001cd0:	10a0001c 	xori	r2,r2,32768
10001cd4:	10a00004 	addi	r2,r2,-32768
10001cd8:	10001426 	beq	r2,zero,10001d2c <___vfprintf_internal_r+0x53c>
10001cdc:	d8c12917 	ldw	r3,1188(sp)
10001ce0:	1880030b 	ldhu	r2,12(r3)
10001ce4:	10801014 	ori	r2,r2,64
10001ce8:	1880030d 	sth	r2,12(r3)
10001cec:	00000f06 	br	10001d2c <___vfprintf_internal_r+0x53c>
10001cf0:	d8811d17 	ldw	r2,1140(sp)
10001cf4:	10000426 	beq	r2,zero,10001d08 <___vfprintf_internal_r+0x518>
10001cf8:	d9013017 	ldw	r4,1216(sp)
10001cfc:	d9412917 	ldw	r5,1188(sp)
10001d00:	d9811b04 	addi	r6,sp,1132
10001d04:	00017bc0 	call	100017bc <__sprint_r>
10001d08:	d8c12917 	ldw	r3,1188(sp)
10001d0c:	1880030b 	ldhu	r2,12(r3)
10001d10:	1080100c 	andi	r2,r2,64
10001d14:	10bfffcc 	andi	r2,r2,65535
10001d18:	10a0001c 	xori	r2,r2,32768
10001d1c:	10a00004 	addi	r2,r2,-32768
10001d20:	10000226 	beq	r2,zero,10001d2c <___vfprintf_internal_r+0x53c>
10001d24:	00bfffc4 	movi	r2,-1
10001d28:	d8812c15 	stw	r2,1200(sp)
10001d2c:	d8812c17 	ldw	r2,1200(sp)
10001d30:	dfc14617 	ldw	ra,1304(sp)
10001d34:	df014517 	ldw	fp,1300(sp)
10001d38:	ddc14417 	ldw	r23,1296(sp)
10001d3c:	dd814317 	ldw	r22,1292(sp)
10001d40:	dd414217 	ldw	r21,1288(sp)
10001d44:	dd014117 	ldw	r20,1284(sp)
10001d48:	dcc14017 	ldw	r19,1280(sp)
10001d4c:	dc813f17 	ldw	r18,1276(sp)
10001d50:	dc413e17 	ldw	r17,1272(sp)
10001d54:	dc013d17 	ldw	r16,1268(sp)
10001d58:	dec14704 	addi	sp,sp,1308
10001d5c:	f800283a 	ret
10001d60:	d9412917 	ldw	r5,1188(sp)
10001d64:	8809883a 	mov	r4,r17
10001d68:	d9811b04 	addi	r6,sp,1132
10001d6c:	00017bc0 	call	100017bc <__sprint_r>
10001d70:	103fe51e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10001d74:	da400404 	addi	r9,sp,16
10001d78:	003eea06 	br	10001924 <__alt_data_end+0xf8001924>
10001d7c:	0006aa00 	call	10006aa0 <__sinit>
10001d80:	003eb306 	br	10001850 <__alt_data_end+0xf8001850>
10001d84:	e013883a 	mov	r9,fp
10001d88:	84000414 	ori	r16,r16,16
10001d8c:	1839883a 	mov	fp,r3
10001d90:	8080080c 	andi	r2,r16,32
10001d94:	10034426 	beq	r2,zero,10002aa8 <___vfprintf_internal_r+0x12b8>
10001d98:	d8c12d17 	ldw	r3,1204(sp)
10001d9c:	18800117 	ldw	r2,4(r3)
10001da0:	1dc00017 	ldw	r23,0(r3)
10001da4:	18c00204 	addi	r3,r3,8
10001da8:	d8c12d15 	stw	r3,1204(sp)
10001dac:	102d883a 	mov	r22,r2
10001db0:	1003020e 	bge	r2,zero,100029bc <___vfprintf_internal_r+0x11cc>
10001db4:	05efc83a 	sub	r23,zero,r23
10001db8:	b804c03a 	cmpne	r2,r23,zero
10001dbc:	05adc83a 	sub	r22,zero,r22
10001dc0:	b0adc83a 	sub	r22,r22,r2
10001dc4:	00800b44 	movi	r2,45
10001dc8:	d8812585 	stb	r2,1174(sp)
10001dcc:	00c00044 	movi	r3,1
10001dd0:	bd84b03a 	or	r2,r23,r22
10001dd4:	e0000216 	blt	fp,zero,10001de0 <___vfprintf_internal_r+0x5f0>
10001dd8:	013fdfc4 	movi	r4,-129
10001ddc:	8120703a 	and	r16,r16,r4
10001de0:	1001cc1e 	bne	r2,zero,10002514 <___vfprintf_internal_r+0xd24>
10001de4:	e001cb1e 	bne	fp,zero,10002514 <___vfprintf_internal_r+0xd24>
10001de8:	18c03fcc 	andi	r3,r3,255
10001dec:	1802ca1e 	bne	r3,zero,10002918 <___vfprintf_internal_r+0x1128>
10001df0:	8080004c 	andi	r2,r16,1
10001df4:	1002c826 	beq	r2,zero,10002918 <___vfprintf_internal_r+0x1128>
10001df8:	d8c13917 	ldw	r3,1252(sp)
10001dfc:	00800c04 	movi	r2,48
10001e00:	d8810dc5 	stb	r2,1079(sp)
10001e04:	d8c12b15 	stw	r3,1196(sp)
10001e08:	dcc10dc4 	addi	r19,sp,1079
10001e0c:	d8812b17 	ldw	r2,1196(sp)
10001e10:	d8812815 	stw	r2,1184(sp)
10001e14:	1700010e 	bge	r2,fp,10001e1c <___vfprintf_internal_r+0x62c>
10001e18:	df012815 	stw	fp,1184(sp)
10001e1c:	d8812583 	ldbu	r2,1174(sp)
10001e20:	df013115 	stw	fp,1220(sp)
10001e24:	10803fcc 	andi	r2,r2,255
10001e28:	1080201c 	xori	r2,r2,128
10001e2c:	10bfe004 	addi	r2,r2,-128
10001e30:	103ed726 	beq	r2,zero,10001990 <__alt_data_end+0xf8001990>
10001e34:	d8c12817 	ldw	r3,1184(sp)
10001e38:	18c00044 	addi	r3,r3,1
10001e3c:	d8c12815 	stw	r3,1184(sp)
10001e40:	003ed306 	br	10001990 <__alt_data_end+0xf8001990>
10001e44:	8080020c 	andi	r2,r16,8
10001e48:	e013883a 	mov	r9,fp
10001e4c:	1839883a 	mov	fp,r3
10001e50:	1003a626 	beq	r2,zero,10002cec <___vfprintf_internal_r+0x14fc>
10001e54:	d9012d17 	ldw	r4,1204(sp)
10001e58:	25800017 	ldw	r22,0(r4)
10001e5c:	25000117 	ldw	r20,4(r4)
10001e60:	21000204 	addi	r4,r4,8
10001e64:	d9012d15 	stw	r4,1204(sp)
10001e68:	dd813315 	stw	r22,1228(sp)
10001e6c:	dd013415 	stw	r20,1232(sp)
10001e70:	b009883a 	mov	r4,r22
10001e74:	a00b883a 	mov	r5,r20
10001e78:	da413c15 	stw	r9,1264(sp)
10001e7c:	0009bf80 	call	10009bf8 <__isinfd>
10001e80:	da413c17 	ldw	r9,1264(sp)
10001e84:	b009883a 	mov	r4,r22
10001e88:	a00b883a 	mov	r5,r20
10001e8c:	10041d26 	beq	r2,zero,10002f04 <___vfprintf_internal_r+0x1714>
10001e90:	000d883a 	mov	r6,zero
10001e94:	000f883a 	mov	r7,zero
10001e98:	000f0580 	call	1000f058 <__ltdf2>
10001e9c:	da413c17 	ldw	r9,1264(sp)
10001ea0:	1004da16 	blt	r2,zero,1000320c <___vfprintf_internal_r+0x1a1c>
10001ea4:	d8812583 	ldbu	r2,1174(sp)
10001ea8:	00c011c4 	movi	r3,71
10001eac:	1c83d116 	blt	r3,r18,10002df4 <___vfprintf_internal_r+0x1604>
10001eb0:	04c40074 	movhi	r19,4097
10001eb4:	9cc91604 	addi	r19,r19,9304
10001eb8:	00c000c4 	movi	r3,3
10001ebc:	d8c12815 	stw	r3,1184(sp)
10001ec0:	00ffdfc4 	movi	r3,-129
10001ec4:	80e0703a 	and	r16,r16,r3
10001ec8:	d8c12817 	ldw	r3,1184(sp)
10001ecc:	d8013115 	stw	zero,1220(sp)
10001ed0:	d8c12b15 	stw	r3,1196(sp)
10001ed4:	003fd306 	br	10001e24 <__alt_data_end+0xf8001e24>
10001ed8:	84000214 	ori	r16,r16,8
10001edc:	ac800007 	ldb	r18,0(r21)
10001ee0:	003e9f06 	br	10001960 <__alt_data_end+0xf8001960>
10001ee4:	e013883a 	mov	r9,fp
10001ee8:	84000414 	ori	r16,r16,16
10001eec:	1839883a 	mov	fp,r3
10001ef0:	8080080c 	andi	r2,r16,32
10001ef4:	10031d26 	beq	r2,zero,10002b6c <___vfprintf_internal_r+0x137c>
10001ef8:	d8812d17 	ldw	r2,1204(sp)
10001efc:	0007883a 	mov	r3,zero
10001f00:	15c00017 	ldw	r23,0(r2)
10001f04:	15800117 	ldw	r22,4(r2)
10001f08:	10800204 	addi	r2,r2,8
10001f0c:	d8812d15 	stw	r2,1204(sp)
10001f10:	d8012585 	stb	zero,1174(sp)
10001f14:	bd84b03a 	or	r2,r23,r22
10001f18:	003fae06 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10001f1c:	e013883a 	mov	r9,fp
10001f20:	84000414 	ori	r16,r16,16
10001f24:	1839883a 	mov	fp,r3
10001f28:	8080080c 	andi	r2,r16,32
10001f2c:	1002e726 	beq	r2,zero,10002acc <___vfprintf_internal_r+0x12dc>
10001f30:	d8c12d17 	ldw	r3,1204(sp)
10001f34:	d9012d17 	ldw	r4,1204(sp)
10001f38:	1dc00017 	ldw	r23,0(r3)
10001f3c:	1d800117 	ldw	r22,4(r3)
10001f40:	21000204 	addi	r4,r4,8
10001f44:	00c00044 	movi	r3,1
10001f48:	d9012d15 	stw	r4,1204(sp)
10001f4c:	bd84b03a 	or	r2,r23,r22
10001f50:	d8012585 	stb	zero,1174(sp)
10001f54:	003f9f06 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10001f58:	e013883a 	mov	r9,fp
10001f5c:	1839883a 	mov	fp,r3
10001f60:	00c40074 	movhi	r3,4097
10001f64:	18c91a04 	addi	r3,r3,9320
10001f68:	d8c13615 	stw	r3,1240(sp)
10001f6c:	8080080c 	andi	r2,r16,32
10001f70:	10007726 	beq	r2,zero,10002150 <___vfprintf_internal_r+0x960>
10001f74:	d9012d17 	ldw	r4,1204(sp)
10001f78:	25c00017 	ldw	r23,0(r4)
10001f7c:	25800117 	ldw	r22,4(r4)
10001f80:	21000204 	addi	r4,r4,8
10001f84:	d9012d15 	stw	r4,1204(sp)
10001f88:	8080004c 	andi	r2,r16,1
10001f8c:	1002c226 	beq	r2,zero,10002a98 <___vfprintf_internal_r+0x12a8>
10001f90:	bd84b03a 	or	r2,r23,r22
10001f94:	10035d26 	beq	r2,zero,10002d0c <___vfprintf_internal_r+0x151c>
10001f98:	00c00c04 	movi	r3,48
10001f9c:	d8c12505 	stb	r3,1172(sp)
10001fa0:	dc812545 	stb	r18,1173(sp)
10001fa4:	84000094 	ori	r16,r16,2
10001fa8:	00c00084 	movi	r3,2
10001fac:	d8012585 	stb	zero,1174(sp)
10001fb0:	003f8806 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10001fb4:	ac800007 	ldb	r18,0(r21)
10001fb8:	00c00a84 	movi	r3,42
10001fbc:	adc00044 	addi	r23,r21,1
10001fc0:	90c57526 	beq	r18,r3,10003598 <___vfprintf_internal_r+0x1da8>
10001fc4:	95bff404 	addi	r22,r18,-48
10001fc8:	0009883a 	mov	r4,zero
10001fcc:	9d84ff36 	bltu	r19,r22,100033cc <___vfprintf_internal_r+0x1bdc>
10001fd0:	01400284 	movi	r5,10
10001fd4:	000f5540 	call	1000f554 <__mulsi3>
10001fd8:	bc800007 	ldb	r18,0(r23)
10001fdc:	b089883a 	add	r4,r22,r2
10001fe0:	bdc00044 	addi	r23,r23,1
10001fe4:	95bff404 	addi	r22,r18,-48
10001fe8:	9dbff92e 	bgeu	r19,r22,10001fd0 <__alt_data_end+0xf8001fd0>
10001fec:	2007883a 	mov	r3,r4
10001ff0:	20044316 	blt	r4,zero,10003100 <___vfprintf_internal_r+0x1910>
10001ff4:	b82b883a 	mov	r21,r23
10001ff8:	003e5a06 	br	10001964 <__alt_data_end+0xf8001964>
10001ffc:	ac800007 	ldb	r18,0(r21)
10002000:	01001b04 	movi	r4,108
10002004:	a805883a 	mov	r2,r21
10002008:	91045526 	beq	r18,r4,10003160 <___vfprintf_internal_r+0x1970>
1000200c:	84000414 	ori	r16,r16,16
10002010:	003e5306 	br	10001960 <__alt_data_end+0xf8001960>
10002014:	8080080c 	andi	r2,r16,32
10002018:	e013883a 	mov	r9,fp
1000201c:	10034026 	beq	r2,zero,10002d20 <___vfprintf_internal_r+0x1530>
10002020:	d9012d17 	ldw	r4,1204(sp)
10002024:	20800017 	ldw	r2,0(r4)
10002028:	d9012c17 	ldw	r4,1200(sp)
1000202c:	2007d7fa 	srai	r3,r4,31
10002030:	d9012d17 	ldw	r4,1204(sp)
10002034:	10c00115 	stw	r3,4(r2)
10002038:	21000104 	addi	r4,r4,4
1000203c:	d9012d15 	stw	r4,1204(sp)
10002040:	d9012c17 	ldw	r4,1200(sp)
10002044:	11000015 	stw	r4,0(r2)
10002048:	003e1f06 	br	100018c8 <__alt_data_end+0xf80018c8>
1000204c:	d9012d17 	ldw	r4,1204(sp)
10002050:	21000017 	ldw	r4,0(r4)
10002054:	d9012e15 	stw	r4,1208(sp)
10002058:	d9012d17 	ldw	r4,1204(sp)
1000205c:	20800104 	addi	r2,r4,4
10002060:	d9012e17 	ldw	r4,1208(sp)
10002064:	203ee716 	blt	r4,zero,10001c04 <__alt_data_end+0xf8001c04>
10002068:	d8812d15 	stw	r2,1204(sp)
1000206c:	ac800007 	ldb	r18,0(r21)
10002070:	003e3b06 	br	10001960 <__alt_data_end+0xf8001960>
10002074:	e013883a 	mov	r9,fp
10002078:	1839883a 	mov	fp,r3
1000207c:	d8c12d17 	ldw	r3,1204(sp)
10002080:	00800c04 	movi	r2,48
10002084:	01040074 	movhi	r4,4097
10002088:	21091f04 	addi	r4,r4,9340
1000208c:	1dc00017 	ldw	r23,0(r3)
10002090:	18c00104 	addi	r3,r3,4
10002094:	d8812505 	stb	r2,1172(sp)
10002098:	00801e04 	movi	r2,120
1000209c:	d8812545 	stb	r2,1173(sp)
100020a0:	d8c12d15 	stw	r3,1204(sp)
100020a4:	002d883a 	mov	r22,zero
100020a8:	84000094 	ori	r16,r16,2
100020ac:	d9013615 	stw	r4,1240(sp)
100020b0:	00c00084 	movi	r3,2
100020b4:	04801e04 	movi	r18,120
100020b8:	b805883a 	mov	r2,r23
100020bc:	d8012585 	stb	zero,1174(sp)
100020c0:	003f4406 	br	10001dd4 <__alt_data_end+0xf8001dd4>
100020c4:	84000814 	ori	r16,r16,32
100020c8:	ac800007 	ldb	r18,0(r21)
100020cc:	003e2406 	br	10001960 <__alt_data_end+0xf8001960>
100020d0:	d8812d17 	ldw	r2,1204(sp)
100020d4:	d8012585 	stb	zero,1174(sp)
100020d8:	e013883a 	mov	r9,fp
100020dc:	14c00017 	ldw	r19,0(r2)
100020e0:	1839883a 	mov	fp,r3
100020e4:	15c00104 	addi	r23,r2,4
100020e8:	98045526 	beq	r19,zero,10003240 <___vfprintf_internal_r+0x1a50>
100020ec:	9809883a 	mov	r4,r19
100020f0:	18043116 	blt	r3,zero,100031b8 <___vfprintf_internal_r+0x19c8>
100020f4:	000b883a 	mov	r5,zero
100020f8:	180d883a 	mov	r6,r3
100020fc:	da413c15 	stw	r9,1264(sp)
10002100:	0007d580 	call	10007d58 <memchr>
10002104:	da413c17 	ldw	r9,1264(sp)
10002108:	10047a26 	beq	r2,zero,100032f4 <___vfprintf_internal_r+0x1b04>
1000210c:	14c5c83a 	sub	r2,r2,r19
10002110:	d8812b15 	stw	r2,1196(sp)
10002114:	e083d40e 	bge	fp,r2,10003068 <___vfprintf_internal_r+0x1878>
10002118:	df012815 	stw	fp,1184(sp)
1000211c:	e004e416 	blt	fp,zero,100034b0 <___vfprintf_internal_r+0x1cc0>
10002120:	d8812583 	ldbu	r2,1174(sp)
10002124:	df012b15 	stw	fp,1196(sp)
10002128:	ddc12d15 	stw	r23,1204(sp)
1000212c:	d8013115 	stw	zero,1220(sp)
10002130:	003f3c06 	br	10001e24 <__alt_data_end+0xf8001e24>
10002134:	00840074 	movhi	r2,4097
10002138:	10891f04 	addi	r2,r2,9340
1000213c:	d8813615 	stw	r2,1240(sp)
10002140:	8080080c 	andi	r2,r16,32
10002144:	e013883a 	mov	r9,fp
10002148:	1839883a 	mov	fp,r3
1000214c:	103f891e 	bne	r2,zero,10001f74 <__alt_data_end+0xf8001f74>
10002150:	8080040c 	andi	r2,r16,16
10002154:	1002c326 	beq	r2,zero,10002c64 <___vfprintf_internal_r+0x1474>
10002158:	d8812d17 	ldw	r2,1204(sp)
1000215c:	002d883a 	mov	r22,zero
10002160:	15c00017 	ldw	r23,0(r2)
10002164:	10800104 	addi	r2,r2,4
10002168:	d8812d15 	stw	r2,1204(sp)
1000216c:	003f8606 	br	10001f88 <__alt_data_end+0xf8001f88>
10002170:	84001014 	ori	r16,r16,64
10002174:	ac800007 	ldb	r18,0(r21)
10002178:	003df906 	br	10001960 <__alt_data_end+0xf8001960>
1000217c:	d8812587 	ldb	r2,1174(sp)
10002180:	1002e51e 	bne	r2,zero,10002d18 <___vfprintf_internal_r+0x1528>
10002184:	00800804 	movi	r2,32
10002188:	d8812585 	stb	r2,1174(sp)
1000218c:	ac800007 	ldb	r18,0(r21)
10002190:	003df306 	br	10001960 <__alt_data_end+0xf8001960>
10002194:	84000054 	ori	r16,r16,1
10002198:	ac800007 	ldb	r18,0(r21)
1000219c:	003df006 	br	10001960 <__alt_data_end+0xf8001960>
100021a0:	84002014 	ori	r16,r16,128
100021a4:	ac800007 	ldb	r18,0(r21)
100021a8:	003ded06 	br	10001960 <__alt_data_end+0xf8001960>
100021ac:	0009883a 	mov	r4,zero
100021b0:	95bff404 	addi	r22,r18,-48
100021b4:	182f883a 	mov	r23,r3
100021b8:	01400284 	movi	r5,10
100021bc:	000f5540 	call	1000f554 <__mulsi3>
100021c0:	ac800007 	ldb	r18,0(r21)
100021c4:	1589883a 	add	r4,r2,r22
100021c8:	ad400044 	addi	r21,r21,1
100021cc:	95bff404 	addi	r22,r18,-48
100021d0:	9dbff92e 	bgeu	r19,r22,100021b8 <__alt_data_end+0xf80021b8>
100021d4:	b807883a 	mov	r3,r23
100021d8:	d9012e15 	stw	r4,1208(sp)
100021dc:	003de106 	br	10001964 <__alt_data_end+0xf8001964>
100021e0:	00800ac4 	movi	r2,43
100021e4:	d8812585 	stb	r2,1174(sp)
100021e8:	ac800007 	ldb	r18,0(r21)
100021ec:	003ddc06 	br	10001960 <__alt_data_end+0xf8001960>
100021f0:	d8c12d17 	ldw	r3,1204(sp)
100021f4:	d9012d17 	ldw	r4,1204(sp)
100021f8:	e013883a 	mov	r9,fp
100021fc:	18800017 	ldw	r2,0(r3)
10002200:	21000104 	addi	r4,r4,4
10002204:	00c00044 	movi	r3,1
10002208:	d8c12815 	stw	r3,1184(sp)
1000220c:	d8012585 	stb	zero,1174(sp)
10002210:	d8810405 	stb	r2,1040(sp)
10002214:	d9012d15 	stw	r4,1204(sp)
10002218:	d8c12b15 	stw	r3,1196(sp)
1000221c:	dcc10404 	addi	r19,sp,1040
10002220:	003dda06 	br	1000198c <__alt_data_end+0xf800198c>
10002224:	e013883a 	mov	r9,fp
10002228:	1839883a 	mov	fp,r3
1000222c:	003ed806 	br	10001d90 <__alt_data_end+0xf8001d90>
10002230:	e013883a 	mov	r9,fp
10002234:	1839883a 	mov	fp,r3
10002238:	003f2d06 	br	10001ef0 <__alt_data_end+0xf8001ef0>
1000223c:	e013883a 	mov	r9,fp
10002240:	1839883a 	mov	fp,r3
10002244:	003f3806 	br	10001f28 <__alt_data_end+0xf8001f28>
10002248:	da011d17 	ldw	r8,1140(sp)
1000224c:	d8c11c17 	ldw	r3,1136(sp)
10002250:	d8812587 	ldb	r2,1174(sp)
10002254:	10000b26 	beq	r2,zero,10002284 <___vfprintf_internal_r+0xa94>
10002258:	d8812584 	addi	r2,sp,1174
1000225c:	48800015 	stw	r2,0(r9)
10002260:	00800044 	movi	r2,1
10002264:	48800115 	stw	r2,4(r9)
10002268:	4091883a 	add	r8,r8,r2
1000226c:	1887883a 	add	r3,r3,r2
10002270:	da011d15 	stw	r8,1140(sp)
10002274:	d8c11c15 	stw	r3,1136(sp)
10002278:	008001c4 	movi	r2,7
1000227c:	10c18e16 	blt	r2,r3,100028b8 <___vfprintf_internal_r+0x10c8>
10002280:	4a400204 	addi	r9,r9,8
10002284:	d9012a17 	ldw	r4,1192(sp)
10002288:	20000b26 	beq	r4,zero,100022b8 <___vfprintf_internal_r+0xac8>
1000228c:	d8812504 	addi	r2,sp,1172
10002290:	48800015 	stw	r2,0(r9)
10002294:	00800084 	movi	r2,2
10002298:	48800115 	stw	r2,4(r9)
1000229c:	4091883a 	add	r8,r8,r2
100022a0:	18c00044 	addi	r3,r3,1
100022a4:	da011d15 	stw	r8,1140(sp)
100022a8:	d8c11c15 	stw	r3,1136(sp)
100022ac:	008001c4 	movi	r2,7
100022b0:	10c17816 	blt	r2,r3,10002894 <___vfprintf_internal_r+0x10a4>
100022b4:	4a400204 	addi	r9,r9,8
100022b8:	d9012f17 	ldw	r4,1212(sp)
100022bc:	00802004 	movi	r2,128
100022c0:	2080fc26 	beq	r4,r2,100026b4 <___vfprintf_internal_r+0xec4>
100022c4:	d8813117 	ldw	r2,1220(sp)
100022c8:	d9012b17 	ldw	r4,1196(sp)
100022cc:	112fc83a 	sub	r23,r2,r4
100022d0:	05c02a0e 	bge	zero,r23,1000237c <___vfprintf_internal_r+0xb8c>
100022d4:	07000404 	movi	fp,16
100022d8:	05040074 	movhi	r20,4097
100022dc:	a5092a84 	addi	r20,r20,9386
100022e0:	e5c01d0e 	bge	fp,r23,10002358 <___vfprintf_internal_r+0xb68>
100022e4:	dc812a15 	stw	r18,1192(sp)
100022e8:	058001c4 	movi	r22,7
100022ec:	a025883a 	mov	r18,r20
100022f0:	8029883a 	mov	r20,r16
100022f4:	dc012917 	ldw	r16,1188(sp)
100022f8:	00000306 	br	10002308 <___vfprintf_internal_r+0xb18>
100022fc:	bdfffc04 	addi	r23,r23,-16
10002300:	4a400204 	addi	r9,r9,8
10002304:	e5c0110e 	bge	fp,r23,1000234c <___vfprintf_internal_r+0xb5c>
10002308:	4c800015 	stw	r18,0(r9)
1000230c:	4f000115 	stw	fp,4(r9)
10002310:	42000404 	addi	r8,r8,16
10002314:	18c00044 	addi	r3,r3,1
10002318:	da011d15 	stw	r8,1140(sp)
1000231c:	d8c11c15 	stw	r3,1136(sp)
10002320:	b0fff60e 	bge	r22,r3,100022fc <__alt_data_end+0xf80022fc>
10002324:	8809883a 	mov	r4,r17
10002328:	800b883a 	mov	r5,r16
1000232c:	d9811b04 	addi	r6,sp,1132
10002330:	00017bc0 	call	100017bc <__sprint_r>
10002334:	103e741e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002338:	bdfffc04 	addi	r23,r23,-16
1000233c:	da011d17 	ldw	r8,1140(sp)
10002340:	d8c11c17 	ldw	r3,1136(sp)
10002344:	da400404 	addi	r9,sp,16
10002348:	e5ffef16 	blt	fp,r23,10002308 <__alt_data_end+0xf8002308>
1000234c:	a021883a 	mov	r16,r20
10002350:	9029883a 	mov	r20,r18
10002354:	dc812a17 	ldw	r18,1192(sp)
10002358:	4d000015 	stw	r20,0(r9)
1000235c:	4dc00115 	stw	r23,4(r9)
10002360:	45d1883a 	add	r8,r8,r23
10002364:	18c00044 	addi	r3,r3,1
10002368:	da011d15 	stw	r8,1140(sp)
1000236c:	d8c11c15 	stw	r3,1136(sp)
10002370:	008001c4 	movi	r2,7
10002374:	10c13e16 	blt	r2,r3,10002870 <___vfprintf_internal_r+0x1080>
10002378:	4a400204 	addi	r9,r9,8
1000237c:	8080400c 	andi	r2,r16,256
10002380:	1000831e 	bne	r2,zero,10002590 <___vfprintf_internal_r+0xda0>
10002384:	d8812b17 	ldw	r2,1196(sp)
10002388:	4cc00015 	stw	r19,0(r9)
1000238c:	48800115 	stw	r2,4(r9)
10002390:	4091883a 	add	r8,r8,r2
10002394:	18c00044 	addi	r3,r3,1
10002398:	da011d15 	stw	r8,1140(sp)
1000239c:	d8c11c15 	stw	r3,1136(sp)
100023a0:	008001c4 	movi	r2,7
100023a4:	10c05316 	blt	r2,r3,100024f4 <___vfprintf_internal_r+0xd04>
100023a8:	4a400204 	addi	r9,r9,8
100023ac:	8400010c 	andi	r16,r16,4
100023b0:	80002e26 	beq	r16,zero,1000246c <___vfprintf_internal_r+0xc7c>
100023b4:	d8812e17 	ldw	r2,1208(sp)
100023b8:	d8c12817 	ldw	r3,1184(sp)
100023bc:	10e1c83a 	sub	r16,r2,r3
100023c0:	04002a0e 	bge	zero,r16,1000246c <___vfprintf_internal_r+0xc7c>
100023c4:	04800404 	movi	r18,16
100023c8:	d8c11c17 	ldw	r3,1136(sp)
100023cc:	05c40074 	movhi	r23,4097
100023d0:	bdc92684 	addi	r23,r23,9370
100023d4:	9400170e 	bge	r18,r16,10002434 <___vfprintf_internal_r+0xc44>
100023d8:	04c001c4 	movi	r19,7
100023dc:	dd012917 	ldw	r20,1188(sp)
100023e0:	00000306 	br	100023f0 <___vfprintf_internal_r+0xc00>
100023e4:	843ffc04 	addi	r16,r16,-16
100023e8:	4a400204 	addi	r9,r9,8
100023ec:	9400110e 	bge	r18,r16,10002434 <___vfprintf_internal_r+0xc44>
100023f0:	4dc00015 	stw	r23,0(r9)
100023f4:	4c800115 	stw	r18,4(r9)
100023f8:	42000404 	addi	r8,r8,16
100023fc:	18c00044 	addi	r3,r3,1
10002400:	da011d15 	stw	r8,1140(sp)
10002404:	d8c11c15 	stw	r3,1136(sp)
10002408:	98fff60e 	bge	r19,r3,100023e4 <__alt_data_end+0xf80023e4>
1000240c:	8809883a 	mov	r4,r17
10002410:	a00b883a 	mov	r5,r20
10002414:	d9811b04 	addi	r6,sp,1132
10002418:	00017bc0 	call	100017bc <__sprint_r>
1000241c:	103e3a1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002420:	843ffc04 	addi	r16,r16,-16
10002424:	da011d17 	ldw	r8,1140(sp)
10002428:	d8c11c17 	ldw	r3,1136(sp)
1000242c:	da400404 	addi	r9,sp,16
10002430:	943fef16 	blt	r18,r16,100023f0 <__alt_data_end+0xf80023f0>
10002434:	4dc00015 	stw	r23,0(r9)
10002438:	4c000115 	stw	r16,4(r9)
1000243c:	8211883a 	add	r8,r16,r8
10002440:	18c00044 	addi	r3,r3,1
10002444:	da011d15 	stw	r8,1140(sp)
10002448:	d8c11c15 	stw	r3,1136(sp)
1000244c:	008001c4 	movi	r2,7
10002450:	10c0060e 	bge	r2,r3,1000246c <___vfprintf_internal_r+0xc7c>
10002454:	d9412917 	ldw	r5,1188(sp)
10002458:	8809883a 	mov	r4,r17
1000245c:	d9811b04 	addi	r6,sp,1132
10002460:	00017bc0 	call	100017bc <__sprint_r>
10002464:	103e281e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002468:	da011d17 	ldw	r8,1140(sp)
1000246c:	dd012817 	ldw	r20,1184(sp)
10002470:	d9012e17 	ldw	r4,1208(sp)
10002474:	a100010e 	bge	r20,r4,1000247c <___vfprintf_internal_r+0xc8c>
10002478:	2029883a 	mov	r20,r4
1000247c:	d8812c17 	ldw	r2,1200(sp)
10002480:	1505883a 	add	r2,r2,r20
10002484:	d8812c15 	stw	r2,1200(sp)
10002488:	4000b91e 	bne	r8,zero,10002770 <___vfprintf_internal_r+0xf80>
1000248c:	d8011c15 	stw	zero,1136(sp)
10002490:	a8800007 	ldb	r2,0(r21)
10002494:	da400404 	addi	r9,sp,16
10002498:	103d0d1e 	bne	r2,zero,100018d0 <__alt_data_end+0xf80018d0>
1000249c:	a825883a 	mov	r18,r21
100024a0:	003d2306 	br	10001930 <__alt_data_end+0xf8001930>
100024a4:	d9412917 	ldw	r5,1188(sp)
100024a8:	8809883a 	mov	r4,r17
100024ac:	d9811b04 	addi	r6,sp,1132
100024b0:	00017bc0 	call	100017bc <__sprint_r>
100024b4:	103e141e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100024b8:	da011d17 	ldw	r8,1140(sp)
100024bc:	da400404 	addi	r9,sp,16
100024c0:	8080004c 	andi	r2,r16,1
100024c4:	103fb926 	beq	r2,zero,100023ac <__alt_data_end+0xf80023ac>
100024c8:	d8c11c17 	ldw	r3,1136(sp)
100024cc:	d9013717 	ldw	r4,1244(sp)
100024d0:	00800044 	movi	r2,1
100024d4:	48800115 	stw	r2,4(r9)
100024d8:	49000015 	stw	r4,0(r9)
100024dc:	4091883a 	add	r8,r8,r2
100024e0:	1887883a 	add	r3,r3,r2
100024e4:	da011d15 	stw	r8,1140(sp)
100024e8:	d8c11c15 	stw	r3,1136(sp)
100024ec:	008001c4 	movi	r2,7
100024f0:	10ffad0e 	bge	r2,r3,100023a8 <__alt_data_end+0xf80023a8>
100024f4:	d9412917 	ldw	r5,1188(sp)
100024f8:	8809883a 	mov	r4,r17
100024fc:	d9811b04 	addi	r6,sp,1132
10002500:	00017bc0 	call	100017bc <__sprint_r>
10002504:	103e001e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002508:	da400404 	addi	r9,sp,16
1000250c:	da011d17 	ldw	r8,1140(sp)
10002510:	003fa606 	br	100023ac <__alt_data_end+0xf80023ac>
10002514:	18803fcc 	andi	r2,r3,255
10002518:	00c00044 	movi	r3,1
1000251c:	10c10126 	beq	r2,r3,10002924 <___vfprintf_internal_r+0x1134>
10002520:	00c00084 	movi	r3,2
10002524:	10c0ed26 	beq	r2,r3,100028dc <___vfprintf_internal_r+0x10ec>
10002528:	d8c10dc4 	addi	r3,sp,1079
1000252c:	b808d0fa 	srli	r4,r23,3
10002530:	b00a977a 	slli	r5,r22,29
10002534:	b02cd0fa 	srli	r22,r22,3
10002538:	bdc001cc 	andi	r23,r23,7
1000253c:	b8800c04 	addi	r2,r23,48
10002540:	292eb03a 	or	r23,r5,r4
10002544:	18800005 	stb	r2,0(r3)
10002548:	bd88b03a 	or	r4,r23,r22
1000254c:	1827883a 	mov	r19,r3
10002550:	18ffffc4 	addi	r3,r3,-1
10002554:	203ff51e 	bne	r4,zero,1000252c <__alt_data_end+0xf800252c>
10002558:	8100004c 	andi	r4,r16,1
1000255c:	980b883a 	mov	r5,r19
10002560:	20000726 	beq	r4,zero,10002580 <___vfprintf_internal_r+0xd90>
10002564:	10803fcc 	andi	r2,r2,255
10002568:	1080201c 	xori	r2,r2,128
1000256c:	10bfe004 	addi	r2,r2,-128
10002570:	01000c04 	movi	r4,48
10002574:	11000226 	beq	r2,r4,10002580 <___vfprintf_internal_r+0xd90>
10002578:	1827883a 	mov	r19,r3
1000257c:	293fffc5 	stb	r4,-1(r5)
10002580:	d8812717 	ldw	r2,1180(sp)
10002584:	14c5c83a 	sub	r2,r2,r19
10002588:	d8812b15 	stw	r2,1196(sp)
1000258c:	003e1f06 	br	10001e0c <__alt_data_end+0xf8001e0c>
10002590:	00801944 	movi	r2,101
10002594:	14807c0e 	bge	r2,r18,10002788 <___vfprintf_internal_r+0xf98>
10002598:	d9013317 	ldw	r4,1228(sp)
1000259c:	d9413417 	ldw	r5,1232(sp)
100025a0:	000d883a 	mov	r6,zero
100025a4:	000f883a 	mov	r7,zero
100025a8:	d8c13b15 	stw	r3,1260(sp)
100025ac:	da013a15 	stw	r8,1256(sp)
100025b0:	da413c15 	stw	r9,1264(sp)
100025b4:	000ef340 	call	1000ef34 <__nedf2>
100025b8:	d8c13b17 	ldw	r3,1260(sp)
100025bc:	da013a17 	ldw	r8,1256(sp)
100025c0:	da413c17 	ldw	r9,1264(sp)
100025c4:	1001001e 	bne	r2,zero,100029c8 <___vfprintf_internal_r+0x11d8>
100025c8:	00840074 	movhi	r2,4097
100025cc:	10892604 	addi	r2,r2,9368
100025d0:	48800015 	stw	r2,0(r9)
100025d4:	00800044 	movi	r2,1
100025d8:	48800115 	stw	r2,4(r9)
100025dc:	4091883a 	add	r8,r8,r2
100025e0:	1887883a 	add	r3,r3,r2
100025e4:	da011d15 	stw	r8,1140(sp)
100025e8:	d8c11c15 	stw	r3,1136(sp)
100025ec:	008001c4 	movi	r2,7
100025f0:	10c20316 	blt	r2,r3,10002e00 <___vfprintf_internal_r+0x1610>
100025f4:	4a400204 	addi	r9,r9,8
100025f8:	d8812417 	ldw	r2,1168(sp)
100025fc:	d8c13217 	ldw	r3,1224(sp)
10002600:	10c00216 	blt	r2,r3,1000260c <___vfprintf_internal_r+0xe1c>
10002604:	8080004c 	andi	r2,r16,1
10002608:	103f6826 	beq	r2,zero,100023ac <__alt_data_end+0xf80023ac>
1000260c:	d8c11c17 	ldw	r3,1136(sp)
10002610:	d9013717 	ldw	r4,1244(sp)
10002614:	00800044 	movi	r2,1
10002618:	48800115 	stw	r2,4(r9)
1000261c:	49000015 	stw	r4,0(r9)
10002620:	4091883a 	add	r8,r8,r2
10002624:	1887883a 	add	r3,r3,r2
10002628:	da011d15 	stw	r8,1140(sp)
1000262c:	d8c11c15 	stw	r3,1136(sp)
10002630:	008001c4 	movi	r2,7
10002634:	10c2ce16 	blt	r2,r3,10003170 <___vfprintf_internal_r+0x1980>
10002638:	4a400204 	addi	r9,r9,8
1000263c:	d8813217 	ldw	r2,1224(sp)
10002640:	14bfffc4 	addi	r18,r2,-1
10002644:	04bf590e 	bge	zero,r18,100023ac <__alt_data_end+0xf80023ac>
10002648:	04c00404 	movi	r19,16
1000264c:	d8c11c17 	ldw	r3,1136(sp)
10002650:	05040074 	movhi	r20,4097
10002654:	a5092a84 	addi	r20,r20,9386
10002658:	9c818a0e 	bge	r19,r18,10002c84 <___vfprintf_internal_r+0x1494>
1000265c:	058001c4 	movi	r22,7
10002660:	ddc12917 	ldw	r23,1188(sp)
10002664:	00000306 	br	10002674 <___vfprintf_internal_r+0xe84>
10002668:	4a400204 	addi	r9,r9,8
1000266c:	94bffc04 	addi	r18,r18,-16
10002670:	9c81840e 	bge	r19,r18,10002c84 <___vfprintf_internal_r+0x1494>
10002674:	4d000015 	stw	r20,0(r9)
10002678:	4cc00115 	stw	r19,4(r9)
1000267c:	42000404 	addi	r8,r8,16
10002680:	18c00044 	addi	r3,r3,1
10002684:	da011d15 	stw	r8,1140(sp)
10002688:	d8c11c15 	stw	r3,1136(sp)
1000268c:	b0fff60e 	bge	r22,r3,10002668 <__alt_data_end+0xf8002668>
10002690:	8809883a 	mov	r4,r17
10002694:	b80b883a 	mov	r5,r23
10002698:	d9811b04 	addi	r6,sp,1132
1000269c:	00017bc0 	call	100017bc <__sprint_r>
100026a0:	103d991e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100026a4:	da011d17 	ldw	r8,1140(sp)
100026a8:	d8c11c17 	ldw	r3,1136(sp)
100026ac:	da400404 	addi	r9,sp,16
100026b0:	003fee06 	br	1000266c <__alt_data_end+0xf800266c>
100026b4:	d8812e17 	ldw	r2,1208(sp)
100026b8:	d9012817 	ldw	r4,1184(sp)
100026bc:	112fc83a 	sub	r23,r2,r4
100026c0:	05ff000e 	bge	zero,r23,100022c4 <__alt_data_end+0xf80022c4>
100026c4:	07000404 	movi	fp,16
100026c8:	05040074 	movhi	r20,4097
100026cc:	a5092a84 	addi	r20,r20,9386
100026d0:	e5c01d0e 	bge	fp,r23,10002748 <___vfprintf_internal_r+0xf58>
100026d4:	dc812a15 	stw	r18,1192(sp)
100026d8:	058001c4 	movi	r22,7
100026dc:	a025883a 	mov	r18,r20
100026e0:	8029883a 	mov	r20,r16
100026e4:	dc012917 	ldw	r16,1188(sp)
100026e8:	00000306 	br	100026f8 <___vfprintf_internal_r+0xf08>
100026ec:	bdfffc04 	addi	r23,r23,-16
100026f0:	4a400204 	addi	r9,r9,8
100026f4:	e5c0110e 	bge	fp,r23,1000273c <___vfprintf_internal_r+0xf4c>
100026f8:	4c800015 	stw	r18,0(r9)
100026fc:	4f000115 	stw	fp,4(r9)
10002700:	42000404 	addi	r8,r8,16
10002704:	18c00044 	addi	r3,r3,1
10002708:	da011d15 	stw	r8,1140(sp)
1000270c:	d8c11c15 	stw	r3,1136(sp)
10002710:	b0fff60e 	bge	r22,r3,100026ec <__alt_data_end+0xf80026ec>
10002714:	8809883a 	mov	r4,r17
10002718:	800b883a 	mov	r5,r16
1000271c:	d9811b04 	addi	r6,sp,1132
10002720:	00017bc0 	call	100017bc <__sprint_r>
10002724:	103d781e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002728:	bdfffc04 	addi	r23,r23,-16
1000272c:	da011d17 	ldw	r8,1140(sp)
10002730:	d8c11c17 	ldw	r3,1136(sp)
10002734:	da400404 	addi	r9,sp,16
10002738:	e5ffef16 	blt	fp,r23,100026f8 <__alt_data_end+0xf80026f8>
1000273c:	a021883a 	mov	r16,r20
10002740:	9029883a 	mov	r20,r18
10002744:	dc812a17 	ldw	r18,1192(sp)
10002748:	4d000015 	stw	r20,0(r9)
1000274c:	4dc00115 	stw	r23,4(r9)
10002750:	45d1883a 	add	r8,r8,r23
10002754:	18c00044 	addi	r3,r3,1
10002758:	da011d15 	stw	r8,1140(sp)
1000275c:	d8c11c15 	stw	r3,1136(sp)
10002760:	008001c4 	movi	r2,7
10002764:	10c13616 	blt	r2,r3,10002c40 <___vfprintf_internal_r+0x1450>
10002768:	4a400204 	addi	r9,r9,8
1000276c:	003ed506 	br	100022c4 <__alt_data_end+0xf80022c4>
10002770:	d9412917 	ldw	r5,1188(sp)
10002774:	8809883a 	mov	r4,r17
10002778:	d9811b04 	addi	r6,sp,1132
1000277c:	00017bc0 	call	100017bc <__sprint_r>
10002780:	103f4226 	beq	r2,zero,1000248c <__alt_data_end+0xf800248c>
10002784:	003d6006 	br	10001d08 <__alt_data_end+0xf8001d08>
10002788:	d9013217 	ldw	r4,1224(sp)
1000278c:	00800044 	movi	r2,1
10002790:	4cc00015 	stw	r19,0(r9)
10002794:	1101000e 	bge	r2,r4,10002b98 <___vfprintf_internal_r+0x13a8>
10002798:	00800044 	movi	r2,1
1000279c:	48800115 	stw	r2,4(r9)
100027a0:	4091883a 	add	r8,r8,r2
100027a4:	1887883a 	add	r3,r3,r2
100027a8:	da011d15 	stw	r8,1140(sp)
100027ac:	d8c11c15 	stw	r3,1136(sp)
100027b0:	008001c4 	movi	r2,7
100027b4:	10c10c16 	blt	r2,r3,10002be8 <___vfprintf_internal_r+0x13f8>
100027b8:	4a400204 	addi	r9,r9,8
100027bc:	d8813717 	ldw	r2,1244(sp)
100027c0:	48800015 	stw	r2,0(r9)
100027c4:	00800044 	movi	r2,1
100027c8:	48800115 	stw	r2,4(r9)
100027cc:	4091883a 	add	r8,r8,r2
100027d0:	1887883a 	add	r3,r3,r2
100027d4:	da011d15 	stw	r8,1140(sp)
100027d8:	d8c11c15 	stw	r3,1136(sp)
100027dc:	008001c4 	movi	r2,7
100027e0:	10c10a16 	blt	r2,r3,10002c0c <___vfprintf_internal_r+0x141c>
100027e4:	4c800204 	addi	r18,r9,8
100027e8:	d9013317 	ldw	r4,1228(sp)
100027ec:	d9413417 	ldw	r5,1232(sp)
100027f0:	000d883a 	mov	r6,zero
100027f4:	000f883a 	mov	r7,zero
100027f8:	d8c13b15 	stw	r3,1260(sp)
100027fc:	da013a15 	stw	r8,1256(sp)
10002800:	000eed80 	call	1000eed8 <__eqdf2>
10002804:	d8c13b17 	ldw	r3,1260(sp)
10002808:	da013a17 	ldw	r8,1256(sp)
1000280c:	1000ba26 	beq	r2,zero,10002af8 <___vfprintf_internal_r+0x1308>
10002810:	d9013217 	ldw	r4,1224(sp)
10002814:	9cc00044 	addi	r19,r19,1
10002818:	94c00015 	stw	r19,0(r18)
1000281c:	20bfffc4 	addi	r2,r4,-1
10002820:	90800115 	stw	r2,4(r18)
10002824:	4091883a 	add	r8,r8,r2
10002828:	18c00044 	addi	r3,r3,1
1000282c:	da011d15 	stw	r8,1140(sp)
10002830:	d8c11c15 	stw	r3,1136(sp)
10002834:	008001c4 	movi	r2,7
10002838:	10c0e216 	blt	r2,r3,10002bc4 <___vfprintf_internal_r+0x13d4>
1000283c:	94800204 	addi	r18,r18,8
10002840:	d9013517 	ldw	r4,1236(sp)
10002844:	d8811fc4 	addi	r2,sp,1151
10002848:	90800015 	stw	r2,0(r18)
1000284c:	91000115 	stw	r4,4(r18)
10002850:	4111883a 	add	r8,r8,r4
10002854:	18c00044 	addi	r3,r3,1
10002858:	da011d15 	stw	r8,1140(sp)
1000285c:	d8c11c15 	stw	r3,1136(sp)
10002860:	008001c4 	movi	r2,7
10002864:	10ff2316 	blt	r2,r3,100024f4 <__alt_data_end+0xf80024f4>
10002868:	92400204 	addi	r9,r18,8
1000286c:	003ecf06 	br	100023ac <__alt_data_end+0xf80023ac>
10002870:	d9412917 	ldw	r5,1188(sp)
10002874:	8809883a 	mov	r4,r17
10002878:	d9811b04 	addi	r6,sp,1132
1000287c:	00017bc0 	call	100017bc <__sprint_r>
10002880:	103d211e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002884:	da011d17 	ldw	r8,1140(sp)
10002888:	d8c11c17 	ldw	r3,1136(sp)
1000288c:	da400404 	addi	r9,sp,16
10002890:	003eba06 	br	1000237c <__alt_data_end+0xf800237c>
10002894:	d9412917 	ldw	r5,1188(sp)
10002898:	8809883a 	mov	r4,r17
1000289c:	d9811b04 	addi	r6,sp,1132
100028a0:	00017bc0 	call	100017bc <__sprint_r>
100028a4:	103d181e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100028a8:	da011d17 	ldw	r8,1140(sp)
100028ac:	d8c11c17 	ldw	r3,1136(sp)
100028b0:	da400404 	addi	r9,sp,16
100028b4:	003e8006 	br	100022b8 <__alt_data_end+0xf80022b8>
100028b8:	d9412917 	ldw	r5,1188(sp)
100028bc:	8809883a 	mov	r4,r17
100028c0:	d9811b04 	addi	r6,sp,1132
100028c4:	00017bc0 	call	100017bc <__sprint_r>
100028c8:	103d0f1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100028cc:	da011d17 	ldw	r8,1140(sp)
100028d0:	d8c11c17 	ldw	r3,1136(sp)
100028d4:	da400404 	addi	r9,sp,16
100028d8:	003e6a06 	br	10002284 <__alt_data_end+0xf8002284>
100028dc:	d9413617 	ldw	r5,1240(sp)
100028e0:	d8810dc4 	addi	r2,sp,1079
100028e4:	b8c003cc 	andi	r3,r23,15
100028e8:	b008973a 	slli	r4,r22,28
100028ec:	28c7883a 	add	r3,r5,r3
100028f0:	b82ed13a 	srli	r23,r23,4
100028f4:	18c00003 	ldbu	r3,0(r3)
100028f8:	b02cd13a 	srli	r22,r22,4
100028fc:	25eeb03a 	or	r23,r4,r23
10002900:	10c00005 	stb	r3,0(r2)
10002904:	bd86b03a 	or	r3,r23,r22
10002908:	1027883a 	mov	r19,r2
1000290c:	10bfffc4 	addi	r2,r2,-1
10002910:	183ff41e 	bne	r3,zero,100028e4 <__alt_data_end+0xf80028e4>
10002914:	003f1a06 	br	10002580 <__alt_data_end+0xf8002580>
10002918:	d8012b15 	stw	zero,1196(sp)
1000291c:	dcc10e04 	addi	r19,sp,1080
10002920:	003d3a06 	br	10001e0c <__alt_data_end+0xf8001e0c>
10002924:	b0025426 	beq	r22,zero,10003278 <___vfprintf_internal_r+0x1a88>
10002928:	b807883a 	mov	r3,r23
1000292c:	d8810dc4 	addi	r2,sp,1079
10002930:	882f883a 	mov	r23,r17
10002934:	04c00244 	movi	r19,9
10002938:	8023883a 	mov	r17,r16
1000293c:	da412815 	stw	r9,1184(sp)
10002940:	1821883a 	mov	r16,r3
10002944:	8009883a 	mov	r4,r16
10002948:	b00b883a 	mov	r5,r22
1000294c:	01800284 	movi	r6,10
10002950:	000f883a 	mov	r7,zero
10002954:	1029883a 	mov	r20,r2
10002958:	000df0c0 	call	1000df0c <__umoddi3>
1000295c:	10800c04 	addi	r2,r2,48
10002960:	8009883a 	mov	r4,r16
10002964:	b00b883a 	mov	r5,r22
10002968:	a0800005 	stb	r2,0(r20)
1000296c:	01800284 	movi	r6,10
10002970:	000f883a 	mov	r7,zero
10002974:	000d8bc0 	call	1000d8bc <__udivdi3>
10002978:	1021883a 	mov	r16,r2
1000297c:	182d883a 	mov	r22,r3
10002980:	a0bfffc4 	addi	r2,r20,-1
10002984:	183fef1e 	bne	r3,zero,10002944 <__alt_data_end+0xf8002944>
10002988:	9c3fee36 	bltu	r19,r16,10002944 <__alt_data_end+0xf8002944>
1000298c:	da412817 	ldw	r9,1184(sp)
10002990:	8005883a 	mov	r2,r16
10002994:	8821883a 	mov	r16,r17
10002998:	b823883a 	mov	r17,r23
1000299c:	102f883a 	mov	r23,r2
100029a0:	d8812717 	ldw	r2,1180(sp)
100029a4:	a4ffffc4 	addi	r19,r20,-1
100029a8:	bdc00c04 	addi	r23,r23,48
100029ac:	14c5c83a 	sub	r2,r2,r19
100029b0:	a5ffffc5 	stb	r23,-1(r20)
100029b4:	d8812b15 	stw	r2,1196(sp)
100029b8:	003d1406 	br	10001e0c <__alt_data_end+0xf8001e0c>
100029bc:	00c00044 	movi	r3,1
100029c0:	bd84b03a 	or	r2,r23,r22
100029c4:	003d0306 	br	10001dd4 <__alt_data_end+0xf8001dd4>
100029c8:	dc812417 	ldw	r18,1168(sp)
100029cc:	0481140e 	bge	zero,r18,10002e20 <___vfprintf_internal_r+0x1630>
100029d0:	d9013217 	ldw	r4,1224(sp)
100029d4:	4cc00015 	stw	r19,0(r9)
100029d8:	9100ec16 	blt	r18,r4,10002d8c <___vfprintf_internal_r+0x159c>
100029dc:	49000115 	stw	r4,4(r9)
100029e0:	4111883a 	add	r8,r8,r4
100029e4:	18c00044 	addi	r3,r3,1
100029e8:	da011d15 	stw	r8,1140(sp)
100029ec:	d8c11c15 	stw	r3,1136(sp)
100029f0:	008001c4 	movi	r2,7
100029f4:	10c23616 	blt	r2,r3,100032d0 <___vfprintf_internal_r+0x1ae0>
100029f8:	4a400204 	addi	r9,r9,8
100029fc:	d8813217 	ldw	r2,1224(sp)
10002a00:	90a5c83a 	sub	r18,r18,r2
10002a04:	04beae0e 	bge	zero,r18,100024c0 <__alt_data_end+0xf80024c0>
10002a08:	04c00404 	movi	r19,16
10002a0c:	d8c11c17 	ldw	r3,1136(sp)
10002a10:	05040074 	movhi	r20,4097
10002a14:	a5092a84 	addi	r20,r20,9386
10002a18:	9c81dd0e 	bge	r19,r18,10003190 <___vfprintf_internal_r+0x19a0>
10002a1c:	058001c4 	movi	r22,7
10002a20:	ddc12917 	ldw	r23,1188(sp)
10002a24:	00000306 	br	10002a34 <___vfprintf_internal_r+0x1244>
10002a28:	4a400204 	addi	r9,r9,8
10002a2c:	94bffc04 	addi	r18,r18,-16
10002a30:	9c81d70e 	bge	r19,r18,10003190 <___vfprintf_internal_r+0x19a0>
10002a34:	4d000015 	stw	r20,0(r9)
10002a38:	4cc00115 	stw	r19,4(r9)
10002a3c:	42000404 	addi	r8,r8,16
10002a40:	18c00044 	addi	r3,r3,1
10002a44:	da011d15 	stw	r8,1140(sp)
10002a48:	d8c11c15 	stw	r3,1136(sp)
10002a4c:	b0fff60e 	bge	r22,r3,10002a28 <__alt_data_end+0xf8002a28>
10002a50:	8809883a 	mov	r4,r17
10002a54:	b80b883a 	mov	r5,r23
10002a58:	d9811b04 	addi	r6,sp,1132
10002a5c:	00017bc0 	call	100017bc <__sprint_r>
10002a60:	103ca91e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002a64:	da011d17 	ldw	r8,1140(sp)
10002a68:	d8c11c17 	ldw	r3,1136(sp)
10002a6c:	da400404 	addi	r9,sp,16
10002a70:	003fee06 	br	10002a2c <__alt_data_end+0xf8002a2c>
10002a74:	d9412917 	ldw	r5,1188(sp)
10002a78:	8809883a 	mov	r4,r17
10002a7c:	d9811b04 	addi	r6,sp,1132
10002a80:	00017bc0 	call	100017bc <__sprint_r>
10002a84:	103ca01e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002a88:	da011d17 	ldw	r8,1140(sp)
10002a8c:	d8c11c17 	ldw	r3,1136(sp)
10002a90:	da400404 	addi	r9,sp,16
10002a94:	003dee06 	br	10002250 <__alt_data_end+0xf8002250>
10002a98:	00c00084 	movi	r3,2
10002a9c:	bd84b03a 	or	r2,r23,r22
10002aa0:	d8012585 	stb	zero,1174(sp)
10002aa4:	003ccb06 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10002aa8:	8080040c 	andi	r2,r16,16
10002aac:	1000ae26 	beq	r2,zero,10002d68 <___vfprintf_internal_r+0x1578>
10002ab0:	d9012d17 	ldw	r4,1204(sp)
10002ab4:	25c00017 	ldw	r23,0(r4)
10002ab8:	21000104 	addi	r4,r4,4
10002abc:	d9012d15 	stw	r4,1204(sp)
10002ac0:	b82dd7fa 	srai	r22,r23,31
10002ac4:	b005883a 	mov	r2,r22
10002ac8:	003cb906 	br	10001db0 <__alt_data_end+0xf8001db0>
10002acc:	8080040c 	andi	r2,r16,16
10002ad0:	10007026 	beq	r2,zero,10002c94 <___vfprintf_internal_r+0x14a4>
10002ad4:	d8812d17 	ldw	r2,1204(sp)
10002ad8:	002d883a 	mov	r22,zero
10002adc:	00c00044 	movi	r3,1
10002ae0:	15c00017 	ldw	r23,0(r2)
10002ae4:	10800104 	addi	r2,r2,4
10002ae8:	d8812d15 	stw	r2,1204(sp)
10002aec:	d8012585 	stb	zero,1174(sp)
10002af0:	b805883a 	mov	r2,r23
10002af4:	003cb706 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10002af8:	d8813217 	ldw	r2,1224(sp)
10002afc:	14ffffc4 	addi	r19,r2,-1
10002b00:	04ff4f0e 	bge	zero,r19,10002840 <__alt_data_end+0xf8002840>
10002b04:	05800404 	movi	r22,16
10002b08:	05040074 	movhi	r20,4097
10002b0c:	a5092a84 	addi	r20,r20,9386
10002b10:	b4c0470e 	bge	r22,r19,10002c30 <___vfprintf_internal_r+0x1440>
10002b14:	05c001c4 	movi	r23,7
10002b18:	df012917 	ldw	fp,1188(sp)
10002b1c:	00000306 	br	10002b2c <___vfprintf_internal_r+0x133c>
10002b20:	94800204 	addi	r18,r18,8
10002b24:	9cfffc04 	addi	r19,r19,-16
10002b28:	b4c0410e 	bge	r22,r19,10002c30 <___vfprintf_internal_r+0x1440>
10002b2c:	95000015 	stw	r20,0(r18)
10002b30:	95800115 	stw	r22,4(r18)
10002b34:	42000404 	addi	r8,r8,16
10002b38:	18c00044 	addi	r3,r3,1
10002b3c:	da011d15 	stw	r8,1140(sp)
10002b40:	d8c11c15 	stw	r3,1136(sp)
10002b44:	b8fff60e 	bge	r23,r3,10002b20 <__alt_data_end+0xf8002b20>
10002b48:	8809883a 	mov	r4,r17
10002b4c:	e00b883a 	mov	r5,fp
10002b50:	d9811b04 	addi	r6,sp,1132
10002b54:	00017bc0 	call	100017bc <__sprint_r>
10002b58:	103c6b1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002b5c:	da011d17 	ldw	r8,1140(sp)
10002b60:	d8c11c17 	ldw	r3,1136(sp)
10002b64:	dc800404 	addi	r18,sp,16
10002b68:	003fee06 	br	10002b24 <__alt_data_end+0xf8002b24>
10002b6c:	8080040c 	andi	r2,r16,16
10002b70:	10005326 	beq	r2,zero,10002cc0 <___vfprintf_internal_r+0x14d0>
10002b74:	d8c12d17 	ldw	r3,1204(sp)
10002b78:	002d883a 	mov	r22,zero
10002b7c:	1dc00017 	ldw	r23,0(r3)
10002b80:	18c00104 	addi	r3,r3,4
10002b84:	d8c12d15 	stw	r3,1204(sp)
10002b88:	b805883a 	mov	r2,r23
10002b8c:	0007883a 	mov	r3,zero
10002b90:	d8012585 	stb	zero,1174(sp)
10002b94:	003c8f06 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10002b98:	8088703a 	and	r4,r16,r2
10002b9c:	203efe1e 	bne	r4,zero,10002798 <__alt_data_end+0xf8002798>
10002ba0:	48800115 	stw	r2,4(r9)
10002ba4:	42000044 	addi	r8,r8,1
10002ba8:	18c00044 	addi	r3,r3,1
10002bac:	da011d15 	stw	r8,1140(sp)
10002bb0:	d8c11c15 	stw	r3,1136(sp)
10002bb4:	008001c4 	movi	r2,7
10002bb8:	10c00216 	blt	r2,r3,10002bc4 <___vfprintf_internal_r+0x13d4>
10002bbc:	4c800204 	addi	r18,r9,8
10002bc0:	003f1f06 	br	10002840 <__alt_data_end+0xf8002840>
10002bc4:	d9412917 	ldw	r5,1188(sp)
10002bc8:	8809883a 	mov	r4,r17
10002bcc:	d9811b04 	addi	r6,sp,1132
10002bd0:	00017bc0 	call	100017bc <__sprint_r>
10002bd4:	103c4c1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002bd8:	dc800404 	addi	r18,sp,16
10002bdc:	da011d17 	ldw	r8,1140(sp)
10002be0:	d8c11c17 	ldw	r3,1136(sp)
10002be4:	003f1606 	br	10002840 <__alt_data_end+0xf8002840>
10002be8:	d9412917 	ldw	r5,1188(sp)
10002bec:	8809883a 	mov	r4,r17
10002bf0:	d9811b04 	addi	r6,sp,1132
10002bf4:	00017bc0 	call	100017bc <__sprint_r>
10002bf8:	103c431e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002bfc:	da011d17 	ldw	r8,1140(sp)
10002c00:	d8c11c17 	ldw	r3,1136(sp)
10002c04:	da400404 	addi	r9,sp,16
10002c08:	003eec06 	br	100027bc <__alt_data_end+0xf80027bc>
10002c0c:	d9412917 	ldw	r5,1188(sp)
10002c10:	8809883a 	mov	r4,r17
10002c14:	d9811b04 	addi	r6,sp,1132
10002c18:	00017bc0 	call	100017bc <__sprint_r>
10002c1c:	103c3a1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002c20:	da011d17 	ldw	r8,1140(sp)
10002c24:	d8c11c17 	ldw	r3,1136(sp)
10002c28:	dc800404 	addi	r18,sp,16
10002c2c:	003eee06 	br	100027e8 <__alt_data_end+0xf80027e8>
10002c30:	95000015 	stw	r20,0(r18)
10002c34:	94c00115 	stw	r19,4(r18)
10002c38:	44d1883a 	add	r8,r8,r19
10002c3c:	003efa06 	br	10002828 <__alt_data_end+0xf8002828>
10002c40:	d9412917 	ldw	r5,1188(sp)
10002c44:	8809883a 	mov	r4,r17
10002c48:	d9811b04 	addi	r6,sp,1132
10002c4c:	00017bc0 	call	100017bc <__sprint_r>
10002c50:	103c2d1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002c54:	da011d17 	ldw	r8,1140(sp)
10002c58:	d8c11c17 	ldw	r3,1136(sp)
10002c5c:	da400404 	addi	r9,sp,16
10002c60:	003d9806 	br	100022c4 <__alt_data_end+0xf80022c4>
10002c64:	8080100c 	andi	r2,r16,64
10002c68:	10011626 	beq	r2,zero,100030c4 <___vfprintf_internal_r+0x18d4>
10002c6c:	d8c12d17 	ldw	r3,1204(sp)
10002c70:	002d883a 	mov	r22,zero
10002c74:	1dc0000b 	ldhu	r23,0(r3)
10002c78:	18c00104 	addi	r3,r3,4
10002c7c:	d8c12d15 	stw	r3,1204(sp)
10002c80:	003cc106 	br	10001f88 <__alt_data_end+0xf8001f88>
10002c84:	4d000015 	stw	r20,0(r9)
10002c88:	4c800115 	stw	r18,4(r9)
10002c8c:	4491883a 	add	r8,r8,r18
10002c90:	003dc006 	br	10002394 <__alt_data_end+0xf8002394>
10002c94:	8080100c 	andi	r2,r16,64
10002c98:	10010126 	beq	r2,zero,100030a0 <___vfprintf_internal_r+0x18b0>
10002c9c:	d8c12d17 	ldw	r3,1204(sp)
10002ca0:	002d883a 	mov	r22,zero
10002ca4:	1dc0000b 	ldhu	r23,0(r3)
10002ca8:	18c00104 	addi	r3,r3,4
10002cac:	d8c12d15 	stw	r3,1204(sp)
10002cb0:	b805883a 	mov	r2,r23
10002cb4:	00c00044 	movi	r3,1
10002cb8:	d8012585 	stb	zero,1174(sp)
10002cbc:	003c4506 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10002cc0:	8080100c 	andi	r2,r16,64
10002cc4:	10010526 	beq	r2,zero,100030dc <___vfprintf_internal_r+0x18ec>
10002cc8:	d9012d17 	ldw	r4,1204(sp)
10002ccc:	002d883a 	mov	r22,zero
10002cd0:	0007883a 	mov	r3,zero
10002cd4:	25c0000b 	ldhu	r23,0(r4)
10002cd8:	21000104 	addi	r4,r4,4
10002cdc:	d9012d15 	stw	r4,1204(sp)
10002ce0:	b805883a 	mov	r2,r23
10002ce4:	d8012585 	stb	zero,1174(sp)
10002ce8:	003c3a06 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10002cec:	d8812d17 	ldw	r2,1204(sp)
10002cf0:	15800017 	ldw	r22,0(r2)
10002cf4:	15000117 	ldw	r20,4(r2)
10002cf8:	10800204 	addi	r2,r2,8
10002cfc:	d8812d15 	stw	r2,1204(sp)
10002d00:	dd813315 	stw	r22,1228(sp)
10002d04:	dd013415 	stw	r20,1232(sp)
10002d08:	003c5906 	br	10001e70 <__alt_data_end+0xf8001e70>
10002d0c:	00c00084 	movi	r3,2
10002d10:	d8012585 	stb	zero,1174(sp)
10002d14:	003c2f06 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10002d18:	ac800007 	ldb	r18,0(r21)
10002d1c:	003b1006 	br	10001960 <__alt_data_end+0xf8001960>
10002d20:	8080040c 	andi	r2,r16,16
10002d24:	1000091e 	bne	r2,zero,10002d4c <___vfprintf_internal_r+0x155c>
10002d28:	8400100c 	andi	r16,r16,64
10002d2c:	80000726 	beq	r16,zero,10002d4c <___vfprintf_internal_r+0x155c>
10002d30:	d8c12d17 	ldw	r3,1204(sp)
10002d34:	d9012c17 	ldw	r4,1200(sp)
10002d38:	18800017 	ldw	r2,0(r3)
10002d3c:	18c00104 	addi	r3,r3,4
10002d40:	d8c12d15 	stw	r3,1204(sp)
10002d44:	1100000d 	sth	r4,0(r2)
10002d48:	003adf06 	br	100018c8 <__alt_data_end+0xf80018c8>
10002d4c:	d8c12d17 	ldw	r3,1204(sp)
10002d50:	d9012c17 	ldw	r4,1200(sp)
10002d54:	18800017 	ldw	r2,0(r3)
10002d58:	18c00104 	addi	r3,r3,4
10002d5c:	d8c12d15 	stw	r3,1204(sp)
10002d60:	11000015 	stw	r4,0(r2)
10002d64:	003ad806 	br	100018c8 <__alt_data_end+0xf80018c8>
10002d68:	8080100c 	andi	r2,r16,64
10002d6c:	1000c526 	beq	r2,zero,10003084 <___vfprintf_internal_r+0x1894>
10002d70:	d8812d17 	ldw	r2,1204(sp)
10002d74:	15c0000f 	ldh	r23,0(r2)
10002d78:	10800104 	addi	r2,r2,4
10002d7c:	d8812d15 	stw	r2,1204(sp)
10002d80:	b82dd7fa 	srai	r22,r23,31
10002d84:	b005883a 	mov	r2,r22
10002d88:	003c0906 	br	10001db0 <__alt_data_end+0xf8001db0>
10002d8c:	4c800115 	stw	r18,4(r9)
10002d90:	9211883a 	add	r8,r18,r8
10002d94:	18c00044 	addi	r3,r3,1
10002d98:	da011d15 	stw	r8,1140(sp)
10002d9c:	d8c11c15 	stw	r3,1136(sp)
10002da0:	008001c4 	movi	r2,7
10002da4:	10c14016 	blt	r2,r3,100032a8 <___vfprintf_internal_r+0x1ab8>
10002da8:	4a400204 	addi	r9,r9,8
10002dac:	d8813717 	ldw	r2,1244(sp)
10002db0:	9ca7883a 	add	r19,r19,r18
10002db4:	48800015 	stw	r2,0(r9)
10002db8:	00800044 	movi	r2,1
10002dbc:	48800115 	stw	r2,4(r9)
10002dc0:	4091883a 	add	r8,r8,r2
10002dc4:	1887883a 	add	r3,r3,r2
10002dc8:	da011d15 	stw	r8,1140(sp)
10002dcc:	d8c11c15 	stw	r3,1136(sp)
10002dd0:	008001c4 	movi	r2,7
10002dd4:	10c12c16 	blt	r2,r3,10003288 <___vfprintf_internal_r+0x1a98>
10002dd8:	4a400204 	addi	r9,r9,8
10002ddc:	d9013217 	ldw	r4,1224(sp)
10002de0:	da011d17 	ldw	r8,1140(sp)
10002de4:	d8c11c17 	ldw	r3,1136(sp)
10002de8:	24a5c83a 	sub	r18,r4,r18
10002dec:	4cc00015 	stw	r19,0(r9)
10002df0:	003fa506 	br	10002c88 <__alt_data_end+0xf8002c88>
10002df4:	04c40074 	movhi	r19,4097
10002df8:	9cc91704 	addi	r19,r19,9308
10002dfc:	003c2e06 	br	10001eb8 <__alt_data_end+0xf8001eb8>
10002e00:	d9412917 	ldw	r5,1188(sp)
10002e04:	8809883a 	mov	r4,r17
10002e08:	d9811b04 	addi	r6,sp,1132
10002e0c:	00017bc0 	call	100017bc <__sprint_r>
10002e10:	103bbd1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002e14:	da011d17 	ldw	r8,1140(sp)
10002e18:	da400404 	addi	r9,sp,16
10002e1c:	003df606 	br	100025f8 <__alt_data_end+0xf80025f8>
10002e20:	00840074 	movhi	r2,4097
10002e24:	10892604 	addi	r2,r2,9368
10002e28:	48800015 	stw	r2,0(r9)
10002e2c:	00800044 	movi	r2,1
10002e30:	48800115 	stw	r2,4(r9)
10002e34:	4091883a 	add	r8,r8,r2
10002e38:	1887883a 	add	r3,r3,r2
10002e3c:	da011d15 	stw	r8,1140(sp)
10002e40:	d8c11c15 	stw	r3,1136(sp)
10002e44:	008001c4 	movi	r2,7
10002e48:	10c0bc16 	blt	r2,r3,1000313c <___vfprintf_internal_r+0x194c>
10002e4c:	4a400204 	addi	r9,r9,8
10002e50:	9000041e 	bne	r18,zero,10002e64 <___vfprintf_internal_r+0x1674>
10002e54:	d8c13217 	ldw	r3,1224(sp)
10002e58:	1800021e 	bne	r3,zero,10002e64 <___vfprintf_internal_r+0x1674>
10002e5c:	8080004c 	andi	r2,r16,1
10002e60:	103d5226 	beq	r2,zero,100023ac <__alt_data_end+0xf80023ac>
10002e64:	d8c11c17 	ldw	r3,1136(sp)
10002e68:	d9013717 	ldw	r4,1244(sp)
10002e6c:	00800044 	movi	r2,1
10002e70:	48800115 	stw	r2,4(r9)
10002e74:	49000015 	stw	r4,0(r9)
10002e78:	4091883a 	add	r8,r8,r2
10002e7c:	1887883a 	add	r3,r3,r2
10002e80:	da011d15 	stw	r8,1140(sp)
10002e84:	d8c11c15 	stw	r3,1136(sp)
10002e88:	008001c4 	movi	r2,7
10002e8c:	10c14516 	blt	r2,r3,100033a4 <___vfprintf_internal_r+0x1bb4>
10002e90:	4a400204 	addi	r9,r9,8
10002e94:	04a5c83a 	sub	r18,zero,r18
10002e98:	0480d70e 	bge	zero,r18,100031f8 <___vfprintf_internal_r+0x1a08>
10002e9c:	05800404 	movi	r22,16
10002ea0:	05040074 	movhi	r20,4097
10002ea4:	a5092a84 	addi	r20,r20,9386
10002ea8:	b480db0e 	bge	r22,r18,10003218 <___vfprintf_internal_r+0x1a28>
10002eac:	05c001c4 	movi	r23,7
10002eb0:	df012917 	ldw	fp,1188(sp)
10002eb4:	00000306 	br	10002ec4 <___vfprintf_internal_r+0x16d4>
10002eb8:	4a400204 	addi	r9,r9,8
10002ebc:	94bffc04 	addi	r18,r18,-16
10002ec0:	b480d50e 	bge	r22,r18,10003218 <___vfprintf_internal_r+0x1a28>
10002ec4:	4d000015 	stw	r20,0(r9)
10002ec8:	4d800115 	stw	r22,4(r9)
10002ecc:	42000404 	addi	r8,r8,16
10002ed0:	18c00044 	addi	r3,r3,1
10002ed4:	da011d15 	stw	r8,1140(sp)
10002ed8:	d8c11c15 	stw	r3,1136(sp)
10002edc:	b8fff60e 	bge	r23,r3,10002eb8 <__alt_data_end+0xf8002eb8>
10002ee0:	8809883a 	mov	r4,r17
10002ee4:	e00b883a 	mov	r5,fp
10002ee8:	d9811b04 	addi	r6,sp,1132
10002eec:	00017bc0 	call	100017bc <__sprint_r>
10002ef0:	103b851e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10002ef4:	da011d17 	ldw	r8,1140(sp)
10002ef8:	d8c11c17 	ldw	r3,1136(sp)
10002efc:	da400404 	addi	r9,sp,16
10002f00:	003fee06 	br	10002ebc <__alt_data_end+0xf8002ebc>
10002f04:	da413c15 	stw	r9,1264(sp)
10002f08:	0009c300 	call	10009c30 <__isnand>
10002f0c:	da413c17 	ldw	r9,1264(sp)
10002f10:	10007e1e 	bne	r2,zero,1000310c <___vfprintf_internal_r+0x191c>
10002f14:	00bfffc4 	movi	r2,-1
10002f18:	e0816a26 	beq	fp,r2,100034c4 <___vfprintf_internal_r+0x1cd4>
10002f1c:	008019c4 	movi	r2,103
10002f20:	90816526 	beq	r18,r2,100034b8 <___vfprintf_internal_r+0x1cc8>
10002f24:	008011c4 	movi	r2,71
10002f28:	90816326 	beq	r18,r2,100034b8 <___vfprintf_internal_r+0x1cc8>
10002f2c:	80c04014 	ori	r3,r16,256
10002f30:	d8c12a15 	stw	r3,1192(sp)
10002f34:	a0016516 	blt	r20,zero,100034cc <___vfprintf_internal_r+0x1cdc>
10002f38:	d8012f05 	stb	zero,1212(sp)
10002f3c:	00801984 	movi	r2,102
10002f40:	9080f226 	beq	r18,r2,1000330c <___vfprintf_internal_r+0x1b1c>
10002f44:	00801184 	movi	r2,70
10002f48:	9080f026 	beq	r18,r2,1000330c <___vfprintf_internal_r+0x1b1c>
10002f4c:	00801944 	movi	r2,101
10002f50:	90818d26 	beq	r18,r2,10003588 <___vfprintf_internal_r+0x1d98>
10002f54:	00801144 	movi	r2,69
10002f58:	90818b26 	beq	r18,r2,10003588 <___vfprintf_internal_r+0x1d98>
10002f5c:	e02f883a 	mov	r23,fp
10002f60:	d8812404 	addi	r2,sp,1168
10002f64:	d8800115 	stw	r2,4(sp)
10002f68:	d8812304 	addi	r2,sp,1164
10002f6c:	d8800215 	stw	r2,8(sp)
10002f70:	d8812204 	addi	r2,sp,1160
10002f74:	ddc00015 	stw	r23,0(sp)
10002f78:	d8800315 	stw	r2,12(sp)
10002f7c:	8809883a 	mov	r4,r17
10002f80:	b00b883a 	mov	r5,r22
10002f84:	a00d883a 	mov	r6,r20
10002f88:	01c00084 	movi	r7,2
10002f8c:	da413c15 	stw	r9,1264(sp)
10002f90:	00051c80 	call	100051c8 <_dtoa_r>
10002f94:	1027883a 	mov	r19,r2
10002f98:	008019c4 	movi	r2,103
10002f9c:	da413c17 	ldw	r9,1264(sp)
10002fa0:	9081951e 	bne	r18,r2,100035f8 <___vfprintf_internal_r+0x1e08>
10002fa4:	8080004c 	andi	r2,r16,1
10002fa8:	10017926 	beq	r2,zero,10003590 <___vfprintf_internal_r+0x1da0>
10002fac:	00801184 	movi	r2,70
10002fb0:	9dc7883a 	add	r3,r19,r23
10002fb4:	9080e626 	beq	r18,r2,10003350 <___vfprintf_internal_r+0x1b60>
10002fb8:	b009883a 	mov	r4,r22
10002fbc:	a00b883a 	mov	r5,r20
10002fc0:	000d883a 	mov	r6,zero
10002fc4:	000f883a 	mov	r7,zero
10002fc8:	d8c13b15 	stw	r3,1260(sp)
10002fcc:	da413c15 	stw	r9,1264(sp)
10002fd0:	000eed80 	call	1000eed8 <__eqdf2>
10002fd4:	d8c13b17 	ldw	r3,1260(sp)
10002fd8:	da413c17 	ldw	r9,1264(sp)
10002fdc:	10000726 	beq	r2,zero,10002ffc <___vfprintf_internal_r+0x180c>
10002fe0:	d8812217 	ldw	r2,1160(sp)
10002fe4:	10c18a2e 	bgeu	r2,r3,10003610 <___vfprintf_internal_r+0x1e20>
10002fe8:	01000c04 	movi	r4,48
10002fec:	11000005 	stb	r4,0(r2)
10002ff0:	10800044 	addi	r2,r2,1
10002ff4:	d8812215 	stw	r2,1160(sp)
10002ff8:	10fffc1e 	bne	r2,r3,10002fec <__alt_data_end+0xf8002fec>
10002ffc:	1cc7c83a 	sub	r3,r3,r19
10003000:	d8c13215 	stw	r3,1224(sp)
10003004:	008019c4 	movi	r2,103
10003008:	9080fa26 	beq	r18,r2,100033f4 <___vfprintf_internal_r+0x1c04>
1000300c:	008011c4 	movi	r2,71
10003010:	9080f826 	beq	r18,r2,100033f4 <___vfprintf_internal_r+0x1c04>
10003014:	00801984 	movi	r2,102
10003018:	90818e1e 	bne	r18,r2,10003654 <___vfprintf_internal_r+0x1e64>
1000301c:	d8812417 	ldw	r2,1168(sp)
10003020:	d8812b15 	stw	r2,1196(sp)
10003024:	00817c0e 	bge	zero,r2,10003618 <___vfprintf_internal_r+0x1e28>
10003028:	e000021e 	bne	fp,zero,10003034 <___vfprintf_internal_r+0x1844>
1000302c:	8400004c 	andi	r16,r16,1
10003030:	80000426 	beq	r16,zero,10003044 <___vfprintf_internal_r+0x1854>
10003034:	d8812b17 	ldw	r2,1196(sp)
10003038:	e2000044 	addi	r8,fp,1
1000303c:	1205883a 	add	r2,r2,r8
10003040:	d8812b15 	stw	r2,1196(sp)
10003044:	d8812815 	stw	r2,1184(sp)
10003048:	10010b16 	blt	r2,zero,10003478 <___vfprintf_internal_r+0x1c88>
1000304c:	ddc12f07 	ldb	r23,1212(sp)
10003050:	b800e426 	beq	r23,zero,100033e4 <___vfprintf_internal_r+0x1bf4>
10003054:	00800b44 	movi	r2,45
10003058:	d8812585 	stb	r2,1174(sp)
1000305c:	dc012a17 	ldw	r16,1192(sp)
10003060:	d8013115 	stw	zero,1220(sp)
10003064:	003b7306 	br	10001e34 <__alt_data_end+0xf8001e34>
10003068:	d8812b17 	ldw	r2,1196(sp)
1000306c:	d8812815 	stw	r2,1184(sp)
10003070:	10005716 	blt	r2,zero,100031d0 <___vfprintf_internal_r+0x19e0>
10003074:	d8812583 	ldbu	r2,1174(sp)
10003078:	ddc12d15 	stw	r23,1204(sp)
1000307c:	d8013115 	stw	zero,1220(sp)
10003080:	003b6806 	br	10001e24 <__alt_data_end+0xf8001e24>
10003084:	d8c12d17 	ldw	r3,1204(sp)
10003088:	1dc00017 	ldw	r23,0(r3)
1000308c:	18c00104 	addi	r3,r3,4
10003090:	d8c12d15 	stw	r3,1204(sp)
10003094:	b82dd7fa 	srai	r22,r23,31
10003098:	b005883a 	mov	r2,r22
1000309c:	003b4406 	br	10001db0 <__alt_data_end+0xf8001db0>
100030a0:	d9012d17 	ldw	r4,1204(sp)
100030a4:	002d883a 	mov	r22,zero
100030a8:	00c00044 	movi	r3,1
100030ac:	25c00017 	ldw	r23,0(r4)
100030b0:	21000104 	addi	r4,r4,4
100030b4:	d9012d15 	stw	r4,1204(sp)
100030b8:	b805883a 	mov	r2,r23
100030bc:	d8012585 	stb	zero,1174(sp)
100030c0:	003b4406 	br	10001dd4 <__alt_data_end+0xf8001dd4>
100030c4:	d9012d17 	ldw	r4,1204(sp)
100030c8:	002d883a 	mov	r22,zero
100030cc:	25c00017 	ldw	r23,0(r4)
100030d0:	21000104 	addi	r4,r4,4
100030d4:	d9012d15 	stw	r4,1204(sp)
100030d8:	003bab06 	br	10001f88 <__alt_data_end+0xf8001f88>
100030dc:	d8812d17 	ldw	r2,1204(sp)
100030e0:	002d883a 	mov	r22,zero
100030e4:	0007883a 	mov	r3,zero
100030e8:	15c00017 	ldw	r23,0(r2)
100030ec:	10800104 	addi	r2,r2,4
100030f0:	d8812d15 	stw	r2,1204(sp)
100030f4:	d8012585 	stb	zero,1174(sp)
100030f8:	b805883a 	mov	r2,r23
100030fc:	003b3506 	br	10001dd4 <__alt_data_end+0xf8001dd4>
10003100:	00ffffc4 	movi	r3,-1
10003104:	b82b883a 	mov	r21,r23
10003108:	003a1606 	br	10001964 <__alt_data_end+0xf8001964>
1000310c:	008011c4 	movi	r2,71
10003110:	1480b116 	blt	r2,r18,100033d8 <___vfprintf_internal_r+0x1be8>
10003114:	04c40074 	movhi	r19,4097
10003118:	9cc91804 	addi	r19,r19,9312
1000311c:	00c000c4 	movi	r3,3
10003120:	00bfdfc4 	movi	r2,-129
10003124:	80a0703a 	and	r16,r16,r2
10003128:	d8c12815 	stw	r3,1184(sp)
1000312c:	d8812583 	ldbu	r2,1174(sp)
10003130:	d8c12b15 	stw	r3,1196(sp)
10003134:	d8013115 	stw	zero,1220(sp)
10003138:	003b3a06 	br	10001e24 <__alt_data_end+0xf8001e24>
1000313c:	d9412917 	ldw	r5,1188(sp)
10003140:	8809883a 	mov	r4,r17
10003144:	d9811b04 	addi	r6,sp,1132
10003148:	00017bc0 	call	100017bc <__sprint_r>
1000314c:	103aee1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10003150:	dc812417 	ldw	r18,1168(sp)
10003154:	da011d17 	ldw	r8,1140(sp)
10003158:	da400404 	addi	r9,sp,16
1000315c:	003f3c06 	br	10002e50 <__alt_data_end+0xf8002e50>
10003160:	ad400044 	addi	r21,r21,1
10003164:	84000814 	ori	r16,r16,32
10003168:	14800047 	ldb	r18,1(r2)
1000316c:	0039fc06 	br	10001960 <__alt_data_end+0xf8001960>
10003170:	d9412917 	ldw	r5,1188(sp)
10003174:	8809883a 	mov	r4,r17
10003178:	d9811b04 	addi	r6,sp,1132
1000317c:	00017bc0 	call	100017bc <__sprint_r>
10003180:	103ae11e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
10003184:	da011d17 	ldw	r8,1140(sp)
10003188:	da400404 	addi	r9,sp,16
1000318c:	003d2b06 	br	1000263c <__alt_data_end+0xf800263c>
10003190:	4d000015 	stw	r20,0(r9)
10003194:	4c800115 	stw	r18,4(r9)
10003198:	4491883a 	add	r8,r8,r18
1000319c:	18c00044 	addi	r3,r3,1
100031a0:	da011d15 	stw	r8,1140(sp)
100031a4:	d8c11c15 	stw	r3,1136(sp)
100031a8:	008001c4 	movi	r2,7
100031ac:	10fcbd16 	blt	r2,r3,100024a4 <__alt_data_end+0xf80024a4>
100031b0:	4a400204 	addi	r9,r9,8
100031b4:	003cc206 	br	100024c0 <__alt_data_end+0xf80024c0>
100031b8:	da413c15 	stw	r9,1264(sp)
100031bc:	0009fd00 	call	10009fd0 <strlen>
100031c0:	d8812b15 	stw	r2,1196(sp)
100031c4:	d8812815 	stw	r2,1184(sp)
100031c8:	da413c17 	ldw	r9,1264(sp)
100031cc:	103fa90e 	bge	r2,zero,10003074 <__alt_data_end+0xf8003074>
100031d0:	d8012815 	stw	zero,1184(sp)
100031d4:	003fa706 	br	10003074 <__alt_data_end+0xf8003074>
100031d8:	d9412917 	ldw	r5,1188(sp)
100031dc:	8809883a 	mov	r4,r17
100031e0:	d9811b04 	addi	r6,sp,1132
100031e4:	00017bc0 	call	100017bc <__sprint_r>
100031e8:	103ac71e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100031ec:	da011d17 	ldw	r8,1140(sp)
100031f0:	d8c11c17 	ldw	r3,1136(sp)
100031f4:	da400404 	addi	r9,sp,16
100031f8:	d8813217 	ldw	r2,1224(sp)
100031fc:	4cc00015 	stw	r19,0(r9)
10003200:	48800115 	stw	r2,4(r9)
10003204:	4091883a 	add	r8,r8,r2
10003208:	003c6206 	br	10002394 <__alt_data_end+0xf8002394>
1000320c:	00800b44 	movi	r2,45
10003210:	d8812585 	stb	r2,1174(sp)
10003214:	003b2406 	br	10001ea8 <__alt_data_end+0xf8001ea8>
10003218:	4d000015 	stw	r20,0(r9)
1000321c:	4c800115 	stw	r18,4(r9)
10003220:	4491883a 	add	r8,r8,r18
10003224:	18c00044 	addi	r3,r3,1
10003228:	da011d15 	stw	r8,1140(sp)
1000322c:	d8c11c15 	stw	r3,1136(sp)
10003230:	008001c4 	movi	r2,7
10003234:	10ffe816 	blt	r2,r3,100031d8 <__alt_data_end+0xf80031d8>
10003238:	4a400204 	addi	r9,r9,8
1000323c:	003fee06 	br	100031f8 <__alt_data_end+0xf80031f8>
10003240:	d8c12b15 	stw	r3,1196(sp)
10003244:	00800184 	movi	r2,6
10003248:	10c0062e 	bgeu	r2,r3,10003264 <___vfprintf_internal_r+0x1a74>
1000324c:	d8812b15 	stw	r2,1196(sp)
10003250:	d8812815 	stw	r2,1184(sp)
10003254:	ddc12d15 	stw	r23,1204(sp)
10003258:	04c40074 	movhi	r19,4097
1000325c:	9cc92404 	addi	r19,r19,9360
10003260:	0039ca06 	br	1000198c <__alt_data_end+0xf800198c>
10003264:	d8812b17 	ldw	r2,1196(sp)
10003268:	d8812815 	stw	r2,1184(sp)
1000326c:	103ff90e 	bge	r2,zero,10003254 <__alt_data_end+0xf8003254>
10003270:	d8012815 	stw	zero,1184(sp)
10003274:	003ff706 	br	10003254 <__alt_data_end+0xf8003254>
10003278:	00800244 	movi	r2,9
1000327c:	15fdaa36 	bltu	r2,r23,10002928 <__alt_data_end+0xf8002928>
10003280:	dd010e04 	addi	r20,sp,1080
10003284:	003dc606 	br	100029a0 <__alt_data_end+0xf80029a0>
10003288:	d9412917 	ldw	r5,1188(sp)
1000328c:	8809883a 	mov	r4,r17
10003290:	d9811b04 	addi	r6,sp,1132
10003294:	00017bc0 	call	100017bc <__sprint_r>
10003298:	103a9b1e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
1000329c:	dc812417 	ldw	r18,1168(sp)
100032a0:	da400404 	addi	r9,sp,16
100032a4:	003ecd06 	br	10002ddc <__alt_data_end+0xf8002ddc>
100032a8:	d9412917 	ldw	r5,1188(sp)
100032ac:	8809883a 	mov	r4,r17
100032b0:	d9811b04 	addi	r6,sp,1132
100032b4:	00017bc0 	call	100017bc <__sprint_r>
100032b8:	103a931e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100032bc:	dc812417 	ldw	r18,1168(sp)
100032c0:	da011d17 	ldw	r8,1140(sp)
100032c4:	d8c11c17 	ldw	r3,1136(sp)
100032c8:	da400404 	addi	r9,sp,16
100032cc:	003eb706 	br	10002dac <__alt_data_end+0xf8002dac>
100032d0:	d9412917 	ldw	r5,1188(sp)
100032d4:	8809883a 	mov	r4,r17
100032d8:	d9811b04 	addi	r6,sp,1132
100032dc:	00017bc0 	call	100017bc <__sprint_r>
100032e0:	103a891e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100032e4:	dc812417 	ldw	r18,1168(sp)
100032e8:	da011d17 	ldw	r8,1140(sp)
100032ec:	da400404 	addi	r9,sp,16
100032f0:	003dc206 	br	100029fc <__alt_data_end+0xf80029fc>
100032f4:	df012815 	stw	fp,1184(sp)
100032f8:	d8812583 	ldbu	r2,1174(sp)
100032fc:	df012b15 	stw	fp,1196(sp)
10003300:	ddc12d15 	stw	r23,1204(sp)
10003304:	d8013115 	stw	zero,1220(sp)
10003308:	003ac606 	br	10001e24 <__alt_data_end+0xf8001e24>
1000330c:	d8812404 	addi	r2,sp,1168
10003310:	d8800115 	stw	r2,4(sp)
10003314:	d8812304 	addi	r2,sp,1164
10003318:	d8800215 	stw	r2,8(sp)
1000331c:	d8812204 	addi	r2,sp,1160
10003320:	df000015 	stw	fp,0(sp)
10003324:	d8800315 	stw	r2,12(sp)
10003328:	8809883a 	mov	r4,r17
1000332c:	b00b883a 	mov	r5,r22
10003330:	a00d883a 	mov	r6,r20
10003334:	01c000c4 	movi	r7,3
10003338:	da413c15 	stw	r9,1264(sp)
1000333c:	00051c80 	call	100051c8 <_dtoa_r>
10003340:	da413c17 	ldw	r9,1264(sp)
10003344:	1027883a 	mov	r19,r2
10003348:	1707883a 	add	r3,r2,fp
1000334c:	e02f883a 	mov	r23,fp
10003350:	99000007 	ldb	r4,0(r19)
10003354:	00800c04 	movi	r2,48
10003358:	20800326 	beq	r4,r2,10003368 <___vfprintf_internal_r+0x1b78>
1000335c:	da812417 	ldw	r10,1168(sp)
10003360:	1a87883a 	add	r3,r3,r10
10003364:	003f1406 	br	10002fb8 <__alt_data_end+0xf8002fb8>
10003368:	b009883a 	mov	r4,r22
1000336c:	a00b883a 	mov	r5,r20
10003370:	000d883a 	mov	r6,zero
10003374:	000f883a 	mov	r7,zero
10003378:	d8c13b15 	stw	r3,1260(sp)
1000337c:	da413c15 	stw	r9,1264(sp)
10003380:	000ef340 	call	1000ef34 <__nedf2>
10003384:	d8c13b17 	ldw	r3,1260(sp)
10003388:	da413c17 	ldw	r9,1264(sp)
1000338c:	103ff326 	beq	r2,zero,1000335c <__alt_data_end+0xf800335c>
10003390:	00800044 	movi	r2,1
10003394:	15d5c83a 	sub	r10,r2,r23
10003398:	da812415 	stw	r10,1168(sp)
1000339c:	1a87883a 	add	r3,r3,r10
100033a0:	003f0506 	br	10002fb8 <__alt_data_end+0xf8002fb8>
100033a4:	d9412917 	ldw	r5,1188(sp)
100033a8:	8809883a 	mov	r4,r17
100033ac:	d9811b04 	addi	r6,sp,1132
100033b0:	00017bc0 	call	100017bc <__sprint_r>
100033b4:	103a541e 	bne	r2,zero,10001d08 <__alt_data_end+0xf8001d08>
100033b8:	dc812417 	ldw	r18,1168(sp)
100033bc:	da011d17 	ldw	r8,1140(sp)
100033c0:	d8c11c17 	ldw	r3,1136(sp)
100033c4:	da400404 	addi	r9,sp,16
100033c8:	003eb206 	br	10002e94 <__alt_data_end+0xf8002e94>
100033cc:	b82b883a 	mov	r21,r23
100033d0:	0007883a 	mov	r3,zero
100033d4:	00396306 	br	10001964 <__alt_data_end+0xf8001964>
100033d8:	04c40074 	movhi	r19,4097
100033dc:	9cc91904 	addi	r19,r19,9316
100033e0:	003f4e06 	br	1000311c <__alt_data_end+0xf800311c>
100033e4:	d8812583 	ldbu	r2,1174(sp)
100033e8:	dc012a17 	ldw	r16,1192(sp)
100033ec:	d8013115 	stw	zero,1220(sp)
100033f0:	003a8c06 	br	10001e24 <__alt_data_end+0xf8001e24>
100033f4:	d8812417 	ldw	r2,1168(sp)
100033f8:	d8812b15 	stw	r2,1196(sp)
100033fc:	1029883a 	mov	r20,r2
10003400:	00bfff44 	movi	r2,-3
10003404:	a0800116 	blt	r20,r2,1000340c <___vfprintf_internal_r+0x1c1c>
10003408:	e5001d0e 	bge	fp,r20,10003480 <___vfprintf_internal_r+0x1c90>
1000340c:	94bfff84 	addi	r18,r18,-2
10003410:	a53fffc4 	addi	r20,r20,-1
10003414:	dd012415 	stw	r20,1168(sp)
10003418:	dc811fc5 	stb	r18,1151(sp)
1000341c:	a0007216 	blt	r20,zero,100035e8 <___vfprintf_internal_r+0x1df8>
10003420:	00800ac4 	movi	r2,43
10003424:	d8812005 	stb	r2,1152(sp)
10003428:	00800244 	movi	r2,9
1000342c:	15003516 	blt	r2,r20,10003504 <___vfprintf_internal_r+0x1d14>
10003430:	00800c04 	movi	r2,48
10003434:	a5000c04 	addi	r20,r20,48
10003438:	d8812045 	stb	r2,1153(sp)
1000343c:	dd012085 	stb	r20,1154(sp)
10003440:	d8c120c4 	addi	r3,sp,1155
10003444:	d8811fc4 	addi	r2,sp,1151
10003448:	1885c83a 	sub	r2,r3,r2
1000344c:	d8c13217 	ldw	r3,1224(sp)
10003450:	d8813515 	stw	r2,1236(sp)
10003454:	1885883a 	add	r2,r3,r2
10003458:	d8812b15 	stw	r2,1196(sp)
1000345c:	00800044 	movi	r2,1
10003460:	10c0580e 	bge	r2,r3,100035c4 <___vfprintf_internal_r+0x1dd4>
10003464:	d8812b17 	ldw	r2,1196(sp)
10003468:	10800044 	addi	r2,r2,1
1000346c:	d8812b15 	stw	r2,1196(sp)
10003470:	d8812815 	stw	r2,1184(sp)
10003474:	103ef50e 	bge	r2,zero,1000304c <__alt_data_end+0xf800304c>
10003478:	d8012815 	stw	zero,1184(sp)
1000347c:	003ef306 	br	1000304c <__alt_data_end+0xf800304c>
10003480:	d8812b17 	ldw	r2,1196(sp)
10003484:	d8c13217 	ldw	r3,1224(sp)
10003488:	10c01416 	blt	r2,r3,100034dc <___vfprintf_internal_r+0x1cec>
1000348c:	8400004c 	andi	r16,r16,1
10003490:	80000326 	beq	r16,zero,100034a0 <___vfprintf_internal_r+0x1cb0>
10003494:	d8812b17 	ldw	r2,1196(sp)
10003498:	10800044 	addi	r2,r2,1
1000349c:	d8812b15 	stw	r2,1196(sp)
100034a0:	d8812815 	stw	r2,1184(sp)
100034a4:	10001416 	blt	r2,zero,100034f8 <___vfprintf_internal_r+0x1d08>
100034a8:	048019c4 	movi	r18,103
100034ac:	003ee706 	br	1000304c <__alt_data_end+0xf800304c>
100034b0:	d8012815 	stw	zero,1184(sp)
100034b4:	003b1a06 	br	10002120 <__alt_data_end+0xf8002120>
100034b8:	e03e9c1e 	bne	fp,zero,10002f2c <__alt_data_end+0xf8002f2c>
100034bc:	07000044 	movi	fp,1
100034c0:	003e9a06 	br	10002f2c <__alt_data_end+0xf8002f2c>
100034c4:	07000184 	movi	fp,6
100034c8:	003e9806 	br	10002f2c <__alt_data_end+0xf8002f2c>
100034cc:	00c00b44 	movi	r3,45
100034d0:	a520003c 	xorhi	r20,r20,32768
100034d4:	d8c12f05 	stb	r3,1212(sp)
100034d8:	003e9806 	br	10002f3c <__alt_data_end+0xf8002f3c>
100034dc:	05003f0e 	bge	zero,r20,100035dc <___vfprintf_internal_r+0x1dec>
100034e0:	05000044 	movi	r20,1
100034e4:	d8c13217 	ldw	r3,1224(sp)
100034e8:	a0e9883a 	add	r20,r20,r3
100034ec:	dd012b15 	stw	r20,1196(sp)
100034f0:	dd012815 	stw	r20,1184(sp)
100034f4:	a03fec0e 	bge	r20,zero,100034a8 <__alt_data_end+0xf80034a8>
100034f8:	d8012815 	stw	zero,1184(sp)
100034fc:	048019c4 	movi	r18,103
10003500:	003ed206 	br	1000304c <__alt_data_end+0xf800304c>
10003504:	d8c11f84 	addi	r3,sp,1150
10003508:	102f883a 	mov	r23,r2
1000350c:	4839883a 	mov	fp,r9
10003510:	a009883a 	mov	r4,r20
10003514:	01400284 	movi	r5,10
10003518:	182d883a 	mov	r22,r3
1000351c:	000f4e80 	call	1000f4e8 <__modsi3>
10003520:	10800c04 	addi	r2,r2,48
10003524:	a009883a 	mov	r4,r20
10003528:	b0800005 	stb	r2,0(r22)
1000352c:	01400284 	movi	r5,10
10003530:	000f4980 	call	1000f498 <__divsi3>
10003534:	1029883a 	mov	r20,r2
10003538:	b0ffffc4 	addi	r3,r22,-1
1000353c:	b8bff416 	blt	r23,r2,10003510 <__alt_data_end+0xf8003510>
10003540:	11400c04 	addi	r5,r2,48
10003544:	b17fffc5 	stb	r5,-1(r22)
10003548:	d8811fc4 	addi	r2,sp,1151
1000354c:	e013883a 	mov	r9,fp
10003550:	18803e2e 	bgeu	r3,r2,1000364c <___vfprintf_internal_r+0x1e5c>
10003554:	b007883a 	mov	r3,r22
10003558:	d9012044 	addi	r4,sp,1153
1000355c:	00000206 	br	10003568 <___vfprintf_internal_r+0x1d78>
10003560:	19400003 	ldbu	r5,0(r3)
10003564:	18c00044 	addi	r3,r3,1
10003568:	21400005 	stb	r5,0(r4)
1000356c:	21000044 	addi	r4,r4,1
10003570:	10fffb1e 	bne	r2,r3,10003560 <__alt_data_end+0xf8003560>
10003574:	d8c12004 	addi	r3,sp,1152
10003578:	1d87c83a 	sub	r3,r3,r22
1000357c:	d9012044 	addi	r4,sp,1153
10003580:	20c7883a 	add	r3,r4,r3
10003584:	003fb006 	br	10003448 <__alt_data_end+0xf8003448>
10003588:	e5c00044 	addi	r23,fp,1
1000358c:	003e7406 	br	10002f60 <__alt_data_end+0xf8002f60>
10003590:	d8c12217 	ldw	r3,1160(sp)
10003594:	003e9906 	br	10002ffc <__alt_data_end+0xf8002ffc>
10003598:	d9012d17 	ldw	r4,1204(sp)
1000359c:	ac800043 	ldbu	r18,1(r21)
100035a0:	b82b883a 	mov	r21,r23
100035a4:	20c00017 	ldw	r3,0(r4)
100035a8:	20800104 	addi	r2,r4,4
100035ac:	d8812d15 	stw	r2,1204(sp)
100035b0:	18002116 	blt	r3,zero,10003638 <___vfprintf_internal_r+0x1e48>
100035b4:	94803fcc 	andi	r18,r18,255
100035b8:	9480201c 	xori	r18,r18,128
100035bc:	94bfe004 	addi	r18,r18,-128
100035c0:	0038e706 	br	10001960 <__alt_data_end+0xf8001960>
100035c4:	80a0703a 	and	r16,r16,r2
100035c8:	803fa61e 	bne	r16,zero,10003464 <__alt_data_end+0xf8003464>
100035cc:	d8812b17 	ldw	r2,1196(sp)
100035d0:	d8812815 	stw	r2,1184(sp)
100035d4:	103e9d0e 	bge	r2,zero,1000304c <__alt_data_end+0xf800304c>
100035d8:	003fa706 	br	10003478 <__alt_data_end+0xf8003478>
100035dc:	00800084 	movi	r2,2
100035e0:	1529c83a 	sub	r20,r2,r20
100035e4:	003fbf06 	br	100034e4 <__alt_data_end+0xf80034e4>
100035e8:	00800b44 	movi	r2,45
100035ec:	0529c83a 	sub	r20,zero,r20
100035f0:	d8812005 	stb	r2,1152(sp)
100035f4:	003f8c06 	br	10003428 <__alt_data_end+0xf8003428>
100035f8:	008011c4 	movi	r2,71
100035fc:	90be6926 	beq	r18,r2,10002fa4 <__alt_data_end+0xf8002fa4>
10003600:	003e6a06 	br	10002fac <__alt_data_end+0xf8002fac>
10003604:	00bfffc4 	movi	r2,-1
10003608:	d8812c15 	stw	r2,1200(sp)
1000360c:	0039ad06 	br	10001cc4 <__alt_data_end+0xf8001cc4>
10003610:	1007883a 	mov	r3,r2
10003614:	003e7906 	br	10002ffc <__alt_data_end+0xf8002ffc>
10003618:	e000021e 	bne	fp,zero,10003624 <___vfprintf_internal_r+0x1e34>
1000361c:	8400004c 	andi	r16,r16,1
10003620:	80000e26 	beq	r16,zero,1000365c <___vfprintf_internal_r+0x1e6c>
10003624:	e7000084 	addi	fp,fp,2
10003628:	df012b15 	stw	fp,1196(sp)
1000362c:	df012815 	stw	fp,1184(sp)
10003630:	e03e860e 	bge	fp,zero,1000304c <__alt_data_end+0xf800304c>
10003634:	003f9006 	br	10003478 <__alt_data_end+0xf8003478>
10003638:	94803fcc 	andi	r18,r18,255
1000363c:	9480201c 	xori	r18,r18,128
10003640:	00ffffc4 	movi	r3,-1
10003644:	94bfe004 	addi	r18,r18,-128
10003648:	0038c506 	br	10001960 <__alt_data_end+0xf8001960>
1000364c:	d8c12044 	addi	r3,sp,1153
10003650:	003f7d06 	br	10003448 <__alt_data_end+0xf8003448>
10003654:	dd012417 	ldw	r20,1168(sp)
10003658:	003f6d06 	br	10003410 <__alt_data_end+0xf8003410>
1000365c:	00c00044 	movi	r3,1
10003660:	d8c12815 	stw	r3,1184(sp)
10003664:	d8c12b15 	stw	r3,1196(sp)
10003668:	003e7806 	br	1000304c <__alt_data_end+0xf800304c>

1000366c <__vfprintf_internal>:
1000366c:	00840074 	movhi	r2,4097
10003670:	10917f04 	addi	r2,r2,17916
10003674:	2007883a 	mov	r3,r4
10003678:	11000017 	ldw	r4,0(r2)
1000367c:	2805883a 	mov	r2,r5
10003680:	300f883a 	mov	r7,r6
10003684:	180b883a 	mov	r5,r3
10003688:	100d883a 	mov	r6,r2
1000368c:	00017f01 	jmpi	100017f0 <___vfprintf_internal_r>

10003690 <__svfscanf_r>:
10003690:	deff4c04 	addi	sp,sp,-720
10003694:	ddc0b115 	stw	r23,708(sp)
10003698:	dd00ae15 	stw	r20,696(sp)
1000369c:	dcc0ad15 	stw	r19,692(sp)
100036a0:	dc80ac15 	stw	r18,688(sp)
100036a4:	dc40ab15 	stw	r17,684(sp)
100036a8:	dc00aa15 	stw	r16,680(sp)
100036ac:	dfc0b315 	stw	ra,716(sp)
100036b0:	df00b215 	stw	fp,712(sp)
100036b4:	dd80b015 	stw	r22,704(sp)
100036b8:	dd40af15 	stw	r21,700(sp)
100036bc:	30800007 	ldb	r2,0(r6)
100036c0:	002f883a 	mov	r23,zero
100036c4:	d9c09c15 	stw	r7,624(sp)
100036c8:	d800a015 	stw	zero,640(sp)
100036cc:	d8009f15 	stw	zero,636(sp)
100036d0:	d8009e15 	stw	zero,632(sp)
100036d4:	d8809b15 	stw	r2,620(sp)
100036d8:	2023883a 	mov	r17,r4
100036dc:	04840074 	movhi	r18,4097
100036e0:	94917d04 	addi	r18,r18,17908
100036e4:	b829883a 	mov	r20,r23
100036e8:	2827883a 	mov	r19,r5
100036ec:	34000044 	addi	r16,r6,1
100036f0:	10002426 	beq	r2,zero,10003784 <__svfscanf_r+0xf4>
100036f4:	95400017 	ldw	r21,0(r18)
100036f8:	a887883a 	add	r3,r21,r2
100036fc:	18c00003 	ldbu	r3,0(r3)
10003700:	18c0020c 	andi	r3,r3,8
10003704:	18c03fcc 	andi	r3,r3,255
10003708:	18c0201c 	xori	r3,r3,128
1000370c:	18ffe004 	addi	r3,r3,-128
10003710:	18002926 	beq	r3,zero,100037b8 <__svfscanf_r+0x128>
10003714:	98800117 	ldw	r2,4(r19)
10003718:	0080110e 	bge	zero,r2,10003760 <__svfscanf_r+0xd0>
1000371c:	98c00017 	ldw	r3,0(r19)
10003720:	91000017 	ldw	r4,0(r18)
10003724:	18800003 	ldbu	r2,0(r3)
10003728:	2085883a 	add	r2,r4,r2
1000372c:	10800003 	ldbu	r2,0(r2)
10003730:	1080020c 	andi	r2,r2,8
10003734:	10803fcc 	andi	r2,r2,255
10003738:	1080201c 	xori	r2,r2,128
1000373c:	10bfe004 	addi	r2,r2,-128
10003740:	10000b26 	beq	r2,zero,10003770 <__svfscanf_r+0xe0>
10003744:	98800117 	ldw	r2,4(r19)
10003748:	18c00044 	addi	r3,r3,1
1000374c:	98c00015 	stw	r3,0(r19)
10003750:	10bfffc4 	addi	r2,r2,-1
10003754:	98800115 	stw	r2,4(r19)
10003758:	a5000044 	addi	r20,r20,1
1000375c:	00bfef16 	blt	zero,r2,1000371c <__alt_data_end+0xf800371c>
10003760:	8809883a 	mov	r4,r17
10003764:	980b883a 	mov	r5,r19
10003768:	0009a0c0 	call	10009a0c <__srefill_r>
1000376c:	103feb26 	beq	r2,zero,1000371c <__alt_data_end+0xf800371c>
10003770:	800d883a 	mov	r6,r16
10003774:	30800007 	ldb	r2,0(r6)
10003778:	34000044 	addi	r16,r6,1
1000377c:	d8809b15 	stw	r2,620(sp)
10003780:	103fdc1e 	bne	r2,zero,100036f4 <__alt_data_end+0xf80036f4>
10003784:	d8809e17 	ldw	r2,632(sp)
10003788:	dfc0b317 	ldw	ra,716(sp)
1000378c:	df00b217 	ldw	fp,712(sp)
10003790:	ddc0b117 	ldw	r23,708(sp)
10003794:	dd80b017 	ldw	r22,704(sp)
10003798:	dd40af17 	ldw	r21,700(sp)
1000379c:	dd00ae17 	ldw	r20,696(sp)
100037a0:	dcc0ad17 	ldw	r19,692(sp)
100037a4:	dc80ac17 	ldw	r18,688(sp)
100037a8:	dc40ab17 	ldw	r17,684(sp)
100037ac:	dc00aa17 	ldw	r16,680(sp)
100037b0:	dec0b404 	addi	sp,sp,720
100037b4:	f800283a 	ret
100037b8:	00c00944 	movi	r3,37
100037bc:	10c00e26 	beq	r2,r3,100037f8 <__svfscanf_r+0x168>
100037c0:	98800117 	ldw	r2,4(r19)
100037c4:	0080e40e 	bge	zero,r2,10003b58 <__svfscanf_r+0x4c8>
100037c8:	98800017 	ldw	r2,0(r19)
100037cc:	80ffffc7 	ldb	r3,-1(r16)
100037d0:	11000003 	ldbu	r4,0(r2)
100037d4:	20ffeb1e 	bne	r4,r3,10003784 <__alt_data_end+0xf8003784>
100037d8:	98c00117 	ldw	r3,4(r19)
100037dc:	10800044 	addi	r2,r2,1
100037e0:	98800015 	stw	r2,0(r19)
100037e4:	18bfffc4 	addi	r2,r3,-1
100037e8:	98800115 	stw	r2,4(r19)
100037ec:	a5000044 	addi	r20,r20,1
100037f0:	800d883a 	mov	r6,r16
100037f4:	003fdf06 	br	10003774 <__alt_data_end+0xf8003774>
100037f8:	0039883a 	mov	fp,zero
100037fc:	35c00043 	ldbu	r23,1(r6)
10003800:	002d883a 	mov	r22,zero
10003804:	00c01e04 	movi	r3,120
10003808:	01801b04 	movi	r6,108
1000380c:	e009883a 	mov	r4,fp
10003810:	b8803fcc 	andi	r2,r23,255
10003814:	87000044 	addi	fp,r16,1
10003818:	18804f2e 	bgeu	r3,r2,10003958 <__svfscanf_r+0x2c8>
1000381c:	bdc03fcc 	andi	r23,r23,255
10003820:	bdc0201c 	xori	r23,r23,128
10003824:	bdffe004 	addi	r23,r23,-128
10003828:	adeb883a 	add	r21,r21,r23
1000382c:	a8800003 	ldbu	r2,0(r21)
10003830:	df009d15 	stw	fp,628(sp)
10003834:	2039883a 	mov	fp,r4
10003838:	1080004c 	andi	r2,r2,1
1000383c:	1002d926 	beq	r2,zero,100043a4 <__svfscanf_r+0xd14>
10003840:	b5800054 	ori	r22,r22,1
10003844:	00840074 	movhi	r2,4097
10003848:	10adb804 	addi	r2,r2,-18720
1000384c:	00c00284 	movi	r3,10
10003850:	d880a015 	stw	r2,640(sp)
10003854:	d8c09f15 	stw	r3,636(sp)
10003858:	040000c4 	movi	r16,3
1000385c:	98800117 	ldw	r2,4(r19)
10003860:	0081bd0e 	bge	zero,r2,10003f58 <__svfscanf_r+0x8c8>
10003864:	b080100c 	andi	r2,r22,64
10003868:	1000ce26 	beq	r2,zero,10003ba4 <__svfscanf_r+0x514>
1000386c:	00800084 	movi	r2,2
10003870:	80818426 	beq	r16,r2,10003e84 <__svfscanf_r+0x7f4>
10003874:	1400f716 	blt	r2,r16,10003c54 <__svfscanf_r+0x5c4>
10003878:	00800044 	movi	r2,1
1000387c:	8080dc26 	beq	r16,r2,10003bf0 <__svfscanf_r+0x560>
10003880:	e000011e 	bne	fp,zero,10003888 <__svfscanf_r+0x1f8>
10003884:	07000044 	movi	fp,1
10003888:	b080004c 	andi	r2,r22,1
1000388c:	10022826 	beq	r2,zero,10004130 <__svfscanf_r+0xaa0>
10003890:	b5c0040c 	andi	r23,r22,16
10003894:	b804601e 	bne	r23,zero,10004a18 <__svfscanf_r+0x1388>
10003898:	d8c09c17 	ldw	r3,624(sp)
1000389c:	1d800017 	ldw	r22,0(r3)
100038a0:	18c00104 	addi	r3,r3,4
100038a4:	d8c09c15 	stw	r3,624(sp)
100038a8:	0021883a 	mov	r16,zero
100038ac:	dd409904 	addi	r21,sp,612
100038b0:	01040074 	movhi	r4,4097
100038b4:	21118004 	addi	r4,r4,17920
100038b8:	20800017 	ldw	r2,0(r4)
100038bc:	8080aa26 	beq	r16,r2,10003b68 <__svfscanf_r+0x4d8>
100038c0:	98800017 	ldw	r2,0(r19)
100038c4:	9a000117 	ldw	r8,4(r19)
100038c8:	d9400104 	addi	r5,sp,4
100038cc:	11c00003 	ldbu	r7,0(r2)
100038d0:	423fffc4 	addi	r8,r8,-1
100038d4:	10800044 	addi	r2,r2,1
100038d8:	2c07883a 	add	r3,r5,r16
100038dc:	a809883a 	mov	r4,r21
100038e0:	000b883a 	mov	r5,zero
100038e4:	01800204 	movi	r6,8
100038e8:	9a000115 	stw	r8,4(r19)
100038ec:	98800015 	stw	r2,0(r19)
100038f0:	19c00005 	stb	r7,0(r3)
100038f4:	84000044 	addi	r16,r16,1
100038f8:	000811c0 	call	1000811c <memset>
100038fc:	8809883a 	mov	r4,r17
10003900:	dd400015 	stw	r21,0(sp)
10003904:	b00b883a 	mov	r5,r22
10003908:	d9800104 	addi	r6,sp,4
1000390c:	800f883a 	mov	r7,r16
10003910:	0007c700 	call	10007c70 <_mbrtowc_r>
10003914:	00ffffc4 	movi	r3,-1
10003918:	10c09326 	beq	r2,r3,10003b68 <__svfscanf_r+0x4d8>
1000391c:	1003281e 	bne	r2,zero,100045c0 <__svfscanf_r+0xf30>
10003920:	b800011e 	bne	r23,zero,10003928 <__svfscanf_r+0x298>
10003924:	b0000015 	stw	zero,0(r22)
10003928:	a429883a 	add	r20,r20,r16
1000392c:	e73fffc4 	addi	fp,fp,-1
10003930:	b803281e 	bne	r23,zero,100045d4 <__svfscanf_r+0xf44>
10003934:	b5800104 	addi	r22,r22,4
10003938:	0021883a 	mov	r16,zero
1000393c:	98800117 	ldw	r2,4(r19)
10003940:	00820b0e 	bge	zero,r2,10004170 <__svfscanf_r+0xae0>
10003944:	e03fda1e 	bne	fp,zero,100038b0 <__alt_data_end+0xf80038b0>
10003948:	b8012226 	beq	r23,zero,10003dd4 <__svfscanf_r+0x744>
1000394c:	dc009d17 	ldw	r16,628(sp)
10003950:	800d883a 	mov	r6,r16
10003954:	003f8706 	br	10003774 <__alt_data_end+0xf8003774>
10003958:	1085883a 	add	r2,r2,r2
1000395c:	1085883a 	add	r2,r2,r2
10003960:	01440034 	movhi	r5,4096
10003964:	294e5d04 	addi	r5,r5,14708
10003968:	1145883a 	add	r2,r2,r5
1000396c:	10800017 	ldw	r2,0(r2)
10003970:	1000683a 	jmp	r2
10003974:	10003b88 	cmpgei	zero,r2,238
10003978:	1000381c 	xori	zero,r2,224
1000397c:	1000381c 	xori	zero,r2,224
10003980:	1000381c 	xori	zero,r2,224
10003984:	1000381c 	xori	zero,r2,224
10003988:	1000381c 	xori	zero,r2,224
1000398c:	1000381c 	xori	zero,r2,224
10003990:	1000381c 	xori	zero,r2,224
10003994:	1000381c 	xori	zero,r2,224
10003998:	1000381c 	xori	zero,r2,224
1000399c:	1000381c 	xori	zero,r2,224
100039a0:	1000381c 	xori	zero,r2,224
100039a4:	1000381c 	xori	zero,r2,224
100039a8:	1000381c 	xori	zero,r2,224
100039ac:	1000381c 	xori	zero,r2,224
100039b0:	1000381c 	xori	zero,r2,224
100039b4:	1000381c 	xori	zero,r2,224
100039b8:	1000381c 	xori	zero,r2,224
100039bc:	1000381c 	xori	zero,r2,224
100039c0:	1000381c 	xori	zero,r2,224
100039c4:	1000381c 	xori	zero,r2,224
100039c8:	1000381c 	xori	zero,r2,224
100039cc:	1000381c 	xori	zero,r2,224
100039d0:	1000381c 	xori	zero,r2,224
100039d4:	1000381c 	xori	zero,r2,224
100039d8:	1000381c 	xori	zero,r2,224
100039dc:	1000381c 	xori	zero,r2,224
100039e0:	1000381c 	xori	zero,r2,224
100039e4:	1000381c 	xori	zero,r2,224
100039e8:	1000381c 	xori	zero,r2,224
100039ec:	1000381c 	xori	zero,r2,224
100039f0:	1000381c 	xori	zero,r2,224
100039f4:	1000381c 	xori	zero,r2,224
100039f8:	1000381c 	xori	zero,r2,224
100039fc:	1000381c 	xori	zero,r2,224
10003a00:	1000381c 	xori	zero,r2,224
10003a04:	1000381c 	xori	zero,r2,224
10003a08:	10004458 	cmpnei	zero,r2,273
10003a0c:	1000381c 	xori	zero,r2,224
10003a10:	1000381c 	xori	zero,r2,224
10003a14:	1000381c 	xori	zero,r2,224
10003a18:	1000381c 	xori	zero,r2,224
10003a1c:	10004464 	muli	zero,r2,273
10003a20:	1000381c 	xori	zero,r2,224
10003a24:	1000381c 	xori	zero,r2,224
10003a28:	1000381c 	xori	zero,r2,224
10003a2c:	1000381c 	xori	zero,r2,224
10003a30:	1000381c 	xori	zero,r2,224
10003a34:	100043f4 	orhi	zero,r2,271
10003a38:	100043f4 	orhi	zero,r2,271
10003a3c:	100043f4 	orhi	zero,r2,271
10003a40:	100043f4 	orhi	zero,r2,271
10003a44:	100043f4 	orhi	zero,r2,271
10003a48:	100043f4 	orhi	zero,r2,271
10003a4c:	100043f4 	orhi	zero,r2,271
10003a50:	100043f4 	orhi	zero,r2,271
10003a54:	100043f4 	orhi	zero,r2,271
10003a58:	100043f4 	orhi	zero,r2,271
10003a5c:	1000381c 	xori	zero,r2,224
10003a60:	1000381c 	xori	zero,r2,224
10003a64:	1000381c 	xori	zero,r2,224
10003a68:	1000381c 	xori	zero,r2,224
10003a6c:	1000381c 	xori	zero,r2,224
10003a70:	1000381c 	xori	zero,r2,224
10003a74:	1000381c 	xori	zero,r2,224
10003a78:	1000381c 	xori	zero,r2,224
10003a7c:	1000381c 	xori	zero,r2,224
10003a80:	1000381c 	xori	zero,r2,224
10003a84:	1000442c 	andhi	zero,r2,272
10003a88:	10004438 	rdprs	zero,r2,272
10003a8c:	1000381c 	xori	zero,r2,224
10003a90:	10004438 	rdprs	zero,r2,272
10003a94:	1000381c 	xori	zero,r2,224
10003a98:	1000381c 	xori	zero,r2,224
10003a9c:	1000381c 	xori	zero,r2,224
10003aa0:	1000381c 	xori	zero,r2,224
10003aa4:	10004448 	cmpgei	zero,r2,273
10003aa8:	1000381c 	xori	zero,r2,224
10003aac:	1000381c 	xori	zero,r2,224
10003ab0:	10004474 	orhi	zero,r2,273
10003ab4:	1000381c 	xori	zero,r2,224
10003ab8:	1000381c 	xori	zero,r2,224
10003abc:	1000381c 	xori	zero,r2,224
10003ac0:	1000381c 	xori	zero,r2,224
10003ac4:	1000381c 	xori	zero,r2,224
10003ac8:	1000381c 	xori	zero,r2,224
10003acc:	1000381c 	xori	zero,r2,224
10003ad0:	1000381c 	xori	zero,r2,224
10003ad4:	1000449c 	xori	zero,r2,274
10003ad8:	1000381c 	xori	zero,r2,224
10003adc:	1000381c 	xori	zero,r2,224
10003ae0:	100044c4 	addi	zero,r2,275
10003ae4:	1000381c 	xori	zero,r2,224
10003ae8:	1000381c 	xori	zero,r2,224
10003aec:	1000381c 	xori	zero,r2,224
10003af0:	1000381c 	xori	zero,r2,224
10003af4:	1000381c 	xori	zero,r2,224
10003af8:	1000381c 	xori	zero,r2,224
10003afc:	1000381c 	xori	zero,r2,224
10003b00:	100044e8 	cmpgeui	zero,r2,275
10003b04:	100044fc 	xorhi	zero,r2,275
10003b08:	10004438 	rdprs	zero,r2,272
10003b0c:	10004438 	rdprs	zero,r2,272
10003b10:	10004438 	rdprs	zero,r2,272
10003b14:	10004508 	cmpgei	zero,r2,276
10003b18:	10004518 	cmpnei	zero,r2,276
10003b1c:	1000381c 	xori	zero,r2,224
10003b20:	1000381c 	xori	zero,r2,224
10003b24:	10004538 	rdprs	zero,r2,276
10003b28:	1000381c 	xori	zero,r2,224
10003b2c:	10004558 	cmpnei	zero,r2,277
10003b30:	1000458c 	andi	zero,r2,278
10003b34:	10004598 	cmpnei	zero,r2,278
10003b38:	1000381c 	xori	zero,r2,224
10003b3c:	1000381c 	xori	zero,r2,224
10003b40:	100043c0 	call	1100043c <_gp+0xfe3e50>
10003b44:	1000381c 	xori	zero,r2,224
10003b48:	100043d0 	cmplti	zero,r2,271
10003b4c:	1000381c 	xori	zero,r2,224
10003b50:	1000381c 	xori	zero,r2,224
10003b54:	1000449c 	xori	zero,r2,274
10003b58:	8809883a 	mov	r4,r17
10003b5c:	980b883a 	mov	r5,r19
10003b60:	0009a0c0 	call	10009a0c <__srefill_r>
10003b64:	103f1826 	beq	r2,zero,100037c8 <__alt_data_end+0xf80037c8>
10003b68:	d8809e17 	ldw	r2,632(sp)
10003b6c:	10000626 	beq	r2,zero,10003b88 <__svfscanf_r+0x4f8>
10003b70:	9880030b 	ldhu	r2,12(r19)
10003b74:	1080100c 	andi	r2,r2,64
10003b78:	10bfffcc 	andi	r2,r2,65535
10003b7c:	10a0001c 	xori	r2,r2,32768
10003b80:	10a00004 	addi	r2,r2,-32768
10003b84:	103eff26 	beq	r2,zero,10003784 <__alt_data_end+0xf8003784>
10003b88:	00bfffc4 	movi	r2,-1
10003b8c:	d8809e15 	stw	r2,632(sp)
10003b90:	003efc06 	br	10003784 <__alt_data_end+0xf8003784>
10003b94:	8809883a 	mov	r4,r17
10003b98:	980b883a 	mov	r5,r19
10003b9c:	0009a0c0 	call	10009a0c <__srefill_r>
10003ba0:	103ff11e 	bne	r2,zero,10003b68 <__alt_data_end+0xf8003b68>
10003ba4:	91400017 	ldw	r5,0(r18)
10003ba8:	98800017 	ldw	r2,0(r19)
10003bac:	00000206 	br	10003bb8 <__svfscanf_r+0x528>
10003bb0:	10800044 	addi	r2,r2,1
10003bb4:	98800015 	stw	r2,0(r19)
10003bb8:	10c00003 	ldbu	r3,0(r2)
10003bbc:	28c7883a 	add	r3,r5,r3
10003bc0:	18c00003 	ldbu	r3,0(r3)
10003bc4:	18c0020c 	andi	r3,r3,8
10003bc8:	18c03fcc 	andi	r3,r3,255
10003bcc:	18c0201c 	xori	r3,r3,128
10003bd0:	18ffe004 	addi	r3,r3,-128
10003bd4:	183f2526 	beq	r3,zero,1000386c <__alt_data_end+0xf800386c>
10003bd8:	98c00117 	ldw	r3,4(r19)
10003bdc:	a5000044 	addi	r20,r20,1
10003be0:	18ffffc4 	addi	r3,r3,-1
10003be4:	98c00115 	stw	r3,4(r19)
10003be8:	00fff116 	blt	zero,r3,10003bb0 <__alt_data_end+0xf8003bb0>
10003bec:	003fe906 	br	10003b94 <__alt_data_end+0xf8003b94>
10003bf0:	e000011e 	bne	fp,zero,10003bf8 <__svfscanf_r+0x568>
10003bf4:	073fffc4 	movi	fp,-1
10003bf8:	b580040c 	andi	r22,r22,16
10003bfc:	b0016826 	beq	r22,zero,100041a0 <__svfscanf_r+0xb10>
10003c00:	98800017 	ldw	r2,0(r19)
10003c04:	0021883a 	mov	r16,zero
10003c08:	dd805884 	addi	r22,sp,354
10003c0c:	10c00003 	ldbu	r3,0(r2)
10003c10:	b0c7883a 	add	r3,r22,r3
10003c14:	18c00007 	ldb	r3,0(r3)
10003c18:	18039726 	beq	r3,zero,10004a78 <__svfscanf_r+0x13e8>
10003c1c:	98c00117 	ldw	r3,4(r19)
10003c20:	10800044 	addi	r2,r2,1
10003c24:	84000044 	addi	r16,r16,1
10003c28:	18ffffc4 	addi	r3,r3,-1
10003c2c:	98c00115 	stw	r3,4(r19)
10003c30:	98800015 	stw	r2,0(r19)
10003c34:	e4008f26 	beq	fp,r16,10003e74 <__svfscanf_r+0x7e4>
10003c38:	00fff416 	blt	zero,r3,10003c0c <__alt_data_end+0xf8003c0c>
10003c3c:	8809883a 	mov	r4,r17
10003c40:	980b883a 	mov	r5,r19
10003c44:	0009a0c0 	call	10009a0c <__srefill_r>
10003c48:	10008a1e 	bne	r2,zero,10003e74 <__svfscanf_r+0x7e4>
10003c4c:	98800017 	ldw	r2,0(r19)
10003c50:	003fee06 	br	10003c0c <__alt_data_end+0xf8003c0c>
10003c54:	008000c4 	movi	r2,3
10003c58:	80806426 	beq	r16,r2,10003dec <__svfscanf_r+0x75c>
10003c5c:	00800104 	movi	r2,4
10003c60:	80bf071e 	bne	r16,r2,10003880 <__alt_data_end+0xf8003880>
10003c64:	e0bfffc4 	addi	r2,fp,-1
10003c68:	01005704 	movi	r4,348
10003c6c:	20814736 	bltu	r4,r2,1000418c <__svfscanf_r+0xafc>
10003c70:	0017883a 	mov	r11,zero
10003c74:	b581e014 	ori	r22,r22,1920
10003c78:	0021883a 	mov	r16,zero
10003c7c:	d800a115 	stw	zero,644(sp)
10003c80:	d800a315 	stw	zero,652(sp)
10003c84:	002b883a 	mov	r21,zero
10003c88:	d800a215 	stw	zero,648(sp)
10003c8c:	ddc00104 	addi	r23,sp,4
10003c90:	000d883a 	mov	r6,zero
10003c94:	00c01384 	movi	r3,78
10003c98:	03810004 	movi	r14,1024
10003c9c:	033e1fc4 	movi	r12,-1921
10003ca0:	03ff5fc4 	movi	r15,-641
10003ca4:	99c00017 	ldw	r7,0(r19)
10003ca8:	39400003 	ldbu	r5,0(r7)
10003cac:	28bff544 	addi	r2,r5,-43
10003cb0:	10803fcc 	andi	r2,r2,255
10003cb4:	1880c82e 	bgeu	r3,r2,10003fd8 <__svfscanf_r+0x948>
10003cb8:	a8000226 	beq	r21,zero,10003cc4 <__svfscanf_r+0x634>
10003cbc:	00bfbfc4 	movi	r2,-257
10003cc0:	b0ac703a 	and	r22,r22,r2
10003cc4:	31bfffc4 	addi	r6,r6,-1
10003cc8:	00800044 	movi	r2,1
10003ccc:	1184092e 	bgeu	r2,r6,10004cf4 <__svfscanf_r+0x1664>
10003cd0:	80803fcc 	andi	r2,r16,255
10003cd4:	1080201c 	xori	r2,r2,128
10003cd8:	10bfe004 	addi	r2,r2,-128
10003cdc:	10ffffc4 	addi	r3,r2,-1
10003ce0:	01000184 	movi	r4,6
10003ce4:	20c01036 	bltu	r4,r3,10003d28 <__svfscanf_r+0x698>
10003ce8:	00c00084 	movi	r3,2
10003cec:	1883f50e 	bge	r3,r2,10004cc4 <__svfscanf_r+0x1634>
10003cf0:	00c000c4 	movi	r3,3
10003cf4:	10c00c26 	beq	r2,r3,10003d28 <__svfscanf_r+0x698>
10003cf8:	843fff04 	addi	r16,r16,-4
10003cfc:	84003fcc 	andi	r16,r16,255
10003d00:	0438303a 	nor	fp,zero,r16
10003d04:	bf39883a 	add	fp,r23,fp
10003d08:	bdffffc4 	addi	r23,r23,-1
10003d0c:	b9400007 	ldb	r5,0(r23)
10003d10:	8809883a 	mov	r4,r17
10003d14:	980d883a 	mov	r6,r19
10003d18:	000c3e40 	call	1000c3e4 <_ungetc_r>
10003d1c:	bf3ffa1e 	bne	r23,fp,10003d08 <__alt_data_end+0xf8003d08>
10003d20:	a27fffc4 	addi	r9,r20,-1
10003d24:	4c29c83a 	sub	r20,r9,r16
10003d28:	b080400c 	andi	r2,r22,256
10003d2c:	10001326 	beq	r2,zero,10003d7c <__svfscanf_r+0x6ec>
10003d30:	b081000c 	andi	r2,r22,1024
10003d34:	1003d21e 	bne	r2,zero,10004c80 <__svfscanf_r+0x15f0>
10003d38:	b97fffc7 	ldb	r5,-1(r23)
10003d3c:	00801944 	movi	r2,101
10003d40:	bc3fffc4 	addi	r16,r23,-1
10003d44:	a53fffc4 	addi	r20,r20,-1
10003d48:	28800826 	beq	r5,r2,10003d6c <__svfscanf_r+0x6dc>
10003d4c:	00801144 	movi	r2,69
10003d50:	28800626 	beq	r5,r2,10003d6c <__svfscanf_r+0x6dc>
10003d54:	8809883a 	mov	r4,r17
10003d58:	980d883a 	mov	r6,r19
10003d5c:	000c3e40 	call	1000c3e4 <_ungetc_r>
10003d60:	b97fff87 	ldb	r5,-2(r23)
10003d64:	bc3fff84 	addi	r16,r23,-2
10003d68:	a53fffc4 	addi	r20,r20,-1
10003d6c:	8809883a 	mov	r4,r17
10003d70:	980d883a 	mov	r6,r19
10003d74:	000c3e40 	call	1000c3e4 <_ungetc_r>
10003d78:	802f883a 	mov	r23,r16
10003d7c:	b080040c 	andi	r2,r22,16
10003d80:	103ef21e 	bne	r2,zero,1000394c <__alt_data_end+0xf800394c>
10003d84:	b8000005 	stb	zero,0(r23)
10003d88:	b0c1800c 	andi	r3,r22,1536
10003d8c:	00810004 	movi	r2,1024
10003d90:	18837726 	beq	r3,r2,10004b70 <__svfscanf_r+0x14e0>
10003d94:	d8c0a317 	ldw	r3,652(sp)
10003d98:	1803601e 	bne	r3,zero,10004b1c <__svfscanf_r+0x148c>
10003d9c:	8809883a 	mov	r4,r17
10003da0:	d9400104 	addi	r5,sp,4
10003da4:	000d883a 	mov	r6,zero
10003da8:	000a05c0 	call	1000a05c <_strtod_r>
10003dac:	102b883a 	mov	r21,r2
10003db0:	b080004c 	andi	r2,r22,1
10003db4:	182f883a 	mov	r23,r3
10003db8:	10031f26 	beq	r2,zero,10004a38 <__svfscanf_r+0x13a8>
10003dbc:	d9409c17 	ldw	r5,624(sp)
10003dc0:	28800017 	ldw	r2,0(r5)
10003dc4:	29400104 	addi	r5,r5,4
10003dc8:	d9409c15 	stw	r5,624(sp)
10003dcc:	15400015 	stw	r21,0(r2)
10003dd0:	10c00115 	stw	r3,4(r2)
10003dd4:	d8809e17 	ldw	r2,632(sp)
10003dd8:	dc009d17 	ldw	r16,628(sp)
10003ddc:	10800044 	addi	r2,r2,1
10003de0:	d8809e15 	stw	r2,632(sp)
10003de4:	800d883a 	mov	r6,r16
10003de8:	003e6206 	br	10003774 <__alt_data_end+0xf8003774>
10003dec:	e0bfffc4 	addi	r2,fp,-1
10003df0:	01005704 	movi	r4,348
10003df4:	2080e82e 	bgeu	r4,r2,10004198 <__svfscanf_r+0xb08>
10003df8:	e0ffa8c4 	addi	r3,fp,-349
10003dfc:	07005744 	movi	fp,349
10003e00:	da409f17 	ldw	r9,636(sp)
10003e04:	b5836014 	ori	r22,r22,3456
10003e08:	0021883a 	mov	r16,zero
10003e0c:	dd400104 	addi	r21,sp,4
10003e10:	05c01344 	movi	r23,77
10003e14:	01c08004 	movi	r7,512
10003e18:	01bf7fc4 	movi	r6,-513
10003e1c:	9a000017 	ldw	r8,0(r19)
10003e20:	41400003 	ldbu	r5,0(r8)
10003e24:	28bff544 	addi	r2,r5,-43
10003e28:	10803fcc 	andi	r2,r2,255
10003e2c:	b881eb2e 	bgeu	r23,r2,100045dc <__svfscanf_r+0xf4c>
10003e30:	da409f15 	stw	r9,636(sp)
10003e34:	b080400c 	andi	r2,r22,256
10003e38:	10000926 	beq	r2,zero,10003e60 <__svfscanf_r+0x7d0>
10003e3c:	d9400104 	addi	r5,sp,4
10003e40:	2d40052e 	bgeu	r5,r21,10003e58 <__svfscanf_r+0x7c8>
10003e44:	a97fffc7 	ldb	r5,-1(r21)
10003e48:	8809883a 	mov	r4,r17
10003e4c:	980d883a 	mov	r6,r19
10003e50:	ad7fffc4 	addi	r21,r21,-1
10003e54:	000c3e40 	call	1000c3e4 <_ungetc_r>
10003e58:	d8800104 	addi	r2,sp,4
10003e5c:	157e4926 	beq	r2,r21,10003784 <__alt_data_end+0xf8003784>
10003e60:	b080040c 	andi	r2,r22,16
10003e64:	1002ac26 	beq	r2,zero,10004918 <__svfscanf_r+0x1288>
10003e68:	d8c00104 	addi	r3,sp,4
10003e6c:	a8ebc83a 	sub	r21,r21,r3
10003e70:	ac21883a 	add	r16,r21,r16
10003e74:	a429883a 	add	r20,r20,r16
10003e78:	dc009d17 	ldw	r16,628(sp)
10003e7c:	800d883a 	mov	r6,r16
10003e80:	003e3c06 	br	10003774 <__alt_data_end+0xf8003774>
10003e84:	e000011e 	bne	fp,zero,10003e8c <__svfscanf_r+0x7fc>
10003e88:	073fffc4 	movi	fp,-1
10003e8c:	b080004c 	andi	r2,r22,1
10003e90:	b580040c 	andi	r22,r22,16
10003e94:	10003526 	beq	r2,zero,10003f6c <__svfscanf_r+0x8dc>
10003e98:	b002dd1e 	bne	r22,zero,10004a10 <__svfscanf_r+0x1380>
10003e9c:	d8c09c17 	ldw	r3,624(sp)
10003ea0:	1d400017 	ldw	r21,0(r3)
10003ea4:	18c00104 	addi	r3,r3,4
10003ea8:	d8c09c15 	stw	r3,624(sp)
10003eac:	0021883a 	mov	r16,zero
10003eb0:	ddc09904 	addi	r23,sp,612
10003eb4:	98c00017 	ldw	r3,0(r19)
10003eb8:	91400017 	ldw	r5,0(r18)
10003ebc:	18800003 	ldbu	r2,0(r3)
10003ec0:	11003fcc 	andi	r4,r2,255
10003ec4:	2909883a 	add	r4,r5,r4
10003ec8:	21000003 	ldbu	r4,0(r4)
10003ecc:	2100020c 	andi	r4,r4,8
10003ed0:	21003fcc 	andi	r4,r4,255
10003ed4:	2100201c 	xori	r4,r4,128
10003ed8:	213fe004 	addi	r4,r4,-128
10003edc:	2002731e 	bne	r4,zero,100048ac <__svfscanf_r+0x121c>
10003ee0:	e0027226 	beq	fp,zero,100048ac <__svfscanf_r+0x121c>
10003ee4:	01440074 	movhi	r5,4097
10003ee8:	29518004 	addi	r5,r5,17920
10003eec:	29000017 	ldw	r4,0(r5)
10003ef0:	813f1d26 	beq	r16,r4,10003b68 <__alt_data_end+0xf8003b68>
10003ef4:	9a000117 	ldw	r8,4(r19)
10003ef8:	18c00044 	addi	r3,r3,1
10003efc:	d9000104 	addi	r4,sp,4
10003f00:	423fffc4 	addi	r8,r8,-1
10003f04:	240f883a 	add	r7,r4,r16
10003f08:	000b883a 	mov	r5,zero
10003f0c:	b809883a 	mov	r4,r23
10003f10:	01800204 	movi	r6,8
10003f14:	9a000115 	stw	r8,4(r19)
10003f18:	98c00015 	stw	r3,0(r19)
10003f1c:	38800005 	stb	r2,0(r7)
10003f20:	84000044 	addi	r16,r16,1
10003f24:	000811c0 	call	1000811c <memset>
10003f28:	a80b883a 	mov	r5,r21
10003f2c:	8809883a 	mov	r4,r17
10003f30:	ddc00015 	stw	r23,0(sp)
10003f34:	d9800104 	addi	r6,sp,4
10003f38:	800f883a 	mov	r7,r16
10003f3c:	0007c700 	call	10007c70 <_mbrtowc_r>
10003f40:	017fffc4 	movi	r5,-1
10003f44:	117f0826 	beq	r2,r5,10003b68 <__alt_data_end+0xf8003b68>
10003f48:	1002de1e 	bne	r2,zero,10004ac4 <__svfscanf_r+0x1434>
10003f4c:	a8000015 	stw	zero,0(r21)
10003f50:	0009883a 	mov	r4,zero
10003f54:	0002de06 	br	10004ad0 <__svfscanf_r+0x1440>
10003f58:	8809883a 	mov	r4,r17
10003f5c:	980b883a 	mov	r5,r19
10003f60:	0009a0c0 	call	10009a0c <__srefill_r>
10003f64:	103e3f26 	beq	r2,zero,10003864 <__alt_data_end+0xf8003864>
10003f68:	003eff06 	br	10003b68 <__alt_data_end+0xf8003b68>
10003f6c:	b0027e26 	beq	r22,zero,10004968 <__svfscanf_r+0x12d8>
10003f70:	91400017 	ldw	r5,0(r18)
10003f74:	98800017 	ldw	r2,0(r19)
10003f78:	0021883a 	mov	r16,zero
10003f7c:	10c00003 	ldbu	r3,0(r2)
10003f80:	28c7883a 	add	r3,r5,r3
10003f84:	18c00003 	ldbu	r3,0(r3)
10003f88:	18c0020c 	andi	r3,r3,8
10003f8c:	18c03fcc 	andi	r3,r3,255
10003f90:	18c0201c 	xori	r3,r3,128
10003f94:	18ffe004 	addi	r3,r3,-128
10003f98:	183fb61e 	bne	r3,zero,10003e74 <__alt_data_end+0xf8003e74>
10003f9c:	98c00117 	ldw	r3,4(r19)
10003fa0:	10800044 	addi	r2,r2,1
10003fa4:	84000044 	addi	r16,r16,1
10003fa8:	18ffffc4 	addi	r3,r3,-1
10003fac:	98c00115 	stw	r3,4(r19)
10003fb0:	98800015 	stw	r2,0(r19)
10003fb4:	e43faf26 	beq	fp,r16,10003e74 <__alt_data_end+0xf8003e74>
10003fb8:	00fff016 	blt	zero,r3,10003f7c <__alt_data_end+0xf8003f7c>
10003fbc:	8809883a 	mov	r4,r17
10003fc0:	980b883a 	mov	r5,r19
10003fc4:	0009a0c0 	call	10009a0c <__srefill_r>
10003fc8:	103faa1e 	bne	r2,zero,10003e74 <__alt_data_end+0xf8003e74>
10003fcc:	91400017 	ldw	r5,0(r18)
10003fd0:	98800017 	ldw	r2,0(r19)
10003fd4:	003fe906 	br	10003f7c <__alt_data_end+0xf8003f7c>
10003fd8:	1085883a 	add	r2,r2,r2
10003fdc:	1085883a 	add	r2,r2,r2
10003fe0:	01040034 	movhi	r4,4096
10003fe4:	210ffd04 	addi	r4,r4,16372
10003fe8:	1105883a 	add	r2,r2,r4
10003fec:	10800017 	ldw	r2,0(r2)
10003ff0:	1000683a 	jmp	r2
10003ff4:	10004294 	ori	zero,r2,266
10003ff8:	10003cb8 	rdprs	zero,r2,242
10003ffc:	10004294 	ori	zero,r2,266
10004000:	10004280 	call	11000428 <_gp+0xfe3e3c>
10004004:	10003cb8 	rdprs	zero,r2,242
10004008:	1000425c 	xori	zero,r2,265
1000400c:	10004210 	cmplti	zero,r2,264
10004010:	10004210 	cmplti	zero,r2,264
10004014:	10004210 	cmplti	zero,r2,264
10004018:	10004210 	cmplti	zero,r2,264
1000401c:	10004210 	cmplti	zero,r2,264
10004020:	10004210 	cmplti	zero,r2,264
10004024:	10004210 	cmplti	zero,r2,264
10004028:	10004210 	cmplti	zero,r2,264
1000402c:	10004210 	cmplti	zero,r2,264
10004030:	10003cb8 	rdprs	zero,r2,242
10004034:	10003cb8 	rdprs	zero,r2,242
10004038:	10003cb8 	rdprs	zero,r2,242
1000403c:	10003cb8 	rdprs	zero,r2,242
10004040:	10003cb8 	rdprs	zero,r2,242
10004044:	10003cb8 	rdprs	zero,r2,242
10004048:	10003cb8 	rdprs	zero,r2,242
1000404c:	10004378 	rdprs	zero,r2,269
10004050:	10003cb8 	rdprs	zero,r2,242
10004054:	10003cb8 	rdprs	zero,r2,242
10004058:	10003cb8 	rdprs	zero,r2,242
1000405c:	1000433c 	xorhi	zero,r2,268
10004060:	10004388 	cmpgei	zero,r2,270
10004064:	10003cb8 	rdprs	zero,r2,242
10004068:	10003cb8 	rdprs	zero,r2,242
1000406c:	10004314 	ori	zero,r2,268
10004070:	10003cb8 	rdprs	zero,r2,242
10004074:	10003cb8 	rdprs	zero,r2,242
10004078:	10003cb8 	rdprs	zero,r2,242
1000407c:	10003cb8 	rdprs	zero,r2,242
10004080:	100042e0 	cmpeqi	zero,r2,267
10004084:	10003cb8 	rdprs	zero,r2,242
10004088:	10003cb8 	rdprs	zero,r2,242
1000408c:	10003cb8 	rdprs	zero,r2,242
10004090:	10003cb8 	rdprs	zero,r2,242
10004094:	10003cb8 	rdprs	zero,r2,242
10004098:	100042c4 	addi	zero,r2,267
1000409c:	10003cb8 	rdprs	zero,r2,242
100040a0:	10003cb8 	rdprs	zero,r2,242
100040a4:	10003cb8 	rdprs	zero,r2,242
100040a8:	10003cb8 	rdprs	zero,r2,242
100040ac:	100042a8 	cmpgeui	zero,r2,266
100040b0:	10003cb8 	rdprs	zero,r2,242
100040b4:	10003cb8 	rdprs	zero,r2,242
100040b8:	10003cb8 	rdprs	zero,r2,242
100040bc:	10003cb8 	rdprs	zero,r2,242
100040c0:	10003cb8 	rdprs	zero,r2,242
100040c4:	10003cb8 	rdprs	zero,r2,242
100040c8:	10003cb8 	rdprs	zero,r2,242
100040cc:	10004378 	rdprs	zero,r2,269
100040d0:	10003cb8 	rdprs	zero,r2,242
100040d4:	10003cb8 	rdprs	zero,r2,242
100040d8:	10003cb8 	rdprs	zero,r2,242
100040dc:	1000433c 	xorhi	zero,r2,268
100040e0:	10004388 	cmpgei	zero,r2,270
100040e4:	10003cb8 	rdprs	zero,r2,242
100040e8:	10003cb8 	rdprs	zero,r2,242
100040ec:	10004314 	ori	zero,r2,268
100040f0:	10003cb8 	rdprs	zero,r2,242
100040f4:	10003cb8 	rdprs	zero,r2,242
100040f8:	10003cb8 	rdprs	zero,r2,242
100040fc:	10003cb8 	rdprs	zero,r2,242
10004100:	100042e0 	cmpeqi	zero,r2,267
10004104:	10003cb8 	rdprs	zero,r2,242
10004108:	10003cb8 	rdprs	zero,r2,242
1000410c:	10003cb8 	rdprs	zero,r2,242
10004110:	10003cb8 	rdprs	zero,r2,242
10004114:	10003cb8 	rdprs	zero,r2,242
10004118:	100042c4 	addi	zero,r2,267
1000411c:	10003cb8 	rdprs	zero,r2,242
10004120:	10003cb8 	rdprs	zero,r2,242
10004124:	10003cb8 	rdprs	zero,r2,242
10004128:	10003cb8 	rdprs	zero,r2,242
1000412c:	100042a8 	cmpgeui	zero,r2,266
10004130:	b580040c 	andi	r22,r22,16
10004134:	b0025226 	beq	r22,zero,10004a80 <__svfscanf_r+0x13f0>
10004138:	0021883a 	mov	r16,zero
1000413c:	98800117 	ldw	r2,4(r19)
10004140:	17026f0e 	bge	r2,fp,10004b00 <__svfscanf_r+0x1470>
10004144:	98c00017 	ldw	r3,0(r19)
10004148:	8809883a 	mov	r4,r17
1000414c:	980b883a 	mov	r5,r19
10004150:	1887883a 	add	r3,r3,r2
10004154:	98c00015 	stw	r3,0(r19)
10004158:	80a1883a 	add	r16,r16,r2
1000415c:	e0b9c83a 	sub	fp,fp,r2
10004160:	0009a0c0 	call	10009a0c <__srefill_r>
10004164:	103ff526 	beq	r2,zero,1000413c <__alt_data_end+0xf800413c>
10004168:	803f421e 	bne	r16,zero,10003e74 <__alt_data_end+0xf8003e74>
1000416c:	003e7e06 	br	10003b68 <__alt_data_end+0xf8003b68>
10004170:	8809883a 	mov	r4,r17
10004174:	980b883a 	mov	r5,r19
10004178:	0009a0c0 	call	10009a0c <__srefill_r>
1000417c:	103df126 	beq	r2,zero,10003944 <__alt_data_end+0xf8003944>
10004180:	803e791e 	bne	r16,zero,10003b68 <__alt_data_end+0xf8003b68>
10004184:	b83f1326 	beq	r23,zero,10003dd4 <__alt_data_end+0xf8003dd4>
10004188:	003df006 	br	1000394c <__alt_data_end+0xf800394c>
1000418c:	e2ffa8c4 	addi	r11,fp,-349
10004190:	07005744 	movi	fp,349
10004194:	003eb706 	br	10003c74 <__alt_data_end+0xf8003c74>
10004198:	0007883a 	mov	r3,zero
1000419c:	003f1806 	br	10003e00 <__alt_data_end+0xf8003e00>
100041a0:	d8c09c17 	ldw	r3,624(sp)
100041a4:	98800017 	ldw	r2,0(r19)
100041a8:	dd805884 	addi	r22,sp,354
100041ac:	1c000017 	ldw	r16,0(r3)
100041b0:	1dc00104 	addi	r23,r3,4
100041b4:	802b883a 	mov	r21,r16
100041b8:	10c00003 	ldbu	r3,0(r2)
100041bc:	b0c7883a 	add	r3,r22,r3
100041c0:	18c00007 	ldb	r3,0(r3)
100041c4:	1801c226 	beq	r3,zero,100048d0 <__svfscanf_r+0x1240>
100041c8:	98c00117 	ldw	r3,4(r19)
100041cc:	10800044 	addi	r2,r2,1
100041d0:	ad400044 	addi	r21,r21,1
100041d4:	18ffffc4 	addi	r3,r3,-1
100041d8:	98c00115 	stw	r3,4(r19)
100041dc:	10ffffc3 	ldbu	r3,-1(r2)
100041e0:	e73fffc4 	addi	fp,fp,-1
100041e4:	a8ffffc5 	stb	r3,-1(r21)
100041e8:	98800015 	stw	r2,0(r19)
100041ec:	e001b826 	beq	fp,zero,100048d0 <__svfscanf_r+0x1240>
100041f0:	98c00117 	ldw	r3,4(r19)
100041f4:	00fff016 	blt	zero,r3,100041b8 <__alt_data_end+0xf80041b8>
100041f8:	8809883a 	mov	r4,r17
100041fc:	980b883a 	mov	r5,r19
10004200:	0009a0c0 	call	10009a0c <__srefill_r>
10004204:	1001b11e 	bne	r2,zero,100048cc <__svfscanf_r+0x123c>
10004208:	98800017 	ldw	r2,0(r19)
1000420c:	003fea06 	br	100041b8 <__alt_data_end+0xf80041b8>
10004210:	80803fcc 	andi	r2,r16,255
10004214:	1080201c 	xori	r2,r2,128
10004218:	10bfe004 	addi	r2,r2,-128
1000421c:	3085883a 	add	r2,r6,r2
10004220:	103ea51e 	bne	r2,zero,10003cb8 <__alt_data_end+0xf8003cb8>
10004224:	00bf9fc4 	movi	r2,-385
10004228:	b0ac703a 	and	r22,r22,r2
1000422c:	b9400005 	stb	r5,0(r23)
10004230:	bdc00044 	addi	r23,r23,1
10004234:	98800117 	ldw	r2,4(r19)
10004238:	e73fffc4 	addi	fp,fp,-1
1000423c:	a5000044 	addi	r20,r20,1
10004240:	10bfffc4 	addi	r2,r2,-1
10004244:	98800115 	stw	r2,4(r19)
10004248:	00816d0e 	bge	zero,r2,10004800 <__svfscanf_r+0x1170>
1000424c:	39c00044 	addi	r7,r7,1
10004250:	99c00015 	stw	r7,0(r19)
10004254:	e03e931e 	bne	fp,zero,10003ca4 <__alt_data_end+0xf8003ca4>
10004258:	003e9706 	br	10003cb8 <__alt_data_end+0xf8003cb8>
1000425c:	b080400c 	andi	r2,r22,256
10004260:	103feb26 	beq	r2,zero,10004210 <__alt_data_end+0xf8004210>
10004264:	00bfdfc4 	movi	r2,-129
10004268:	b0ac703a 	and	r22,r22,r2
1000426c:	ad400044 	addi	r21,r21,1
10004270:	583ff026 	beq	r11,zero,10004234 <__alt_data_end+0xf8004234>
10004274:	5affffc4 	addi	r11,r11,-1
10004278:	e7000044 	addi	fp,fp,1
1000427c:	003fed06 	br	10004234 <__alt_data_end+0xf8004234>
10004280:	b080800c 	andi	r2,r22,512
10004284:	103e8c26 	beq	r2,zero,10003cb8 <__alt_data_end+0xf8003cb8>
10004288:	b3ec703a 	and	r22,r22,r15
1000428c:	dd40a215 	stw	r21,648(sp)
10004290:	003fe606 	br	1000422c <__alt_data_end+0xf800422c>
10004294:	b080200c 	andi	r2,r22,128
10004298:	103e8726 	beq	r2,zero,10003cb8 <__alt_data_end+0xf8003cb8>
1000429c:	00bfdfc4 	movi	r2,-129
100042a0:	b0ac703a 	and	r22,r22,r2
100042a4:	003fe106 	br	1000422c <__alt_data_end+0xf800422c>
100042a8:	81003fcc 	andi	r4,r16,255
100042ac:	2100201c 	xori	r4,r4,128
100042b0:	213fe004 	addi	r4,r4,-128
100042b4:	008001c4 	movi	r2,7
100042b8:	20be7f1e 	bne	r4,r2,10003cb8 <__alt_data_end+0xf8003cb8>
100042bc:	04000204 	movi	r16,8
100042c0:	003fda06 	br	1000422c <__alt_data_end+0xf800422c>
100042c4:	81003fcc 	andi	r4,r16,255
100042c8:	2100201c 	xori	r4,r4,128
100042cc:	213fe004 	addi	r4,r4,-128
100042d0:	00800184 	movi	r2,6
100042d4:	20be781e 	bne	r4,r2,10003cb8 <__alt_data_end+0xf8003cb8>
100042d8:	040001c4 	movi	r16,7
100042dc:	003fd306 	br	1000422c <__alt_data_end+0xf800422c>
100042e0:	3001891e 	bne	r6,zero,10004908 <__svfscanf_r+0x1278>
100042e4:	b101c00c 	andi	r4,r22,1792
100042e8:	0081c004 	movi	r2,1792
100042ec:	20821d26 	beq	r4,r2,10004b64 <__svfscanf_r+0x14d4>
100042f0:	80803fcc 	andi	r2,r16,255
100042f4:	1080201c 	xori	r2,r2,128
100042f8:	10bfe004 	addi	r2,r2,-128
100042fc:	01000044 	movi	r4,1
10004300:	11000226 	beq	r2,r4,1000430c <__svfscanf_r+0xc7c>
10004304:	01000104 	movi	r4,4
10004308:	113e6b1e 	bne	r2,r4,10003cb8 <__alt_data_end+0xf8003cb8>
1000430c:	84000044 	addi	r16,r16,1
10004310:	003fc606 	br	1000422c <__alt_data_end+0xf800422c>
10004314:	80803fcc 	andi	r2,r16,255
10004318:	1080201c 	xori	r2,r2,128
1000431c:	10bfe004 	addi	r2,r2,-128
10004320:	1001731e 	bne	r2,zero,100048f0 <__svfscanf_r+0x1260>
10004324:	b101c00c 	andi	r4,r22,1792
10004328:	0081c004 	movi	r2,1792
1000432c:	20be621e 	bne	r4,r2,10003cb8 <__alt_data_end+0xf8003cb8>
10004330:	b32c703a 	and	r22,r22,r12
10004334:	04000044 	movi	r16,1
10004338:	003fbc06 	br	1000422c <__alt_data_end+0xf800422c>
1000433c:	b081400c 	andi	r2,r22,1280
10004340:	13800326 	beq	r2,r14,10004350 <__svfscanf_r+0xcc0>
10004344:	b081000c 	andi	r2,r22,1024
10004348:	103e5b26 	beq	r2,zero,10003cb8 <__alt_data_end+0xf8003cb8>
1000434c:	a83e5d26 	beq	r21,zero,10003cc4 <__alt_data_end+0xf8003cc4>
10004350:	b080800c 	andi	r2,r22,512
10004354:	1000041e 	bne	r2,zero,10004368 <__svfscanf_r+0xcd8>
10004358:	d880a217 	ldw	r2,648(sp)
1000435c:	ddc0a115 	stw	r23,644(sp)
10004360:	a8abc83a 	sub	r21,r21,r2
10004364:	dd40a315 	stw	r21,652(sp)
10004368:	b32c703a 	and	r22,r22,r12
1000436c:	b5806014 	ori	r22,r22,384
10004370:	002b883a 	mov	r21,zero
10004374:	003fad06 	br	1000422c <__alt_data_end+0xf800422c>
10004378:	00800044 	movi	r2,1
1000437c:	30be4e1e 	bne	r6,r2,10003cb8 <__alt_data_end+0xf8003cb8>
10004380:	01800084 	movi	r6,2
10004384:	003fa906 	br	1000422c <__alt_data_end+0xf800422c>
10004388:	81003fcc 	andi	r4,r16,255
1000438c:	2100201c 	xori	r4,r4,128
10004390:	213fe004 	addi	r4,r4,-128
10004394:	00800084 	movi	r2,2
10004398:	20be471e 	bne	r4,r2,10003cb8 <__alt_data_end+0xf8003cb8>
1000439c:	040000c4 	movi	r16,3
100043a0:	003fa206 	br	1000422c <__alt_data_end+0xf800422c>
100043a4:	01440074 	movhi	r5,4097
100043a8:	296db804 	addi	r5,r5,-18720
100043ac:	00800284 	movi	r2,10
100043b0:	d940a015 	stw	r5,640(sp)
100043b4:	d8809f15 	stw	r2,636(sp)
100043b8:	040000c4 	movi	r16,3
100043bc:	003d2706 	br	1000385c <__alt_data_end+0xf800385c>
100043c0:	df009d15 	stw	fp,628(sp)
100043c4:	04000084 	movi	r16,2
100043c8:	2039883a 	mov	fp,r4
100043cc:	003d2306 	br	1000385c <__alt_data_end+0xf800385c>
100043d0:	00840074 	movhi	r2,4097
100043d4:	10af2604 	addi	r2,r2,-17256
100043d8:	00c00284 	movi	r3,10
100043dc:	df009d15 	stw	fp,628(sp)
100043e0:	d880a015 	stw	r2,640(sp)
100043e4:	2039883a 	mov	fp,r4
100043e8:	d8c09f15 	stw	r3,636(sp)
100043ec:	040000c4 	movi	r16,3
100043f0:	003d1a06 	br	1000385c <__alt_data_end+0xf800385c>
100043f4:	bdc03fcc 	andi	r23,r23,255
100043f8:	01400284 	movi	r5,10
100043fc:	bdc0201c 	xori	r23,r23,128
10004400:	d8c0a815 	stw	r3,672(sp)
10004404:	d980a915 	stw	r6,676(sp)
10004408:	bdffe004 	addi	r23,r23,-128
1000440c:	000f5540 	call	1000f554 <__mulsi3>
10004410:	15c5883a 	add	r2,r2,r23
10004414:	113ff404 	addi	r4,r2,-48
10004418:	85c00043 	ldbu	r23,1(r16)
1000441c:	d8c0a817 	ldw	r3,672(sp)
10004420:	e021883a 	mov	r16,fp
10004424:	d980a917 	ldw	r6,676(sp)
10004428:	003cf906 	br	10003810 <__alt_data_end+0xf8003810>
1000442c:	df009d15 	stw	fp,628(sp)
10004430:	2039883a 	mov	fp,r4
10004434:	003d0206 	br	10003840 <__alt_data_end+0xf8003840>
10004438:	df009d15 	stw	fp,628(sp)
1000443c:	04000104 	movi	r16,4
10004440:	2039883a 	mov	fp,r4
10004444:	003d0506 	br	1000385c <__alt_data_end+0xf800385c>
10004448:	85c00043 	ldbu	r23,1(r16)
1000444c:	b5800094 	ori	r22,r22,2
10004450:	e021883a 	mov	r16,fp
10004454:	003cee06 	br	10003810 <__alt_data_end+0xf8003810>
10004458:	df009d15 	stw	fp,628(sp)
1000445c:	e021883a 	mov	r16,fp
10004460:	003cd706 	br	100037c0 <__alt_data_end+0xf80037c0>
10004464:	85c00043 	ldbu	r23,1(r16)
10004468:	b5800414 	ori	r22,r22,16
1000446c:	e021883a 	mov	r16,fp
10004470:	003ce706 	br	10003810 <__alt_data_end+0xf8003810>
10004474:	df009d15 	stw	fp,628(sp)
10004478:	b5800054 	ori	r22,r22,1
1000447c:	2039883a 	mov	fp,r4
10004480:	01040074 	movhi	r4,4097
10004484:	212f2604 	addi	r4,r4,-17256
10004488:	01400204 	movi	r5,8
1000448c:	d900a015 	stw	r4,640(sp)
10004490:	d9409f15 	stw	r5,636(sp)
10004494:	040000c4 	movi	r16,3
10004498:	003cf006 	br	1000385c <__alt_data_end+0xf800385c>
1000449c:	df009d15 	stw	fp,628(sp)
100044a0:	01400404 	movi	r5,16
100044a4:	2039883a 	mov	fp,r4
100044a8:	01040074 	movhi	r4,4097
100044ac:	212f2604 	addi	r4,r4,-17256
100044b0:	b5808014 	ori	r22,r22,512
100044b4:	d900a015 	stw	r4,640(sp)
100044b8:	d9409f15 	stw	r5,636(sp)
100044bc:	040000c4 	movi	r16,3
100044c0:	003ce606 	br	1000385c <__alt_data_end+0xf800385c>
100044c4:	df009d15 	stw	fp,628(sp)
100044c8:	d9409d17 	ldw	r5,628(sp)
100044cc:	2039883a 	mov	fp,r4
100044d0:	d9005884 	addi	r4,sp,354
100044d4:	0009c5c0 	call	10009c5c <__sccl>
100044d8:	d8809d15 	stw	r2,628(sp)
100044dc:	b5801014 	ori	r22,r22,64
100044e0:	04000044 	movi	r16,1
100044e4:	003cdd06 	br	1000385c <__alt_data_end+0xf800385c>
100044e8:	df009d15 	stw	fp,628(sp)
100044ec:	b5801014 	ori	r22,r22,64
100044f0:	2039883a 	mov	fp,r4
100044f4:	0021883a 	mov	r16,zero
100044f8:	003cd806 	br	1000385c <__alt_data_end+0xf800385c>
100044fc:	df009d15 	stw	fp,628(sp)
10004500:	2039883a 	mov	fp,r4
10004504:	003ccf06 	br	10003844 <__alt_data_end+0xf8003844>
10004508:	85c00043 	ldbu	r23,1(r16)
1000450c:	b5800114 	ori	r22,r22,4
10004510:	e021883a 	mov	r16,fp
10004514:	003cbe06 	br	10003810 <__alt_data_end+0xf8003810>
10004518:	df009d15 	stw	fp,628(sp)
1000451c:	2039883a 	mov	fp,r4
10004520:	01040074 	movhi	r4,4097
10004524:	212db804 	addi	r4,r4,-18720
10004528:	d900a015 	stw	r4,640(sp)
1000452c:	d8009f15 	stw	zero,636(sp)
10004530:	040000c4 	movi	r16,3
10004534:	003cc906 	br	1000385c <__alt_data_end+0xf800385c>
10004538:	85c00043 	ldbu	r23,1(r16)
1000453c:	b8803fcc 	andi	r2,r23,255
10004540:	1080201c 	xori	r2,r2,128
10004544:	10bfe004 	addi	r2,r2,-128
10004548:	11818f26 	beq	r2,r6,10004b88 <__svfscanf_r+0x14f8>
1000454c:	b5800054 	ori	r22,r22,1
10004550:	e021883a 	mov	r16,fp
10004554:	003cae06 	br	10003810 <__alt_data_end+0xf8003810>
10004558:	df009d15 	stw	fp,628(sp)
1000455c:	b080040c 	andi	r2,r22,16
10004560:	103cfa1e 	bne	r2,zero,1000394c <__alt_data_end+0xf800394c>
10004564:	b080010c 	andi	r2,r22,4
10004568:	10018b26 	beq	r2,zero,10004b98 <__svfscanf_r+0x1508>
1000456c:	d9009c17 	ldw	r4,624(sp)
10004570:	e021883a 	mov	r16,fp
10004574:	800d883a 	mov	r6,r16
10004578:	20800017 	ldw	r2,0(r4)
1000457c:	21000104 	addi	r4,r4,4
10004580:	d9009c15 	stw	r4,624(sp)
10004584:	1500000d 	sth	r20,0(r2)
10004588:	003c7a06 	br	10003774 <__alt_data_end+0xf8003774>
1000458c:	df009d15 	stw	fp,628(sp)
10004590:	2039883a 	mov	fp,r4
10004594:	003fba06 	br	10004480 <__alt_data_end+0xf8004480>
10004598:	00840074 	movhi	r2,4097
1000459c:	10af2604 	addi	r2,r2,-17256
100045a0:	00c00404 	movi	r3,16
100045a4:	df009d15 	stw	fp,628(sp)
100045a8:	b5808814 	ori	r22,r22,544
100045ac:	2039883a 	mov	fp,r4
100045b0:	d880a015 	stw	r2,640(sp)
100045b4:	d8c09f15 	stw	r3,636(sp)
100045b8:	040000c4 	movi	r16,3
100045bc:	003ca706 	br	1000385c <__alt_data_end+0xf800385c>
100045c0:	013fff84 	movi	r4,-2
100045c4:	113cdd26 	beq	r2,r4,1000393c <__alt_data_end+0xf800393c>
100045c8:	a429883a 	add	r20,r20,r16
100045cc:	e73fffc4 	addi	fp,fp,-1
100045d0:	b83cd826 	beq	r23,zero,10003934 <__alt_data_end+0xf8003934>
100045d4:	0021883a 	mov	r16,zero
100045d8:	003cd806 	br	1000393c <__alt_data_end+0xf800393c>
100045dc:	1085883a 	add	r2,r2,r2
100045e0:	1085883a 	add	r2,r2,r2
100045e4:	01040034 	movhi	r4,4096
100045e8:	21117e04 	addi	r4,r4,17912
100045ec:	1105883a 	add	r2,r2,r4
100045f0:	10800017 	ldw	r2,0(r2)
100045f4:	1000683a 	jmp	r2
100045f8:	100047ec 	andhi	zero,r2,287
100045fc:	10003e30 	cmpltui	zero,r2,248
10004600:	100047ec 	andhi	zero,r2,287
10004604:	10003e30 	cmpltui	zero,r2,248
10004608:	10003e30 	cmpltui	zero,r2,248
1000460c:	100047c4 	addi	zero,r2,287
10004610:	100047a4 	muli	zero,r2,286
10004614:	100047a4 	muli	zero,r2,286
10004618:	100047a4 	muli	zero,r2,286
1000461c:	100047a4 	muli	zero,r2,286
10004620:	100047a4 	muli	zero,r2,286
10004624:	100047a4 	muli	zero,r2,286
10004628:	100047a4 	muli	zero,r2,286
1000462c:	10004784 	addi	zero,r2,286
10004630:	10004784 	addi	zero,r2,286
10004634:	10003e30 	cmpltui	zero,r2,248
10004638:	10003e30 	cmpltui	zero,r2,248
1000463c:	10003e30 	cmpltui	zero,r2,248
10004640:	10003e30 	cmpltui	zero,r2,248
10004644:	10003e30 	cmpltui	zero,r2,248
10004648:	10003e30 	cmpltui	zero,r2,248
1000464c:	10003e30 	cmpltui	zero,r2,248
10004650:	10004770 	cmpltui	zero,r2,285
10004654:	10004770 	cmpltui	zero,r2,285
10004658:	10004770 	cmpltui	zero,r2,285
1000465c:	10004770 	cmpltui	zero,r2,285
10004660:	10004770 	cmpltui	zero,r2,285
10004664:	10004770 	cmpltui	zero,r2,285
10004668:	10003e30 	cmpltui	zero,r2,248
1000466c:	10003e30 	cmpltui	zero,r2,248
10004670:	10003e30 	cmpltui	zero,r2,248
10004674:	10003e30 	cmpltui	zero,r2,248
10004678:	10003e30 	cmpltui	zero,r2,248
1000467c:	10003e30 	cmpltui	zero,r2,248
10004680:	10003e30 	cmpltui	zero,r2,248
10004684:	10003e30 	cmpltui	zero,r2,248
10004688:	10003e30 	cmpltui	zero,r2,248
1000468c:	10003e30 	cmpltui	zero,r2,248
10004690:	10003e30 	cmpltui	zero,r2,248
10004694:	10003e30 	cmpltui	zero,r2,248
10004698:	10003e30 	cmpltui	zero,r2,248
1000469c:	10003e30 	cmpltui	zero,r2,248
100046a0:	10003e30 	cmpltui	zero,r2,248
100046a4:	10003e30 	cmpltui	zero,r2,248
100046a8:	10003e30 	cmpltui	zero,r2,248
100046ac:	10004730 	cmpltui	zero,r2,284
100046b0:	10003e30 	cmpltui	zero,r2,248
100046b4:	10003e30 	cmpltui	zero,r2,248
100046b8:	10003e30 	cmpltui	zero,r2,248
100046bc:	10003e30 	cmpltui	zero,r2,248
100046c0:	10003e30 	cmpltui	zero,r2,248
100046c4:	10003e30 	cmpltui	zero,r2,248
100046c8:	10003e30 	cmpltui	zero,r2,248
100046cc:	10003e30 	cmpltui	zero,r2,248
100046d0:	10004770 	cmpltui	zero,r2,285
100046d4:	10004770 	cmpltui	zero,r2,285
100046d8:	10004770 	cmpltui	zero,r2,285
100046dc:	10004770 	cmpltui	zero,r2,285
100046e0:	10004770 	cmpltui	zero,r2,285
100046e4:	10004770 	cmpltui	zero,r2,285
100046e8:	10003e30 	cmpltui	zero,r2,248
100046ec:	10003e30 	cmpltui	zero,r2,248
100046f0:	10003e30 	cmpltui	zero,r2,248
100046f4:	10003e30 	cmpltui	zero,r2,248
100046f8:	10003e30 	cmpltui	zero,r2,248
100046fc:	10003e30 	cmpltui	zero,r2,248
10004700:	10003e30 	cmpltui	zero,r2,248
10004704:	10003e30 	cmpltui	zero,r2,248
10004708:	10003e30 	cmpltui	zero,r2,248
1000470c:	10003e30 	cmpltui	zero,r2,248
10004710:	10003e30 	cmpltui	zero,r2,248
10004714:	10003e30 	cmpltui	zero,r2,248
10004718:	10003e30 	cmpltui	zero,r2,248
1000471c:	10003e30 	cmpltui	zero,r2,248
10004720:	10003e30 	cmpltui	zero,r2,248
10004724:	10003e30 	cmpltui	zero,r2,248
10004728:	10003e30 	cmpltui	zero,r2,248
1000472c:	10004730 	cmpltui	zero,r2,284
10004730:	b081800c 	andi	r2,r22,1536
10004734:	11fdbe1e 	bne	r2,r7,10003e30 <__alt_data_end+0xf8003e30>
10004738:	b1ac703a 	and	r22,r22,r6
1000473c:	b5814014 	ori	r22,r22,1280
10004740:	02400404 	movi	r9,16
10004744:	a9400005 	stb	r5,0(r21)
10004748:	ad400044 	addi	r21,r21,1
1000474c:	98800117 	ldw	r2,4(r19)
10004750:	10bfffc4 	addi	r2,r2,-1
10004754:	98800115 	stw	r2,4(r19)
10004758:	00803b0e 	bge	zero,r2,10004848 <__svfscanf_r+0x11b8>
1000475c:	42000044 	addi	r8,r8,1
10004760:	9a000015 	stw	r8,0(r19)
10004764:	e73fffc4 	addi	fp,fp,-1
10004768:	e03dac1e 	bne	fp,zero,10003e1c <__alt_data_end+0xf8003e1c>
1000476c:	003db006 	br	10003e30 <__alt_data_end+0xf8003e30>
10004770:	00800284 	movi	r2,10
10004774:	127dae0e 	bge	r2,r9,10003e30 <__alt_data_end+0xf8003e30>
10004778:	00bd1fc4 	movi	r2,-2945
1000477c:	b0ac703a 	and	r22,r22,r2
10004780:	003ff006 	br	10004744 <__alt_data_end+0xf8004744>
10004784:	4a53883a 	add	r9,r9,r9
10004788:	01040074 	movhi	r4,4097
1000478c:	21093084 	addi	r4,r4,9410
10004790:	2245883a 	add	r2,r4,r9
10004794:	1240000f 	ldh	r9,0(r2)
10004798:	00800204 	movi	r2,8
1000479c:	127ff616 	blt	r2,r9,10004778 <__alt_data_end+0xf8004778>
100047a0:	003da306 	br	10003e30 <__alt_data_end+0xf8003e30>
100047a4:	4a53883a 	add	r9,r9,r9
100047a8:	01040074 	movhi	r4,4097
100047ac:	21093084 	addi	r4,r4,9410
100047b0:	2245883a 	add	r2,r4,r9
100047b4:	1240000f 	ldh	r9,0(r2)
100047b8:	00bd1fc4 	movi	r2,-2945
100047bc:	b0ac703a 	and	r22,r22,r2
100047c0:	003fe006 	br	10004744 <__alt_data_end+0xf8004744>
100047c4:	b082000c 	andi	r2,r22,2048
100047c8:	103fde26 	beq	r2,zero,10004744 <__alt_data_end+0xf8004744>
100047cc:	4800021e 	bne	r9,zero,100047d8 <__svfscanf_r+0x1148>
100047d0:	b5808014 	ori	r22,r22,512
100047d4:	02400204 	movi	r9,8
100047d8:	b081000c 	andi	r2,r22,1024
100047dc:	10009f26 	beq	r2,zero,10004a5c <__svfscanf_r+0x13cc>
100047e0:	00be9fc4 	movi	r2,-1409
100047e4:	b0ac703a 	and	r22,r22,r2
100047e8:	003fd606 	br	10004744 <__alt_data_end+0xf8004744>
100047ec:	b080200c 	andi	r2,r22,128
100047f0:	103d8f26 	beq	r2,zero,10003e30 <__alt_data_end+0xf8003e30>
100047f4:	00bfdfc4 	movi	r2,-129
100047f8:	b0ac703a 	and	r22,r22,r2
100047fc:	003fd106 	br	10004744 <__alt_data_end+0xf8004744>
10004800:	8809883a 	mov	r4,r17
10004804:	980b883a 	mov	r5,r19
10004808:	d8c0a815 	stw	r3,672(sp)
1000480c:	d980a915 	stw	r6,676(sp)
10004810:	dac0a715 	stw	r11,668(sp)
10004814:	db00a515 	stw	r12,660(sp)
10004818:	db80a415 	stw	r14,656(sp)
1000481c:	dbc0a615 	stw	r15,664(sp)
10004820:	0009a0c0 	call	10009a0c <__srefill_r>
10004824:	d8c0a817 	ldw	r3,672(sp)
10004828:	d980a917 	ldw	r6,676(sp)
1000482c:	dac0a717 	ldw	r11,668(sp)
10004830:	db00a517 	ldw	r12,660(sp)
10004834:	db80a417 	ldw	r14,656(sp)
10004838:	dbc0a617 	ldw	r15,664(sp)
1000483c:	103d1e1e 	bne	r2,zero,10003cb8 <__alt_data_end+0xf8003cb8>
10004840:	e03d181e 	bne	fp,zero,10003ca4 <__alt_data_end+0xf8003ca4>
10004844:	003d1c06 	br	10003cb8 <__alt_data_end+0xf8003cb8>
10004848:	8809883a 	mov	r4,r17
1000484c:	980b883a 	mov	r5,r19
10004850:	d8c0a815 	stw	r3,672(sp)
10004854:	d980a915 	stw	r6,676(sp)
10004858:	d9c0a415 	stw	r7,656(sp)
1000485c:	da40a515 	stw	r9,660(sp)
10004860:	0009a0c0 	call	10009a0c <__srefill_r>
10004864:	d8c0a817 	ldw	r3,672(sp)
10004868:	d980a917 	ldw	r6,676(sp)
1000486c:	d9c0a417 	ldw	r7,656(sp)
10004870:	da40a517 	ldw	r9,660(sp)
10004874:	103fbb26 	beq	r2,zero,10004764 <__alt_data_end+0xf8004764>
10004878:	003d6d06 	br	10003e30 <__alt_data_end+0xf8003e30>
1000487c:	a429883a 	add	r20,r20,r16
10004880:	e73fffc4 	addi	fp,fp,-1
10004884:	b000fc1e 	bne	r22,zero,10004c78 <__svfscanf_r+0x15e8>
10004888:	ad400104 	addi	r21,r21,4
1000488c:	0021883a 	mov	r16,zero
10004890:	98800117 	ldw	r2,4(r19)
10004894:	00bd8716 	blt	zero,r2,10003eb4 <__alt_data_end+0xf8003eb4>
10004898:	8809883a 	mov	r4,r17
1000489c:	980b883a 	mov	r5,r19
100048a0:	0009a0c0 	call	10009a0c <__srefill_r>
100048a4:	103d8326 	beq	r2,zero,10003eb4 <__alt_data_end+0xf8003eb4>
100048a8:	803caf1e 	bne	r16,zero,10003b68 <__alt_data_end+0xf8003b68>
100048ac:	b03c271e 	bne	r22,zero,1000394c <__alt_data_end+0xf800394c>
100048b0:	d8809e17 	ldw	r2,632(sp)
100048b4:	dc009d17 	ldw	r16,628(sp)
100048b8:	a8000015 	stw	zero,0(r21)
100048bc:	10800044 	addi	r2,r2,1
100048c0:	d8809e15 	stw	r2,632(sp)
100048c4:	800d883a 	mov	r6,r16
100048c8:	003baa06 	br	10003774 <__alt_data_end+0xf8003774>
100048cc:	857ca626 	beq	r16,r21,10003b68 <__alt_data_end+0xf8003b68>
100048d0:	ac21c83a 	sub	r16,r21,r16
100048d4:	803bab26 	beq	r16,zero,10003784 <__alt_data_end+0xf8003784>
100048d8:	d8809e17 	ldw	r2,632(sp)
100048dc:	a8000005 	stb	zero,0(r21)
100048e0:	ddc09c15 	stw	r23,624(sp)
100048e4:	10800044 	addi	r2,r2,1
100048e8:	d8809e15 	stw	r2,632(sp)
100048ec:	003d6106 	br	10003e74 <__alt_data_end+0xf8003e74>
100048f0:	010000c4 	movi	r4,3
100048f4:	113e8526 	beq	r2,r4,1000430c <__alt_data_end+0xf800430c>
100048f8:	01000144 	movi	r4,5
100048fc:	113cee1e 	bne	r2,r4,10003cb8 <__alt_data_end+0xf8003cb8>
10004900:	84000044 	addi	r16,r16,1
10004904:	003e4906 	br	1000422c <__alt_data_end+0xf800422c>
10004908:	00800084 	movi	r2,2
1000490c:	30be781e 	bne	r6,r2,100042f0 <__alt_data_end+0xf80042f0>
10004910:	018000c4 	movi	r6,3
10004914:	003e4506 	br	1000422c <__alt_data_end+0xf800422c>
10004918:	d8c0a017 	ldw	r3,640(sp)
1000491c:	d9c09f17 	ldw	r7,636(sp)
10004920:	8809883a 	mov	r4,r17
10004924:	d9400104 	addi	r5,sp,4
10004928:	000d883a 	mov	r6,zero
1000492c:	a8000005 	stb	zero,0(r21)
10004930:	183ee83a 	callr	r3
10004934:	b0c0080c 	andi	r3,r22,32
10004938:	1800391e 	bne	r3,zero,10004a20 <__svfscanf_r+0x1390>
1000493c:	b0c0010c 	andi	r3,r22,4
10004940:	1800ac26 	beq	r3,zero,10004bf4 <__svfscanf_r+0x1564>
10004944:	d9409c17 	ldw	r5,624(sp)
10004948:	28c00017 	ldw	r3,0(r5)
1000494c:	29400104 	addi	r5,r5,4
10004950:	d9409c15 	stw	r5,624(sp)
10004954:	1880000d 	sth	r2,0(r3)
10004958:	d8809e17 	ldw	r2,632(sp)
1000495c:	10800044 	addi	r2,r2,1
10004960:	d8809e15 	stw	r2,632(sp)
10004964:	003d4006 	br	10003e68 <__alt_data_end+0xf8003e68>
10004968:	d8c09c17 	ldw	r3,624(sp)
1000496c:	98800017 	ldw	r2,0(r19)
10004970:	1d400017 	ldw	r21,0(r3)
10004974:	1d800104 	addi	r22,r3,4
10004978:	a821883a 	mov	r16,r21
1000497c:	10c00003 	ldbu	r3,0(r2)
10004980:	91400017 	ldw	r5,0(r18)
10004984:	28c7883a 	add	r3,r5,r3
10004988:	18c00003 	ldbu	r3,0(r3)
1000498c:	18c0020c 	andi	r3,r3,8
10004990:	18c03fcc 	andi	r3,r3,255
10004994:	18c0201c 	xori	r3,r3,128
10004998:	18ffe004 	addi	r3,r3,-128
1000499c:	1800121e 	bne	r3,zero,100049e8 <__svfscanf_r+0x1358>
100049a0:	98c00117 	ldw	r3,4(r19)
100049a4:	10800044 	addi	r2,r2,1
100049a8:	84000044 	addi	r16,r16,1
100049ac:	18ffffc4 	addi	r3,r3,-1
100049b0:	98c00115 	stw	r3,4(r19)
100049b4:	10ffffc3 	ldbu	r3,-1(r2)
100049b8:	e73fffc4 	addi	fp,fp,-1
100049bc:	80ffffc5 	stb	r3,-1(r16)
100049c0:	98800015 	stw	r2,0(r19)
100049c4:	e0000826 	beq	fp,zero,100049e8 <__svfscanf_r+0x1358>
100049c8:	98c00117 	ldw	r3,4(r19)
100049cc:	00ffeb16 	blt	zero,r3,1000497c <__alt_data_end+0xf800497c>
100049d0:	8809883a 	mov	r4,r17
100049d4:	980b883a 	mov	r5,r19
100049d8:	0009a0c0 	call	10009a0c <__srefill_r>
100049dc:	1000021e 	bne	r2,zero,100049e8 <__svfscanf_r+0x1358>
100049e0:	98800017 	ldw	r2,0(r19)
100049e4:	003fe506 	br	1000497c <__alt_data_end+0xf800497c>
100049e8:	d8809e17 	ldw	r2,632(sp)
100049ec:	856bc83a 	sub	r21,r16,r21
100049f0:	80000005 	stb	zero,0(r16)
100049f4:	dc009d17 	ldw	r16,628(sp)
100049f8:	10800044 	addi	r2,r2,1
100049fc:	a569883a 	add	r20,r20,r21
10004a00:	d8809e15 	stw	r2,632(sp)
10004a04:	dd809c15 	stw	r22,624(sp)
10004a08:	800d883a 	mov	r6,r16
10004a0c:	003b5906 	br	10003774 <__alt_data_end+0xf8003774>
10004a10:	dd409b04 	addi	r21,sp,620
10004a14:	003d2506 	br	10003eac <__alt_data_end+0xf8003eac>
10004a18:	002d883a 	mov	r22,zero
10004a1c:	003ba206 	br	100038a8 <__alt_data_end+0xf80038a8>
10004a20:	d9009c17 	ldw	r4,624(sp)
10004a24:	20c00017 	ldw	r3,0(r4)
10004a28:	21000104 	addi	r4,r4,4
10004a2c:	d9009c15 	stw	r4,624(sp)
10004a30:	18800015 	stw	r2,0(r3)
10004a34:	003fc806 	br	10004958 <__alt_data_end+0xf8004958>
10004a38:	b280008c 	andi	r10,r22,2
10004a3c:	50008126 	beq	r10,zero,10004c44 <__svfscanf_r+0x15b4>
10004a40:	d8c09c17 	ldw	r3,624(sp)
10004a44:	18800017 	ldw	r2,0(r3)
10004a48:	18c00104 	addi	r3,r3,4
10004a4c:	d8c09c15 	stw	r3,624(sp)
10004a50:	15400015 	stw	r21,0(r2)
10004a54:	15c00115 	stw	r23,4(r2)
10004a58:	003cde06 	br	10003dd4 <__alt_data_end+0xf8003dd4>
10004a5c:	00bf1fc4 	movi	r2,-897
10004a60:	b0ac703a 	and	r22,r22,r2
10004a64:	18000226 	beq	r3,zero,10004a70 <__svfscanf_r+0x13e0>
10004a68:	18ffffc4 	addi	r3,r3,-1
10004a6c:	e7000044 	addi	fp,fp,1
10004a70:	84000044 	addi	r16,r16,1
10004a74:	003f3506 	br	1000474c <__alt_data_end+0xf800474c>
10004a78:	803cfe1e 	bne	r16,zero,10003e74 <__alt_data_end+0xf8003e74>
10004a7c:	003b4106 	br	10003784 <__alt_data_end+0xf8003784>
10004a80:	d8c09c17 	ldw	r3,624(sp)
10004a84:	01400044 	movi	r5,1
10004a88:	e00d883a 	mov	r6,fp
10004a8c:	19000017 	ldw	r4,0(r3)
10004a90:	980f883a 	mov	r7,r19
10004a94:	0006f240 	call	10006f24 <fread>
10004a98:	d9009c17 	ldw	r4,624(sp)
10004a9c:	20c00104 	addi	r3,r4,4
10004aa0:	103c3126 	beq	r2,zero,10003b68 <__alt_data_end+0xf8003b68>
10004aa4:	1529883a 	add	r20,r2,r20
10004aa8:	d8809e17 	ldw	r2,632(sp)
10004aac:	dc009d17 	ldw	r16,628(sp)
10004ab0:	d8c09c15 	stw	r3,624(sp)
10004ab4:	10800044 	addi	r2,r2,1
10004ab8:	d8809e15 	stw	r2,632(sp)
10004abc:	800d883a 	mov	r6,r16
10004ac0:	003b2c06 	br	10003774 <__alt_data_end+0xf8003774>
10004ac4:	00ffff84 	movi	r3,-2
10004ac8:	10ff7126 	beq	r2,r3,10004890 <__alt_data_end+0xf8004890>
10004acc:	a9000017 	ldw	r4,0(r21)
10004ad0:	00079b40 	call	100079b4 <iswspace>
10004ad4:	103f6926 	beq	r2,zero,1000487c <__alt_data_end+0xf800487c>
10004ad8:	803f7426 	beq	r16,zero,100048ac <__alt_data_end+0xf80048ac>
10004adc:	843fffc4 	addi	r16,r16,-1
10004ae0:	d9000104 	addi	r4,sp,4
10004ae4:	2405883a 	add	r2,r4,r16
10004ae8:	11400003 	ldbu	r5,0(r2)
10004aec:	8809883a 	mov	r4,r17
10004af0:	980d883a 	mov	r6,r19
10004af4:	000c3e40 	call	1000c3e4 <_ungetc_r>
10004af8:	803ff81e 	bne	r16,zero,10004adc <__alt_data_end+0xf8004adc>
10004afc:	003f6b06 	br	100048ac <__alt_data_end+0xf80048ac>
10004b00:	99000017 	ldw	r4,0(r19)
10004b04:	1705c83a 	sub	r2,r2,fp
10004b08:	8721883a 	add	r16,r16,fp
10004b0c:	2707883a 	add	r3,r4,fp
10004b10:	98800115 	stw	r2,4(r19)
10004b14:	98c00015 	stw	r3,0(r19)
10004b18:	003cd606 	br	10003e74 <__alt_data_end+0xf8003e74>
10004b1c:	d880a117 	ldw	r2,644(sp)
10004b20:	000d883a 	mov	r6,zero
10004b24:	8809883a 	mov	r4,r17
10004b28:	11400044 	addi	r5,r2,1
10004b2c:	01c00284 	movi	r7,10
10004b30:	000b6e00 	call	1000b6e0 <_strtol_r>
10004b34:	d8c0a317 	ldw	r3,652(sp)
10004b38:	10cdc83a 	sub	r6,r2,r3
10004b3c:	d900a117 	ldw	r4,644(sp)
10004b40:	d88055c4 	addi	r2,sp,343
10004b44:	20800236 	bltu	r4,r2,10004b50 <__svfscanf_r+0x14c0>
10004b48:	d9005584 	addi	r4,sp,342
10004b4c:	d900a115 	stw	r4,644(sp)
10004b50:	d900a117 	ldw	r4,644(sp)
10004b54:	01440074 	movhi	r5,4097
10004b58:	29492f04 	addi	r5,r5,9404
10004b5c:	0009d800 	call	10009d80 <sprintf>
10004b60:	003c8e06 	br	10003d9c <__alt_data_end+0xf8003d9c>
10004b64:	b32c703a 	and	r22,r22,r12
10004b68:	01800044 	movi	r6,1
10004b6c:	003daf06 	br	1000422c <__alt_data_end+0xf800422c>
10004b70:	d8c0a217 	ldw	r3,648(sp)
10004b74:	a8ebc83a 	sub	r21,r21,r3
10004b78:	054dc83a 	sub	r6,zero,r21
10004b7c:	a83c8726 	beq	r21,zero,10003d9c <__alt_data_end+0xf8003d9c>
10004b80:	ddc0a115 	stw	r23,644(sp)
10004b84:	003fed06 	br	10004b3c <__alt_data_end+0xf8004b3c>
10004b88:	85c00083 	ldbu	r23,2(r16)
10004b8c:	b5800094 	ori	r22,r22,2
10004b90:	84000084 	addi	r16,r16,2
10004b94:	003b1e06 	br	10003810 <__alt_data_end+0xf8003810>
10004b98:	b080004c 	andi	r2,r22,1
10004b9c:	10000d1e 	bne	r2,zero,10004bd4 <__svfscanf_r+0x1544>
10004ba0:	b580008c 	andi	r22,r22,2
10004ba4:	b0000b26 	beq	r22,zero,10004bd4 <__svfscanf_r+0x1544>
10004ba8:	d8c09c17 	ldw	r3,624(sp)
10004bac:	d9009c17 	ldw	r4,624(sp)
10004bb0:	dc009d17 	ldw	r16,628(sp)
10004bb4:	18800017 	ldw	r2,0(r3)
10004bb8:	a007d7fa 	srai	r3,r20,31
10004bbc:	21000104 	addi	r4,r4,4
10004bc0:	15000015 	stw	r20,0(r2)
10004bc4:	10c00115 	stw	r3,4(r2)
10004bc8:	d9009c15 	stw	r4,624(sp)
10004bcc:	800d883a 	mov	r6,r16
10004bd0:	003ae806 	br	10003774 <__alt_data_end+0xf8003774>
10004bd4:	d9409c17 	ldw	r5,624(sp)
10004bd8:	dc009d17 	ldw	r16,628(sp)
10004bdc:	28800017 	ldw	r2,0(r5)
10004be0:	29400104 	addi	r5,r5,4
10004be4:	d9409c15 	stw	r5,624(sp)
10004be8:	15000015 	stw	r20,0(r2)
10004bec:	800d883a 	mov	r6,r16
10004bf0:	003ae006 	br	10003774 <__alt_data_end+0xf8003774>
10004bf4:	b0c0004c 	andi	r3,r22,1
10004bf8:	183f891e 	bne	r3,zero,10004a20 <__alt_data_end+0xf8004a20>
10004bfc:	b580008c 	andi	r22,r22,2
10004c00:	b03f8726 	beq	r22,zero,10004a20 <__alt_data_end+0xf8004a20>
10004c04:	d940a017 	ldw	r5,640(sp)
10004c08:	00840074 	movhi	r2,4097
10004c0c:	10af2604 	addi	r2,r2,-17256
10004c10:	8809883a 	mov	r4,r17
10004c14:	28802626 	beq	r5,r2,10004cb0 <__svfscanf_r+0x1620>
10004c18:	d9c09f17 	ldw	r7,636(sp)
10004c1c:	d9400104 	addi	r5,sp,4
10004c20:	000d883a 	mov	r6,zero
10004c24:	000b9680 	call	1000b968 <_strtoll_r>
10004c28:	d9409c17 	ldw	r5,624(sp)
10004c2c:	29000017 	ldw	r4,0(r5)
10004c30:	29400104 	addi	r5,r5,4
10004c34:	d9409c15 	stw	r5,624(sp)
10004c38:	20800015 	stw	r2,0(r4)
10004c3c:	20c00115 	stw	r3,4(r4)
10004c40:	003f4506 	br	10004958 <__alt_data_end+0xf8004958>
10004c44:	d8809c17 	ldw	r2,624(sp)
10004c48:	a809883a 	mov	r4,r21
10004c4c:	180b883a 	mov	r5,r3
10004c50:	14000104 	addi	r16,r2,4
10004c54:	15800017 	ldw	r22,0(r2)
10004c58:	0009c300 	call	10009c30 <__isnand>
10004c5c:	1000311e 	bne	r2,zero,10004d24 <__svfscanf_r+0x1694>
10004c60:	a809883a 	mov	r4,r21
10004c64:	b80b883a 	mov	r5,r23
10004c68:	000f2a80 	call	1000f2a8 <__truncdfsf2>
10004c6c:	b0800015 	stw	r2,0(r22)
10004c70:	dc009c15 	stw	r16,624(sp)
10004c74:	003c5706 	br	10003dd4 <__alt_data_end+0xf8003dd4>
10004c78:	0021883a 	mov	r16,zero
10004c7c:	003f0406 	br	10004890 <__alt_data_end+0xf8004890>
10004c80:	d9400104 	addi	r5,sp,4
10004c84:	9821883a 	mov	r16,r19
10004c88:	2dfabe2e 	bgeu	r5,r23,10003784 <__alt_data_end+0xf8003784>
10004c8c:	bcbfffc4 	addi	r18,r23,-1
10004c90:	dcc000c4 	addi	r19,sp,3
10004c94:	91400007 	ldb	r5,0(r18)
10004c98:	8809883a 	mov	r4,r17
10004c9c:	94bfffc4 	addi	r18,r18,-1
10004ca0:	800d883a 	mov	r6,r16
10004ca4:	000c3e40 	call	1000c3e4 <_ungetc_r>
10004ca8:	94fffa1e 	bne	r18,r19,10004c94 <__alt_data_end+0xf8004c94>
10004cac:	003ab506 	br	10003784 <__alt_data_end+0xf8003784>
10004cb0:	d9c09f17 	ldw	r7,636(sp)
10004cb4:	d9400104 	addi	r5,sp,4
10004cb8:	000d883a 	mov	r6,zero
10004cbc:	000bf600 	call	1000bf60 <_strtoull_r>
10004cc0:	003fd906 	br	10004c28 <__alt_data_end+0xf8004c28>
10004cc4:	d9000104 	addi	r4,sp,4
10004cc8:	9821883a 	mov	r16,r19
10004ccc:	25faad2e 	bgeu	r4,r23,10003784 <__alt_data_end+0xf8003784>
10004cd0:	bcbfffc4 	addi	r18,r23,-1
10004cd4:	dcc000c4 	addi	r19,sp,3
10004cd8:	91400007 	ldb	r5,0(r18)
10004cdc:	8809883a 	mov	r4,r17
10004ce0:	94bfffc4 	addi	r18,r18,-1
10004ce4:	800d883a 	mov	r6,r16
10004ce8:	000c3e40 	call	1000c3e4 <_ungetc_r>
10004cec:	94fffa1e 	bne	r18,r19,10004cd8 <__alt_data_end+0xf8004cd8>
10004cf0:	003aa406 	br	10003784 <__alt_data_end+0xf8003784>
10004cf4:	d8c00104 	addi	r3,sp,4
10004cf8:	9821883a 	mov	r16,r19
10004cfc:	1dfaa12e 	bgeu	r3,r23,10003784 <__alt_data_end+0xf8003784>
10004d00:	bcbfffc4 	addi	r18,r23,-1
10004d04:	dcc000c4 	addi	r19,sp,3
10004d08:	91400007 	ldb	r5,0(r18)
10004d0c:	8809883a 	mov	r4,r17
10004d10:	94bfffc4 	addi	r18,r18,-1
10004d14:	800d883a 	mov	r6,r16
10004d18:	000c3e40 	call	1000c3e4 <_ungetc_r>
10004d1c:	94fffa1e 	bne	r18,r19,10004d08 <__alt_data_end+0xf8004d08>
10004d20:	003a9806 	br	10003784 <__alt_data_end+0xf8003784>
10004d24:	0009883a 	mov	r4,zero
10004d28:	0009d200 	call	10009d20 <nanf>
10004d2c:	b0800015 	stw	r2,0(r22)
10004d30:	dc009c15 	stw	r16,624(sp)
10004d34:	003c2706 	br	10003dd4 <__alt_data_end+0xf8003dd4>

10004d38 <_vfscanf_r>:
10004d38:	defffb04 	addi	sp,sp,-20
10004d3c:	dc000315 	stw	r16,12(sp)
10004d40:	dfc00415 	stw	ra,16(sp)
10004d44:	2021883a 	mov	r16,r4
10004d48:	20000926 	beq	r4,zero,10004d70 <_vfscanf_r+0x38>
10004d4c:	20800e17 	ldw	r2,56(r4)
10004d50:	1000071e 	bne	r2,zero,10004d70 <_vfscanf_r+0x38>
10004d54:	d9400015 	stw	r5,0(sp)
10004d58:	d9800115 	stw	r6,4(sp)
10004d5c:	d9c00215 	stw	r7,8(sp)
10004d60:	0006aa00 	call	10006aa0 <__sinit>
10004d64:	d9c00217 	ldw	r7,8(sp)
10004d68:	d9800117 	ldw	r6,4(sp)
10004d6c:	d9400017 	ldw	r5,0(sp)
10004d70:	8009883a 	mov	r4,r16
10004d74:	dfc00417 	ldw	ra,16(sp)
10004d78:	dc000317 	ldw	r16,12(sp)
10004d7c:	dec00504 	addi	sp,sp,20
10004d80:	00036901 	jmpi	10003690 <__svfscanf_r>

10004d84 <__svfscanf>:
10004d84:	00840074 	movhi	r2,4097
10004d88:	10917f04 	addi	r2,r2,17916
10004d8c:	2007883a 	mov	r3,r4
10004d90:	11000017 	ldw	r4,0(r2)
10004d94:	2805883a 	mov	r2,r5
10004d98:	300f883a 	mov	r7,r6
10004d9c:	180b883a 	mov	r5,r3
10004da0:	100d883a 	mov	r6,r2
10004da4:	00036901 	jmpi	10003690 <__svfscanf_r>

10004da8 <vfscanf>:
10004da8:	defffb04 	addi	sp,sp,-20
10004dac:	dc000115 	stw	r16,4(sp)
10004db0:	04040074 	movhi	r16,4097
10004db4:	84117f04 	addi	r16,r16,17916
10004db8:	80800017 	ldw	r2,0(r16)
10004dbc:	dc800315 	stw	r18,12(sp)
10004dc0:	dc400215 	stw	r17,8(sp)
10004dc4:	dfc00415 	stw	ra,16(sp)
10004dc8:	2025883a 	mov	r18,r4
10004dcc:	2823883a 	mov	r17,r5
10004dd0:	300f883a 	mov	r7,r6
10004dd4:	10000726 	beq	r2,zero,10004df4 <vfscanf+0x4c>
10004dd8:	10c00e17 	ldw	r3,56(r2)
10004ddc:	1800051e 	bne	r3,zero,10004df4 <vfscanf+0x4c>
10004de0:	1009883a 	mov	r4,r2
10004de4:	d9800015 	stw	r6,0(sp)
10004de8:	0006aa00 	call	10006aa0 <__sinit>
10004dec:	80800017 	ldw	r2,0(r16)
10004df0:	d9c00017 	ldw	r7,0(sp)
10004df4:	1009883a 	mov	r4,r2
10004df8:	900b883a 	mov	r5,r18
10004dfc:	880d883a 	mov	r6,r17
10004e00:	dfc00417 	ldw	ra,16(sp)
10004e04:	dc800317 	ldw	r18,12(sp)
10004e08:	dc400217 	ldw	r17,8(sp)
10004e0c:	dc000117 	ldw	r16,4(sp)
10004e10:	dec00504 	addi	sp,sp,20
10004e14:	00036901 	jmpi	10003690 <__svfscanf_r>

10004e18 <__swsetup_r>:
10004e18:	00840074 	movhi	r2,4097
10004e1c:	10917f04 	addi	r2,r2,17916
10004e20:	10800017 	ldw	r2,0(r2)
10004e24:	defffd04 	addi	sp,sp,-12
10004e28:	dc400115 	stw	r17,4(sp)
10004e2c:	dc000015 	stw	r16,0(sp)
10004e30:	dfc00215 	stw	ra,8(sp)
10004e34:	2023883a 	mov	r17,r4
10004e38:	2821883a 	mov	r16,r5
10004e3c:	10000226 	beq	r2,zero,10004e48 <__swsetup_r+0x30>
10004e40:	10c00e17 	ldw	r3,56(r2)
10004e44:	18003d26 	beq	r3,zero,10004f3c <__swsetup_r+0x124>
10004e48:	8080030b 	ldhu	r2,12(r16)
10004e4c:	10c0020c 	andi	r3,r2,8
10004e50:	18ffffcc 	andi	r3,r3,65535
10004e54:	18e0001c 	xori	r3,r3,32768
10004e58:	18e00004 	addi	r3,r3,-32768
10004e5c:	18001226 	beq	r3,zero,10004ea8 <__swsetup_r+0x90>
10004e60:	80c00417 	ldw	r3,16(r16)
10004e64:	18001f26 	beq	r3,zero,10004ee4 <__swsetup_r+0xcc>
10004e68:	1100004c 	andi	r4,r2,1
10004e6c:	2000261e 	bne	r4,zero,10004f08 <__swsetup_r+0xf0>
10004e70:	1080008c 	andi	r2,r2,2
10004e74:	10bfffcc 	andi	r2,r2,65535
10004e78:	10a0001c 	xori	r2,r2,32768
10004e7c:	10a00004 	addi	r2,r2,-32768
10004e80:	1000311e 	bne	r2,zero,10004f48 <__swsetup_r+0x130>
10004e84:	80800517 	ldw	r2,20(r16)
10004e88:	80800215 	stw	r2,8(r16)
10004e8c:	18002326 	beq	r3,zero,10004f1c <__swsetup_r+0x104>
10004e90:	0005883a 	mov	r2,zero
10004e94:	dfc00217 	ldw	ra,8(sp)
10004e98:	dc400117 	ldw	r17,4(sp)
10004e9c:	dc000017 	ldw	r16,0(sp)
10004ea0:	dec00304 	addi	sp,sp,12
10004ea4:	f800283a 	ret
10004ea8:	10c0040c 	andi	r3,r2,16
10004eac:	18ffffcc 	andi	r3,r3,65535
10004eb0:	18e0001c 	xori	r3,r3,32768
10004eb4:	18e00004 	addi	r3,r3,-32768
10004eb8:	18001e26 	beq	r3,zero,10004f34 <__swsetup_r+0x11c>
10004ebc:	10c0010c 	andi	r3,r2,4
10004ec0:	18ffffcc 	andi	r3,r3,65535
10004ec4:	18e0001c 	xori	r3,r3,32768
10004ec8:	18e00004 	addi	r3,r3,-32768
10004ecc:	1800211e 	bne	r3,zero,10004f54 <__swsetup_r+0x13c>
10004ed0:	80c00417 	ldw	r3,16(r16)
10004ed4:	11400214 	ori	r5,r2,8
10004ed8:	8140030d 	sth	r5,12(r16)
10004edc:	2805883a 	mov	r2,r5
10004ee0:	183fe11e 	bne	r3,zero,10004e68 <__alt_data_end+0xf8004e68>
10004ee4:	1140a00c 	andi	r5,r2,640
10004ee8:	01008004 	movi	r4,512
10004eec:	293fde26 	beq	r5,r4,10004e68 <__alt_data_end+0xf8004e68>
10004ef0:	8809883a 	mov	r4,r17
10004ef4:	800b883a 	mov	r5,r16
10004ef8:	0007ac80 	call	10007ac8 <__smakebuf_r>
10004efc:	8080030b 	ldhu	r2,12(r16)
10004f00:	80c00417 	ldw	r3,16(r16)
10004f04:	003fd806 	br	10004e68 <__alt_data_end+0xf8004e68>
10004f08:	80800517 	ldw	r2,20(r16)
10004f0c:	80000215 	stw	zero,8(r16)
10004f10:	0085c83a 	sub	r2,zero,r2
10004f14:	80800615 	stw	r2,24(r16)
10004f18:	183fdd1e 	bne	r3,zero,10004e90 <__alt_data_end+0xf8004e90>
10004f1c:	8080030b 	ldhu	r2,12(r16)
10004f20:	1080200c 	andi	r2,r2,128
10004f24:	10bfffcc 	andi	r2,r2,65535
10004f28:	10a0001c 	xori	r2,r2,32768
10004f2c:	10a00004 	addi	r2,r2,-32768
10004f30:	103fd826 	beq	r2,zero,10004e94 <__alt_data_end+0xf8004e94>
10004f34:	00bfffc4 	movi	r2,-1
10004f38:	003fd606 	br	10004e94 <__alt_data_end+0xf8004e94>
10004f3c:	1009883a 	mov	r4,r2
10004f40:	0006aa00 	call	10006aa0 <__sinit>
10004f44:	003fc006 	br	10004e48 <__alt_data_end+0xf8004e48>
10004f48:	0005883a 	mov	r2,zero
10004f4c:	80800215 	stw	r2,8(r16)
10004f50:	003fce06 	br	10004e8c <__alt_data_end+0xf8004e8c>
10004f54:	81400c17 	ldw	r5,48(r16)
10004f58:	28000626 	beq	r5,zero,10004f74 <__swsetup_r+0x15c>
10004f5c:	80c01004 	addi	r3,r16,64
10004f60:	28c00326 	beq	r5,r3,10004f70 <__swsetup_r+0x158>
10004f64:	8809883a 	mov	r4,r17
10004f68:	00070a00 	call	100070a0 <_free_r>
10004f6c:	8080030b 	ldhu	r2,12(r16)
10004f70:	80000c15 	stw	zero,48(r16)
10004f74:	80c00417 	ldw	r3,16(r16)
10004f78:	013ff6c4 	movi	r4,-37
10004f7c:	2084703a 	and	r2,r4,r2
10004f80:	80000115 	stw	zero,4(r16)
10004f84:	80c00015 	stw	r3,0(r16)
10004f88:	003fd206 	br	10004ed4 <__alt_data_end+0xf8004ed4>

10004f8c <quorem>:
10004f8c:	defff204 	addi	sp,sp,-56
10004f90:	dd000815 	stw	r20,32(sp)
10004f94:	20800417 	ldw	r2,16(r4)
10004f98:	2d000417 	ldw	r20,16(r5)
10004f9c:	dcc00715 	stw	r19,28(sp)
10004fa0:	dfc00d15 	stw	ra,52(sp)
10004fa4:	df000c15 	stw	fp,48(sp)
10004fa8:	ddc00b15 	stw	r23,44(sp)
10004fac:	dd800a15 	stw	r22,40(sp)
10004fb0:	dd400915 	stw	r21,36(sp)
10004fb4:	dc800615 	stw	r18,24(sp)
10004fb8:	dc400515 	stw	r17,20(sp)
10004fbc:	dc000415 	stw	r16,16(sp)
10004fc0:	d9400015 	stw	r5,0(sp)
10004fc4:	2027883a 	mov	r19,r4
10004fc8:	15007d16 	blt	r2,r20,100051c0 <quorem+0x234>
10004fcc:	a0800104 	addi	r2,r20,4
10004fd0:	1085883a 	add	r2,r2,r2
10004fd4:	1085883a 	add	r2,r2,r2
10004fd8:	28ad883a 	add	r22,r5,r2
10004fdc:	2085883a 	add	r2,r4,r2
10004fe0:	10800017 	ldw	r2,0(r2)
10004fe4:	b1400017 	ldw	r5,0(r22)
10004fe8:	a53fffc4 	addi	r20,r20,-1
10004fec:	1009883a 	mov	r4,r2
10004ff0:	29400044 	addi	r5,r5,1
10004ff4:	d8800115 	stw	r2,4(sp)
10004ff8:	000f5440 	call	1000f544 <__udivsi3>
10004ffc:	1025883a 	mov	r18,r2
10005000:	d8800017 	ldw	r2,0(sp)
10005004:	9f000504 	addi	fp,r19,20
10005008:	14000504 	addi	r16,r2,20
1000500c:	90003626 	beq	r18,zero,100050e8 <quorem+0x15c>
10005010:	802b883a 	mov	r21,r16
10005014:	e023883a 	mov	r17,fp
10005018:	0007883a 	mov	r3,zero
1000501c:	002f883a 	mov	r23,zero
10005020:	a9800017 	ldw	r6,0(r21)
10005024:	900b883a 	mov	r5,r18
10005028:	d8c00315 	stw	r3,12(sp)
1000502c:	313fffcc 	andi	r4,r6,65535
10005030:	d9800215 	stw	r6,8(sp)
10005034:	000f5540 	call	1000f554 <__mulsi3>
10005038:	d9800217 	ldw	r6,8(sp)
1000503c:	d8c00317 	ldw	r3,12(sp)
10005040:	900b883a 	mov	r5,r18
10005044:	3008d43a 	srli	r4,r6,16
10005048:	1887883a 	add	r3,r3,r2
1000504c:	d8c00315 	stw	r3,12(sp)
10005050:	000f5540 	call	1000f554 <__mulsi3>
10005054:	89400017 	ldw	r5,0(r17)
10005058:	d8c00317 	ldw	r3,12(sp)
1000505c:	ad400104 	addi	r21,r21,4
10005060:	293fffcc 	andi	r4,r5,65535
10005064:	1810d43a 	srli	r8,r3,16
10005068:	25c9883a 	add	r4,r4,r23
1000506c:	18ffffcc 	andi	r3,r3,65535
10005070:	20c9c83a 	sub	r4,r4,r3
10005074:	280cd43a 	srli	r6,r5,16
10005078:	4085883a 	add	r2,r8,r2
1000507c:	2007d43a 	srai	r3,r4,16
10005080:	117fffcc 	andi	r5,r2,65535
10005084:	314bc83a 	sub	r5,r6,r5
10005088:	28cb883a 	add	r5,r5,r3
1000508c:	8940008d 	sth	r5,2(r17)
10005090:	8900000d 	sth	r4,0(r17)
10005094:	1006d43a 	srli	r3,r2,16
10005098:	282fd43a 	srai	r23,r5,16
1000509c:	8c400104 	addi	r17,r17,4
100050a0:	b57fdf2e 	bgeu	r22,r21,10005020 <__alt_data_end+0xf8005020>
100050a4:	d8c00117 	ldw	r3,4(sp)
100050a8:	18000f1e 	bne	r3,zero,100050e8 <quorem+0x15c>
100050ac:	a0800144 	addi	r2,r20,5
100050b0:	1085883a 	add	r2,r2,r2
100050b4:	1085883a 	add	r2,r2,r2
100050b8:	9887883a 	add	r3,r19,r2
100050bc:	18bfff04 	addi	r2,r3,-4
100050c0:	e080082e 	bgeu	fp,r2,100050e4 <quorem+0x158>
100050c4:	18ffff17 	ldw	r3,-4(r3)
100050c8:	18000326 	beq	r3,zero,100050d8 <quorem+0x14c>
100050cc:	00000506 	br	100050e4 <quorem+0x158>
100050d0:	10c00017 	ldw	r3,0(r2)
100050d4:	1800031e 	bne	r3,zero,100050e4 <quorem+0x158>
100050d8:	10bfff04 	addi	r2,r2,-4
100050dc:	a53fffc4 	addi	r20,r20,-1
100050e0:	e0bffb36 	bltu	fp,r2,100050d0 <__alt_data_end+0xf80050d0>
100050e4:	9d000415 	stw	r20,16(r19)
100050e8:	d9400017 	ldw	r5,0(sp)
100050ec:	9809883a 	mov	r4,r19
100050f0:	0008b440 	call	10008b44 <__mcmp>
100050f4:	10002516 	blt	r2,zero,1000518c <quorem+0x200>
100050f8:	94800044 	addi	r18,r18,1
100050fc:	e007883a 	mov	r3,fp
10005100:	000d883a 	mov	r6,zero
10005104:	18800017 	ldw	r2,0(r3)
10005108:	82000017 	ldw	r8,0(r16)
1000510c:	84000104 	addi	r16,r16,4
10005110:	11ffffcc 	andi	r7,r2,65535
10005114:	413fffcc 	andi	r4,r8,65535
10005118:	398d883a 	add	r6,r7,r6
1000511c:	310fc83a 	sub	r7,r6,r4
10005120:	4010d43a 	srli	r8,r8,16
10005124:	100cd43a 	srli	r6,r2,16
10005128:	3809d43a 	srai	r4,r7,16
1000512c:	19c0000d 	sth	r7,0(r3)
10005130:	320dc83a 	sub	r6,r6,r8
10005134:	310d883a 	add	r6,r6,r4
10005138:	1980008d 	sth	r6,2(r3)
1000513c:	300dd43a 	srai	r6,r6,16
10005140:	18c00104 	addi	r3,r3,4
10005144:	b43fef2e 	bgeu	r22,r16,10005104 <__alt_data_end+0xf8005104>
10005148:	a0800144 	addi	r2,r20,5
1000514c:	1085883a 	add	r2,r2,r2
10005150:	1085883a 	add	r2,r2,r2
10005154:	9885883a 	add	r2,r19,r2
10005158:	10c00017 	ldw	r3,0(r2)
1000515c:	18000b1e 	bne	r3,zero,1000518c <quorem+0x200>
10005160:	10ffff04 	addi	r3,r2,-4
10005164:	e0c0082e 	bgeu	fp,r3,10005188 <quorem+0x1fc>
10005168:	10bfff17 	ldw	r2,-4(r2)
1000516c:	10000326 	beq	r2,zero,1000517c <quorem+0x1f0>
10005170:	00000506 	br	10005188 <quorem+0x1fc>
10005174:	18800017 	ldw	r2,0(r3)
10005178:	1000031e 	bne	r2,zero,10005188 <quorem+0x1fc>
1000517c:	18ffff04 	addi	r3,r3,-4
10005180:	a53fffc4 	addi	r20,r20,-1
10005184:	e0fffb36 	bltu	fp,r3,10005174 <__alt_data_end+0xf8005174>
10005188:	9d000415 	stw	r20,16(r19)
1000518c:	9005883a 	mov	r2,r18
10005190:	dfc00d17 	ldw	ra,52(sp)
10005194:	df000c17 	ldw	fp,48(sp)
10005198:	ddc00b17 	ldw	r23,44(sp)
1000519c:	dd800a17 	ldw	r22,40(sp)
100051a0:	dd400917 	ldw	r21,36(sp)
100051a4:	dd000817 	ldw	r20,32(sp)
100051a8:	dcc00717 	ldw	r19,28(sp)
100051ac:	dc800617 	ldw	r18,24(sp)
100051b0:	dc400517 	ldw	r17,20(sp)
100051b4:	dc000417 	ldw	r16,16(sp)
100051b8:	dec00e04 	addi	sp,sp,56
100051bc:	f800283a 	ret
100051c0:	0005883a 	mov	r2,zero
100051c4:	003ff206 	br	10005190 <__alt_data_end+0xf8005190>

100051c8 <_dtoa_r>:
100051c8:	20801017 	ldw	r2,64(r4)
100051cc:	deffdf04 	addi	sp,sp,-132
100051d0:	dcc01a15 	stw	r19,104(sp)
100051d4:	dc801915 	stw	r18,100(sp)
100051d8:	dc401815 	stw	r17,96(sp)
100051dc:	dc001715 	stw	r16,92(sp)
100051e0:	dfc02015 	stw	ra,128(sp)
100051e4:	df001f15 	stw	fp,124(sp)
100051e8:	ddc01e15 	stw	r23,120(sp)
100051ec:	dd801d15 	stw	r22,116(sp)
100051f0:	dd401c15 	stw	r21,112(sp)
100051f4:	dd001b15 	stw	r20,108(sp)
100051f8:	d9400315 	stw	r5,12(sp)
100051fc:	d9c00415 	stw	r7,16(sp)
10005200:	2021883a 	mov	r16,r4
10005204:	3025883a 	mov	r18,r6
10005208:	dcc02317 	ldw	r19,140(sp)
1000520c:	3023883a 	mov	r17,r6
10005210:	10000826 	beq	r2,zero,10005234 <_dtoa_r+0x6c>
10005214:	20c01117 	ldw	r3,68(r4)
10005218:	01800044 	movi	r6,1
1000521c:	100b883a 	mov	r5,r2
10005220:	30cc983a 	sll	r6,r6,r3
10005224:	10c00115 	stw	r3,4(r2)
10005228:	11800215 	stw	r6,8(r2)
1000522c:	00082a00 	call	100082a0 <_Bfree>
10005230:	80001015 	stw	zero,64(r16)
10005234:	90002f16 	blt	r18,zero,100052f4 <_dtoa_r+0x12c>
10005238:	98000015 	stw	zero,0(r19)
1000523c:	90dffc2c 	andhi	r3,r18,32752
10005240:	009ffc34 	movhi	r2,32752
10005244:	18801c26 	beq	r3,r2,100052b8 <_dtoa_r+0xf0>
10005248:	d9000317 	ldw	r4,12(sp)
1000524c:	880b883a 	mov	r5,r17
10005250:	000d883a 	mov	r6,zero
10005254:	000f883a 	mov	r7,zero
10005258:	000ef340 	call	1000ef34 <__nedf2>
1000525c:	10002c1e 	bne	r2,zero,10005310 <_dtoa_r+0x148>
10005260:	d9002217 	ldw	r4,136(sp)
10005264:	d9c02417 	ldw	r7,144(sp)
10005268:	00800044 	movi	r2,1
1000526c:	20800015 	stw	r2,0(r4)
10005270:	38019426 	beq	r7,zero,100058c4 <_dtoa_r+0x6fc>
10005274:	00840074 	movhi	r2,4097
10005278:	10892644 	addi	r2,r2,9369
1000527c:	38800015 	stw	r2,0(r7)
10005280:	15ffffc4 	addi	r23,r2,-1
10005284:	b805883a 	mov	r2,r23
10005288:	dfc02017 	ldw	ra,128(sp)
1000528c:	df001f17 	ldw	fp,124(sp)
10005290:	ddc01e17 	ldw	r23,120(sp)
10005294:	dd801d17 	ldw	r22,116(sp)
10005298:	dd401c17 	ldw	r21,112(sp)
1000529c:	dd001b17 	ldw	r20,108(sp)
100052a0:	dcc01a17 	ldw	r19,104(sp)
100052a4:	dc801917 	ldw	r18,100(sp)
100052a8:	dc401817 	ldw	r17,96(sp)
100052ac:	dc001717 	ldw	r16,92(sp)
100052b0:	dec02104 	addi	sp,sp,132
100052b4:	f800283a 	ret
100052b8:	d8c02217 	ldw	r3,136(sp)
100052bc:	d9000317 	ldw	r4,12(sp)
100052c0:	0089c3c4 	movi	r2,9999
100052c4:	18800015 	stw	r2,0(r3)
100052c8:	20016c26 	beq	r4,zero,1000587c <_dtoa_r+0x6b4>
100052cc:	05c40074 	movhi	r23,4097
100052d0:	bdc9dd04 	addi	r23,r23,10100
100052d4:	d9c02417 	ldw	r7,144(sp)
100052d8:	383fea26 	beq	r7,zero,10005284 <__alt_data_end+0xf8005284>
100052dc:	b88000c7 	ldb	r2,3(r23)
100052e0:	10016d1e 	bne	r2,zero,10005898 <_dtoa_r+0x6d0>
100052e4:	b88000c4 	addi	r2,r23,3
100052e8:	d8c02417 	ldw	r3,144(sp)
100052ec:	18800015 	stw	r2,0(r3)
100052f0:	003fe406 	br	10005284 <__alt_data_end+0xf8005284>
100052f4:	04600034 	movhi	r17,32768
100052f8:	8c7fffc4 	addi	r17,r17,-1
100052fc:	9462703a 	and	r17,r18,r17
10005300:	00800044 	movi	r2,1
10005304:	98800015 	stw	r2,0(r19)
10005308:	8825883a 	mov	r18,r17
1000530c:	003fcb06 	br	1000523c <__alt_data_end+0xf800523c>
10005310:	d9400317 	ldw	r5,12(sp)
10005314:	9028d53a 	srli	r20,r18,20
10005318:	d8800204 	addi	r2,sp,8
1000531c:	d8800015 	stw	r2,0(sp)
10005320:	8009883a 	mov	r4,r16
10005324:	880d883a 	mov	r6,r17
10005328:	d9c00104 	addi	r7,sp,4
1000532c:	0008eec0 	call	10008eec <__d2b>
10005330:	a501ffcc 	andi	r20,r20,2047
10005334:	1039883a 	mov	fp,r2
10005338:	a001591e 	bne	r20,zero,100058a0 <_dtoa_r+0x6d8>
1000533c:	dd400217 	ldw	r21,8(sp)
10005340:	dd000117 	ldw	r20,4(sp)
10005344:	00befbc4 	movi	r2,-1041
10005348:	ad29883a 	add	r20,r21,r20
1000534c:	a082d216 	blt	r20,r2,10005e98 <_dtoa_r+0xcd0>
10005350:	d8c00317 	ldw	r3,12(sp)
10005354:	013f0384 	movi	r4,-1010
10005358:	2509c83a 	sub	r4,r4,r20
1000535c:	a0810484 	addi	r2,r20,1042
10005360:	9124983a 	sll	r18,r18,r4
10005364:	1884d83a 	srl	r2,r3,r2
10005368:	9088b03a 	or	r4,r18,r2
1000536c:	000f3080 	call	1000f308 <__floatunsidf>
10005370:	1009883a 	mov	r4,r2
10005374:	017f8434 	movhi	r5,65040
10005378:	00800044 	movi	r2,1
1000537c:	194b883a 	add	r5,r3,r5
10005380:	a53fffc4 	addi	r20,r20,-1
10005384:	d8800f15 	stw	r2,60(sp)
10005388:	000d883a 	mov	r6,zero
1000538c:	01cffe34 	movhi	r7,16376
10005390:	000e9e00 	call	1000e9e0 <__subdf3>
10005394:	1009883a 	mov	r4,r2
10005398:	180b883a 	mov	r5,r3
1000539c:	0198dbf4 	movhi	r6,25455
100053a0:	3190d844 	addi	r6,r6,17249
100053a4:	01cff4f4 	movhi	r7,16339
100053a8:	39e1e9c4 	addi	r7,r7,-30809
100053ac:	000ea400 	call	1000ea40 <__muldf3>
100053b0:	180b883a 	mov	r5,r3
100053b4:	01a2d874 	movhi	r6,35681
100053b8:	31b22cc4 	addi	r6,r6,-14157
100053bc:	01cff1f4 	movhi	r7,16327
100053c0:	39e28a04 	addi	r7,r7,-30168
100053c4:	1009883a 	mov	r4,r2
100053c8:	000e98c0 	call	1000e98c <__adddf3>
100053cc:	a009883a 	mov	r4,r20
100053d0:	1027883a 	mov	r19,r2
100053d4:	1825883a 	mov	r18,r3
100053d8:	000f1100 	call	1000f110 <__floatsidf>
100053dc:	1009883a 	mov	r4,r2
100053e0:	180b883a 	mov	r5,r3
100053e4:	019427f4 	movhi	r6,20639
100053e8:	319e7ec4 	addi	r6,r6,31227
100053ec:	01cff4f4 	movhi	r7,16339
100053f0:	39d104c4 	addi	r7,r7,17427
100053f4:	000ea400 	call	1000ea40 <__muldf3>
100053f8:	9809883a 	mov	r4,r19
100053fc:	900b883a 	mov	r5,r18
10005400:	100d883a 	mov	r6,r2
10005404:	180f883a 	mov	r7,r3
10005408:	000e98c0 	call	1000e98c <__adddf3>
1000540c:	1009883a 	mov	r4,r2
10005410:	180b883a 	mov	r5,r3
10005414:	1027883a 	mov	r19,r2
10005418:	1825883a 	mov	r18,r3
1000541c:	000f1e40 	call	1000f1e4 <__fixdfsi>
10005420:	9809883a 	mov	r4,r19
10005424:	900b883a 	mov	r5,r18
10005428:	000d883a 	mov	r6,zero
1000542c:	000f883a 	mov	r7,zero
10005430:	d8800615 	stw	r2,24(sp)
10005434:	000f0580 	call	1000f058 <__ltdf2>
10005438:	10027e16 	blt	r2,zero,10005e34 <_dtoa_r+0xc6c>
1000543c:	d8c00617 	ldw	r3,24(sp)
10005440:	00800584 	movi	r2,22
10005444:	10c26c36 	bltu	r2,r3,10005df8 <_dtoa_r+0xc30>
10005448:	180490fa 	slli	r2,r3,3
1000544c:	00c40074 	movhi	r3,4097
10005450:	18ca0304 	addi	r3,r3,10252
10005454:	d9800317 	ldw	r6,12(sp)
10005458:	1885883a 	add	r2,r3,r2
1000545c:	11000017 	ldw	r4,0(r2)
10005460:	11400117 	ldw	r5,4(r2)
10005464:	880f883a 	mov	r7,r17
10005468:	000ef900 	call	1000ef90 <__gtdf2>
1000546c:	00828f0e 	bge	zero,r2,10005eac <_dtoa_r+0xce4>
10005470:	d8800617 	ldw	r2,24(sp)
10005474:	d8000d15 	stw	zero,52(sp)
10005478:	10bfffc4 	addi	r2,r2,-1
1000547c:	d8800615 	stw	r2,24(sp)
10005480:	ad29c83a 	sub	r20,r21,r20
10005484:	a53fffc4 	addi	r20,r20,-1
10005488:	a0026616 	blt	r20,zero,10005e24 <_dtoa_r+0xc5c>
1000548c:	dd000715 	stw	r20,28(sp)
10005490:	d8000815 	stw	zero,32(sp)
10005494:	d8800617 	ldw	r2,24(sp)
10005498:	10025a16 	blt	r2,zero,10005e04 <_dtoa_r+0xc3c>
1000549c:	d8c00717 	ldw	r3,28(sp)
100054a0:	d8800b15 	stw	r2,44(sp)
100054a4:	d8000a15 	stw	zero,40(sp)
100054a8:	1887883a 	add	r3,r3,r2
100054ac:	d8c00715 	stw	r3,28(sp)
100054b0:	d9c00417 	ldw	r7,16(sp)
100054b4:	00800244 	movi	r2,9
100054b8:	11c10536 	bltu	r2,r7,100058d0 <_dtoa_r+0x708>
100054bc:	00800144 	movi	r2,5
100054c0:	11c4c60e 	bge	r2,r7,100067dc <_dtoa_r+0x1614>
100054c4:	39ffff04 	addi	r7,r7,-4
100054c8:	d9c00415 	stw	r7,16(sp)
100054cc:	0027883a 	mov	r19,zero
100054d0:	d9c00417 	ldw	r7,16(sp)
100054d4:	008000c4 	movi	r2,3
100054d8:	3883a226 	beq	r7,r2,10006364 <_dtoa_r+0x119c>
100054dc:	11c2bc16 	blt	r2,r7,10005fd0 <_dtoa_r+0xe08>
100054e0:	00800084 	movi	r2,2
100054e4:	3880fb1e 	bne	r7,r2,100058d4 <_dtoa_r+0x70c>
100054e8:	d8000c15 	stw	zero,48(sp)
100054ec:	d9002117 	ldw	r4,132(sp)
100054f0:	0103ae0e 	bge	zero,r4,100063ac <_dtoa_r+0x11e4>
100054f4:	2025883a 	mov	r18,r4
100054f8:	d9000e15 	stw	r4,56(sp)
100054fc:	d9000915 	stw	r4,36(sp)
10005500:	80001115 	stw	zero,68(r16)
10005504:	008005c4 	movi	r2,23
10005508:	1484b22e 	bgeu	r2,r18,100067d4 <_dtoa_r+0x160c>
1000550c:	00c00044 	movi	r3,1
10005510:	00800104 	movi	r2,4
10005514:	1085883a 	add	r2,r2,r2
10005518:	11000504 	addi	r4,r2,20
1000551c:	180b883a 	mov	r5,r3
10005520:	18c00044 	addi	r3,r3,1
10005524:	913ffb2e 	bgeu	r18,r4,10005514 <__alt_data_end+0xf8005514>
10005528:	81401115 	stw	r5,68(r16)
1000552c:	8009883a 	mov	r4,r16
10005530:	00081f80 	call	100081f8 <_Balloc>
10005534:	102f883a 	mov	r23,r2
10005538:	80801015 	stw	r2,64(r16)
1000553c:	00800384 	movi	r2,14
10005540:	1480f036 	bltu	r2,r18,10005904 <_dtoa_r+0x73c>
10005544:	9800ef26 	beq	r19,zero,10005904 <_dtoa_r+0x73c>
10005548:	d8800617 	ldw	r2,24(sp)
1000554c:	00839c0e 	bge	zero,r2,100063c0 <_dtoa_r+0x11f8>
10005550:	d8c00617 	ldw	r3,24(sp)
10005554:	108003cc 	andi	r2,r2,15
10005558:	100490fa 	slli	r2,r2,3
1000555c:	182bd13a 	srai	r21,r3,4
10005560:	00c40074 	movhi	r3,4097
10005564:	18ca0304 	addi	r3,r3,10252
10005568:	1885883a 	add	r2,r3,r2
1000556c:	a8c0040c 	andi	r3,r21,16
10005570:	12800017 	ldw	r10,0(r2)
10005574:	15800117 	ldw	r22,4(r2)
10005578:	18038726 	beq	r3,zero,10006398 <_dtoa_r+0x11d0>
1000557c:	00840074 	movhi	r2,4097
10005580:	1089f904 	addi	r2,r2,10212
10005584:	11800817 	ldw	r6,32(r2)
10005588:	11c00917 	ldw	r7,36(r2)
1000558c:	d9000317 	ldw	r4,12(sp)
10005590:	880b883a 	mov	r5,r17
10005594:	da801515 	stw	r10,84(sp)
10005598:	000ed240 	call	1000ed24 <__divdf3>
1000559c:	da801517 	ldw	r10,84(sp)
100055a0:	d8801015 	stw	r2,64(sp)
100055a4:	1829883a 	mov	r20,r3
100055a8:	ad4003cc 	andi	r21,r21,15
100055ac:	048000c4 	movi	r18,3
100055b0:	a8001126 	beq	r21,zero,100055f8 <_dtoa_r+0x430>
100055b4:	04c40074 	movhi	r19,4097
100055b8:	9cc9f904 	addi	r19,r19,10212
100055bc:	5005883a 	mov	r2,r10
100055c0:	b007883a 	mov	r3,r22
100055c4:	a980004c 	andi	r6,r21,1
100055c8:	1009883a 	mov	r4,r2
100055cc:	a82bd07a 	srai	r21,r21,1
100055d0:	180b883a 	mov	r5,r3
100055d4:	30000426 	beq	r6,zero,100055e8 <_dtoa_r+0x420>
100055d8:	99800017 	ldw	r6,0(r19)
100055dc:	99c00117 	ldw	r7,4(r19)
100055e0:	94800044 	addi	r18,r18,1
100055e4:	000ea400 	call	1000ea40 <__muldf3>
100055e8:	9cc00204 	addi	r19,r19,8
100055ec:	a83ff51e 	bne	r21,zero,100055c4 <__alt_data_end+0xf80055c4>
100055f0:	1015883a 	mov	r10,r2
100055f4:	182d883a 	mov	r22,r3
100055f8:	d9001017 	ldw	r4,64(sp)
100055fc:	a00b883a 	mov	r5,r20
10005600:	500d883a 	mov	r6,r10
10005604:	b00f883a 	mov	r7,r22
10005608:	000ed240 	call	1000ed24 <__divdf3>
1000560c:	1027883a 	mov	r19,r2
10005610:	1829883a 	mov	r20,r3
10005614:	d8c00d17 	ldw	r3,52(sp)
10005618:	18000626 	beq	r3,zero,10005634 <_dtoa_r+0x46c>
1000561c:	9809883a 	mov	r4,r19
10005620:	a00b883a 	mov	r5,r20
10005624:	000d883a 	mov	r6,zero
10005628:	01cffc34 	movhi	r7,16368
1000562c:	000f0580 	call	1000f058 <__ltdf2>
10005630:	10040e16 	blt	r2,zero,1000666c <_dtoa_r+0x14a4>
10005634:	9009883a 	mov	r4,r18
10005638:	000f1100 	call	1000f110 <__floatsidf>
1000563c:	1009883a 	mov	r4,r2
10005640:	180b883a 	mov	r5,r3
10005644:	980d883a 	mov	r6,r19
10005648:	a00f883a 	mov	r7,r20
1000564c:	000ea400 	call	1000ea40 <__muldf3>
10005650:	1009883a 	mov	r4,r2
10005654:	180b883a 	mov	r5,r3
10005658:	000d883a 	mov	r6,zero
1000565c:	01d00734 	movhi	r7,16412
10005660:	000e98c0 	call	1000e98c <__adddf3>
10005664:	057f3034 	movhi	r21,64704
10005668:	1d6b883a 	add	r21,r3,r21
1000566c:	d8c00917 	ldw	r3,36(sp)
10005670:	1025883a 	mov	r18,r2
10005674:	18031f26 	beq	r3,zero,100062f4 <_dtoa_r+0x112c>
10005678:	d8800617 	ldw	r2,24(sp)
1000567c:	dac00917 	ldw	r11,36(sp)
10005680:	d8801315 	stw	r2,76(sp)
10005684:	d8c00c17 	ldw	r3,48(sp)
10005688:	18039026 	beq	r3,zero,100064cc <_dtoa_r+0x1304>
1000568c:	58bfffc4 	addi	r2,r11,-1
10005690:	100490fa 	slli	r2,r2,3
10005694:	00c40074 	movhi	r3,4097
10005698:	18ca0304 	addi	r3,r3,10252
1000569c:	0009883a 	mov	r4,zero
100056a0:	1885883a 	add	r2,r3,r2
100056a4:	11800017 	ldw	r6,0(r2)
100056a8:	11c00117 	ldw	r7,4(r2)
100056ac:	014ff834 	movhi	r5,16352
100056b0:	dac01615 	stw	r11,88(sp)
100056b4:	000ed240 	call	1000ed24 <__divdf3>
100056b8:	900d883a 	mov	r6,r18
100056bc:	a80f883a 	mov	r7,r21
100056c0:	1009883a 	mov	r4,r2
100056c4:	180b883a 	mov	r5,r3
100056c8:	000e9e00 	call	1000e9e0 <__subdf3>
100056cc:	a00b883a 	mov	r5,r20
100056d0:	9809883a 	mov	r4,r19
100056d4:	182b883a 	mov	r21,r3
100056d8:	d8801015 	stw	r2,64(sp)
100056dc:	000f1e40 	call	1000f1e4 <__fixdfsi>
100056e0:	1009883a 	mov	r4,r2
100056e4:	d8801515 	stw	r2,84(sp)
100056e8:	000f1100 	call	1000f110 <__floatsidf>
100056ec:	9809883a 	mov	r4,r19
100056f0:	a00b883a 	mov	r5,r20
100056f4:	100d883a 	mov	r6,r2
100056f8:	180f883a 	mov	r7,r3
100056fc:	000e9e00 	call	1000e9e0 <__subdf3>
10005700:	da401517 	ldw	r9,84(sp)
10005704:	d9001017 	ldw	r4,64(sp)
10005708:	a80b883a 	mov	r5,r21
1000570c:	4d000c04 	addi	r20,r9,48
10005710:	bd000005 	stb	r20,0(r23)
10005714:	100d883a 	mov	r6,r2
10005718:	180f883a 	mov	r7,r3
1000571c:	bd800044 	addi	r22,r23,1
10005720:	1025883a 	mov	r18,r2
10005724:	1827883a 	mov	r19,r3
10005728:	000ef900 	call	1000ef90 <__gtdf2>
1000572c:	00842216 	blt	zero,r2,100067b8 <_dtoa_r+0x15f0>
10005730:	0009883a 	mov	r4,zero
10005734:	014ffc34 	movhi	r5,16368
10005738:	900d883a 	mov	r6,r18
1000573c:	980f883a 	mov	r7,r19
10005740:	000e9e00 	call	1000e9e0 <__subdf3>
10005744:	d9001017 	ldw	r4,64(sp)
10005748:	a80b883a 	mov	r5,r21
1000574c:	100d883a 	mov	r6,r2
10005750:	180f883a 	mov	r7,r3
10005754:	000ef900 	call	1000ef90 <__gtdf2>
10005758:	dac01617 	ldw	r11,88(sp)
1000575c:	00841316 	blt	zero,r2,100067ac <_dtoa_r+0x15e4>
10005760:	00800044 	movi	r2,1
10005764:	12c0670e 	bge	r2,r11,10005904 <_dtoa_r+0x73c>
10005768:	bad7883a 	add	r11,r23,r11
1000576c:	df001115 	stw	fp,68(sp)
10005770:	dc401215 	stw	r17,72(sp)
10005774:	5839883a 	mov	fp,r11
10005778:	dc401017 	ldw	r17,64(sp)
1000577c:	00000806 	br	100057a0 <_dtoa_r+0x5d8>
10005780:	000e9e00 	call	1000e9e0 <__subdf3>
10005784:	1009883a 	mov	r4,r2
10005788:	180b883a 	mov	r5,r3
1000578c:	880d883a 	mov	r6,r17
10005790:	a80f883a 	mov	r7,r21
10005794:	000f0580 	call	1000f058 <__ltdf2>
10005798:	1003ee16 	blt	r2,zero,10006754 <_dtoa_r+0x158c>
1000579c:	b703f126 	beq	r22,fp,10006764 <_dtoa_r+0x159c>
100057a0:	8809883a 	mov	r4,r17
100057a4:	a80b883a 	mov	r5,r21
100057a8:	000d883a 	mov	r6,zero
100057ac:	01d00934 	movhi	r7,16420
100057b0:	000ea400 	call	1000ea40 <__muldf3>
100057b4:	000d883a 	mov	r6,zero
100057b8:	01d00934 	movhi	r7,16420
100057bc:	9009883a 	mov	r4,r18
100057c0:	980b883a 	mov	r5,r19
100057c4:	1023883a 	mov	r17,r2
100057c8:	182b883a 	mov	r21,r3
100057cc:	000ea400 	call	1000ea40 <__muldf3>
100057d0:	180b883a 	mov	r5,r3
100057d4:	1009883a 	mov	r4,r2
100057d8:	1825883a 	mov	r18,r3
100057dc:	1027883a 	mov	r19,r2
100057e0:	000f1e40 	call	1000f1e4 <__fixdfsi>
100057e4:	1009883a 	mov	r4,r2
100057e8:	1029883a 	mov	r20,r2
100057ec:	000f1100 	call	1000f110 <__floatsidf>
100057f0:	9809883a 	mov	r4,r19
100057f4:	900b883a 	mov	r5,r18
100057f8:	100d883a 	mov	r6,r2
100057fc:	180f883a 	mov	r7,r3
10005800:	000e9e00 	call	1000e9e0 <__subdf3>
10005804:	a5000c04 	addi	r20,r20,48
10005808:	b5000005 	stb	r20,0(r22)
1000580c:	1009883a 	mov	r4,r2
10005810:	180b883a 	mov	r5,r3
10005814:	880d883a 	mov	r6,r17
10005818:	a80f883a 	mov	r7,r21
1000581c:	1025883a 	mov	r18,r2
10005820:	1827883a 	mov	r19,r3
10005824:	000f0580 	call	1000f058 <__ltdf2>
10005828:	b5800044 	addi	r22,r22,1
1000582c:	0009883a 	mov	r4,zero
10005830:	014ffc34 	movhi	r5,16368
10005834:	900d883a 	mov	r6,r18
10005838:	980f883a 	mov	r7,r19
1000583c:	103fd00e 	bge	r2,zero,10005780 <__alt_data_end+0xf8005780>
10005840:	d9001317 	ldw	r4,76(sp)
10005844:	df001117 	ldw	fp,68(sp)
10005848:	d9000615 	stw	r4,24(sp)
1000584c:	8009883a 	mov	r4,r16
10005850:	e00b883a 	mov	r5,fp
10005854:	00082a00 	call	100082a0 <_Bfree>
10005858:	d9c00617 	ldw	r7,24(sp)
1000585c:	d8c02217 	ldw	r3,136(sp)
10005860:	d9002417 	ldw	r4,144(sp)
10005864:	b0000005 	stb	zero,0(r22)
10005868:	38800044 	addi	r2,r7,1
1000586c:	18800015 	stw	r2,0(r3)
10005870:	203e8426 	beq	r4,zero,10005284 <__alt_data_end+0xf8005284>
10005874:	25800015 	stw	r22,0(r4)
10005878:	003e8206 	br	10005284 <__alt_data_end+0xf8005284>
1000587c:	00800434 	movhi	r2,16
10005880:	10bfffc4 	addi	r2,r2,-1
10005884:	90a4703a 	and	r18,r18,r2
10005888:	903e901e 	bne	r18,zero,100052cc <__alt_data_end+0xf80052cc>
1000588c:	05c40074 	movhi	r23,4097
10005890:	bdc9da04 	addi	r23,r23,10088
10005894:	003e8f06 	br	100052d4 <__alt_data_end+0xf80052d4>
10005898:	b8800204 	addi	r2,r23,8
1000589c:	003e9206 	br	100052e8 <__alt_data_end+0xf80052e8>
100058a0:	01400434 	movhi	r5,16
100058a4:	297fffc4 	addi	r5,r5,-1
100058a8:	894a703a 	and	r5,r17,r5
100058ac:	d9000317 	ldw	r4,12(sp)
100058b0:	294ffc34 	orhi	r5,r5,16368
100058b4:	a53f0044 	addi	r20,r20,-1023
100058b8:	dd400217 	ldw	r21,8(sp)
100058bc:	d8000f15 	stw	zero,60(sp)
100058c0:	003eb106 	br	10005388 <__alt_data_end+0xf8005388>
100058c4:	05c40074 	movhi	r23,4097
100058c8:	bdc92604 	addi	r23,r23,9368
100058cc:	003e6d06 	br	10005284 <__alt_data_end+0xf8005284>
100058d0:	d8000415 	stw	zero,16(sp)
100058d4:	80001115 	stw	zero,68(r16)
100058d8:	8009883a 	mov	r4,r16
100058dc:	000b883a 	mov	r5,zero
100058e0:	00081f80 	call	100081f8 <_Balloc>
100058e4:	01ffffc4 	movi	r7,-1
100058e8:	102f883a 	mov	r23,r2
100058ec:	80801015 	stw	r2,64(r16)
100058f0:	00800044 	movi	r2,1
100058f4:	d9c00915 	stw	r7,36(sp)
100058f8:	d8002115 	stw	zero,132(sp)
100058fc:	d9c00e15 	stw	r7,56(sp)
10005900:	d8800c15 	stw	r2,48(sp)
10005904:	d8800117 	ldw	r2,4(sp)
10005908:	10008b16 	blt	r2,zero,10005b38 <_dtoa_r+0x970>
1000590c:	d9000617 	ldw	r4,24(sp)
10005910:	00c00384 	movi	r3,14
10005914:	19008816 	blt	r3,r4,10005b38 <_dtoa_r+0x970>
10005918:	200490fa 	slli	r2,r4,3
1000591c:	d9c02117 	ldw	r7,132(sp)
10005920:	00c40074 	movhi	r3,4097
10005924:	18ca0304 	addi	r3,r3,10252
10005928:	1885883a 	add	r2,r3,r2
1000592c:	14800017 	ldw	r18,0(r2)
10005930:	14c00117 	ldw	r19,4(r2)
10005934:	3801c916 	blt	r7,zero,1000605c <_dtoa_r+0xe94>
10005938:	d9000317 	ldw	r4,12(sp)
1000593c:	900d883a 	mov	r6,r18
10005940:	980f883a 	mov	r7,r19
10005944:	880b883a 	mov	r5,r17
10005948:	000ed240 	call	1000ed24 <__divdf3>
1000594c:	180b883a 	mov	r5,r3
10005950:	1009883a 	mov	r4,r2
10005954:	000f1e40 	call	1000f1e4 <__fixdfsi>
10005958:	1009883a 	mov	r4,r2
1000595c:	102b883a 	mov	r21,r2
10005960:	000f1100 	call	1000f110 <__floatsidf>
10005964:	1009883a 	mov	r4,r2
10005968:	180b883a 	mov	r5,r3
1000596c:	900d883a 	mov	r6,r18
10005970:	980f883a 	mov	r7,r19
10005974:	000ea400 	call	1000ea40 <__muldf3>
10005978:	d9000317 	ldw	r4,12(sp)
1000597c:	880b883a 	mov	r5,r17
10005980:	100d883a 	mov	r6,r2
10005984:	180f883a 	mov	r7,r3
10005988:	000e9e00 	call	1000e9e0 <__subdf3>
1000598c:	d9c00917 	ldw	r7,36(sp)
10005990:	1009883a 	mov	r4,r2
10005994:	a8800c04 	addi	r2,r21,48
10005998:	b8800005 	stb	r2,0(r23)
1000599c:	01800044 	movi	r6,1
100059a0:	180b883a 	mov	r5,r3
100059a4:	2005883a 	mov	r2,r4
100059a8:	bd800044 	addi	r22,r23,1
100059ac:	39803726 	beq	r7,r6,10005a8c <_dtoa_r+0x8c4>
100059b0:	000d883a 	mov	r6,zero
100059b4:	01d00934 	movhi	r7,16420
100059b8:	000ea400 	call	1000ea40 <__muldf3>
100059bc:	1009883a 	mov	r4,r2
100059c0:	180b883a 	mov	r5,r3
100059c4:	000d883a 	mov	r6,zero
100059c8:	000f883a 	mov	r7,zero
100059cc:	1029883a 	mov	r20,r2
100059d0:	1823883a 	mov	r17,r3
100059d4:	000eed80 	call	1000eed8 <__eqdf2>
100059d8:	103f9c26 	beq	r2,zero,1000584c <__alt_data_end+0xf800584c>
100059dc:	dd400917 	ldw	r21,36(sp)
100059e0:	dc000415 	stw	r16,16(sp)
100059e4:	00000906 	br	10005a0c <_dtoa_r+0x844>
100059e8:	000ea400 	call	1000ea40 <__muldf3>
100059ec:	1009883a 	mov	r4,r2
100059f0:	180b883a 	mov	r5,r3
100059f4:	000d883a 	mov	r6,zero
100059f8:	000f883a 	mov	r7,zero
100059fc:	1029883a 	mov	r20,r2
10005a00:	1823883a 	mov	r17,r3
10005a04:	000eed80 	call	1000eed8 <__eqdf2>
10005a08:	10022926 	beq	r2,zero,100062b0 <_dtoa_r+0x10e8>
10005a0c:	900d883a 	mov	r6,r18
10005a10:	980f883a 	mov	r7,r19
10005a14:	a009883a 	mov	r4,r20
10005a18:	880b883a 	mov	r5,r17
10005a1c:	000ed240 	call	1000ed24 <__divdf3>
10005a20:	180b883a 	mov	r5,r3
10005a24:	1009883a 	mov	r4,r2
10005a28:	000f1e40 	call	1000f1e4 <__fixdfsi>
10005a2c:	1009883a 	mov	r4,r2
10005a30:	1021883a 	mov	r16,r2
10005a34:	000f1100 	call	1000f110 <__floatsidf>
10005a38:	1009883a 	mov	r4,r2
10005a3c:	180b883a 	mov	r5,r3
10005a40:	900d883a 	mov	r6,r18
10005a44:	980f883a 	mov	r7,r19
10005a48:	000ea400 	call	1000ea40 <__muldf3>
10005a4c:	a009883a 	mov	r4,r20
10005a50:	880b883a 	mov	r5,r17
10005a54:	100d883a 	mov	r6,r2
10005a58:	180f883a 	mov	r7,r3
10005a5c:	000e9e00 	call	1000e9e0 <__subdf3>
10005a60:	82400c04 	addi	r9,r16,48
10005a64:	b2400005 	stb	r9,0(r22)
10005a68:	b5800044 	addi	r22,r22,1
10005a6c:	b5d3c83a 	sub	r9,r22,r23
10005a70:	000d883a 	mov	r6,zero
10005a74:	01d00934 	movhi	r7,16420
10005a78:	1009883a 	mov	r4,r2
10005a7c:	180b883a 	mov	r5,r3
10005a80:	aa7fd91e 	bne	r21,r9,100059e8 <__alt_data_end+0xf80059e8>
10005a84:	802b883a 	mov	r21,r16
10005a88:	dc000417 	ldw	r16,16(sp)
10005a8c:	1009883a 	mov	r4,r2
10005a90:	180b883a 	mov	r5,r3
10005a94:	100d883a 	mov	r6,r2
10005a98:	180f883a 	mov	r7,r3
10005a9c:	000e98c0 	call	1000e98c <__adddf3>
10005aa0:	9009883a 	mov	r4,r18
10005aa4:	980b883a 	mov	r5,r19
10005aa8:	100d883a 	mov	r6,r2
10005aac:	180f883a 	mov	r7,r3
10005ab0:	1023883a 	mov	r17,r2
10005ab4:	1829883a 	mov	r20,r3
10005ab8:	000f0580 	call	1000f058 <__ltdf2>
10005abc:	10000816 	blt	r2,zero,10005ae0 <_dtoa_r+0x918>
10005ac0:	9009883a 	mov	r4,r18
10005ac4:	980b883a 	mov	r5,r19
10005ac8:	880d883a 	mov	r6,r17
10005acc:	a00f883a 	mov	r7,r20
10005ad0:	000ef340 	call	1000ef34 <__nedf2>
10005ad4:	103f5d1e 	bne	r2,zero,1000584c <__alt_data_end+0xf800584c>
10005ad8:	ad40004c 	andi	r21,r21,1
10005adc:	a83f5b26 	beq	r21,zero,1000584c <__alt_data_end+0xf800584c>
10005ae0:	b53fffc3 	ldbu	r20,-1(r22)
10005ae4:	b0ffff84 	addi	r3,r22,-2
10005ae8:	01400e44 	movi	r5,57
10005aec:	00000306 	br	10005afc <_dtoa_r+0x934>
10005af0:	1d000003 	ldbu	r20,0(r3)
10005af4:	102d883a 	mov	r22,r2
10005af8:	18ffffc4 	addi	r3,r3,-1
10005afc:	a1003fcc 	andi	r4,r20,255
10005b00:	2100201c 	xori	r4,r4,128
10005b04:	213fe004 	addi	r4,r4,-128
10005b08:	b0bfffc4 	addi	r2,r22,-1
10005b0c:	2142ca1e 	bne	r4,r5,10006638 <_dtoa_r+0x1470>
10005b10:	b8bff71e 	bne	r23,r2,10005af0 <__alt_data_end+0xf8005af0>
10005b14:	d8800617 	ldw	r2,24(sp)
10005b18:	05000c44 	movi	r20,49
10005b1c:	10800044 	addi	r2,r2,1
10005b20:	d8800615 	stw	r2,24(sp)
10005b24:	00800c04 	movi	r2,48
10005b28:	b8800005 	stb	r2,0(r23)
10005b2c:	b805883a 	mov	r2,r23
10005b30:	15000005 	stb	r20,0(r2)
10005b34:	003f4506 	br	1000584c <__alt_data_end+0xf800584c>
10005b38:	d9c00c17 	ldw	r7,48(sp)
10005b3c:	3800c926 	beq	r7,zero,10005e64 <_dtoa_r+0xc9c>
10005b40:	d9c00417 	ldw	r7,16(sp)
10005b44:	00c00044 	movi	r3,1
10005b48:	19c16c0e 	bge	r3,r7,100060fc <_dtoa_r+0xf34>
10005b4c:	d9000917 	ldw	r4,36(sp)
10005b50:	d9c00a17 	ldw	r7,40(sp)
10005b54:	24ffffc4 	addi	r19,r4,-1
10005b58:	3cc20716 	blt	r7,r19,10006378 <_dtoa_r+0x11b0>
10005b5c:	3ce7c83a 	sub	r19,r7,r19
10005b60:	d9c00917 	ldw	r7,36(sp)
10005b64:	3802ae16 	blt	r7,zero,10006620 <_dtoa_r+0x1458>
10005b68:	dc800817 	ldw	r18,32(sp)
10005b6c:	d8800917 	ldw	r2,36(sp)
10005b70:	d8c00817 	ldw	r3,32(sp)
10005b74:	d9c00717 	ldw	r7,28(sp)
10005b78:	8009883a 	mov	r4,r16
10005b7c:	1887883a 	add	r3,r3,r2
10005b80:	388f883a 	add	r7,r7,r2
10005b84:	01400044 	movi	r5,1
10005b88:	d8c00815 	stw	r3,32(sp)
10005b8c:	d9c00715 	stw	r7,28(sp)
10005b90:	00086280 	call	10008628 <__i2b>
10005b94:	102b883a 	mov	r21,r2
10005b98:	90000a26 	beq	r18,zero,10005bc4 <_dtoa_r+0x9fc>
10005b9c:	d8800717 	ldw	r2,28(sp)
10005ba0:	0080080e 	bge	zero,r2,10005bc4 <_dtoa_r+0x9fc>
10005ba4:	90812b16 	blt	r18,r2,10006054 <_dtoa_r+0xe8c>
10005ba8:	d8c00817 	ldw	r3,32(sp)
10005bac:	d9000717 	ldw	r4,28(sp)
10005bb0:	90a5c83a 	sub	r18,r18,r2
10005bb4:	1887c83a 	sub	r3,r3,r2
10005bb8:	2089c83a 	sub	r4,r4,r2
10005bbc:	d8c00815 	stw	r3,32(sp)
10005bc0:	d9000715 	stw	r4,28(sp)
10005bc4:	d9c00a17 	ldw	r7,40(sp)
10005bc8:	01c0140e 	bge	zero,r7,10005c1c <_dtoa_r+0xa54>
10005bcc:	d8800c17 	ldw	r2,48(sp)
10005bd0:	1001de26 	beq	r2,zero,1000634c <_dtoa_r+0x1184>
10005bd4:	04c00e0e 	bge	zero,r19,10005c10 <_dtoa_r+0xa48>
10005bd8:	a80b883a 	mov	r5,r21
10005bdc:	8009883a 	mov	r4,r16
10005be0:	980d883a 	mov	r6,r19
10005be4:	00088bc0 	call	100088bc <__pow5mult>
10005be8:	e00d883a 	mov	r6,fp
10005bec:	8009883a 	mov	r4,r16
10005bf0:	100b883a 	mov	r5,r2
10005bf4:	102b883a 	mov	r21,r2
10005bf8:	00086640 	call	10008664 <__multiply>
10005bfc:	1029883a 	mov	r20,r2
10005c00:	e00b883a 	mov	r5,fp
10005c04:	8009883a 	mov	r4,r16
10005c08:	00082a00 	call	100082a0 <_Bfree>
10005c0c:	a039883a 	mov	fp,r20
10005c10:	d8c00a17 	ldw	r3,40(sp)
10005c14:	1ccdc83a 	sub	r6,r3,r19
10005c18:	3001291e 	bne	r6,zero,100060c0 <_dtoa_r+0xef8>
10005c1c:	8009883a 	mov	r4,r16
10005c20:	01400044 	movi	r5,1
10005c24:	00086280 	call	10008628 <__i2b>
10005c28:	d9000b17 	ldw	r4,44(sp)
10005c2c:	1029883a 	mov	r20,r2
10005c30:	0100050e 	bge	zero,r4,10005c48 <_dtoa_r+0xa80>
10005c34:	d9800b17 	ldw	r6,44(sp)
10005c38:	8009883a 	mov	r4,r16
10005c3c:	100b883a 	mov	r5,r2
10005c40:	00088bc0 	call	100088bc <__pow5mult>
10005c44:	1029883a 	mov	r20,r2
10005c48:	d9c00417 	ldw	r7,16(sp)
10005c4c:	00800044 	movi	r2,1
10005c50:	11c0f00e 	bge	r2,r7,10006014 <_dtoa_r+0xe4c>
10005c54:	0023883a 	mov	r17,zero
10005c58:	d8800b17 	ldw	r2,44(sp)
10005c5c:	1001741e 	bne	r2,zero,10006230 <_dtoa_r+0x1068>
10005c60:	00800044 	movi	r2,1
10005c64:	d8c00717 	ldw	r3,28(sp)
10005c68:	10c5883a 	add	r2,r2,r3
10005c6c:	108007cc 	andi	r2,r2,31
10005c70:	10008026 	beq	r2,zero,10005e74 <_dtoa_r+0xcac>
10005c74:	01000804 	movi	r4,32
10005c78:	2089c83a 	sub	r4,r4,r2
10005c7c:	00c00104 	movi	r3,4
10005c80:	1902d00e 	bge	r3,r4,100067c4 <_dtoa_r+0x15fc>
10005c84:	d9000817 	ldw	r4,32(sp)
10005c88:	d9c00717 	ldw	r7,28(sp)
10005c8c:	00c00704 	movi	r3,28
10005c90:	1885c83a 	sub	r2,r3,r2
10005c94:	2089883a 	add	r4,r4,r2
10005c98:	388f883a 	add	r7,r7,r2
10005c9c:	d9000815 	stw	r4,32(sp)
10005ca0:	90a5883a 	add	r18,r18,r2
10005ca4:	d9c00715 	stw	r7,28(sp)
10005ca8:	d9c00817 	ldw	r7,32(sp)
10005cac:	01c0050e 	bge	zero,r7,10005cc4 <_dtoa_r+0xafc>
10005cb0:	e00b883a 	mov	r5,fp
10005cb4:	8009883a 	mov	r4,r16
10005cb8:	380d883a 	mov	r6,r7
10005cbc:	00089e80 	call	100089e8 <__lshift>
10005cc0:	1039883a 	mov	fp,r2
10005cc4:	d8800717 	ldw	r2,28(sp)
10005cc8:	0080050e 	bge	zero,r2,10005ce0 <_dtoa_r+0xb18>
10005ccc:	a00b883a 	mov	r5,r20
10005cd0:	8009883a 	mov	r4,r16
10005cd4:	100d883a 	mov	r6,r2
10005cd8:	00089e80 	call	100089e8 <__lshift>
10005cdc:	1029883a 	mov	r20,r2
10005ce0:	d8c00d17 	ldw	r3,52(sp)
10005ce4:	1801401e 	bne	r3,zero,100061e8 <_dtoa_r+0x1020>
10005ce8:	d8800917 	ldw	r2,36(sp)
10005cec:	00815a0e 	bge	zero,r2,10006258 <_dtoa_r+0x1090>
10005cf0:	d8c00c17 	ldw	r3,48(sp)
10005cf4:	18006f1e 	bne	r3,zero,10005eb4 <_dtoa_r+0xcec>
10005cf8:	b823883a 	mov	r17,r23
10005cfc:	dc800917 	ldw	r18,36(sp)
10005d00:	00000206 	br	10005d0c <_dtoa_r+0xb44>
10005d04:	00082c80 	call	100082c8 <__multadd>
10005d08:	1039883a 	mov	fp,r2
10005d0c:	e009883a 	mov	r4,fp
10005d10:	a00b883a 	mov	r5,r20
10005d14:	0004f8c0 	call	10004f8c <quorem>
10005d18:	10800c04 	addi	r2,r2,48
10005d1c:	88800005 	stb	r2,0(r17)
10005d20:	8c400044 	addi	r17,r17,1
10005d24:	8dc7c83a 	sub	r3,r17,r23
10005d28:	8009883a 	mov	r4,r16
10005d2c:	e00b883a 	mov	r5,fp
10005d30:	01800284 	movi	r6,10
10005d34:	000f883a 	mov	r7,zero
10005d38:	1cbff216 	blt	r3,r18,10005d04 <__alt_data_end+0xf8005d04>
10005d3c:	dd800917 	ldw	r22,36(sp)
10005d40:	1007883a 	mov	r3,r2
10005d44:	05823a0e 	bge	zero,r22,10006630 <_dtoa_r+0x1468>
10005d48:	bdad883a 	add	r22,r23,r22
10005d4c:	0023883a 	mov	r17,zero
10005d50:	e00b883a 	mov	r5,fp
10005d54:	01800044 	movi	r6,1
10005d58:	8009883a 	mov	r4,r16
10005d5c:	d8c01515 	stw	r3,84(sp)
10005d60:	00089e80 	call	100089e8 <__lshift>
10005d64:	1009883a 	mov	r4,r2
10005d68:	a00b883a 	mov	r5,r20
10005d6c:	1039883a 	mov	fp,r2
10005d70:	0008b440 	call	10008b44 <__mcmp>
10005d74:	d8c01517 	ldw	r3,84(sp)
10005d78:	0080d60e 	bge	zero,r2,100060d4 <_dtoa_r+0xf0c>
10005d7c:	b13fffc3 	ldbu	r4,-1(r22)
10005d80:	b0ffff84 	addi	r3,r22,-2
10005d84:	01800e44 	movi	r6,57
10005d88:	00000306 	br	10005d98 <_dtoa_r+0xbd0>
10005d8c:	19000003 	ldbu	r4,0(r3)
10005d90:	102d883a 	mov	r22,r2
10005d94:	18ffffc4 	addi	r3,r3,-1
10005d98:	21403fcc 	andi	r5,r4,255
10005d9c:	2940201c 	xori	r5,r5,128
10005da0:	297fe004 	addi	r5,r5,-128
10005da4:	b0bfffc4 	addi	r2,r22,-1
10005da8:	2981a71e 	bne	r5,r6,10006448 <_dtoa_r+0x1280>
10005dac:	b8bff71e 	bne	r23,r2,10005d8c <__alt_data_end+0xf8005d8c>
10005db0:	d8800617 	ldw	r2,24(sp)
10005db4:	10800044 	addi	r2,r2,1
10005db8:	d8800615 	stw	r2,24(sp)
10005dbc:	00800c44 	movi	r2,49
10005dc0:	b8800005 	stb	r2,0(r23)
10005dc4:	8009883a 	mov	r4,r16
10005dc8:	a00b883a 	mov	r5,r20
10005dcc:	00082a00 	call	100082a0 <_Bfree>
10005dd0:	a83e9e26 	beq	r21,zero,1000584c <__alt_data_end+0xf800584c>
10005dd4:	88000426 	beq	r17,zero,10005de8 <_dtoa_r+0xc20>
10005dd8:	8d400326 	beq	r17,r21,10005de8 <_dtoa_r+0xc20>
10005ddc:	8009883a 	mov	r4,r16
10005de0:	880b883a 	mov	r5,r17
10005de4:	00082a00 	call	100082a0 <_Bfree>
10005de8:	8009883a 	mov	r4,r16
10005dec:	a80b883a 	mov	r5,r21
10005df0:	00082a00 	call	100082a0 <_Bfree>
10005df4:	003e9506 	br	1000584c <__alt_data_end+0xf800584c>
10005df8:	00c00044 	movi	r3,1
10005dfc:	d8c00d15 	stw	r3,52(sp)
10005e00:	003d9f06 	br	10005480 <__alt_data_end+0xf8005480>
10005e04:	d9000817 	ldw	r4,32(sp)
10005e08:	d8800617 	ldw	r2,24(sp)
10005e0c:	d8000b15 	stw	zero,44(sp)
10005e10:	2089c83a 	sub	r4,r4,r2
10005e14:	0087c83a 	sub	r3,zero,r2
10005e18:	d9000815 	stw	r4,32(sp)
10005e1c:	d8c00a15 	stw	r3,40(sp)
10005e20:	003da306 	br	100054b0 <__alt_data_end+0xf80054b0>
10005e24:	0529c83a 	sub	r20,zero,r20
10005e28:	dd000815 	stw	r20,32(sp)
10005e2c:	d8000715 	stw	zero,28(sp)
10005e30:	003d9806 	br	10005494 <__alt_data_end+0xf8005494>
10005e34:	d9000617 	ldw	r4,24(sp)
10005e38:	000f1100 	call	1000f110 <__floatsidf>
10005e3c:	1009883a 	mov	r4,r2
10005e40:	180b883a 	mov	r5,r3
10005e44:	980d883a 	mov	r6,r19
10005e48:	900f883a 	mov	r7,r18
10005e4c:	000eed80 	call	1000eed8 <__eqdf2>
10005e50:	103d7a26 	beq	r2,zero,1000543c <__alt_data_end+0xf800543c>
10005e54:	d8800617 	ldw	r2,24(sp)
10005e58:	10bfffc4 	addi	r2,r2,-1
10005e5c:	d8800615 	stw	r2,24(sp)
10005e60:	003d7606 	br	1000543c <__alt_data_end+0xf800543c>
10005e64:	dcc00a17 	ldw	r19,40(sp)
10005e68:	dc800817 	ldw	r18,32(sp)
10005e6c:	002b883a 	mov	r21,zero
10005e70:	003f4906 	br	10005b98 <__alt_data_end+0xf8005b98>
10005e74:	00800704 	movi	r2,28
10005e78:	d8c00817 	ldw	r3,32(sp)
10005e7c:	d9000717 	ldw	r4,28(sp)
10005e80:	90a5883a 	add	r18,r18,r2
10005e84:	1887883a 	add	r3,r3,r2
10005e88:	2089883a 	add	r4,r4,r2
10005e8c:	d8c00815 	stw	r3,32(sp)
10005e90:	d9000715 	stw	r4,28(sp)
10005e94:	003f8406 	br	10005ca8 <__alt_data_end+0xf8005ca8>
10005e98:	d9c00317 	ldw	r7,12(sp)
10005e9c:	013efb84 	movi	r4,-1042
10005ea0:	2509c83a 	sub	r4,r4,r20
10005ea4:	3908983a 	sll	r4,r7,r4
10005ea8:	003d3006 	br	1000536c <__alt_data_end+0xf800536c>
10005eac:	d8000d15 	stw	zero,52(sp)
10005eb0:	003d7306 	br	10005480 <__alt_data_end+0xf8005480>
10005eb4:	0480050e 	bge	zero,r18,10005ecc <_dtoa_r+0xd04>
10005eb8:	a80b883a 	mov	r5,r21
10005ebc:	8009883a 	mov	r4,r16
10005ec0:	900d883a 	mov	r6,r18
10005ec4:	00089e80 	call	100089e8 <__lshift>
10005ec8:	102b883a 	mov	r21,r2
10005ecc:	8801611e 	bne	r17,zero,10006454 <_dtoa_r+0x128c>
10005ed0:	a827883a 	mov	r19,r21
10005ed4:	d8c00317 	ldw	r3,12(sp)
10005ed8:	d9000917 	ldw	r4,36(sp)
10005edc:	b8bfffc4 	addi	r2,r23,-1
10005ee0:	18c0004c 	andi	r3,r3,1
10005ee4:	1105883a 	add	r2,r2,r4
10005ee8:	b825883a 	mov	r18,r23
10005eec:	d8800515 	stw	r2,20(sp)
10005ef0:	a823883a 	mov	r17,r21
10005ef4:	d8c00315 	stw	r3,12(sp)
10005ef8:	ddc00715 	stw	r23,28(sp)
10005efc:	e009883a 	mov	r4,fp
10005f00:	a00b883a 	mov	r5,r20
10005f04:	0004f8c0 	call	10004f8c <quorem>
10005f08:	e009883a 	mov	r4,fp
10005f0c:	880b883a 	mov	r5,r17
10005f10:	102d883a 	mov	r22,r2
10005f14:	0008b440 	call	10008b44 <__mcmp>
10005f18:	980d883a 	mov	r6,r19
10005f1c:	8009883a 	mov	r4,r16
10005f20:	a00b883a 	mov	r5,r20
10005f24:	102b883a 	mov	r21,r2
10005f28:	0008b9c0 	call	10008b9c <__mdiff>
10005f2c:	100d883a 	mov	r6,r2
10005f30:	10800317 	ldw	r2,12(r2)
10005f34:	b5c00c04 	addi	r23,r22,48
10005f38:	10008c26 	beq	r2,zero,1000616c <_dtoa_r+0xfa4>
10005f3c:	8009883a 	mov	r4,r16
10005f40:	300b883a 	mov	r5,r6
10005f44:	00082a00 	call	100082a0 <_Bfree>
10005f48:	00800044 	movi	r2,1
10005f4c:	a8007116 	blt	r21,zero,10006114 <_dtoa_r+0xf4c>
10005f50:	a800041e 	bne	r21,zero,10005f64 <_dtoa_r+0xd9c>
10005f54:	d9c00417 	ldw	r7,16(sp)
10005f58:	3800021e 	bne	r7,zero,10005f64 <_dtoa_r+0xd9c>
10005f5c:	d8c00317 	ldw	r3,12(sp)
10005f60:	18006c26 	beq	r3,zero,10006114 <_dtoa_r+0xf4c>
10005f64:	00814c16 	blt	zero,r2,10006498 <_dtoa_r+0x12d0>
10005f68:	d8c00517 	ldw	r3,20(sp)
10005f6c:	95400044 	addi	r21,r18,1
10005f70:	95c00005 	stb	r23,0(r18)
10005f74:	a82d883a 	mov	r22,r21
10005f78:	90c14d26 	beq	r18,r3,100064b0 <_dtoa_r+0x12e8>
10005f7c:	e00b883a 	mov	r5,fp
10005f80:	8009883a 	mov	r4,r16
10005f84:	01800284 	movi	r6,10
10005f88:	000f883a 	mov	r7,zero
10005f8c:	00082c80 	call	100082c8 <__multadd>
10005f90:	1039883a 	mov	fp,r2
10005f94:	8cc08b26 	beq	r17,r19,100061c4 <_dtoa_r+0xffc>
10005f98:	880b883a 	mov	r5,r17
10005f9c:	01800284 	movi	r6,10
10005fa0:	000f883a 	mov	r7,zero
10005fa4:	8009883a 	mov	r4,r16
10005fa8:	00082c80 	call	100082c8 <__multadd>
10005fac:	980b883a 	mov	r5,r19
10005fb0:	8009883a 	mov	r4,r16
10005fb4:	01800284 	movi	r6,10
10005fb8:	000f883a 	mov	r7,zero
10005fbc:	1023883a 	mov	r17,r2
10005fc0:	00082c80 	call	100082c8 <__multadd>
10005fc4:	1027883a 	mov	r19,r2
10005fc8:	a825883a 	mov	r18,r21
10005fcc:	003fcb06 	br	10005efc <__alt_data_end+0xf8005efc>
10005fd0:	d9c00417 	ldw	r7,16(sp)
10005fd4:	00800104 	movi	r2,4
10005fd8:	3880e426 	beq	r7,r2,1000636c <_dtoa_r+0x11a4>
10005fdc:	00800144 	movi	r2,5
10005fe0:	38be3c1e 	bne	r7,r2,100058d4 <__alt_data_end+0xf80058d4>
10005fe4:	00c00044 	movi	r3,1
10005fe8:	d8c00c15 	stw	r3,48(sp)
10005fec:	d9c02117 	ldw	r7,132(sp)
10005ff0:	d8800617 	ldw	r2,24(sp)
10005ff4:	388f883a 	add	r7,r7,r2
10005ff8:	3c800044 	addi	r18,r7,1
10005ffc:	d9c00e15 	stw	r7,56(sp)
10006000:	dc800915 	stw	r18,36(sp)
10006004:	04bd3e16 	blt	zero,r18,10005500 <__alt_data_end+0xf8005500>
10006008:	80001115 	stw	zero,68(r16)
1000600c:	000b883a 	mov	r5,zero
10006010:	003d4606 	br	1000552c <__alt_data_end+0xf800552c>
10006014:	d8c00317 	ldw	r3,12(sp)
10006018:	183f0e1e 	bne	r3,zero,10005c54 <__alt_data_end+0xf8005c54>
1000601c:	00c00434 	movhi	r3,16
10006020:	18ffffc4 	addi	r3,r3,-1
10006024:	88c6703a 	and	r3,r17,r3
10006028:	183f0a1e 	bne	r3,zero,10005c54 <__alt_data_end+0xf8005c54>
1000602c:	8c5ffc2c 	andhi	r17,r17,32752
10006030:	883f0826 	beq	r17,zero,10005c54 <__alt_data_end+0xf8005c54>
10006034:	d9000817 	ldw	r4,32(sp)
10006038:	d9c00717 	ldw	r7,28(sp)
1000603c:	1023883a 	mov	r17,r2
10006040:	2089883a 	add	r4,r4,r2
10006044:	388f883a 	add	r7,r7,r2
10006048:	d9000815 	stw	r4,32(sp)
1000604c:	d9c00715 	stw	r7,28(sp)
10006050:	003f0106 	br	10005c58 <__alt_data_end+0xf8005c58>
10006054:	9005883a 	mov	r2,r18
10006058:	003ed306 	br	10005ba8 <__alt_data_end+0xf8005ba8>
1000605c:	d8800917 	ldw	r2,36(sp)
10006060:	00be3516 	blt	zero,r2,10005938 <__alt_data_end+0xf8005938>
10006064:	1000b61e 	bne	r2,zero,10006340 <_dtoa_r+0x1178>
10006068:	9009883a 	mov	r4,r18
1000606c:	980b883a 	mov	r5,r19
10006070:	000d883a 	mov	r6,zero
10006074:	01d00534 	movhi	r7,16404
10006078:	000ea400 	call	1000ea40 <__muldf3>
1000607c:	d9800317 	ldw	r6,12(sp)
10006080:	1009883a 	mov	r4,r2
10006084:	180b883a 	mov	r5,r3
10006088:	880f883a 	mov	r7,r17
1000608c:	000eff40 	call	1000eff4 <__gedf2>
10006090:	0029883a 	mov	r20,zero
10006094:	002b883a 	mov	r21,zero
10006098:	10007e16 	blt	r2,zero,10006294 <_dtoa_r+0x10cc>
1000609c:	d8802117 	ldw	r2,132(sp)
100060a0:	b82d883a 	mov	r22,r23
100060a4:	0084303a 	nor	r2,zero,r2
100060a8:	d8800615 	stw	r2,24(sp)
100060ac:	8009883a 	mov	r4,r16
100060b0:	a00b883a 	mov	r5,r20
100060b4:	00082a00 	call	100082a0 <_Bfree>
100060b8:	a83f4b1e 	bne	r21,zero,10005de8 <__alt_data_end+0xf8005de8>
100060bc:	003de306 	br	1000584c <__alt_data_end+0xf800584c>
100060c0:	e00b883a 	mov	r5,fp
100060c4:	8009883a 	mov	r4,r16
100060c8:	00088bc0 	call	100088bc <__pow5mult>
100060cc:	1039883a 	mov	fp,r2
100060d0:	003ed206 	br	10005c1c <__alt_data_end+0xf8005c1c>
100060d4:	1000021e 	bne	r2,zero,100060e0 <_dtoa_r+0xf18>
100060d8:	18c0004c 	andi	r3,r3,1
100060dc:	183f271e 	bne	r3,zero,10005d7c <__alt_data_end+0xf8005d7c>
100060e0:	01000c04 	movi	r4,48
100060e4:	00000106 	br	100060ec <_dtoa_r+0xf24>
100060e8:	102d883a 	mov	r22,r2
100060ec:	b0bfffc4 	addi	r2,r22,-1
100060f0:	10c00007 	ldb	r3,0(r2)
100060f4:	193ffc26 	beq	r3,r4,100060e8 <__alt_data_end+0xf80060e8>
100060f8:	003f3206 	br	10005dc4 <__alt_data_end+0xf8005dc4>
100060fc:	d8c00f17 	ldw	r3,60(sp)
10006100:	18015026 	beq	r3,zero,10006644 <_dtoa_r+0x147c>
10006104:	10810cc4 	addi	r2,r2,1075
10006108:	dcc00a17 	ldw	r19,40(sp)
1000610c:	dc800817 	ldw	r18,32(sp)
10006110:	003e9706 	br	10005b70 <__alt_data_end+0xf8005b70>
10006114:	b807883a 	mov	r3,r23
10006118:	182b883a 	mov	r21,r3
1000611c:	ddc00717 	ldw	r23,28(sp)
10006120:	00800e0e 	bge	zero,r2,1000615c <_dtoa_r+0xf94>
10006124:	e00b883a 	mov	r5,fp
10006128:	01800044 	movi	r6,1
1000612c:	8009883a 	mov	r4,r16
10006130:	d8c01515 	stw	r3,84(sp)
10006134:	00089e80 	call	100089e8 <__lshift>
10006138:	1009883a 	mov	r4,r2
1000613c:	a00b883a 	mov	r5,r20
10006140:	1039883a 	mov	fp,r2
10006144:	0008b440 	call	10008b44 <__mcmp>
10006148:	d8c01517 	ldw	r3,84(sp)
1000614c:	0081880e 	bge	zero,r2,10006770 <_dtoa_r+0x15a8>
10006150:	00800e44 	movi	r2,57
10006154:	b0c00c44 	addi	r3,r22,49
10006158:	a8816326 	beq	r21,r2,100066e8 <_dtoa_r+0x1520>
1000615c:	90c00005 	stb	r3,0(r18)
10006160:	95800044 	addi	r22,r18,1
10006164:	982b883a 	mov	r21,r19
10006168:	003f1606 	br	10005dc4 <__alt_data_end+0xf8005dc4>
1000616c:	300b883a 	mov	r5,r6
10006170:	e009883a 	mov	r4,fp
10006174:	d9801515 	stw	r6,84(sp)
10006178:	0008b440 	call	10008b44 <__mcmp>
1000617c:	d9801517 	ldw	r6,84(sp)
10006180:	8009883a 	mov	r4,r16
10006184:	d8801515 	stw	r2,84(sp)
10006188:	300b883a 	mov	r5,r6
1000618c:	00082a00 	call	100082a0 <_Bfree>
10006190:	d8801517 	ldw	r2,84(sp)
10006194:	103f6d1e 	bne	r2,zero,10005f4c <__alt_data_end+0xf8005f4c>
10006198:	d9c00417 	ldw	r7,16(sp)
1000619c:	383f6b1e 	bne	r7,zero,10005f4c <__alt_data_end+0xf8005f4c>
100061a0:	d8c00317 	ldw	r3,12(sp)
100061a4:	183f691e 	bne	r3,zero,10005f4c <__alt_data_end+0xf8005f4c>
100061a8:	b807883a 	mov	r3,r23
100061ac:	00800e44 	movi	r2,57
100061b0:	ddc00717 	ldw	r23,28(sp)
100061b4:	18814c26 	beq	r3,r2,100066e8 <_dtoa_r+0x1520>
100061b8:	057fe80e 	bge	zero,r21,1000615c <__alt_data_end+0xf800615c>
100061bc:	b0c00c44 	addi	r3,r22,49
100061c0:	003fe606 	br	1000615c <__alt_data_end+0xf800615c>
100061c4:	880b883a 	mov	r5,r17
100061c8:	8009883a 	mov	r4,r16
100061cc:	01800284 	movi	r6,10
100061d0:	000f883a 	mov	r7,zero
100061d4:	00082c80 	call	100082c8 <__multadd>
100061d8:	1023883a 	mov	r17,r2
100061dc:	1027883a 	mov	r19,r2
100061e0:	a825883a 	mov	r18,r21
100061e4:	003f4506 	br	10005efc <__alt_data_end+0xf8005efc>
100061e8:	e009883a 	mov	r4,fp
100061ec:	a00b883a 	mov	r5,r20
100061f0:	0008b440 	call	10008b44 <__mcmp>
100061f4:	103ebc0e 	bge	r2,zero,10005ce8 <__alt_data_end+0xf8005ce8>
100061f8:	e00b883a 	mov	r5,fp
100061fc:	8009883a 	mov	r4,r16
10006200:	01800284 	movi	r6,10
10006204:	000f883a 	mov	r7,zero
10006208:	00082c80 	call	100082c8 <__multadd>
1000620c:	1039883a 	mov	fp,r2
10006210:	d8800617 	ldw	r2,24(sp)
10006214:	d8c00c17 	ldw	r3,48(sp)
10006218:	10bfffc4 	addi	r2,r2,-1
1000621c:	d8800615 	stw	r2,24(sp)
10006220:	1801571e 	bne	r3,zero,10006780 <_dtoa_r+0x15b8>
10006224:	d9c00e17 	ldw	r7,56(sp)
10006228:	d9c00915 	stw	r7,36(sp)
1000622c:	003eae06 	br	10005ce8 <__alt_data_end+0xf8005ce8>
10006230:	a0800417 	ldw	r2,16(r20)
10006234:	10800104 	addi	r2,r2,4
10006238:	1085883a 	add	r2,r2,r2
1000623c:	1085883a 	add	r2,r2,r2
10006240:	a085883a 	add	r2,r20,r2
10006244:	11000017 	ldw	r4,0(r2)
10006248:	00085100 	call	10008510 <__hi0bits>
1000624c:	00c00804 	movi	r3,32
10006250:	1885c83a 	sub	r2,r3,r2
10006254:	003e8306 	br	10005c64 <__alt_data_end+0xf8005c64>
10006258:	d9c00417 	ldw	r7,16(sp)
1000625c:	00800084 	movi	r2,2
10006260:	11fea30e 	bge	r2,r7,10005cf0 <__alt_data_end+0xf8005cf0>
10006264:	d8800917 	ldw	r2,36(sp)
10006268:	103f8c1e 	bne	r2,zero,1000609c <__alt_data_end+0xf800609c>
1000626c:	a00b883a 	mov	r5,r20
10006270:	8009883a 	mov	r4,r16
10006274:	01800144 	movi	r6,5
10006278:	000f883a 	mov	r7,zero
1000627c:	00082c80 	call	100082c8 <__multadd>
10006280:	e009883a 	mov	r4,fp
10006284:	100b883a 	mov	r5,r2
10006288:	1029883a 	mov	r20,r2
1000628c:	0008b440 	call	10008b44 <__mcmp>
10006290:	00bf820e 	bge	zero,r2,1000609c <__alt_data_end+0xf800609c>
10006294:	00800c44 	movi	r2,49
10006298:	b8800005 	stb	r2,0(r23)
1000629c:	d8800617 	ldw	r2,24(sp)
100062a0:	bd800044 	addi	r22,r23,1
100062a4:	10800044 	addi	r2,r2,1
100062a8:	d8800615 	stw	r2,24(sp)
100062ac:	003f7f06 	br	100060ac <__alt_data_end+0xf80060ac>
100062b0:	dc000417 	ldw	r16,16(sp)
100062b4:	003d6506 	br	1000584c <__alt_data_end+0xf800584c>
100062b8:	9009883a 	mov	r4,r18
100062bc:	000f1100 	call	1000f110 <__floatsidf>
100062c0:	1009883a 	mov	r4,r2
100062c4:	180b883a 	mov	r5,r3
100062c8:	980d883a 	mov	r6,r19
100062cc:	a00f883a 	mov	r7,r20
100062d0:	000ea400 	call	1000ea40 <__muldf3>
100062d4:	1009883a 	mov	r4,r2
100062d8:	180b883a 	mov	r5,r3
100062dc:	000d883a 	mov	r6,zero
100062e0:	01d00734 	movhi	r7,16412
100062e4:	000e98c0 	call	1000e98c <__adddf3>
100062e8:	057f3034 	movhi	r21,64704
100062ec:	1025883a 	mov	r18,r2
100062f0:	1d6b883a 	add	r21,r3,r21
100062f4:	9809883a 	mov	r4,r19
100062f8:	a00b883a 	mov	r5,r20
100062fc:	000d883a 	mov	r6,zero
10006300:	01d00534 	movhi	r7,16404
10006304:	000e9e00 	call	1000e9e0 <__subdf3>
10006308:	1009883a 	mov	r4,r2
1000630c:	180b883a 	mov	r5,r3
10006310:	900d883a 	mov	r6,r18
10006314:	a80f883a 	mov	r7,r21
10006318:	1027883a 	mov	r19,r2
1000631c:	1829883a 	mov	r20,r3
10006320:	000ef900 	call	1000ef90 <__gtdf2>
10006324:	00806616 	blt	zero,r2,100064c0 <_dtoa_r+0x12f8>
10006328:	a9e0003c 	xorhi	r7,r21,32768
1000632c:	9809883a 	mov	r4,r19
10006330:	a00b883a 	mov	r5,r20
10006334:	900d883a 	mov	r6,r18
10006338:	000f0580 	call	1000f058 <__ltdf2>
1000633c:	103d710e 	bge	r2,zero,10005904 <__alt_data_end+0xf8005904>
10006340:	0029883a 	mov	r20,zero
10006344:	002b883a 	mov	r21,zero
10006348:	003f5406 	br	1000609c <__alt_data_end+0xf800609c>
1000634c:	d9800a17 	ldw	r6,40(sp)
10006350:	e00b883a 	mov	r5,fp
10006354:	8009883a 	mov	r4,r16
10006358:	00088bc0 	call	100088bc <__pow5mult>
1000635c:	1039883a 	mov	fp,r2
10006360:	003e2e06 	br	10005c1c <__alt_data_end+0xf8005c1c>
10006364:	d8000c15 	stw	zero,48(sp)
10006368:	003f2006 	br	10005fec <__alt_data_end+0xf8005fec>
1000636c:	00800044 	movi	r2,1
10006370:	d8800c15 	stw	r2,48(sp)
10006374:	003c5d06 	br	100054ec <__alt_data_end+0xf80054ec>
10006378:	d8c00a17 	ldw	r3,40(sp)
1000637c:	d9000b17 	ldw	r4,44(sp)
10006380:	dcc00a15 	stw	r19,40(sp)
10006384:	98c5c83a 	sub	r2,r19,r3
10006388:	2089883a 	add	r4,r4,r2
1000638c:	d9000b15 	stw	r4,44(sp)
10006390:	0027883a 	mov	r19,zero
10006394:	003df206 	br	10005b60 <__alt_data_end+0xf8005b60>
10006398:	d9000317 	ldw	r4,12(sp)
1000639c:	8829883a 	mov	r20,r17
100063a0:	04800084 	movi	r18,2
100063a4:	d9001015 	stw	r4,64(sp)
100063a8:	003c8106 	br	100055b0 <__alt_data_end+0xf80055b0>
100063ac:	04800044 	movi	r18,1
100063b0:	dc800e15 	stw	r18,56(sp)
100063b4:	dc800915 	stw	r18,36(sp)
100063b8:	dc802115 	stw	r18,132(sp)
100063bc:	003f1206 	br	10006008 <__alt_data_end+0xf8006008>
100063c0:	d8800617 	ldw	r2,24(sp)
100063c4:	00abc83a 	sub	r21,zero,r2
100063c8:	a800a426 	beq	r21,zero,1000665c <_dtoa_r+0x1494>
100063cc:	a88003cc 	andi	r2,r21,15
100063d0:	100490fa 	slli	r2,r2,3
100063d4:	00c40074 	movhi	r3,4097
100063d8:	18ca0304 	addi	r3,r3,10252
100063dc:	d9000317 	ldw	r4,12(sp)
100063e0:	1885883a 	add	r2,r3,r2
100063e4:	11800017 	ldw	r6,0(r2)
100063e8:	11c00117 	ldw	r7,4(r2)
100063ec:	a82bd13a 	srai	r21,r21,4
100063f0:	880b883a 	mov	r5,r17
100063f4:	000ea400 	call	1000ea40 <__muldf3>
100063f8:	1027883a 	mov	r19,r2
100063fc:	1829883a 	mov	r20,r3
10006400:	a800e826 	beq	r21,zero,100067a4 <_dtoa_r+0x15dc>
10006404:	05840074 	movhi	r22,4097
10006408:	b589f904 	addi	r22,r22,10212
1000640c:	04800084 	movi	r18,2
10006410:	a980004c 	andi	r6,r21,1
10006414:	1009883a 	mov	r4,r2
10006418:	a82bd07a 	srai	r21,r21,1
1000641c:	180b883a 	mov	r5,r3
10006420:	30000426 	beq	r6,zero,10006434 <_dtoa_r+0x126c>
10006424:	b1800017 	ldw	r6,0(r22)
10006428:	b1c00117 	ldw	r7,4(r22)
1000642c:	94800044 	addi	r18,r18,1
10006430:	000ea400 	call	1000ea40 <__muldf3>
10006434:	b5800204 	addi	r22,r22,8
10006438:	a83ff51e 	bne	r21,zero,10006410 <__alt_data_end+0xf8006410>
1000643c:	1027883a 	mov	r19,r2
10006440:	1829883a 	mov	r20,r3
10006444:	003c7306 	br	10005614 <__alt_data_end+0xf8005614>
10006448:	21000044 	addi	r4,r4,1
1000644c:	11000005 	stb	r4,0(r2)
10006450:	003e5c06 	br	10005dc4 <__alt_data_end+0xf8005dc4>
10006454:	a9400117 	ldw	r5,4(r21)
10006458:	8009883a 	mov	r4,r16
1000645c:	00081f80 	call	100081f8 <_Balloc>
10006460:	a9800417 	ldw	r6,16(r21)
10006464:	11000304 	addi	r4,r2,12
10006468:	a9400304 	addi	r5,r21,12
1000646c:	31800084 	addi	r6,r6,2
10006470:	318d883a 	add	r6,r6,r6
10006474:	318d883a 	add	r6,r6,r6
10006478:	1023883a 	mov	r17,r2
1000647c:	0007e500 	call	10007e50 <memcpy>
10006480:	8009883a 	mov	r4,r16
10006484:	880b883a 	mov	r5,r17
10006488:	01800044 	movi	r6,1
1000648c:	00089e80 	call	100089e8 <__lshift>
10006490:	1027883a 	mov	r19,r2
10006494:	003e8f06 	br	10005ed4 <__alt_data_end+0xf8005ed4>
10006498:	b807883a 	mov	r3,r23
1000649c:	00800e44 	movi	r2,57
100064a0:	ddc00717 	ldw	r23,28(sp)
100064a4:	18809026 	beq	r3,r2,100066e8 <_dtoa_r+0x1520>
100064a8:	18c00044 	addi	r3,r3,1
100064ac:	003f2b06 	br	1000615c <__alt_data_end+0xf800615c>
100064b0:	b807883a 	mov	r3,r23
100064b4:	982b883a 	mov	r21,r19
100064b8:	ddc00717 	ldw	r23,28(sp)
100064bc:	003e2406 	br	10005d50 <__alt_data_end+0xf8005d50>
100064c0:	0029883a 	mov	r20,zero
100064c4:	002b883a 	mov	r21,zero
100064c8:	003f7206 	br	10006294 <__alt_data_end+0xf8006294>
100064cc:	593fffc4 	addi	r4,r11,-1
100064d0:	200490fa 	slli	r2,r4,3
100064d4:	00c40074 	movhi	r3,4097
100064d8:	18ca0304 	addi	r3,r3,10252
100064dc:	d9001015 	stw	r4,64(sp)
100064e0:	1885883a 	add	r2,r3,r2
100064e4:	11000017 	ldw	r4,0(r2)
100064e8:	11400117 	ldw	r5,4(r2)
100064ec:	900d883a 	mov	r6,r18
100064f0:	a80f883a 	mov	r7,r21
100064f4:	dac01615 	stw	r11,88(sp)
100064f8:	000ea400 	call	1000ea40 <__muldf3>
100064fc:	a00b883a 	mov	r5,r20
10006500:	9809883a 	mov	r4,r19
10006504:	d8c01215 	stw	r3,72(sp)
10006508:	d8801115 	stw	r2,68(sp)
1000650c:	000f1e40 	call	1000f1e4 <__fixdfsi>
10006510:	1009883a 	mov	r4,r2
10006514:	1025883a 	mov	r18,r2
10006518:	000f1100 	call	1000f110 <__floatsidf>
1000651c:	9809883a 	mov	r4,r19
10006520:	a00b883a 	mov	r5,r20
10006524:	100d883a 	mov	r6,r2
10006528:	180f883a 	mov	r7,r3
1000652c:	94800c04 	addi	r18,r18,48
10006530:	000e9e00 	call	1000e9e0 <__subdf3>
10006534:	bc800005 	stb	r18,0(r23)
10006538:	dac01617 	ldw	r11,88(sp)
1000653c:	102b883a 	mov	r21,r2
10006540:	00800044 	movi	r2,1
10006544:	bd800044 	addi	r22,r23,1
10006548:	1815883a 	mov	r10,r3
1000654c:	58802226 	beq	r11,r2,100065d8 <_dtoa_r+0x1410>
10006550:	bad7883a 	add	r11,r23,r11
10006554:	dc001415 	stw	r16,80(sp)
10006558:	a805883a 	mov	r2,r21
1000655c:	b027883a 	mov	r19,r22
10006560:	5821883a 	mov	r16,r11
10006564:	882b883a 	mov	r21,r17
10006568:	000d883a 	mov	r6,zero
1000656c:	01d00934 	movhi	r7,16420
10006570:	1009883a 	mov	r4,r2
10006574:	180b883a 	mov	r5,r3
10006578:	000ea400 	call	1000ea40 <__muldf3>
1000657c:	180b883a 	mov	r5,r3
10006580:	1009883a 	mov	r4,r2
10006584:	1829883a 	mov	r20,r3
10006588:	1023883a 	mov	r17,r2
1000658c:	000f1e40 	call	1000f1e4 <__fixdfsi>
10006590:	1009883a 	mov	r4,r2
10006594:	1025883a 	mov	r18,r2
10006598:	000f1100 	call	1000f110 <__floatsidf>
1000659c:	8809883a 	mov	r4,r17
100065a0:	a00b883a 	mov	r5,r20
100065a4:	100d883a 	mov	r6,r2
100065a8:	180f883a 	mov	r7,r3
100065ac:	94800c04 	addi	r18,r18,48
100065b0:	000e9e00 	call	1000e9e0 <__subdf3>
100065b4:	9cc00044 	addi	r19,r19,1
100065b8:	9cbfffc5 	stb	r18,-1(r19)
100065bc:	9c3fea1e 	bne	r19,r16,10006568 <__alt_data_end+0xf8006568>
100065c0:	1815883a 	mov	r10,r3
100065c4:	d8c01017 	ldw	r3,64(sp)
100065c8:	dc001417 	ldw	r16,80(sp)
100065cc:	a823883a 	mov	r17,r21
100065d0:	b0ed883a 	add	r22,r22,r3
100065d4:	102b883a 	mov	r21,r2
100065d8:	d9001117 	ldw	r4,68(sp)
100065dc:	d9401217 	ldw	r5,72(sp)
100065e0:	000d883a 	mov	r6,zero
100065e4:	01cff834 	movhi	r7,16352
100065e8:	da801515 	stw	r10,84(sp)
100065ec:	000e98c0 	call	1000e98c <__adddf3>
100065f0:	da801517 	ldw	r10,84(sp)
100065f4:	1009883a 	mov	r4,r2
100065f8:	180b883a 	mov	r5,r3
100065fc:	500f883a 	mov	r7,r10
10006600:	a80d883a 	mov	r6,r21
10006604:	000f0580 	call	1000f058 <__ltdf2>
10006608:	da801517 	ldw	r10,84(sp)
1000660c:	10003b0e 	bge	r2,zero,100066fc <_dtoa_r+0x1534>
10006610:	d9c01317 	ldw	r7,76(sp)
10006614:	b53fffc3 	ldbu	r20,-1(r22)
10006618:	d9c00615 	stw	r7,24(sp)
1000661c:	003d3106 	br	10005ae4 <__alt_data_end+0xf8005ae4>
10006620:	d8800817 	ldw	r2,32(sp)
10006624:	11e5c83a 	sub	r18,r2,r7
10006628:	0005883a 	mov	r2,zero
1000662c:	003d5006 	br	10005b70 <__alt_data_end+0xf8005b70>
10006630:	05800044 	movi	r22,1
10006634:	003dc406 	br	10005d48 <__alt_data_end+0xf8005d48>
10006638:	a5000044 	addi	r20,r20,1
1000663c:	15000005 	stb	r20,0(r2)
10006640:	003c8206 	br	1000584c <__alt_data_end+0xf800584c>
10006644:	d8800217 	ldw	r2,8(sp)
10006648:	00c00d84 	movi	r3,54
1000664c:	dcc00a17 	ldw	r19,40(sp)
10006650:	1885c83a 	sub	r2,r3,r2
10006654:	dc800817 	ldw	r18,32(sp)
10006658:	003d4506 	br	10005b70 <__alt_data_end+0xf8005b70>
1000665c:	dcc00317 	ldw	r19,12(sp)
10006660:	8829883a 	mov	r20,r17
10006664:	04800084 	movi	r18,2
10006668:	003bea06 	br	10005614 <__alt_data_end+0xf8005614>
1000666c:	d9000917 	ldw	r4,36(sp)
10006670:	203f1126 	beq	r4,zero,100062b8 <__alt_data_end+0xf80062b8>
10006674:	d9c00e17 	ldw	r7,56(sp)
10006678:	01fca20e 	bge	zero,r7,10005904 <__alt_data_end+0xf8005904>
1000667c:	a00b883a 	mov	r5,r20
10006680:	9809883a 	mov	r4,r19
10006684:	000d883a 	mov	r6,zero
10006688:	01d00934 	movhi	r7,16420
1000668c:	000ea400 	call	1000ea40 <__muldf3>
10006690:	91000044 	addi	r4,r18,1
10006694:	1027883a 	mov	r19,r2
10006698:	1829883a 	mov	r20,r3
1000669c:	000f1100 	call	1000f110 <__floatsidf>
100066a0:	9809883a 	mov	r4,r19
100066a4:	a00b883a 	mov	r5,r20
100066a8:	100d883a 	mov	r6,r2
100066ac:	180f883a 	mov	r7,r3
100066b0:	000ea400 	call	1000ea40 <__muldf3>
100066b4:	1009883a 	mov	r4,r2
100066b8:	180b883a 	mov	r5,r3
100066bc:	000d883a 	mov	r6,zero
100066c0:	01d00734 	movhi	r7,16412
100066c4:	000e98c0 	call	1000e98c <__adddf3>
100066c8:	1025883a 	mov	r18,r2
100066cc:	d8800617 	ldw	r2,24(sp)
100066d0:	057f3034 	movhi	r21,64704
100066d4:	1d6b883a 	add	r21,r3,r21
100066d8:	10bfffc4 	addi	r2,r2,-1
100066dc:	d8801315 	stw	r2,76(sp)
100066e0:	dac00e17 	ldw	r11,56(sp)
100066e4:	003be706 	br	10005684 <__alt_data_end+0xf8005684>
100066e8:	01000e44 	movi	r4,57
100066ec:	91000005 	stb	r4,0(r18)
100066f0:	95800044 	addi	r22,r18,1
100066f4:	982b883a 	mov	r21,r19
100066f8:	003da106 	br	10005d80 <__alt_data_end+0xf8005d80>
100066fc:	d9801117 	ldw	r6,68(sp)
10006700:	d9c01217 	ldw	r7,72(sp)
10006704:	0009883a 	mov	r4,zero
10006708:	014ff834 	movhi	r5,16352
1000670c:	da801515 	stw	r10,84(sp)
10006710:	000e9e00 	call	1000e9e0 <__subdf3>
10006714:	da801517 	ldw	r10,84(sp)
10006718:	1009883a 	mov	r4,r2
1000671c:	180b883a 	mov	r5,r3
10006720:	a80d883a 	mov	r6,r21
10006724:	500f883a 	mov	r7,r10
10006728:	000ef900 	call	1000ef90 <__gtdf2>
1000672c:	00bc750e 	bge	zero,r2,10005904 <__alt_data_end+0xf8005904>
10006730:	01000c04 	movi	r4,48
10006734:	00000106 	br	1000673c <_dtoa_r+0x1574>
10006738:	102d883a 	mov	r22,r2
1000673c:	b0bfffc4 	addi	r2,r22,-1
10006740:	10c00007 	ldb	r3,0(r2)
10006744:	193ffc26 	beq	r3,r4,10006738 <__alt_data_end+0xf8006738>
10006748:	d8801317 	ldw	r2,76(sp)
1000674c:	d8800615 	stw	r2,24(sp)
10006750:	003c3e06 	br	1000584c <__alt_data_end+0xf800584c>
10006754:	d9001317 	ldw	r4,76(sp)
10006758:	df001117 	ldw	fp,68(sp)
1000675c:	d9000615 	stw	r4,24(sp)
10006760:	003ce006 	br	10005ae4 <__alt_data_end+0xf8005ae4>
10006764:	df001117 	ldw	fp,68(sp)
10006768:	dc401217 	ldw	r17,72(sp)
1000676c:	003c6506 	br	10005904 <__alt_data_end+0xf8005904>
10006770:	103e7a1e 	bne	r2,zero,1000615c <__alt_data_end+0xf800615c>
10006774:	1880004c 	andi	r2,r3,1
10006778:	103e7826 	beq	r2,zero,1000615c <__alt_data_end+0xf800615c>
1000677c:	003e7406 	br	10006150 <__alt_data_end+0xf8006150>
10006780:	8009883a 	mov	r4,r16
10006784:	a80b883a 	mov	r5,r21
10006788:	01800284 	movi	r6,10
1000678c:	000f883a 	mov	r7,zero
10006790:	00082c80 	call	100082c8 <__multadd>
10006794:	d9000e17 	ldw	r4,56(sp)
10006798:	102b883a 	mov	r21,r2
1000679c:	d9000915 	stw	r4,36(sp)
100067a0:	003d5106 	br	10005ce8 <__alt_data_end+0xf8005ce8>
100067a4:	04800084 	movi	r18,2
100067a8:	003b9a06 	br	10005614 <__alt_data_end+0xf8005614>
100067ac:	d8c01317 	ldw	r3,76(sp)
100067b0:	d8c00615 	stw	r3,24(sp)
100067b4:	003ccb06 	br	10005ae4 <__alt_data_end+0xf8005ae4>
100067b8:	d8c01317 	ldw	r3,76(sp)
100067bc:	d8c00615 	stw	r3,24(sp)
100067c0:	003c2206 	br	1000584c <__alt_data_end+0xf800584c>
100067c4:	20fd3826 	beq	r4,r3,10005ca8 <__alt_data_end+0xf8005ca8>
100067c8:	00c00f04 	movi	r3,60
100067cc:	1885c83a 	sub	r2,r3,r2
100067d0:	003da906 	br	10005e78 <__alt_data_end+0xf8005e78>
100067d4:	000b883a 	mov	r5,zero
100067d8:	003b5406 	br	1000552c <__alt_data_end+0xf800552c>
100067dc:	04c00044 	movi	r19,1
100067e0:	003b3b06 	br	100054d0 <__alt_data_end+0xf80054d0>

100067e4 <_fflush_r>:
100067e4:	defffb04 	addi	sp,sp,-20
100067e8:	dcc00315 	stw	r19,12(sp)
100067ec:	dc400115 	stw	r17,4(sp)
100067f0:	dfc00415 	stw	ra,16(sp)
100067f4:	dc800215 	stw	r18,8(sp)
100067f8:	dc000015 	stw	r16,0(sp)
100067fc:	2027883a 	mov	r19,r4
10006800:	2823883a 	mov	r17,r5
10006804:	20000226 	beq	r4,zero,10006810 <_fflush_r+0x2c>
10006808:	20800e17 	ldw	r2,56(r4)
1000680c:	10005726 	beq	r2,zero,1000696c <_fflush_r+0x188>
10006810:	8880030b 	ldhu	r2,12(r17)
10006814:	10c0020c 	andi	r3,r2,8
10006818:	18ffffcc 	andi	r3,r3,65535
1000681c:	18e0001c 	xori	r3,r3,32768
10006820:	18e00004 	addi	r3,r3,-32768
10006824:	1800311e 	bne	r3,zero,100068ec <_fflush_r+0x108>
10006828:	89000117 	ldw	r4,4(r17)
1000682c:	10c20014 	ori	r3,r2,2048
10006830:	88c0030d 	sth	r3,12(r17)
10006834:	180b883a 	mov	r5,r3
10006838:	0100520e 	bge	zero,r4,10006984 <_fflush_r+0x1a0>
1000683c:	88c00a17 	ldw	r3,40(r17)
10006840:	18002226 	beq	r3,zero,100068cc <_fflush_r+0xe8>
10006844:	1084000c 	andi	r2,r2,4096
10006848:	10bfffcc 	andi	r2,r2,65535
1000684c:	10a0001c 	xori	r2,r2,32768
10006850:	10a00004 	addi	r2,r2,-32768
10006854:	10004e26 	beq	r2,zero,10006990 <_fflush_r+0x1ac>
10006858:	8c001417 	ldw	r16,80(r17)
1000685c:	2940010c 	andi	r5,r5,4
10006860:	297fffcc 	andi	r5,r5,65535
10006864:	2960001c 	xori	r5,r5,32768
10006868:	29600004 	addi	r5,r5,-32768
1000686c:	28000626 	beq	r5,zero,10006888 <_fflush_r+0xa4>
10006870:	89000117 	ldw	r4,4(r17)
10006874:	88800c17 	ldw	r2,48(r17)
10006878:	8121c83a 	sub	r16,r16,r4
1000687c:	10000226 	beq	r2,zero,10006888 <_fflush_r+0xa4>
10006880:	88800f17 	ldw	r2,60(r17)
10006884:	80a1c83a 	sub	r16,r16,r2
10006888:	89400717 	ldw	r5,28(r17)
1000688c:	9809883a 	mov	r4,r19
10006890:	800d883a 	mov	r6,r16
10006894:	000f883a 	mov	r7,zero
10006898:	183ee83a 	callr	r3
1000689c:	8080281e 	bne	r16,r2,10006940 <_fflush_r+0x15c>
100068a0:	8880030b 	ldhu	r2,12(r17)
100068a4:	88c00417 	ldw	r3,16(r17)
100068a8:	88000115 	stw	zero,4(r17)
100068ac:	113dffcc 	andi	r4,r2,63487
100068b0:	1084000c 	andi	r2,r2,4096
100068b4:	10bfffcc 	andi	r2,r2,65535
100068b8:	10a0001c 	xori	r2,r2,32768
100068bc:	8900030d 	sth	r4,12(r17)
100068c0:	88c00015 	stw	r3,0(r17)
100068c4:	10a00004 	addi	r2,r2,-32768
100068c8:	10002c1e 	bne	r2,zero,1000697c <_fflush_r+0x198>
100068cc:	0005883a 	mov	r2,zero
100068d0:	dfc00417 	ldw	ra,16(sp)
100068d4:	dcc00317 	ldw	r19,12(sp)
100068d8:	dc800217 	ldw	r18,8(sp)
100068dc:	dc400117 	ldw	r17,4(sp)
100068e0:	dc000017 	ldw	r16,0(sp)
100068e4:	dec00504 	addi	sp,sp,20
100068e8:	f800283a 	ret
100068ec:	8c800417 	ldw	r18,16(r17)
100068f0:	903ff626 	beq	r18,zero,100068cc <__alt_data_end+0xf80068cc>
100068f4:	8c000017 	ldw	r16,0(r17)
100068f8:	108000cc 	andi	r2,r2,3
100068fc:	8c800015 	stw	r18,0(r17)
10006900:	84a1c83a 	sub	r16,r16,r18
10006904:	10001b1e 	bne	r2,zero,10006974 <_fflush_r+0x190>
10006908:	88800517 	ldw	r2,20(r17)
1000690c:	88800215 	stw	r2,8(r17)
10006910:	04000316 	blt	zero,r16,10006920 <_fflush_r+0x13c>
10006914:	003fed06 	br	100068cc <__alt_data_end+0xf80068cc>
10006918:	90a5883a 	add	r18,r18,r2
1000691c:	043feb0e 	bge	zero,r16,100068cc <__alt_data_end+0xf80068cc>
10006920:	88800917 	ldw	r2,36(r17)
10006924:	89400717 	ldw	r5,28(r17)
10006928:	800f883a 	mov	r7,r16
1000692c:	900d883a 	mov	r6,r18
10006930:	9809883a 	mov	r4,r19
10006934:	103ee83a 	callr	r2
10006938:	80a1c83a 	sub	r16,r16,r2
1000693c:	00bff616 	blt	zero,r2,10006918 <__alt_data_end+0xf8006918>
10006940:	88c0030b 	ldhu	r3,12(r17)
10006944:	00bfffc4 	movi	r2,-1
10006948:	18c01014 	ori	r3,r3,64
1000694c:	88c0030d 	sth	r3,12(r17)
10006950:	dfc00417 	ldw	ra,16(sp)
10006954:	dcc00317 	ldw	r19,12(sp)
10006958:	dc800217 	ldw	r18,8(sp)
1000695c:	dc400117 	ldw	r17,4(sp)
10006960:	dc000017 	ldw	r16,0(sp)
10006964:	dec00504 	addi	sp,sp,20
10006968:	f800283a 	ret
1000696c:	0006aa00 	call	10006aa0 <__sinit>
10006970:	003fa706 	br	10006810 <__alt_data_end+0xf8006810>
10006974:	0005883a 	mov	r2,zero
10006978:	003fe406 	br	1000690c <__alt_data_end+0xf800690c>
1000697c:	8c001415 	stw	r16,80(r17)
10006980:	003fd206 	br	100068cc <__alt_data_end+0xf80068cc>
10006984:	88c00f17 	ldw	r3,60(r17)
10006988:	00ffac16 	blt	zero,r3,1000683c <__alt_data_end+0xf800683c>
1000698c:	003fcf06 	br	100068cc <__alt_data_end+0xf80068cc>
10006990:	89400717 	ldw	r5,28(r17)
10006994:	9809883a 	mov	r4,r19
10006998:	000d883a 	mov	r6,zero
1000699c:	01c00044 	movi	r7,1
100069a0:	183ee83a 	callr	r3
100069a4:	1021883a 	mov	r16,r2
100069a8:	00bfffc4 	movi	r2,-1
100069ac:	80800326 	beq	r16,r2,100069bc <_fflush_r+0x1d8>
100069b0:	8940030b 	ldhu	r5,12(r17)
100069b4:	88c00a17 	ldw	r3,40(r17)
100069b8:	003fa806 	br	1000685c <__alt_data_end+0xf800685c>
100069bc:	98c00017 	ldw	r3,0(r19)
100069c0:	00800744 	movi	r2,29
100069c4:	18bfde1e 	bne	r3,r2,10006940 <__alt_data_end+0xf8006940>
100069c8:	003fc006 	br	100068cc <__alt_data_end+0xf80068cc>

100069cc <fflush>:
100069cc:	200b883a 	mov	r5,r4
100069d0:	20000426 	beq	r4,zero,100069e4 <fflush+0x18>
100069d4:	00840074 	movhi	r2,4097
100069d8:	10917f04 	addi	r2,r2,17916
100069dc:	11000017 	ldw	r4,0(r2)
100069e0:	00067e41 	jmpi	100067e4 <_fflush_r>
100069e4:	00840074 	movhi	r2,4097
100069e8:	10917e04 	addi	r2,r2,17912
100069ec:	11000017 	ldw	r4,0(r2)
100069f0:	01440034 	movhi	r5,4096
100069f4:	2959f904 	addi	r5,r5,26596
100069f8:	00078fc1 	jmpi	100078fc <_fwalk_reent>

100069fc <__fp_lock>:
100069fc:	0005883a 	mov	r2,zero
10006a00:	f800283a 	ret

10006a04 <__fp_unlock>:
10006a04:	0005883a 	mov	r2,zero
10006a08:	f800283a 	ret

10006a0c <_cleanup_r>:
10006a0c:	01440074 	movhi	r5,4097
10006a10:	29727304 	addi	r5,r5,-13876
10006a14:	00078541 	jmpi	10007854 <_fwalk>

10006a18 <__sfmoreglue>:
10006a18:	defffc04 	addi	sp,sp,-16
10006a1c:	dc800215 	stw	r18,8(sp)
10006a20:	2825883a 	mov	r18,r5
10006a24:	dc000015 	stw	r16,0(sp)
10006a28:	01401704 	movi	r5,92
10006a2c:	2021883a 	mov	r16,r4
10006a30:	9009883a 	mov	r4,r18
10006a34:	dfc00315 	stw	ra,12(sp)
10006a38:	dc400115 	stw	r17,4(sp)
10006a3c:	000f5540 	call	1000f554 <__mulsi3>
10006a40:	8009883a 	mov	r4,r16
10006a44:	11400304 	addi	r5,r2,12
10006a48:	1023883a 	mov	r17,r2
10006a4c:	0000edc0 	call	10000edc <_malloc_r>
10006a50:	1021883a 	mov	r16,r2
10006a54:	10000726 	beq	r2,zero,10006a74 <__sfmoreglue+0x5c>
10006a58:	11000304 	addi	r4,r2,12
10006a5c:	10000015 	stw	zero,0(r2)
10006a60:	14800115 	stw	r18,4(r2)
10006a64:	11000215 	stw	r4,8(r2)
10006a68:	000b883a 	mov	r5,zero
10006a6c:	880d883a 	mov	r6,r17
10006a70:	000811c0 	call	1000811c <memset>
10006a74:	8005883a 	mov	r2,r16
10006a78:	dfc00317 	ldw	ra,12(sp)
10006a7c:	dc800217 	ldw	r18,8(sp)
10006a80:	dc400117 	ldw	r17,4(sp)
10006a84:	dc000017 	ldw	r16,0(sp)
10006a88:	dec00404 	addi	sp,sp,16
10006a8c:	f800283a 	ret

10006a90 <_cleanup>:
10006a90:	00840074 	movhi	r2,4097
10006a94:	10917e04 	addi	r2,r2,17912
10006a98:	11000017 	ldw	r4,0(r2)
10006a9c:	0006a0c1 	jmpi	10006a0c <_cleanup_r>

10006aa0 <__sinit>:
10006aa0:	20800e17 	ldw	r2,56(r4)
10006aa4:	1000401e 	bne	r2,zero,10006ba8 <__sinit+0x108>
10006aa8:	21400117 	ldw	r5,4(r4)
10006aac:	01840034 	movhi	r6,4096
10006ab0:	319a8304 	addi	r6,r6,27148
10006ab4:	20c00217 	ldw	r3,8(r4)
10006ab8:	21800f15 	stw	r6,60(r4)
10006abc:	2080bb04 	addi	r2,r4,748
10006ac0:	02400044 	movi	r9,1
10006ac4:	018000c4 	movi	r6,3
10006ac8:	2180b915 	stw	r6,740(r4)
10006acc:	2080ba15 	stw	r2,744(r4)
10006ad0:	22400e15 	stw	r9,56(r4)
10006ad4:	20800317 	ldw	r2,12(r4)
10006ad8:	2000b815 	stw	zero,736(r4)
10006adc:	02040074 	movhi	r8,4097
10006ae0:	42277b04 	addi	r8,r8,-25108
10006ae4:	01c40074 	movhi	r7,4097
10006ae8:	39e79004 	addi	r7,r7,-25024
10006aec:	01840074 	movhi	r6,4097
10006af0:	31a7b204 	addi	r6,r6,-24888
10006af4:	01040074 	movhi	r4,4097
10006af8:	2127c904 	addi	r4,r4,-24796
10006afc:	02800104 	movi	r10,4
10006b00:	28000015 	stw	zero,0(r5)
10006b04:	28000115 	stw	zero,4(r5)
10006b08:	28000215 	stw	zero,8(r5)
10006b0c:	2a80030d 	sth	r10,12(r5)
10006b10:	2800038d 	sth	zero,14(r5)
10006b14:	28000415 	stw	zero,16(r5)
10006b18:	28000515 	stw	zero,20(r5)
10006b1c:	28000615 	stw	zero,24(r5)
10006b20:	29400715 	stw	r5,28(r5)
10006b24:	2a000815 	stw	r8,32(r5)
10006b28:	29c00915 	stw	r7,36(r5)
10006b2c:	29800a15 	stw	r6,40(r5)
10006b30:	29000b15 	stw	r4,44(r5)
10006b34:	01400284 	movi	r5,10
10006b38:	18000015 	stw	zero,0(r3)
10006b3c:	18000115 	stw	zero,4(r3)
10006b40:	18000215 	stw	zero,8(r3)
10006b44:	1940030d 	sth	r5,12(r3)
10006b48:	1a40038d 	sth	r9,14(r3)
10006b4c:	18000415 	stw	zero,16(r3)
10006b50:	18000515 	stw	zero,20(r3)
10006b54:	18000615 	stw	zero,24(r3)
10006b58:	18c00715 	stw	r3,28(r3)
10006b5c:	1a000815 	stw	r8,32(r3)
10006b60:	19c00915 	stw	r7,36(r3)
10006b64:	19800a15 	stw	r6,40(r3)
10006b68:	19000b15 	stw	r4,44(r3)
10006b6c:	00c00484 	movi	r3,18
10006b70:	10c0030d 	sth	r3,12(r2)
10006b74:	00c00084 	movi	r3,2
10006b78:	10000015 	stw	zero,0(r2)
10006b7c:	10000115 	stw	zero,4(r2)
10006b80:	10000215 	stw	zero,8(r2)
10006b84:	10c0038d 	sth	r3,14(r2)
10006b88:	10000415 	stw	zero,16(r2)
10006b8c:	10000515 	stw	zero,20(r2)
10006b90:	10000615 	stw	zero,24(r2)
10006b94:	10800715 	stw	r2,28(r2)
10006b98:	12000815 	stw	r8,32(r2)
10006b9c:	11c00915 	stw	r7,36(r2)
10006ba0:	11800a15 	stw	r6,40(r2)
10006ba4:	11000b15 	stw	r4,44(r2)
10006ba8:	f800283a 	ret

10006bac <__sfp>:
10006bac:	defffc04 	addi	sp,sp,-16
10006bb0:	00840074 	movhi	r2,4097
10006bb4:	10917e04 	addi	r2,r2,17912
10006bb8:	dc400115 	stw	r17,4(sp)
10006bbc:	14400017 	ldw	r17,0(r2)
10006bc0:	dc800215 	stw	r18,8(sp)
10006bc4:	dfc00315 	stw	ra,12(sp)
10006bc8:	88800e17 	ldw	r2,56(r17)
10006bcc:	dc000015 	stw	r16,0(sp)
10006bd0:	2025883a 	mov	r18,r4
10006bd4:	10002826 	beq	r2,zero,10006c78 <__sfp+0xcc>
10006bd8:	8c40b804 	addi	r17,r17,736
10006bdc:	043fffc4 	movi	r16,-1
10006be0:	89400117 	ldw	r5,4(r17)
10006be4:	88800217 	ldw	r2,8(r17)
10006be8:	297fffc4 	addi	r5,r5,-1
10006bec:	28000a16 	blt	r5,zero,10006c18 <__sfp+0x6c>
10006bf0:	10c0030f 	ldh	r3,12(r2)
10006bf4:	18000c26 	beq	r3,zero,10006c28 <__sfp+0x7c>
10006bf8:	10c01a04 	addi	r3,r2,104
10006bfc:	00000206 	br	10006c08 <__sfp+0x5c>
10006c00:	19bfe90f 	ldh	r6,-92(r3)
10006c04:	30000826 	beq	r6,zero,10006c28 <__sfp+0x7c>
10006c08:	297fffc4 	addi	r5,r5,-1
10006c0c:	18bffd04 	addi	r2,r3,-12
10006c10:	18c01704 	addi	r3,r3,92
10006c14:	2c3ffa1e 	bne	r5,r16,10006c00 <__alt_data_end+0xf8006c00>
10006c18:	88800017 	ldw	r2,0(r17)
10006c1c:	10001926 	beq	r2,zero,10006c84 <__sfp+0xd8>
10006c20:	1023883a 	mov	r17,r2
10006c24:	003fee06 	br	10006be0 <__alt_data_end+0xf8006be0>
10006c28:	00ffffc4 	movi	r3,-1
10006c2c:	10c0038d 	sth	r3,14(r2)
10006c30:	00c00044 	movi	r3,1
10006c34:	10c0030d 	sth	r3,12(r2)
10006c38:	10000015 	stw	zero,0(r2)
10006c3c:	10000215 	stw	zero,8(r2)
10006c40:	10000115 	stw	zero,4(r2)
10006c44:	10000415 	stw	zero,16(r2)
10006c48:	10000515 	stw	zero,20(r2)
10006c4c:	10000615 	stw	zero,24(r2)
10006c50:	10000c15 	stw	zero,48(r2)
10006c54:	10000d15 	stw	zero,52(r2)
10006c58:	10001115 	stw	zero,68(r2)
10006c5c:	10001215 	stw	zero,72(r2)
10006c60:	dfc00317 	ldw	ra,12(sp)
10006c64:	dc800217 	ldw	r18,8(sp)
10006c68:	dc400117 	ldw	r17,4(sp)
10006c6c:	dc000017 	ldw	r16,0(sp)
10006c70:	dec00404 	addi	sp,sp,16
10006c74:	f800283a 	ret
10006c78:	8809883a 	mov	r4,r17
10006c7c:	0006aa00 	call	10006aa0 <__sinit>
10006c80:	003fd506 	br	10006bd8 <__alt_data_end+0xf8006bd8>
10006c84:	9009883a 	mov	r4,r18
10006c88:	01400104 	movi	r5,4
10006c8c:	0006a180 	call	10006a18 <__sfmoreglue>
10006c90:	88800015 	stw	r2,0(r17)
10006c94:	103fe21e 	bne	r2,zero,10006c20 <__alt_data_end+0xf8006c20>
10006c98:	00800304 	movi	r2,12
10006c9c:	90800015 	stw	r2,0(r18)
10006ca0:	0005883a 	mov	r2,zero
10006ca4:	003fee06 	br	10006c60 <__alt_data_end+0xf8006c60>

10006ca8 <__sfp_lock_acquire>:
10006ca8:	f800283a 	ret

10006cac <__sfp_lock_release>:
10006cac:	f800283a 	ret

10006cb0 <__sinit_lock_acquire>:
10006cb0:	f800283a 	ret

10006cb4 <__sinit_lock_release>:
10006cb4:	f800283a 	ret

10006cb8 <__fp_lock_all>:
10006cb8:	00840074 	movhi	r2,4097
10006cbc:	10917f04 	addi	r2,r2,17916
10006cc0:	11000017 	ldw	r4,0(r2)
10006cc4:	01440034 	movhi	r5,4096
10006cc8:	295a7f04 	addi	r5,r5,27132
10006ccc:	00078541 	jmpi	10007854 <_fwalk>

10006cd0 <__fp_unlock_all>:
10006cd0:	00840074 	movhi	r2,4097
10006cd4:	10917f04 	addi	r2,r2,17916
10006cd8:	11000017 	ldw	r4,0(r2)
10006cdc:	01440034 	movhi	r5,4096
10006ce0:	295a8104 	addi	r5,r5,27140
10006ce4:	00078541 	jmpi	10007854 <_fwalk>

10006ce8 <_fread_r>:
10006ce8:	defff504 	addi	sp,sp,-44
10006cec:	dd000515 	stw	r20,20(sp)
10006cf0:	dcc00415 	stw	r19,16(sp)
10006cf4:	2029883a 	mov	r20,r4
10006cf8:	2827883a 	mov	r19,r5
10006cfc:	3809883a 	mov	r4,r7
10006d00:	300b883a 	mov	r5,r6
10006d04:	ddc00815 	stw	r23,32(sp)
10006d08:	dd800715 	stw	r22,28(sp)
10006d0c:	dd400615 	stw	r21,24(sp)
10006d10:	dc000115 	stw	r16,4(sp)
10006d14:	dfc00a15 	stw	ra,40(sp)
10006d18:	df000915 	stw	fp,36(sp)
10006d1c:	dc800315 	stw	r18,12(sp)
10006d20:	dc400215 	stw	r17,8(sp)
10006d24:	302f883a 	mov	r23,r6
10006d28:	382b883a 	mov	r21,r7
10006d2c:	000f5540 	call	1000f554 <__mulsi3>
10006d30:	102d883a 	mov	r22,r2
10006d34:	dc000b17 	ldw	r16,44(sp)
10006d38:	10002e26 	beq	r2,zero,10006df4 <_fread_r+0x10c>
10006d3c:	a0000226 	beq	r20,zero,10006d48 <_fread_r+0x60>
10006d40:	a0800e17 	ldw	r2,56(r20)
10006d44:	10006726 	beq	r2,zero,10006ee4 <_fread_r+0x1fc>
10006d48:	84400117 	ldw	r17,4(r16)
10006d4c:	88002b16 	blt	r17,zero,10006dfc <_fread_r+0x114>
10006d50:	8080030b 	ldhu	r2,12(r16)
10006d54:	8807883a 	mov	r3,r17
10006d58:	1080008c 	andi	r2,r2,2
10006d5c:	10bfffcc 	andi	r2,r2,65535
10006d60:	10a0001c 	xori	r2,r2,32768
10006d64:	10a00004 	addi	r2,r2,-32768
10006d68:	10002d1e 	bne	r2,zero,10006e20 <_fread_r+0x138>
10006d6c:	b025883a 	mov	r18,r22
10006d70:	00000106 	br	10006d78 <_fread_r+0x90>
10006d74:	84400117 	ldw	r17,4(r16)
10006d78:	9809883a 	mov	r4,r19
10006d7c:	880d883a 	mov	r6,r17
10006d80:	81400017 	ldw	r5,0(r16)
10006d84:	8c805c2e 	bgeu	r17,r18,10006ef8 <_fread_r+0x210>
10006d88:	0007e500 	call	10007e50 <memcpy>
10006d8c:	80800017 	ldw	r2,0(r16)
10006d90:	9c67883a 	add	r19,r19,r17
10006d94:	9465c83a 	sub	r18,r18,r17
10006d98:	1463883a 	add	r17,r2,r17
10006d9c:	a009883a 	mov	r4,r20
10006da0:	800b883a 	mov	r5,r16
10006da4:	84400015 	stw	r17,0(r16)
10006da8:	0009a0c0 	call	10009a0c <__srefill_r>
10006dac:	103ff126 	beq	r2,zero,10006d74 <__alt_data_end+0xf8006d74>
10006db0:	b489c83a 	sub	r4,r22,r18
10006db4:	b80b883a 	mov	r5,r23
10006db8:	000f5440 	call	1000f544 <__udivsi3>
10006dbc:	102b883a 	mov	r21,r2
10006dc0:	a805883a 	mov	r2,r21
10006dc4:	dfc00a17 	ldw	ra,40(sp)
10006dc8:	df000917 	ldw	fp,36(sp)
10006dcc:	ddc00817 	ldw	r23,32(sp)
10006dd0:	dd800717 	ldw	r22,28(sp)
10006dd4:	dd400617 	ldw	r21,24(sp)
10006dd8:	dd000517 	ldw	r20,20(sp)
10006ddc:	dcc00417 	ldw	r19,16(sp)
10006de0:	dc800317 	ldw	r18,12(sp)
10006de4:	dc400217 	ldw	r17,8(sp)
10006de8:	dc000117 	ldw	r16,4(sp)
10006dec:	dec00b04 	addi	sp,sp,44
10006df0:	f800283a 	ret
10006df4:	002b883a 	mov	r21,zero
10006df8:	003ff106 	br	10006dc0 <__alt_data_end+0xf8006dc0>
10006dfc:	8080030b 	ldhu	r2,12(r16)
10006e00:	80000115 	stw	zero,4(r16)
10006e04:	0007883a 	mov	r3,zero
10006e08:	1080008c 	andi	r2,r2,2
10006e0c:	10bfffcc 	andi	r2,r2,65535
10006e10:	10a0001c 	xori	r2,r2,32768
10006e14:	10a00004 	addi	r2,r2,-32768
10006e18:	0023883a 	mov	r17,zero
10006e1c:	103fd326 	beq	r2,zero,10006d6c <__alt_data_end+0xf8006d6c>
10006e20:	1823883a 	mov	r17,r3
10006e24:	b0c0012e 	bgeu	r22,r3,10006e2c <_fread_r+0x144>
10006e28:	b023883a 	mov	r17,r22
10006e2c:	81400017 	ldw	r5,0(r16)
10006e30:	9809883a 	mov	r4,r19
10006e34:	880d883a 	mov	r6,r17
10006e38:	0007e500 	call	10007e50 <memcpy>
10006e3c:	80800117 	ldw	r2,4(r16)
10006e40:	84800017 	ldw	r18,0(r16)
10006e44:	81400c17 	ldw	r5,48(r16)
10006e48:	1445c83a 	sub	r2,r2,r17
10006e4c:	9465883a 	add	r18,r18,r17
10006e50:	84800015 	stw	r18,0(r16)
10006e54:	80800115 	stw	r2,4(r16)
10006e58:	9c67883a 	add	r19,r19,r17
10006e5c:	b463c83a 	sub	r17,r22,r17
10006e60:	28002e26 	beq	r5,zero,10006f1c <_fread_r+0x234>
10006e64:	883fd626 	beq	r17,zero,10006dc0 <__alt_data_end+0xf8006dc0>
10006e68:	80801004 	addi	r2,r16,64
10006e6c:	28800326 	beq	r5,r2,10006e7c <_fread_r+0x194>
10006e70:	a009883a 	mov	r4,r20
10006e74:	00070a00 	call	100070a0 <_free_r>
10006e78:	84800017 	ldw	r18,0(r16)
10006e7c:	80000c15 	stw	zero,48(r16)
10006e80:	80c00517 	ldw	r3,20(r16)
10006e84:	87000417 	ldw	fp,16(r16)
10006e88:	d8c00015 	stw	r3,0(sp)
10006e8c:	00000106 	br	10006e94 <_fread_r+0x1ac>
10006e90:	883fcb26 	beq	r17,zero,10006dc0 <__alt_data_end+0xf8006dc0>
10006e94:	84c00415 	stw	r19,16(r16)
10006e98:	84400515 	stw	r17,20(r16)
10006e9c:	84c00015 	stw	r19,0(r16)
10006ea0:	a009883a 	mov	r4,r20
10006ea4:	800b883a 	mov	r5,r16
10006ea8:	0009a0c0 	call	10009a0c <__srefill_r>
10006eac:	d8c00017 	ldw	r3,0(sp)
10006eb0:	81000117 	ldw	r4,4(r16)
10006eb4:	87000415 	stw	fp,16(r16)
10006eb8:	80c00515 	stw	r3,20(r16)
10006ebc:	84800015 	stw	r18,0(r16)
10006ec0:	80000115 	stw	zero,4(r16)
10006ec4:	8923c83a 	sub	r17,r17,r4
10006ec8:	9927883a 	add	r19,r19,r4
10006ecc:	103ff026 	beq	r2,zero,10006e90 <__alt_data_end+0xf8006e90>
10006ed0:	b449c83a 	sub	r4,r22,r17
10006ed4:	b80b883a 	mov	r5,r23
10006ed8:	000f5440 	call	1000f544 <__udivsi3>
10006edc:	102b883a 	mov	r21,r2
10006ee0:	003fb706 	br	10006dc0 <__alt_data_end+0xf8006dc0>
10006ee4:	a009883a 	mov	r4,r20
10006ee8:	0006aa00 	call	10006aa0 <__sinit>
10006eec:	84400117 	ldw	r17,4(r16)
10006ef0:	883f970e 	bge	r17,zero,10006d50 <__alt_data_end+0xf8006d50>
10006ef4:	003fc106 	br	10006dfc <__alt_data_end+0xf8006dfc>
10006ef8:	900d883a 	mov	r6,r18
10006efc:	0007e500 	call	10007e50 <memcpy>
10006f00:	80800117 	ldw	r2,4(r16)
10006f04:	80c00017 	ldw	r3,0(r16)
10006f08:	1485c83a 	sub	r2,r2,r18
10006f0c:	1ca5883a 	add	r18,r3,r18
10006f10:	80800115 	stw	r2,4(r16)
10006f14:	84800015 	stw	r18,0(r16)
10006f18:	003fa906 	br	10006dc0 <__alt_data_end+0xf8006dc0>
10006f1c:	883fd81e 	bne	r17,zero,10006e80 <__alt_data_end+0xf8006e80>
10006f20:	003fa706 	br	10006dc0 <__alt_data_end+0xf8006dc0>

10006f24 <fread>:
10006f24:	00840074 	movhi	r2,4097
10006f28:	10917f04 	addi	r2,r2,17916
10006f2c:	2011883a 	mov	r8,r4
10006f30:	11000017 	ldw	r4,0(r2)
10006f34:	defffe04 	addi	sp,sp,-8
10006f38:	2807883a 	mov	r3,r5
10006f3c:	3005883a 	mov	r2,r6
10006f40:	d9c00015 	stw	r7,0(sp)
10006f44:	400b883a 	mov	r5,r8
10006f48:	180d883a 	mov	r6,r3
10006f4c:	100f883a 	mov	r7,r2
10006f50:	dfc00115 	stw	ra,4(sp)
10006f54:	0006ce80 	call	10006ce8 <_fread_r>
10006f58:	dfc00117 	ldw	ra,4(sp)
10006f5c:	dec00204 	addi	sp,sp,8
10006f60:	f800283a 	ret

10006f64 <_malloc_trim_r>:
10006f64:	defffb04 	addi	sp,sp,-20
10006f68:	dcc00315 	stw	r19,12(sp)
10006f6c:	dc800215 	stw	r18,8(sp)
10006f70:	dc400115 	stw	r17,4(sp)
10006f74:	dc000015 	stw	r16,0(sp)
10006f78:	2827883a 	mov	r19,r5
10006f7c:	dfc00415 	stw	ra,16(sp)
10006f80:	04440074 	movhi	r17,4097
10006f84:	8c4aea04 	addi	r17,r17,11176
10006f88:	2021883a 	mov	r16,r4
10006f8c:	00103480 	call	10010348 <__malloc_lock>
10006f90:	88800217 	ldw	r2,8(r17)
10006f94:	14800117 	ldw	r18,4(r2)
10006f98:	00bfff04 	movi	r2,-4
10006f9c:	90a4703a 	and	r18,r18,r2
10006fa0:	9083fbc4 	addi	r2,r18,4079
10006fa4:	14e7c83a 	sub	r19,r2,r19
10006fa8:	9826d33a 	srli	r19,r19,12
10006fac:	0083ffc4 	movi	r2,4095
10006fb0:	9cffffc4 	addi	r19,r19,-1
10006fb4:	9826933a 	slli	r19,r19,12
10006fb8:	14c0060e 	bge	r2,r19,10006fd4 <_malloc_trim_r+0x70>
10006fbc:	8009883a 	mov	r4,r16
10006fc0:	000b883a 	mov	r5,zero
10006fc4:	00016ec0 	call	100016ec <_sbrk_r>
10006fc8:	88c00217 	ldw	r3,8(r17)
10006fcc:	1c87883a 	add	r3,r3,r18
10006fd0:	10c00a26 	beq	r2,r3,10006ffc <_malloc_trim_r+0x98>
10006fd4:	8009883a 	mov	r4,r16
10006fd8:	00103680 	call	10010368 <__malloc_unlock>
10006fdc:	0005883a 	mov	r2,zero
10006fe0:	dfc00417 	ldw	ra,16(sp)
10006fe4:	dcc00317 	ldw	r19,12(sp)
10006fe8:	dc800217 	ldw	r18,8(sp)
10006fec:	dc400117 	ldw	r17,4(sp)
10006ff0:	dc000017 	ldw	r16,0(sp)
10006ff4:	dec00504 	addi	sp,sp,20
10006ff8:	f800283a 	ret
10006ffc:	8009883a 	mov	r4,r16
10007000:	04cbc83a 	sub	r5,zero,r19
10007004:	00016ec0 	call	100016ec <_sbrk_r>
10007008:	00ffffc4 	movi	r3,-1
1000700c:	10c01326 	beq	r2,r3,1000705c <_malloc_trim_r+0xf8>
10007010:	00840074 	movhi	r2,4097
10007014:	10988404 	addi	r2,r2,25104
10007018:	11000017 	ldw	r4,0(r2)
1000701c:	88c00217 	ldw	r3,8(r17)
10007020:	94e5c83a 	sub	r18,r18,r19
10007024:	94800054 	ori	r18,r18,1
10007028:	24e7c83a 	sub	r19,r4,r19
1000702c:	1c800115 	stw	r18,4(r3)
10007030:	8009883a 	mov	r4,r16
10007034:	14c00015 	stw	r19,0(r2)
10007038:	00103680 	call	10010368 <__malloc_unlock>
1000703c:	00800044 	movi	r2,1
10007040:	dfc00417 	ldw	ra,16(sp)
10007044:	dcc00317 	ldw	r19,12(sp)
10007048:	dc800217 	ldw	r18,8(sp)
1000704c:	dc400117 	ldw	r17,4(sp)
10007050:	dc000017 	ldw	r16,0(sp)
10007054:	dec00504 	addi	sp,sp,20
10007058:	f800283a 	ret
1000705c:	8009883a 	mov	r4,r16
10007060:	000b883a 	mov	r5,zero
10007064:	00016ec0 	call	100016ec <_sbrk_r>
10007068:	88c00217 	ldw	r3,8(r17)
1000706c:	014003c4 	movi	r5,15
10007070:	10c9c83a 	sub	r4,r2,r3
10007074:	293fd70e 	bge	r5,r4,10006fd4 <__alt_data_end+0xf8006fd4>
10007078:	01440074 	movhi	r5,4097
1000707c:	29517b04 	addi	r5,r5,17900
10007080:	29400017 	ldw	r5,0(r5)
10007084:	21000054 	ori	r4,r4,1
10007088:	19000115 	stw	r4,4(r3)
1000708c:	1145c83a 	sub	r2,r2,r5
10007090:	01440074 	movhi	r5,4097
10007094:	29588404 	addi	r5,r5,25104
10007098:	28800015 	stw	r2,0(r5)
1000709c:	003fcd06 	br	10006fd4 <__alt_data_end+0xf8006fd4>

100070a0 <_free_r>:
100070a0:	defffd04 	addi	sp,sp,-12
100070a4:	dc400115 	stw	r17,4(sp)
100070a8:	dc000015 	stw	r16,0(sp)
100070ac:	dfc00215 	stw	ra,8(sp)
100070b0:	2821883a 	mov	r16,r5
100070b4:	2023883a 	mov	r17,r4
100070b8:	28004b26 	beq	r5,zero,100071e8 <_free_r+0x148>
100070bc:	00103480 	call	10010348 <__malloc_lock>
100070c0:	823fff17 	ldw	r8,-4(r16)
100070c4:	00bfff84 	movi	r2,-2
100070c8:	81bffe04 	addi	r6,r16,-8
100070cc:	4084703a 	and	r2,r8,r2
100070d0:	3087883a 	add	r3,r6,r2
100070d4:	01440074 	movhi	r5,4097
100070d8:	294aea04 	addi	r5,r5,11176
100070dc:	1a400117 	ldw	r9,4(r3)
100070e0:	29000217 	ldw	r4,8(r5)
100070e4:	01ffff04 	movi	r7,-4
100070e8:	49ce703a 	and	r7,r9,r7
100070ec:	20c06526 	beq	r4,r3,10007284 <_free_r+0x1e4>
100070f0:	19c00115 	stw	r7,4(r3)
100070f4:	4200004c 	andi	r8,r8,1
100070f8:	40003026 	beq	r8,zero,100071bc <_free_r+0x11c>
100070fc:	0009883a 	mov	r4,zero
10007100:	19d1883a 	add	r8,r3,r7
10007104:	42000117 	ldw	r8,4(r8)
10007108:	4200004c 	andi	r8,r8,1
1000710c:	4000061e 	bne	r8,zero,10007128 <_free_r+0x88>
10007110:	11c5883a 	add	r2,r2,r7
10007114:	19c00217 	ldw	r7,8(r3)
10007118:	20004e26 	beq	r4,zero,10007254 <_free_r+0x1b4>
1000711c:	18c00317 	ldw	r3,12(r3)
10007120:	38c00315 	stw	r3,12(r7)
10007124:	19c00215 	stw	r7,8(r3)
10007128:	11c00054 	ori	r7,r2,1
1000712c:	3087883a 	add	r3,r6,r2
10007130:	31c00115 	stw	r7,4(r6)
10007134:	18800015 	stw	r2,0(r3)
10007138:	20001a1e 	bne	r4,zero,100071a4 <_free_r+0x104>
1000713c:	00c07fc4 	movi	r3,511
10007140:	18802e2e 	bgeu	r3,r2,100071fc <_free_r+0x15c>
10007144:	1006d27a 	srli	r3,r2,9
10007148:	01000104 	movi	r4,4
1000714c:	20c06636 	bltu	r4,r3,100072e8 <_free_r+0x248>
10007150:	1008d1ba 	srli	r4,r2,6
10007154:	21000e04 	addi	r4,r4,56
10007158:	210f883a 	add	r7,r4,r4
1000715c:	39cf883a 	add	r7,r7,r7
10007160:	39cf883a 	add	r7,r7,r7
10007164:	29cf883a 	add	r7,r5,r7
10007168:	38c00217 	ldw	r3,8(r7)
1000716c:	01440074 	movhi	r5,4097
10007170:	294aea04 	addi	r5,r5,11176
10007174:	19c06126 	beq	r3,r7,100072fc <_free_r+0x25c>
10007178:	013fff04 	movi	r4,-4
1000717c:	19400117 	ldw	r5,4(r3)
10007180:	290a703a 	and	r5,r5,r4
10007184:	1140022e 	bgeu	r2,r5,10007190 <_free_r+0xf0>
10007188:	18c00217 	ldw	r3,8(r3)
1000718c:	38fffb1e 	bne	r7,r3,1000717c <__alt_data_end+0xf800717c>
10007190:	18800317 	ldw	r2,12(r3)
10007194:	30800315 	stw	r2,12(r6)
10007198:	30c00215 	stw	r3,8(r6)
1000719c:	11800215 	stw	r6,8(r2)
100071a0:	19800315 	stw	r6,12(r3)
100071a4:	8809883a 	mov	r4,r17
100071a8:	dfc00217 	ldw	ra,8(sp)
100071ac:	dc400117 	ldw	r17,4(sp)
100071b0:	dc000017 	ldw	r16,0(sp)
100071b4:	dec00304 	addi	sp,sp,12
100071b8:	00103681 	jmpi	10010368 <__malloc_unlock>
100071bc:	813ffe17 	ldw	r4,-8(r16)
100071c0:	2a400204 	addi	r9,r5,8
100071c4:	310dc83a 	sub	r6,r6,r4
100071c8:	32000217 	ldw	r8,8(r6)
100071cc:	1105883a 	add	r2,r2,r4
100071d0:	42404326 	beq	r8,r9,100072e0 <_free_r+0x240>
100071d4:	32400317 	ldw	r9,12(r6)
100071d8:	0009883a 	mov	r4,zero
100071dc:	42400315 	stw	r9,12(r8)
100071e0:	4a000215 	stw	r8,8(r9)
100071e4:	003fc606 	br	10007100 <__alt_data_end+0xf8007100>
100071e8:	dfc00217 	ldw	ra,8(sp)
100071ec:	dc400117 	ldw	r17,4(sp)
100071f0:	dc000017 	ldw	r16,0(sp)
100071f4:	dec00304 	addi	sp,sp,12
100071f8:	f800283a 	ret
100071fc:	1004d0fa 	srli	r2,r2,3
10007200:	02000044 	movi	r8,1
10007204:	29c00117 	ldw	r7,4(r5)
10007208:	1087883a 	add	r3,r2,r2
1000720c:	18c7883a 	add	r3,r3,r3
10007210:	1005d0ba 	srai	r2,r2,2
10007214:	18c7883a 	add	r3,r3,r3
10007218:	28c7883a 	add	r3,r5,r3
1000721c:	19000217 	ldw	r4,8(r3)
10007220:	4084983a 	sll	r2,r8,r2
10007224:	30c00315 	stw	r3,12(r6)
10007228:	31000215 	stw	r4,8(r6)
1000722c:	11c4b03a 	or	r2,r2,r7
10007230:	21800315 	stw	r6,12(r4)
10007234:	8809883a 	mov	r4,r17
10007238:	28800115 	stw	r2,4(r5)
1000723c:	19800215 	stw	r6,8(r3)
10007240:	dfc00217 	ldw	ra,8(sp)
10007244:	dc400117 	ldw	r17,4(sp)
10007248:	dc000017 	ldw	r16,0(sp)
1000724c:	dec00304 	addi	sp,sp,12
10007250:	00103681 	jmpi	10010368 <__malloc_unlock>
10007254:	02040074 	movhi	r8,4097
10007258:	420aec04 	addi	r8,r8,11184
1000725c:	3a3faf1e 	bne	r7,r8,1000711c <__alt_data_end+0xf800711c>
10007260:	29800515 	stw	r6,20(r5)
10007264:	29800415 	stw	r6,16(r5)
10007268:	11000054 	ori	r4,r2,1
1000726c:	3087883a 	add	r3,r6,r2
10007270:	31c00315 	stw	r7,12(r6)
10007274:	31c00215 	stw	r7,8(r6)
10007278:	31000115 	stw	r4,4(r6)
1000727c:	18800015 	stw	r2,0(r3)
10007280:	003fc806 	br	100071a4 <__alt_data_end+0xf80071a4>
10007284:	4200004c 	andi	r8,r8,1
10007288:	3885883a 	add	r2,r7,r2
1000728c:	4000071e 	bne	r8,zero,100072ac <_free_r+0x20c>
10007290:	81fffe17 	ldw	r7,-8(r16)
10007294:	31cdc83a 	sub	r6,r6,r7
10007298:	30c00317 	ldw	r3,12(r6)
1000729c:	31000217 	ldw	r4,8(r6)
100072a0:	11c5883a 	add	r2,r2,r7
100072a4:	20c00315 	stw	r3,12(r4)
100072a8:	19000215 	stw	r4,8(r3)
100072ac:	00c40074 	movhi	r3,4097
100072b0:	18d17c04 	addi	r3,r3,17904
100072b4:	18c00017 	ldw	r3,0(r3)
100072b8:	11000054 	ori	r4,r2,1
100072bc:	31000115 	stw	r4,4(r6)
100072c0:	29800215 	stw	r6,8(r5)
100072c4:	10ffb736 	bltu	r2,r3,100071a4 <__alt_data_end+0xf80071a4>
100072c8:	00840074 	movhi	r2,4097
100072cc:	10987904 	addi	r2,r2,25060
100072d0:	11400017 	ldw	r5,0(r2)
100072d4:	8809883a 	mov	r4,r17
100072d8:	0006f640 	call	10006f64 <_malloc_trim_r>
100072dc:	003fb106 	br	100071a4 <__alt_data_end+0xf80071a4>
100072e0:	01000044 	movi	r4,1
100072e4:	003f8606 	br	10007100 <__alt_data_end+0xf8007100>
100072e8:	01000504 	movi	r4,20
100072ec:	20c00b36 	bltu	r4,r3,1000731c <_free_r+0x27c>
100072f0:	190016c4 	addi	r4,r3,91
100072f4:	210f883a 	add	r7,r4,r4
100072f8:	003f9806 	br	1000715c <__alt_data_end+0xf800715c>
100072fc:	2009d0ba 	srai	r4,r4,2
10007300:	00800044 	movi	r2,1
10007304:	29c00117 	ldw	r7,4(r5)
10007308:	1108983a 	sll	r4,r2,r4
1000730c:	1805883a 	mov	r2,r3
10007310:	21c8b03a 	or	r4,r4,r7
10007314:	29000115 	stw	r4,4(r5)
10007318:	003f9e06 	br	10007194 <__alt_data_end+0xf8007194>
1000731c:	01001504 	movi	r4,84
10007320:	20c00436 	bltu	r4,r3,10007334 <_free_r+0x294>
10007324:	1008d33a 	srli	r4,r2,12
10007328:	21001b84 	addi	r4,r4,110
1000732c:	210f883a 	add	r7,r4,r4
10007330:	003f8a06 	br	1000715c <__alt_data_end+0xf800715c>
10007334:	01005504 	movi	r4,340
10007338:	20c00436 	bltu	r4,r3,1000734c <_free_r+0x2ac>
1000733c:	1008d3fa 	srli	r4,r2,15
10007340:	21001dc4 	addi	r4,r4,119
10007344:	210f883a 	add	r7,r4,r4
10007348:	003f8406 	br	1000715c <__alt_data_end+0xf800715c>
1000734c:	01015504 	movi	r4,1364
10007350:	20c00436 	bltu	r4,r3,10007364 <_free_r+0x2c4>
10007354:	1008d4ba 	srli	r4,r2,18
10007358:	21001f04 	addi	r4,r4,124
1000735c:	210f883a 	add	r7,r4,r4
10007360:	003f7e06 	br	1000715c <__alt_data_end+0xf800715c>
10007364:	01c03f04 	movi	r7,252
10007368:	01001f84 	movi	r4,126
1000736c:	003f7b06 	br	1000715c <__alt_data_end+0xf800715c>

10007370 <__sfvwrite_r>:
10007370:	30800217 	ldw	r2,8(r6)
10007374:	defff504 	addi	sp,sp,-44
10007378:	dd400615 	stw	r21,24(sp)
1000737c:	dd000515 	stw	r20,20(sp)
10007380:	dc000115 	stw	r16,4(sp)
10007384:	dfc00a15 	stw	ra,40(sp)
10007388:	df000915 	stw	fp,36(sp)
1000738c:	ddc00815 	stw	r23,32(sp)
10007390:	dd800715 	stw	r22,28(sp)
10007394:	dcc00415 	stw	r19,16(sp)
10007398:	dc800315 	stw	r18,12(sp)
1000739c:	dc400215 	stw	r17,8(sp)
100073a0:	3029883a 	mov	r20,r6
100073a4:	202b883a 	mov	r21,r4
100073a8:	2821883a 	mov	r16,r5
100073ac:	10002126 	beq	r2,zero,10007434 <__sfvwrite_r+0xc4>
100073b0:	2880030b 	ldhu	r2,12(r5)
100073b4:	10c0020c 	andi	r3,r2,8
100073b8:	18ffffcc 	andi	r3,r3,65535
100073bc:	18e0001c 	xori	r3,r3,32768
100073c0:	18e00004 	addi	r3,r3,-32768
100073c4:	18002826 	beq	r3,zero,10007468 <__sfvwrite_r+0xf8>
100073c8:	28c00417 	ldw	r3,16(r5)
100073cc:	18002626 	beq	r3,zero,10007468 <__sfvwrite_r+0xf8>
100073d0:	10c0008c 	andi	r3,r2,2
100073d4:	18ffffcc 	andi	r3,r3,65535
100073d8:	18e0001c 	xori	r3,r3,32768
100073dc:	18e00004 	addi	r3,r3,-32768
100073e0:	a4400017 	ldw	r17,0(r20)
100073e4:	18002b26 	beq	r3,zero,10007494 <__sfvwrite_r+0x124>
100073e8:	0027883a 	mov	r19,zero
100073ec:	0025883a 	mov	r18,zero
100073f0:	05810004 	movi	r22,1024
100073f4:	980d883a 	mov	r6,r19
100073f8:	a809883a 	mov	r4,r21
100073fc:	90004f26 	beq	r18,zero,1000753c <__sfvwrite_r+0x1cc>
10007400:	900f883a 	mov	r7,r18
10007404:	81400717 	ldw	r5,28(r16)
10007408:	b480012e 	bgeu	r22,r18,10007410 <__sfvwrite_r+0xa0>
1000740c:	01c10004 	movi	r7,1024
10007410:	80800917 	ldw	r2,36(r16)
10007414:	103ee83a 	callr	r2
10007418:	0080540e 	bge	zero,r2,1000756c <__sfvwrite_r+0x1fc>
1000741c:	a0c00217 	ldw	r3,8(r20)
10007420:	98a7883a 	add	r19,r19,r2
10007424:	90a5c83a 	sub	r18,r18,r2
10007428:	1885c83a 	sub	r2,r3,r2
1000742c:	a0800215 	stw	r2,8(r20)
10007430:	103ff01e 	bne	r2,zero,100073f4 <__alt_data_end+0xf80073f4>
10007434:	0005883a 	mov	r2,zero
10007438:	dfc00a17 	ldw	ra,40(sp)
1000743c:	df000917 	ldw	fp,36(sp)
10007440:	ddc00817 	ldw	r23,32(sp)
10007444:	dd800717 	ldw	r22,28(sp)
10007448:	dd400617 	ldw	r21,24(sp)
1000744c:	dd000517 	ldw	r20,20(sp)
10007450:	dcc00417 	ldw	r19,16(sp)
10007454:	dc800317 	ldw	r18,12(sp)
10007458:	dc400217 	ldw	r17,8(sp)
1000745c:	dc000117 	ldw	r16,4(sp)
10007460:	dec00b04 	addi	sp,sp,44
10007464:	f800283a 	ret
10007468:	a809883a 	mov	r4,r21
1000746c:	800b883a 	mov	r5,r16
10007470:	0004e180 	call	10004e18 <__swsetup_r>
10007474:	1000f01e 	bne	r2,zero,10007838 <__sfvwrite_r+0x4c8>
10007478:	8080030b 	ldhu	r2,12(r16)
1000747c:	a4400017 	ldw	r17,0(r20)
10007480:	10c0008c 	andi	r3,r2,2
10007484:	18ffffcc 	andi	r3,r3,65535
10007488:	18e0001c 	xori	r3,r3,32768
1000748c:	18e00004 	addi	r3,r3,-32768
10007490:	183fd51e 	bne	r3,zero,100073e8 <__alt_data_end+0xf80073e8>
10007494:	10c0004c 	andi	r3,r2,1
10007498:	002d883a 	mov	r22,zero
1000749c:	1800381e 	bne	r3,zero,10007580 <__sfvwrite_r+0x210>
100074a0:	0025883a 	mov	r18,zero
100074a4:	90002126 	beq	r18,zero,1000752c <__sfvwrite_r+0x1bc>
100074a8:	10c0800c 	andi	r3,r2,512
100074ac:	18ffffcc 	andi	r3,r3,65535
100074b0:	18e0001c 	xori	r3,r3,32768
100074b4:	18e00004 	addi	r3,r3,-32768
100074b8:	84c00217 	ldw	r19,8(r16)
100074bc:	18006b26 	beq	r3,zero,1000766c <__sfvwrite_r+0x2fc>
100074c0:	980f883a 	mov	r7,r19
100074c4:	94c08636 	bltu	r18,r19,100076e0 <__sfvwrite_r+0x370>
100074c8:	10c1200c 	andi	r3,r2,1152
100074cc:	18009f1e 	bne	r3,zero,1000774c <__sfvwrite_r+0x3dc>
100074d0:	81000017 	ldw	r4,0(r16)
100074d4:	982f883a 	mov	r23,r19
100074d8:	9039883a 	mov	fp,r18
100074dc:	9027883a 	mov	r19,r18
100074e0:	380d883a 	mov	r6,r7
100074e4:	b00b883a 	mov	r5,r22
100074e8:	d9c00015 	stw	r7,0(sp)
100074ec:	0007f900 	call	10007f90 <memmove>
100074f0:	d9c00017 	ldw	r7,0(sp)
100074f4:	81000217 	ldw	r4,8(r16)
100074f8:	80800017 	ldw	r2,0(r16)
100074fc:	25efc83a 	sub	r23,r4,r23
10007500:	11cf883a 	add	r7,r2,r7
10007504:	85c00215 	stw	r23,8(r16)
10007508:	81c00015 	stw	r7,0(r16)
1000750c:	a0800217 	ldw	r2,8(r20)
10007510:	b72d883a 	add	r22,r22,fp
10007514:	9725c83a 	sub	r18,r18,fp
10007518:	14e7c83a 	sub	r19,r2,r19
1000751c:	a4c00215 	stw	r19,8(r20)
10007520:	983fc426 	beq	r19,zero,10007434 <__alt_data_end+0xf8007434>
10007524:	8080030b 	ldhu	r2,12(r16)
10007528:	903fdf1e 	bne	r18,zero,100074a8 <__alt_data_end+0xf80074a8>
1000752c:	8d800017 	ldw	r22,0(r17)
10007530:	8c800117 	ldw	r18,4(r17)
10007534:	8c400204 	addi	r17,r17,8
10007538:	003fda06 	br	100074a4 <__alt_data_end+0xf80074a4>
1000753c:	8cc00017 	ldw	r19,0(r17)
10007540:	8c800117 	ldw	r18,4(r17)
10007544:	8c400204 	addi	r17,r17,8
10007548:	003faa06 	br	100073f4 <__alt_data_end+0xf80073f4>
1000754c:	00093f40 	call	100093f4 <_realloc_r>
10007550:	102f883a 	mov	r23,r2
10007554:	10009f1e 	bne	r2,zero,100077d4 <__sfvwrite_r+0x464>
10007558:	81400417 	ldw	r5,16(r16)
1000755c:	a809883a 	mov	r4,r21
10007560:	00070a00 	call	100070a0 <_free_r>
10007564:	00800304 	movi	r2,12
10007568:	a8800015 	stw	r2,0(r21)
1000756c:	80c0030b 	ldhu	r3,12(r16)
10007570:	00bfffc4 	movi	r2,-1
10007574:	18c01014 	ori	r3,r3,64
10007578:	80c0030d 	sth	r3,12(r16)
1000757c:	003fae06 	br	10007438 <__alt_data_end+0xf8007438>
10007580:	0007883a 	mov	r3,zero
10007584:	0039883a 	mov	fp,zero
10007588:	0025883a 	mov	r18,zero
1000758c:	90001e26 	beq	r18,zero,10007608 <__sfvwrite_r+0x298>
10007590:	18006526 	beq	r3,zero,10007728 <__sfvwrite_r+0x3b8>
10007594:	b02f883a 	mov	r23,r22
10007598:	9580012e 	bgeu	r18,r22,100075a0 <__sfvwrite_r+0x230>
1000759c:	902f883a 	mov	r23,r18
100075a0:	81000017 	ldw	r4,0(r16)
100075a4:	80800417 	ldw	r2,16(r16)
100075a8:	84c00217 	ldw	r19,8(r16)
100075ac:	81c00517 	ldw	r7,20(r16)
100075b0:	1100022e 	bgeu	r2,r4,100075bc <__sfvwrite_r+0x24c>
100075b4:	99e7883a 	add	r19,r19,r7
100075b8:	9dc01816 	blt	r19,r23,1000761c <__sfvwrite_r+0x2ac>
100075bc:	b9c03b16 	blt	r23,r7,100076ac <__sfvwrite_r+0x33c>
100075c0:	80800917 	ldw	r2,36(r16)
100075c4:	81400717 	ldw	r5,28(r16)
100075c8:	a809883a 	mov	r4,r21
100075cc:	d8c00015 	stw	r3,0(sp)
100075d0:	e00d883a 	mov	r6,fp
100075d4:	103ee83a 	callr	r2
100075d8:	1027883a 	mov	r19,r2
100075dc:	d8c00017 	ldw	r3,0(sp)
100075e0:	00bfe20e 	bge	zero,r2,1000756c <__alt_data_end+0xf800756c>
100075e4:	b4edc83a 	sub	r22,r22,r19
100075e8:	b0001a26 	beq	r22,zero,10007654 <__sfvwrite_r+0x2e4>
100075ec:	a0800217 	ldw	r2,8(r20)
100075f0:	e4f9883a 	add	fp,fp,r19
100075f4:	94e5c83a 	sub	r18,r18,r19
100075f8:	14e7c83a 	sub	r19,r2,r19
100075fc:	a4c00215 	stw	r19,8(r20)
10007600:	983f8c26 	beq	r19,zero,10007434 <__alt_data_end+0xf8007434>
10007604:	903fe21e 	bne	r18,zero,10007590 <__alt_data_end+0xf8007590>
10007608:	8f000017 	ldw	fp,0(r17)
1000760c:	8c800117 	ldw	r18,4(r17)
10007610:	0007883a 	mov	r3,zero
10007614:	8c400204 	addi	r17,r17,8
10007618:	003fdc06 	br	1000758c <__alt_data_end+0xf800758c>
1000761c:	e00b883a 	mov	r5,fp
10007620:	980d883a 	mov	r6,r19
10007624:	d8c00015 	stw	r3,0(sp)
10007628:	0007f900 	call	10007f90 <memmove>
1000762c:	80800017 	ldw	r2,0(r16)
10007630:	a809883a 	mov	r4,r21
10007634:	800b883a 	mov	r5,r16
10007638:	14c5883a 	add	r2,r2,r19
1000763c:	80800015 	stw	r2,0(r16)
10007640:	00067e40 	call	100067e4 <_fflush_r>
10007644:	d8c00017 	ldw	r3,0(sp)
10007648:	103fc81e 	bne	r2,zero,1000756c <__alt_data_end+0xf800756c>
1000764c:	b4edc83a 	sub	r22,r22,r19
10007650:	b03fe61e 	bne	r22,zero,100075ec <__alt_data_end+0xf80075ec>
10007654:	a809883a 	mov	r4,r21
10007658:	800b883a 	mov	r5,r16
1000765c:	00067e40 	call	100067e4 <_fflush_r>
10007660:	103fc21e 	bne	r2,zero,1000756c <__alt_data_end+0xf800756c>
10007664:	0007883a 	mov	r3,zero
10007668:	003fe006 	br	100075ec <__alt_data_end+0xf80075ec>
1000766c:	81000017 	ldw	r4,0(r16)
10007670:	80800417 	ldw	r2,16(r16)
10007674:	1100022e 	bgeu	r2,r4,10007680 <__sfvwrite_r+0x310>
10007678:	9839883a 	mov	fp,r19
1000767c:	9c806036 	bltu	r19,r18,10007800 <__sfvwrite_r+0x490>
10007680:	81c00517 	ldw	r7,20(r16)
10007684:	91c01c36 	bltu	r18,r7,100076f8 <__sfvwrite_r+0x388>
10007688:	80800917 	ldw	r2,36(r16)
1000768c:	81400717 	ldw	r5,28(r16)
10007690:	a809883a 	mov	r4,r21
10007694:	b00d883a 	mov	r6,r22
10007698:	103ee83a 	callr	r2
1000769c:	1027883a 	mov	r19,r2
100076a0:	00bfb20e 	bge	zero,r2,1000756c <__alt_data_end+0xf800756c>
100076a4:	1039883a 	mov	fp,r2
100076a8:	003f9806 	br	1000750c <__alt_data_end+0xf800750c>
100076ac:	b80d883a 	mov	r6,r23
100076b0:	e00b883a 	mov	r5,fp
100076b4:	d8c00015 	stw	r3,0(sp)
100076b8:	0007f900 	call	10007f90 <memmove>
100076bc:	80800217 	ldw	r2,8(r16)
100076c0:	81000017 	ldw	r4,0(r16)
100076c4:	b827883a 	mov	r19,r23
100076c8:	15c5c83a 	sub	r2,r2,r23
100076cc:	25ef883a 	add	r23,r4,r23
100076d0:	80800215 	stw	r2,8(r16)
100076d4:	85c00015 	stw	r23,0(r16)
100076d8:	d8c00017 	ldw	r3,0(sp)
100076dc:	003fc106 	br	100075e4 <__alt_data_end+0xf80075e4>
100076e0:	81000017 	ldw	r4,0(r16)
100076e4:	902f883a 	mov	r23,r18
100076e8:	9039883a 	mov	fp,r18
100076ec:	9027883a 	mov	r19,r18
100076f0:	900f883a 	mov	r7,r18
100076f4:	003f7a06 	br	100074e0 <__alt_data_end+0xf80074e0>
100076f8:	b00b883a 	mov	r5,r22
100076fc:	900d883a 	mov	r6,r18
10007700:	0007f900 	call	10007f90 <memmove>
10007704:	80c00217 	ldw	r3,8(r16)
10007708:	80800017 	ldw	r2,0(r16)
1000770c:	9027883a 	mov	r19,r18
10007710:	1c87c83a 	sub	r3,r3,r18
10007714:	1485883a 	add	r2,r2,r18
10007718:	80c00215 	stw	r3,8(r16)
1000771c:	80800015 	stw	r2,0(r16)
10007720:	9039883a 	mov	fp,r18
10007724:	003f7906 	br	1000750c <__alt_data_end+0xf800750c>
10007728:	e009883a 	mov	r4,fp
1000772c:	01400284 	movi	r5,10
10007730:	900d883a 	mov	r6,r18
10007734:	0007d580 	call	10007d58 <memchr>
10007738:	10003c26 	beq	r2,zero,1000782c <__sfvwrite_r+0x4bc>
1000773c:	15800044 	addi	r22,r2,1
10007740:	b72dc83a 	sub	r22,r22,fp
10007744:	00c00044 	movi	r3,1
10007748:	003f9206 	br	10007594 <__alt_data_end+0xf8007594>
1000774c:	81000517 	ldw	r4,20(r16)
10007750:	81400417 	ldw	r5,16(r16)
10007754:	80c00017 	ldw	r3,0(r16)
10007758:	210d883a 	add	r6,r4,r4
1000775c:	3109883a 	add	r4,r6,r4
10007760:	2026d7fa 	srli	r19,r4,31
10007764:	1979c83a 	sub	fp,r3,r5
10007768:	e1800044 	addi	r6,fp,1
1000776c:	9909883a 	add	r4,r19,r4
10007770:	2027d07a 	srai	r19,r4,1
10007774:	3489883a 	add	r4,r6,r18
10007778:	980d883a 	mov	r6,r19
1000777c:	9900022e 	bgeu	r19,r4,10007788 <__sfvwrite_r+0x418>
10007780:	2027883a 	mov	r19,r4
10007784:	200d883a 	mov	r6,r4
10007788:	1081000c 	andi	r2,r2,1024
1000778c:	10bfffcc 	andi	r2,r2,65535
10007790:	10a0001c 	xori	r2,r2,32768
10007794:	10a00004 	addi	r2,r2,-32768
10007798:	a809883a 	mov	r4,r21
1000779c:	103f6b26 	beq	r2,zero,1000754c <__alt_data_end+0xf800754c>
100077a0:	300b883a 	mov	r5,r6
100077a4:	0000edc0 	call	10000edc <_malloc_r>
100077a8:	102f883a 	mov	r23,r2
100077ac:	103f6d26 	beq	r2,zero,10007564 <__alt_data_end+0xf8007564>
100077b0:	81400417 	ldw	r5,16(r16)
100077b4:	1009883a 	mov	r4,r2
100077b8:	e00d883a 	mov	r6,fp
100077bc:	0007e500 	call	10007e50 <memcpy>
100077c0:	8080030b 	ldhu	r2,12(r16)
100077c4:	00fedfc4 	movi	r3,-1153
100077c8:	10c4703a 	and	r2,r2,r3
100077cc:	10802014 	ori	r2,r2,128
100077d0:	8080030d 	sth	r2,12(r16)
100077d4:	bf09883a 	add	r4,r23,fp
100077d8:	9f07c83a 	sub	r3,r19,fp
100077dc:	85c00415 	stw	r23,16(r16)
100077e0:	84c00515 	stw	r19,20(r16)
100077e4:	81000015 	stw	r4,0(r16)
100077e8:	902f883a 	mov	r23,r18
100077ec:	80c00215 	stw	r3,8(r16)
100077f0:	9039883a 	mov	fp,r18
100077f4:	9027883a 	mov	r19,r18
100077f8:	900f883a 	mov	r7,r18
100077fc:	003f3806 	br	100074e0 <__alt_data_end+0xf80074e0>
10007800:	b00b883a 	mov	r5,r22
10007804:	980d883a 	mov	r6,r19
10007808:	0007f900 	call	10007f90 <memmove>
1000780c:	80800017 	ldw	r2,0(r16)
10007810:	a809883a 	mov	r4,r21
10007814:	800b883a 	mov	r5,r16
10007818:	14c5883a 	add	r2,r2,r19
1000781c:	80800015 	stw	r2,0(r16)
10007820:	00067e40 	call	100067e4 <_fflush_r>
10007824:	103f3926 	beq	r2,zero,1000750c <__alt_data_end+0xf800750c>
10007828:	003f5006 	br	1000756c <__alt_data_end+0xf800756c>
1000782c:	95800044 	addi	r22,r18,1
10007830:	00c00044 	movi	r3,1
10007834:	003f5706 	br	10007594 <__alt_data_end+0xf8007594>
10007838:	80c0030b 	ldhu	r3,12(r16)
1000783c:	00bfffc4 	movi	r2,-1
10007840:	18c01014 	ori	r3,r3,64
10007844:	80c0030d 	sth	r3,12(r16)
10007848:	00c00244 	movi	r3,9
1000784c:	a8c00015 	stw	r3,0(r21)
10007850:	003ef906 	br	10007438 <__alt_data_end+0xf8007438>

10007854 <_fwalk>:
10007854:	defff904 	addi	sp,sp,-28
10007858:	dcc00315 	stw	r19,12(sp)
1000785c:	24c0b804 	addi	r19,r4,736
10007860:	dd400515 	stw	r21,20(sp)
10007864:	dd000415 	stw	r20,16(sp)
10007868:	dfc00615 	stw	ra,24(sp)
1000786c:	dc800215 	stw	r18,8(sp)
10007870:	dc400115 	stw	r17,4(sp)
10007874:	dc000015 	stw	r16,0(sp)
10007878:	282b883a 	mov	r21,r5
1000787c:	0029883a 	mov	r20,zero
10007880:	0006ca80 	call	10006ca8 <__sfp_lock_acquire>
10007884:	98001226 	beq	r19,zero,100078d0 <_fwalk+0x7c>
10007888:	04bfffc4 	movi	r18,-1
1000788c:	9c400117 	ldw	r17,4(r19)
10007890:	9c000217 	ldw	r16,8(r19)
10007894:	8c7fffc4 	addi	r17,r17,-1
10007898:	88000b16 	blt	r17,zero,100078c8 <_fwalk+0x74>
1000789c:	84000304 	addi	r16,r16,12
100078a0:	80c0000f 	ldh	r3,0(r16)
100078a4:	8c7fffc4 	addi	r17,r17,-1
100078a8:	813ffd04 	addi	r4,r16,-12
100078ac:	18000426 	beq	r3,zero,100078c0 <_fwalk+0x6c>
100078b0:	80c0008f 	ldh	r3,2(r16)
100078b4:	1c800226 	beq	r3,r18,100078c0 <_fwalk+0x6c>
100078b8:	a83ee83a 	callr	r21
100078bc:	a0a8b03a 	or	r20,r20,r2
100078c0:	84001704 	addi	r16,r16,92
100078c4:	8cbff61e 	bne	r17,r18,100078a0 <__alt_data_end+0xf80078a0>
100078c8:	9cc00017 	ldw	r19,0(r19)
100078cc:	983fef1e 	bne	r19,zero,1000788c <__alt_data_end+0xf800788c>
100078d0:	0006cac0 	call	10006cac <__sfp_lock_release>
100078d4:	a005883a 	mov	r2,r20
100078d8:	dfc00617 	ldw	ra,24(sp)
100078dc:	dd400517 	ldw	r21,20(sp)
100078e0:	dd000417 	ldw	r20,16(sp)
100078e4:	dcc00317 	ldw	r19,12(sp)
100078e8:	dc800217 	ldw	r18,8(sp)
100078ec:	dc400117 	ldw	r17,4(sp)
100078f0:	dc000017 	ldw	r16,0(sp)
100078f4:	dec00704 	addi	sp,sp,28
100078f8:	f800283a 	ret

100078fc <_fwalk_reent>:
100078fc:	defff804 	addi	sp,sp,-32
10007900:	dcc00315 	stw	r19,12(sp)
10007904:	24c0b804 	addi	r19,r4,736
10007908:	dd800615 	stw	r22,24(sp)
1000790c:	dd400515 	stw	r21,20(sp)
10007910:	dd000415 	stw	r20,16(sp)
10007914:	dfc00715 	stw	ra,28(sp)
10007918:	dc800215 	stw	r18,8(sp)
1000791c:	dc400115 	stw	r17,4(sp)
10007920:	dc000015 	stw	r16,0(sp)
10007924:	2029883a 	mov	r20,r4
10007928:	282b883a 	mov	r21,r5
1000792c:	002d883a 	mov	r22,zero
10007930:	0006ca80 	call	10006ca8 <__sfp_lock_acquire>
10007934:	98001326 	beq	r19,zero,10007984 <_fwalk_reent+0x88>
10007938:	04bfffc4 	movi	r18,-1
1000793c:	9c400117 	ldw	r17,4(r19)
10007940:	9c000217 	ldw	r16,8(r19)
10007944:	8c7fffc4 	addi	r17,r17,-1
10007948:	88000c16 	blt	r17,zero,1000797c <_fwalk_reent+0x80>
1000794c:	84000304 	addi	r16,r16,12
10007950:	80c0000f 	ldh	r3,0(r16)
10007954:	8c7fffc4 	addi	r17,r17,-1
10007958:	817ffd04 	addi	r5,r16,-12
1000795c:	18000526 	beq	r3,zero,10007974 <_fwalk_reent+0x78>
10007960:	80c0008f 	ldh	r3,2(r16)
10007964:	a009883a 	mov	r4,r20
10007968:	1c800226 	beq	r3,r18,10007974 <_fwalk_reent+0x78>
1000796c:	a83ee83a 	callr	r21
10007970:	b0acb03a 	or	r22,r22,r2
10007974:	84001704 	addi	r16,r16,92
10007978:	8cbff51e 	bne	r17,r18,10007950 <__alt_data_end+0xf8007950>
1000797c:	9cc00017 	ldw	r19,0(r19)
10007980:	983fee1e 	bne	r19,zero,1000793c <__alt_data_end+0xf800793c>
10007984:	0006cac0 	call	10006cac <__sfp_lock_release>
10007988:	b005883a 	mov	r2,r22
1000798c:	dfc00717 	ldw	ra,28(sp)
10007990:	dd800617 	ldw	r22,24(sp)
10007994:	dd400517 	ldw	r21,20(sp)
10007998:	dd000417 	ldw	r20,16(sp)
1000799c:	dcc00317 	ldw	r19,12(sp)
100079a0:	dc800217 	ldw	r18,8(sp)
100079a4:	dc400117 	ldw	r17,4(sp)
100079a8:	dc000017 	ldw	r16,0(sp)
100079ac:	dec00804 	addi	sp,sp,32
100079b0:	f800283a 	ret

100079b4 <iswspace>:
100079b4:	00803fc4 	movi	r2,255
100079b8:	11000a36 	bltu	r2,r4,100079e4 <iswspace+0x30>
100079bc:	00840074 	movhi	r2,4097
100079c0:	10917d04 	addi	r2,r2,17908
100079c4:	10800017 	ldw	r2,0(r2)
100079c8:	1109883a 	add	r4,r2,r4
100079cc:	20800003 	ldbu	r2,0(r4)
100079d0:	1080020c 	andi	r2,r2,8
100079d4:	10803fcc 	andi	r2,r2,255
100079d8:	1080201c 	xori	r2,r2,128
100079dc:	10bfe004 	addi	r2,r2,-128
100079e0:	f800283a 	ret
100079e4:	0005883a 	mov	r2,zero
100079e8:	f800283a 	ret

100079ec <_setlocale_r>:
100079ec:	defffc04 	addi	sp,sp,-16
100079f0:	dc800215 	stw	r18,8(sp)
100079f4:	dc400115 	stw	r17,4(sp)
100079f8:	dc000015 	stw	r16,0(sp)
100079fc:	dfc00315 	stw	ra,12(sp)
10007a00:	3021883a 	mov	r16,r6
10007a04:	2023883a 	mov	r17,r4
10007a08:	2825883a 	mov	r18,r5
10007a0c:	30001626 	beq	r6,zero,10007a68 <_setlocale_r+0x7c>
10007a10:	3009883a 	mov	r4,r6
10007a14:	01440074 	movhi	r5,4097
10007a18:	2949de04 	addi	r5,r5,10104
10007a1c:	0009f2c0 	call	10009f2c <strcmp>
10007a20:	10000a1e 	bne	r2,zero,10007a4c <_setlocale_r+0x60>
10007a24:	8c800c15 	stw	r18,48(r17)
10007a28:	8c000d15 	stw	r16,52(r17)
10007a2c:	00840074 	movhi	r2,4097
10007a30:	1089de04 	addi	r2,r2,10104
10007a34:	dfc00317 	ldw	ra,12(sp)
10007a38:	dc800217 	ldw	r18,8(sp)
10007a3c:	dc400117 	ldw	r17,4(sp)
10007a40:	dc000017 	ldw	r16,0(sp)
10007a44:	dec00404 	addi	sp,sp,16
10007a48:	f800283a 	ret
10007a4c:	8009883a 	mov	r4,r16
10007a50:	01440074 	movhi	r5,4097
10007a54:	29491e04 	addi	r5,r5,9336
10007a58:	0009f2c0 	call	10009f2c <strcmp>
10007a5c:	103ff126 	beq	r2,zero,10007a24 <__alt_data_end+0xf8007a24>
10007a60:	0005883a 	mov	r2,zero
10007a64:	003ff306 	br	10007a34 <__alt_data_end+0xf8007a34>
10007a68:	00840074 	movhi	r2,4097
10007a6c:	1089de04 	addi	r2,r2,10104
10007a70:	dfc00317 	ldw	ra,12(sp)
10007a74:	dc800217 	ldw	r18,8(sp)
10007a78:	dc400117 	ldw	r17,4(sp)
10007a7c:	dc000017 	ldw	r16,0(sp)
10007a80:	dec00404 	addi	sp,sp,16
10007a84:	f800283a 	ret

10007a88 <__locale_charset>:
10007a88:	00840074 	movhi	r2,4097
10007a8c:	1089df04 	addi	r2,r2,10108
10007a90:	f800283a 	ret

10007a94 <_localeconv_r>:
10007a94:	00840074 	movhi	r2,4097
10007a98:	1089e304 	addi	r2,r2,10124
10007a9c:	f800283a 	ret

10007aa0 <setlocale>:
10007aa0:	00c40074 	movhi	r3,4097
10007aa4:	18d17f04 	addi	r3,r3,17916
10007aa8:	2005883a 	mov	r2,r4
10007aac:	19000017 	ldw	r4,0(r3)
10007ab0:	280d883a 	mov	r6,r5
10007ab4:	100b883a 	mov	r5,r2
10007ab8:	00079ec1 	jmpi	100079ec <_setlocale_r>

10007abc <localeconv>:
10007abc:	00840074 	movhi	r2,4097
10007ac0:	1089e304 	addi	r2,r2,10124
10007ac4:	f800283a 	ret

10007ac8 <__smakebuf_r>:
10007ac8:	2880030b 	ldhu	r2,12(r5)
10007acc:	deffed04 	addi	sp,sp,-76
10007ad0:	dc401015 	stw	r17,64(sp)
10007ad4:	10c0008c 	andi	r3,r2,2
10007ad8:	18ffffcc 	andi	r3,r3,65535
10007adc:	18e0001c 	xori	r3,r3,32768
10007ae0:	dc000f15 	stw	r16,60(sp)
10007ae4:	dfc01215 	stw	ra,72(sp)
10007ae8:	dc801115 	stw	r18,68(sp)
10007aec:	18e00004 	addi	r3,r3,-32768
10007af0:	2821883a 	mov	r16,r5
10007af4:	2023883a 	mov	r17,r4
10007af8:	1800381e 	bne	r3,zero,10007bdc <__smakebuf_r+0x114>
10007afc:	2940038f 	ldh	r5,14(r5)
10007b00:	28002d16 	blt	r5,zero,10007bb8 <__smakebuf_r+0xf0>
10007b04:	d80d883a 	mov	r6,sp
10007b08:	000c9e00 	call	1000c9e0 <_fstat_r>
10007b0c:	10002916 	blt	r2,zero,10007bb4 <__smakebuf_r+0xec>
10007b10:	d8800117 	ldw	r2,4(sp)
10007b14:	00e00014 	movui	r3,32768
10007b18:	10bc000c 	andi	r2,r2,61440
10007b1c:	10c03c26 	beq	r2,r3,10007c10 <__smakebuf_r+0x148>
10007b20:	80c0030b 	ldhu	r3,12(r16)
10007b24:	18c20014 	ori	r3,r3,2048
10007b28:	80c0030d 	sth	r3,12(r16)
10007b2c:	00c80004 	movi	r3,8192
10007b30:	10c00c1e 	bne	r2,r3,10007b64 <__smakebuf_r+0x9c>
10007b34:	8140038f 	ldh	r5,14(r16)
10007b38:	8809883a 	mov	r4,r17
10007b3c:	000d5ec0 	call	1000d5ec <_isatty_r>
10007b40:	10000826 	beq	r2,zero,10007b64 <__smakebuf_r+0x9c>
10007b44:	80c0030b 	ldhu	r3,12(r16)
10007b48:	808010c4 	addi	r2,r16,67
10007b4c:	80800015 	stw	r2,0(r16)
10007b50:	18c00054 	ori	r3,r3,1
10007b54:	80800415 	stw	r2,16(r16)
10007b58:	00800044 	movi	r2,1
10007b5c:	80c0030d 	sth	r3,12(r16)
10007b60:	80800515 	stw	r2,20(r16)
10007b64:	04810004 	movi	r18,1024
10007b68:	8809883a 	mov	r4,r17
10007b6c:	900b883a 	mov	r5,r18
10007b70:	0000edc0 	call	10000edc <_malloc_r>
10007b74:	10003026 	beq	r2,zero,10007c38 <__smakebuf_r+0x170>
10007b78:	80c0030b 	ldhu	r3,12(r16)
10007b7c:	01040034 	movhi	r4,4096
10007b80:	211a8304 	addi	r4,r4,27148
10007b84:	89000f15 	stw	r4,60(r17)
10007b88:	18c02014 	ori	r3,r3,128
10007b8c:	80c0030d 	sth	r3,12(r16)
10007b90:	80800015 	stw	r2,0(r16)
10007b94:	80800415 	stw	r2,16(r16)
10007b98:	84800515 	stw	r18,20(r16)
10007b9c:	dfc01217 	ldw	ra,72(sp)
10007ba0:	dc801117 	ldw	r18,68(sp)
10007ba4:	dc401017 	ldw	r17,64(sp)
10007ba8:	dc000f17 	ldw	r16,60(sp)
10007bac:	dec01304 	addi	sp,sp,76
10007bb0:	f800283a 	ret
10007bb4:	8080030b 	ldhu	r2,12(r16)
10007bb8:	10c0200c 	andi	r3,r2,128
10007bbc:	18ffffcc 	andi	r3,r3,65535
10007bc0:	18e0001c 	xori	r3,r3,32768
10007bc4:	18e00004 	addi	r3,r3,-32768
10007bc8:	18000f1e 	bne	r3,zero,10007c08 <__smakebuf_r+0x140>
10007bcc:	04810004 	movi	r18,1024
10007bd0:	10820014 	ori	r2,r2,2048
10007bd4:	8080030d 	sth	r2,12(r16)
10007bd8:	003fe306 	br	10007b68 <__alt_data_end+0xf8007b68>
10007bdc:	288010c4 	addi	r2,r5,67
10007be0:	28800015 	stw	r2,0(r5)
10007be4:	28800415 	stw	r2,16(r5)
10007be8:	00800044 	movi	r2,1
10007bec:	28800515 	stw	r2,20(r5)
10007bf0:	dfc01217 	ldw	ra,72(sp)
10007bf4:	dc801117 	ldw	r18,68(sp)
10007bf8:	dc401017 	ldw	r17,64(sp)
10007bfc:	dc000f17 	ldw	r16,60(sp)
10007c00:	dec01304 	addi	sp,sp,76
10007c04:	f800283a 	ret
10007c08:	04801004 	movi	r18,64
10007c0c:	003ff006 	br	10007bd0 <__alt_data_end+0xf8007bd0>
10007c10:	81000a17 	ldw	r4,40(r16)
10007c14:	00c40074 	movhi	r3,4097
10007c18:	18e7b204 	addi	r3,r3,-24888
10007c1c:	20ffc01e 	bne	r4,r3,10007b20 <__alt_data_end+0xf8007b20>
10007c20:	8080030b 	ldhu	r2,12(r16)
10007c24:	00c10004 	movi	r3,1024
10007c28:	80c01315 	stw	r3,76(r16)
10007c2c:	10c4b03a 	or	r2,r2,r3
10007c30:	8080030d 	sth	r2,12(r16)
10007c34:	003fcb06 	br	10007b64 <__alt_data_end+0xf8007b64>
10007c38:	8080030b 	ldhu	r2,12(r16)
10007c3c:	10c0800c 	andi	r3,r2,512
10007c40:	18ffffcc 	andi	r3,r3,65535
10007c44:	18e0001c 	xori	r3,r3,32768
10007c48:	18e00004 	addi	r3,r3,-32768
10007c4c:	183fd31e 	bne	r3,zero,10007b9c <__alt_data_end+0xf8007b9c>
10007c50:	10800094 	ori	r2,r2,2
10007c54:	80c010c4 	addi	r3,r16,67
10007c58:	8080030d 	sth	r2,12(r16)
10007c5c:	00800044 	movi	r2,1
10007c60:	80c00015 	stw	r3,0(r16)
10007c64:	80c00415 	stw	r3,16(r16)
10007c68:	80800515 	stw	r2,20(r16)
10007c6c:	003fcb06 	br	10007b9c <__alt_data_end+0xf8007b9c>

10007c70 <_mbrtowc_r>:
10007c70:	defffc04 	addi	sp,sp,-16
10007c74:	dc000115 	stw	r16,4(sp)
10007c78:	dc000417 	ldw	r16,16(sp)
10007c7c:	dc400215 	stw	r17,8(sp)
10007c80:	dfc00315 	stw	ra,12(sp)
10007c84:	dc000015 	stw	r16,0(sp)
10007c88:	2023883a 	mov	r17,r4
10007c8c:	30000b26 	beq	r6,zero,10007cbc <_mbrtowc_r+0x4c>
10007c90:	0007d140 	call	10007d14 <_mbtowc_r>
10007c94:	00ffffc4 	movi	r3,-1
10007c98:	10c0031e 	bne	r2,r3,10007ca8 <_mbrtowc_r+0x38>
10007c9c:	80000015 	stw	zero,0(r16)
10007ca0:	00c02284 	movi	r3,138
10007ca4:	88c00015 	stw	r3,0(r17)
10007ca8:	dfc00317 	ldw	ra,12(sp)
10007cac:	dc400217 	ldw	r17,8(sp)
10007cb0:	dc000117 	ldw	r16,4(sp)
10007cb4:	dec00404 	addi	sp,sp,16
10007cb8:	f800283a 	ret
10007cbc:	000b883a 	mov	r5,zero
10007cc0:	01840074 	movhi	r6,4097
10007cc4:	31891e04 	addi	r6,r6,9336
10007cc8:	01c00044 	movi	r7,1
10007ccc:	0007d140 	call	10007d14 <_mbtowc_r>
10007cd0:	003ff006 	br	10007c94 <__alt_data_end+0xf8007c94>

10007cd4 <mbrtowc>:
10007cd4:	00840074 	movhi	r2,4097
10007cd8:	10917f04 	addi	r2,r2,17916
10007cdc:	2011883a 	mov	r8,r4
10007ce0:	11000017 	ldw	r4,0(r2)
10007ce4:	defffe04 	addi	sp,sp,-8
10007ce8:	2807883a 	mov	r3,r5
10007cec:	3005883a 	mov	r2,r6
10007cf0:	d9c00015 	stw	r7,0(sp)
10007cf4:	400b883a 	mov	r5,r8
10007cf8:	180d883a 	mov	r6,r3
10007cfc:	100f883a 	mov	r7,r2
10007d00:	dfc00115 	stw	ra,4(sp)
10007d04:	0007c700 	call	10007c70 <_mbrtowc_r>
10007d08:	dfc00117 	ldw	ra,4(sp)
10007d0c:	dec00204 	addi	sp,sp,8
10007d10:	f800283a 	ret

10007d14 <_mbtowc_r>:
10007d14:	deffff04 	addi	sp,sp,-4
10007d18:	28000826 	beq	r5,zero,10007d3c <_mbtowc_r+0x28>
10007d1c:	30000926 	beq	r6,zero,10007d44 <_mbtowc_r+0x30>
10007d20:	38000b26 	beq	r7,zero,10007d50 <_mbtowc_r+0x3c>
10007d24:	30800003 	ldbu	r2,0(r6)
10007d28:	28800015 	stw	r2,0(r5)
10007d2c:	30800003 	ldbu	r2,0(r6)
10007d30:	1004c03a 	cmpne	r2,r2,zero
10007d34:	dec00104 	addi	sp,sp,4
10007d38:	f800283a 	ret
10007d3c:	d80b883a 	mov	r5,sp
10007d40:	303ff71e 	bne	r6,zero,10007d20 <__alt_data_end+0xf8007d20>
10007d44:	0005883a 	mov	r2,zero
10007d48:	dec00104 	addi	sp,sp,4
10007d4c:	f800283a 	ret
10007d50:	00bfff84 	movi	r2,-2
10007d54:	003ff706 	br	10007d34 <__alt_data_end+0xf8007d34>

10007d58 <memchr>:
10007d58:	008000c4 	movi	r2,3
10007d5c:	29403fcc 	andi	r5,r5,255
10007d60:	1180282e 	bgeu	r2,r6,10007e04 <memchr+0xac>
10007d64:	2086703a 	and	r3,r4,r2
10007d68:	1800351e 	bne	r3,zero,10007e40 <memchr+0xe8>
10007d6c:	2816923a 	slli	r11,r5,8
10007d70:	2093883a 	add	r9,r4,r2
10007d74:	22000084 	addi	r8,r4,2
10007d78:	5957883a 	add	r11,r11,r5
10007d7c:	5816923a 	slli	r11,r11,8
10007d80:	20c00044 	addi	r3,r4,1
10007d84:	037fbff4 	movhi	r13,65279
10007d88:	6b7fbfc4 	addi	r13,r13,-257
10007d8c:	5957883a 	add	r11,r11,r5
10007d90:	5816923a 	slli	r11,r11,8
10007d94:	03202074 	movhi	r12,32897
10007d98:	63202004 	addi	r12,r12,-32640
10007d9c:	101d883a 	mov	r14,r2
10007da0:	5957883a 	add	r11,r11,r5
10007da4:	21c00017 	ldw	r7,0(r4)
10007da8:	31bfff04 	addi	r6,r6,-4
10007dac:	1805883a 	mov	r2,r3
10007db0:	3acef03a 	xor	r7,r7,r11
10007db4:	3b55883a 	add	r10,r7,r13
10007db8:	01ce303a 	nor	r7,zero,r7
10007dbc:	51ce703a 	and	r7,r10,r7
10007dc0:	3b0e703a 	and	r7,r7,r12
10007dc4:	38000a26 	beq	r7,zero,10007df0 <memchr+0x98>
10007dc8:	21c00003 	ldbu	r7,0(r4)
10007dcc:	39401e26 	beq	r7,r5,10007e48 <memchr+0xf0>
10007dd0:	19c00003 	ldbu	r7,0(r3)
10007dd4:	39401926 	beq	r7,r5,10007e3c <memchr+0xe4>
10007dd8:	41c00003 	ldbu	r7,0(r8)
10007ddc:	4005883a 	mov	r2,r8
10007de0:	39401626 	beq	r7,r5,10007e3c <memchr+0xe4>
10007de4:	49c00003 	ldbu	r7,0(r9)
10007de8:	4805883a 	mov	r2,r9
10007dec:	39401326 	beq	r7,r5,10007e3c <memchr+0xe4>
10007df0:	21000104 	addi	r4,r4,4
10007df4:	4a400104 	addi	r9,r9,4
10007df8:	42000104 	addi	r8,r8,4
10007dfc:	18c00104 	addi	r3,r3,4
10007e00:	71bfe836 	bltu	r14,r6,10007da4 <__alt_data_end+0xf8007da4>
10007e04:	2005883a 	mov	r2,r4
10007e08:	30000a26 	beq	r6,zero,10007e34 <memchr+0xdc>
10007e0c:	10c00003 	ldbu	r3,0(r2)
10007e10:	19400a26 	beq	r3,r5,10007e3c <memchr+0xe4>
10007e14:	10c00044 	addi	r3,r2,1
10007e18:	118d883a 	add	r6,r2,r6
10007e1c:	00000306 	br	10007e2c <memchr+0xd4>
10007e20:	11000003 	ldbu	r4,0(r2)
10007e24:	18c00044 	addi	r3,r3,1
10007e28:	21400426 	beq	r4,r5,10007e3c <memchr+0xe4>
10007e2c:	1805883a 	mov	r2,r3
10007e30:	19bffb1e 	bne	r3,r6,10007e20 <__alt_data_end+0xf8007e20>
10007e34:	0005883a 	mov	r2,zero
10007e38:	f800283a 	ret
10007e3c:	f800283a 	ret
10007e40:	2005883a 	mov	r2,r4
10007e44:	003ff106 	br	10007e0c <__alt_data_end+0xf8007e0c>
10007e48:	2005883a 	mov	r2,r4
10007e4c:	f800283a 	ret

10007e50 <memcpy>:
10007e50:	defffb04 	addi	sp,sp,-20
10007e54:	dc000015 	stw	r16,0(sp)
10007e58:	dfc00415 	stw	ra,16(sp)
10007e5c:	dcc00315 	stw	r19,12(sp)
10007e60:	dc800215 	stw	r18,8(sp)
10007e64:	dc400115 	stw	r17,4(sp)
10007e68:	00c003c4 	movi	r3,15
10007e6c:	2021883a 	mov	r16,r4
10007e70:	3005883a 	mov	r2,r6
10007e74:	1980032e 	bgeu	r3,r6,10007e84 <memcpy+0x34>
10007e78:	2906b03a 	or	r3,r5,r4
10007e7c:	18c000cc 	andi	r3,r3,3
10007e80:	18001026 	beq	r3,zero,10007ec4 <memcpy+0x74>
10007e84:	8007883a 	mov	r3,r16
10007e88:	288f883a 	add	r7,r5,r2
10007e8c:	10000526 	beq	r2,zero,10007ea4 <memcpy+0x54>
10007e90:	29800003 	ldbu	r6,0(r5)
10007e94:	18c00044 	addi	r3,r3,1
10007e98:	29400044 	addi	r5,r5,1
10007e9c:	19bfffc5 	stb	r6,-1(r3)
10007ea0:	29fffb1e 	bne	r5,r7,10007e90 <__alt_data_end+0xf8007e90>
10007ea4:	8005883a 	mov	r2,r16
10007ea8:	dfc00417 	ldw	ra,16(sp)
10007eac:	dcc00317 	ldw	r19,12(sp)
10007eb0:	dc800217 	ldw	r18,8(sp)
10007eb4:	dc400117 	ldw	r17,4(sp)
10007eb8:	dc000017 	ldw	r16,0(sp)
10007ebc:	dec00504 	addi	sp,sp,20
10007ec0:	f800283a 	ret
10007ec4:	32bffc04 	addi	r10,r6,-16
10007ec8:	5014d13a 	srli	r10,r10,4
10007ecc:	20800404 	addi	r2,r4,16
10007ed0:	2007883a 	mov	r3,r4
10007ed4:	5008913a 	slli	r4,r10,4
10007ed8:	280f883a 	mov	r7,r5
10007edc:	1105883a 	add	r2,r2,r4
10007ee0:	3a000017 	ldw	r8,0(r7)
10007ee4:	18c00404 	addi	r3,r3,16
10007ee8:	39c00404 	addi	r7,r7,16
10007eec:	1a3ffc15 	stw	r8,-16(r3)
10007ef0:	3a3ffd17 	ldw	r8,-12(r7)
10007ef4:	1a3ffd15 	stw	r8,-12(r3)
10007ef8:	3a3ffe17 	ldw	r8,-8(r7)
10007efc:	1a3ffe15 	stw	r8,-8(r3)
10007f00:	3a3fff17 	ldw	r8,-4(r7)
10007f04:	1a3fff15 	stw	r8,-4(r3)
10007f08:	18bff51e 	bne	r3,r2,10007ee0 <__alt_data_end+0xf8007ee0>
10007f0c:	52800044 	addi	r10,r10,1
10007f10:	5014913a 	slli	r10,r10,4
10007f14:	308003cc 	andi	r2,r6,15
10007f18:	010000c4 	movi	r4,3
10007f1c:	8287883a 	add	r3,r16,r10
10007f20:	2a95883a 	add	r10,r5,r10
10007f24:	2080182e 	bgeu	r4,r2,10007f88 <memcpy+0x138>
10007f28:	147fff04 	addi	r17,r2,-4
10007f2c:	8808d0ba 	srli	r4,r17,2
10007f30:	1a400104 	addi	r9,r3,4
10007f34:	180d883a 	mov	r6,r3
10007f38:	2105883a 	add	r2,r4,r4
10007f3c:	1085883a 	add	r2,r2,r2
10007f40:	4893883a 	add	r9,r9,r2
10007f44:	500f883a 	mov	r7,r10
10007f48:	3a000017 	ldw	r8,0(r7)
10007f4c:	31800104 	addi	r6,r6,4
10007f50:	39c00104 	addi	r7,r7,4
10007f54:	323fff15 	stw	r8,-4(r6)
10007f58:	327ffb1e 	bne	r6,r9,10007f48 <__alt_data_end+0xf8007f48>
10007f5c:	20800044 	addi	r2,r4,1
10007f60:	1085883a 	add	r2,r2,r2
10007f64:	1085883a 	add	r2,r2,r2
10007f68:	017fff04 	movi	r5,-4
10007f6c:	18a5883a 	add	r18,r3,r2
10007f70:	50a7883a 	add	r19,r10,r2
10007f74:	000f5540 	call	1000f554 <__mulsi3>
10007f78:	1445883a 	add	r2,r2,r17
10007f7c:	980b883a 	mov	r5,r19
10007f80:	9007883a 	mov	r3,r18
10007f84:	003fc006 	br	10007e88 <__alt_data_end+0xf8007e88>
10007f88:	500b883a 	mov	r5,r10
10007f8c:	003fbe06 	br	10007e88 <__alt_data_end+0xf8007e88>

10007f90 <memmove>:
10007f90:	defffb04 	addi	sp,sp,-20
10007f94:	dc000015 	stw	r16,0(sp)
10007f98:	dfc00415 	stw	ra,16(sp)
10007f9c:	dcc00315 	stw	r19,12(sp)
10007fa0:	dc800215 	stw	r18,8(sp)
10007fa4:	dc400115 	stw	r17,4(sp)
10007fa8:	2021883a 	mov	r16,r4
10007fac:	300f883a 	mov	r7,r6
10007fb0:	2900122e 	bgeu	r5,r4,10007ffc <memmove+0x6c>
10007fb4:	2987883a 	add	r3,r5,r6
10007fb8:	20c0102e 	bgeu	r4,r3,10007ffc <memmove+0x6c>
10007fbc:	218b883a 	add	r5,r4,r6
10007fc0:	1989c83a 	sub	r4,r3,r6
10007fc4:	30000526 	beq	r6,zero,10007fdc <memmove+0x4c>
10007fc8:	18ffffc4 	addi	r3,r3,-1
10007fcc:	18800003 	ldbu	r2,0(r3)
10007fd0:	297fffc4 	addi	r5,r5,-1
10007fd4:	28800005 	stb	r2,0(r5)
10007fd8:	193ffb1e 	bne	r3,r4,10007fc8 <__alt_data_end+0xf8007fc8>
10007fdc:	8005883a 	mov	r2,r16
10007fe0:	dfc00417 	ldw	ra,16(sp)
10007fe4:	dcc00317 	ldw	r19,12(sp)
10007fe8:	dc800217 	ldw	r18,8(sp)
10007fec:	dc400117 	ldw	r17,4(sp)
10007ff0:	dc000017 	ldw	r16,0(sp)
10007ff4:	dec00504 	addi	sp,sp,20
10007ff8:	f800283a 	ret
10007ffc:	008003c4 	movi	r2,15
10008000:	1180422e 	bgeu	r2,r6,1000810c <memmove+0x17c>
10008004:	2c04b03a 	or	r2,r5,r16
10008008:	108000cc 	andi	r2,r2,3
1000800c:	10003f1e 	bne	r2,zero,1000810c <memmove+0x17c>
10008010:	32bffc04 	addi	r10,r6,-16
10008014:	5014d13a 	srli	r10,r10,4
10008018:	81000404 	addi	r4,r16,16
1000801c:	8007883a 	mov	r3,r16
10008020:	5004913a 	slli	r2,r10,4
10008024:	280f883a 	mov	r7,r5
10008028:	2089883a 	add	r4,r4,r2
1000802c:	38800017 	ldw	r2,0(r7)
10008030:	18c00404 	addi	r3,r3,16
10008034:	39c00404 	addi	r7,r7,16
10008038:	18bffc15 	stw	r2,-16(r3)
1000803c:	38bffd17 	ldw	r2,-12(r7)
10008040:	18bffd15 	stw	r2,-12(r3)
10008044:	38bffe17 	ldw	r2,-8(r7)
10008048:	18bffe15 	stw	r2,-8(r3)
1000804c:	38bfff17 	ldw	r2,-4(r7)
10008050:	18bfff15 	stw	r2,-4(r3)
10008054:	193ff51e 	bne	r3,r4,1000802c <__alt_data_end+0xf800802c>
10008058:	52800044 	addi	r10,r10,1
1000805c:	5014913a 	slli	r10,r10,4
10008060:	31c003cc 	andi	r7,r6,15
10008064:	008000c4 	movi	r2,3
10008068:	8287883a 	add	r3,r16,r10
1000806c:	2a95883a 	add	r10,r5,r10
10008070:	11c0282e 	bgeu	r2,r7,10008114 <memmove+0x184>
10008074:	3c7fff04 	addi	r17,r7,-4
10008078:	8808d0ba 	srli	r4,r17,2
1000807c:	1a400104 	addi	r9,r3,4
10008080:	180d883a 	mov	r6,r3
10008084:	2105883a 	add	r2,r4,r4
10008088:	1085883a 	add	r2,r2,r2
1000808c:	4893883a 	add	r9,r9,r2
10008090:	5005883a 	mov	r2,r10
10008094:	12000017 	ldw	r8,0(r2)
10008098:	31800104 	addi	r6,r6,4
1000809c:	10800104 	addi	r2,r2,4
100080a0:	323fff15 	stw	r8,-4(r6)
100080a4:	327ffb1e 	bne	r6,r9,10008094 <__alt_data_end+0xf8008094>
100080a8:	20800044 	addi	r2,r4,1
100080ac:	1085883a 	add	r2,r2,r2
100080b0:	1085883a 	add	r2,r2,r2
100080b4:	017fff04 	movi	r5,-4
100080b8:	18a5883a 	add	r18,r3,r2
100080bc:	50a7883a 	add	r19,r10,r2
100080c0:	000f5540 	call	1000f554 <__mulsi3>
100080c4:	144f883a 	add	r7,r2,r17
100080c8:	980b883a 	mov	r5,r19
100080cc:	9007883a 	mov	r3,r18
100080d0:	383fc226 	beq	r7,zero,10007fdc <__alt_data_end+0xf8007fdc>
100080d4:	19cf883a 	add	r7,r3,r7
100080d8:	29800003 	ldbu	r6,0(r5)
100080dc:	18c00044 	addi	r3,r3,1
100080e0:	29400044 	addi	r5,r5,1
100080e4:	19bfffc5 	stb	r6,-1(r3)
100080e8:	19fffb1e 	bne	r3,r7,100080d8 <__alt_data_end+0xf80080d8>
100080ec:	8005883a 	mov	r2,r16
100080f0:	dfc00417 	ldw	ra,16(sp)
100080f4:	dcc00317 	ldw	r19,12(sp)
100080f8:	dc800217 	ldw	r18,8(sp)
100080fc:	dc400117 	ldw	r17,4(sp)
10008100:	dc000017 	ldw	r16,0(sp)
10008104:	dec00504 	addi	sp,sp,20
10008108:	f800283a 	ret
1000810c:	8007883a 	mov	r3,r16
10008110:	003fef06 	br	100080d0 <__alt_data_end+0xf80080d0>
10008114:	500b883a 	mov	r5,r10
10008118:	003fed06 	br	100080d0 <__alt_data_end+0xf80080d0>

1000811c <memset>:
1000811c:	00c000c4 	movi	r3,3
10008120:	2005883a 	mov	r2,r4
10008124:	29403fcc 	andi	r5,r5,255
10008128:	19802d2e 	bgeu	r3,r6,100081e0 <memset+0xc4>
1000812c:	20c6703a 	and	r3,r4,r3
10008130:	18002e1e 	bne	r3,zero,100081ec <memset+0xd0>
10008134:	2806923a 	slli	r3,r5,8
10008138:	010003c4 	movi	r4,15
1000813c:	3011883a 	mov	r8,r6
10008140:	1946b03a 	or	r3,r3,r5
10008144:	180e943a 	slli	r7,r3,16
10008148:	38ceb03a 	or	r7,r7,r3
1000814c:	1007883a 	mov	r3,r2
10008150:	21800f2e 	bgeu	r4,r6,10008190 <memset+0x74>
10008154:	19c00015 	stw	r7,0(r3)
10008158:	19c00115 	stw	r7,4(r3)
1000815c:	19c00215 	stw	r7,8(r3)
10008160:	19c00315 	stw	r7,12(r3)
10008164:	423ffc04 	addi	r8,r8,-16
10008168:	18c00404 	addi	r3,r3,16
1000816c:	223ff936 	bltu	r4,r8,10008154 <__alt_data_end+0xf8008154>
10008170:	30fffc04 	addi	r3,r6,-16
10008174:	1806d13a 	srli	r3,r3,4
10008178:	318003cc 	andi	r6,r6,15
1000817c:	010000c4 	movi	r4,3
10008180:	18c00044 	addi	r3,r3,1
10008184:	1806913a 	slli	r3,r3,4
10008188:	10c7883a 	add	r3,r2,r3
1000818c:	21800e2e 	bgeu	r4,r6,100081c8 <memset+0xac>
10008190:	1813883a 	mov	r9,r3
10008194:	3011883a 	mov	r8,r6
10008198:	010000c4 	movi	r4,3
1000819c:	49c00015 	stw	r7,0(r9)
100081a0:	423fff04 	addi	r8,r8,-4
100081a4:	4a400104 	addi	r9,r9,4
100081a8:	223ffc36 	bltu	r4,r8,1000819c <__alt_data_end+0xf800819c>
100081ac:	313fff04 	addi	r4,r6,-4
100081b0:	2008d0ba 	srli	r4,r4,2
100081b4:	318000cc 	andi	r6,r6,3
100081b8:	21000044 	addi	r4,r4,1
100081bc:	2109883a 	add	r4,r4,r4
100081c0:	2109883a 	add	r4,r4,r4
100081c4:	1907883a 	add	r3,r3,r4
100081c8:	30000a26 	beq	r6,zero,100081f4 <memset+0xd8>
100081cc:	198d883a 	add	r6,r3,r6
100081d0:	19400005 	stb	r5,0(r3)
100081d4:	18c00044 	addi	r3,r3,1
100081d8:	19bffd1e 	bne	r3,r6,100081d0 <__alt_data_end+0xf80081d0>
100081dc:	f800283a 	ret
100081e0:	2007883a 	mov	r3,r4
100081e4:	303ff91e 	bne	r6,zero,100081cc <__alt_data_end+0xf80081cc>
100081e8:	00000206 	br	100081f4 <memset+0xd8>
100081ec:	2007883a 	mov	r3,r4
100081f0:	003ff606 	br	100081cc <__alt_data_end+0xf80081cc>
100081f4:	f800283a 	ret

100081f8 <_Balloc>:
100081f8:	20801317 	ldw	r2,76(r4)
100081fc:	defffc04 	addi	sp,sp,-16
10008200:	dc400115 	stw	r17,4(sp)
10008204:	dc000015 	stw	r16,0(sp)
10008208:	dfc00315 	stw	ra,12(sp)
1000820c:	dc800215 	stw	r18,8(sp)
10008210:	2023883a 	mov	r17,r4
10008214:	2821883a 	mov	r16,r5
10008218:	10000f26 	beq	r2,zero,10008258 <_Balloc+0x60>
1000821c:	8407883a 	add	r3,r16,r16
10008220:	18c7883a 	add	r3,r3,r3
10008224:	10c7883a 	add	r3,r2,r3
10008228:	18800017 	ldw	r2,0(r3)
1000822c:	10001126 	beq	r2,zero,10008274 <_Balloc+0x7c>
10008230:	11000017 	ldw	r4,0(r2)
10008234:	19000015 	stw	r4,0(r3)
10008238:	10000415 	stw	zero,16(r2)
1000823c:	10000315 	stw	zero,12(r2)
10008240:	dfc00317 	ldw	ra,12(sp)
10008244:	dc800217 	ldw	r18,8(sp)
10008248:	dc400117 	ldw	r17,4(sp)
1000824c:	dc000017 	ldw	r16,0(sp)
10008250:	dec00404 	addi	sp,sp,16
10008254:	f800283a 	ret
10008258:	01400104 	movi	r5,4
1000825c:	01800404 	movi	r6,16
10008260:	000c7600 	call	1000c760 <_calloc_r>
10008264:	88801315 	stw	r2,76(r17)
10008268:	103fec1e 	bne	r2,zero,1000821c <__alt_data_end+0xf800821c>
1000826c:	0005883a 	mov	r2,zero
10008270:	003ff306 	br	10008240 <__alt_data_end+0xf8008240>
10008274:	01400044 	movi	r5,1
10008278:	2c24983a 	sll	r18,r5,r16
1000827c:	8809883a 	mov	r4,r17
10008280:	91800144 	addi	r6,r18,5
10008284:	318d883a 	add	r6,r6,r6
10008288:	318d883a 	add	r6,r6,r6
1000828c:	000c7600 	call	1000c760 <_calloc_r>
10008290:	103ff626 	beq	r2,zero,1000826c <__alt_data_end+0xf800826c>
10008294:	14000115 	stw	r16,4(r2)
10008298:	14800215 	stw	r18,8(r2)
1000829c:	003fe606 	br	10008238 <__alt_data_end+0xf8008238>

100082a0 <_Bfree>:
100082a0:	28000826 	beq	r5,zero,100082c4 <_Bfree+0x24>
100082a4:	28c00117 	ldw	r3,4(r5)
100082a8:	20801317 	ldw	r2,76(r4)
100082ac:	18c7883a 	add	r3,r3,r3
100082b0:	18c7883a 	add	r3,r3,r3
100082b4:	10c5883a 	add	r2,r2,r3
100082b8:	10c00017 	ldw	r3,0(r2)
100082bc:	28c00015 	stw	r3,0(r5)
100082c0:	11400015 	stw	r5,0(r2)
100082c4:	f800283a 	ret

100082c8 <__multadd>:
100082c8:	defff604 	addi	sp,sp,-40
100082cc:	dd400515 	stw	r21,20(sp)
100082d0:	2d400417 	ldw	r21,16(r5)
100082d4:	df000815 	stw	fp,32(sp)
100082d8:	ddc00715 	stw	r23,28(sp)
100082dc:	dd800615 	stw	r22,24(sp)
100082e0:	dd000415 	stw	r20,16(sp)
100082e4:	dc400115 	stw	r17,4(sp)
100082e8:	dc000015 	stw	r16,0(sp)
100082ec:	dfc00915 	stw	ra,36(sp)
100082f0:	dcc00315 	stw	r19,12(sp)
100082f4:	dc800215 	stw	r18,8(sp)
100082f8:	282d883a 	mov	r22,r5
100082fc:	202f883a 	mov	r23,r4
10008300:	3029883a 	mov	r20,r6
10008304:	3839883a 	mov	fp,r7
10008308:	2c000504 	addi	r16,r5,20
1000830c:	0023883a 	mov	r17,zero
10008310:	84c00017 	ldw	r19,0(r16)
10008314:	a00b883a 	mov	r5,r20
10008318:	8c400044 	addi	r17,r17,1
1000831c:	993fffcc 	andi	r4,r19,65535
10008320:	000f5540 	call	1000f554 <__mulsi3>
10008324:	1725883a 	add	r18,r2,fp
10008328:	9808d43a 	srli	r4,r19,16
1000832c:	9026d43a 	srli	r19,r18,16
10008330:	a00b883a 	mov	r5,r20
10008334:	000f5540 	call	1000f554 <__mulsi3>
10008338:	988f883a 	add	r7,r19,r2
1000833c:	3804943a 	slli	r2,r7,16
10008340:	94bfffcc 	andi	r18,r18,65535
10008344:	3838d43a 	srli	fp,r7,16
10008348:	14a5883a 	add	r18,r2,r18
1000834c:	84800015 	stw	r18,0(r16)
10008350:	84000104 	addi	r16,r16,4
10008354:	8d7fee16 	blt	r17,r21,10008310 <__alt_data_end+0xf8008310>
10008358:	e0000926 	beq	fp,zero,10008380 <__multadd+0xb8>
1000835c:	b0800217 	ldw	r2,8(r22)
10008360:	a880140e 	bge	r21,r2,100083b4 <__multadd+0xec>
10008364:	a8800144 	addi	r2,r21,5
10008368:	1085883a 	add	r2,r2,r2
1000836c:	1085883a 	add	r2,r2,r2
10008370:	b085883a 	add	r2,r22,r2
10008374:	ad400044 	addi	r21,r21,1
10008378:	17000015 	stw	fp,0(r2)
1000837c:	b5400415 	stw	r21,16(r22)
10008380:	b005883a 	mov	r2,r22
10008384:	dfc00917 	ldw	ra,36(sp)
10008388:	df000817 	ldw	fp,32(sp)
1000838c:	ddc00717 	ldw	r23,28(sp)
10008390:	dd800617 	ldw	r22,24(sp)
10008394:	dd400517 	ldw	r21,20(sp)
10008398:	dd000417 	ldw	r20,16(sp)
1000839c:	dcc00317 	ldw	r19,12(sp)
100083a0:	dc800217 	ldw	r18,8(sp)
100083a4:	dc400117 	ldw	r17,4(sp)
100083a8:	dc000017 	ldw	r16,0(sp)
100083ac:	dec00a04 	addi	sp,sp,40
100083b0:	f800283a 	ret
100083b4:	b1400117 	ldw	r5,4(r22)
100083b8:	b809883a 	mov	r4,r23
100083bc:	29400044 	addi	r5,r5,1
100083c0:	00081f80 	call	100081f8 <_Balloc>
100083c4:	b1800417 	ldw	r6,16(r22)
100083c8:	b1400304 	addi	r5,r22,12
100083cc:	11000304 	addi	r4,r2,12
100083d0:	31800084 	addi	r6,r6,2
100083d4:	318d883a 	add	r6,r6,r6
100083d8:	318d883a 	add	r6,r6,r6
100083dc:	1021883a 	mov	r16,r2
100083e0:	0007e500 	call	10007e50 <memcpy>
100083e4:	b0c00117 	ldw	r3,4(r22)
100083e8:	b8801317 	ldw	r2,76(r23)
100083ec:	18c7883a 	add	r3,r3,r3
100083f0:	18c7883a 	add	r3,r3,r3
100083f4:	10c5883a 	add	r2,r2,r3
100083f8:	10c00017 	ldw	r3,0(r2)
100083fc:	b0c00015 	stw	r3,0(r22)
10008400:	15800015 	stw	r22,0(r2)
10008404:	802d883a 	mov	r22,r16
10008408:	003fd606 	br	10008364 <__alt_data_end+0xf8008364>

1000840c <__s2b>:
1000840c:	defff904 	addi	sp,sp,-28
10008410:	dd000415 	stw	r20,16(sp)
10008414:	dc400115 	stw	r17,4(sp)
10008418:	2829883a 	mov	r20,r5
1000841c:	2023883a 	mov	r17,r4
10008420:	01400244 	movi	r5,9
10008424:	39000204 	addi	r4,r7,8
10008428:	dcc00315 	stw	r19,12(sp)
1000842c:	dc800215 	stw	r18,8(sp)
10008430:	dfc00615 	stw	ra,24(sp)
10008434:	dd400515 	stw	r21,20(sp)
10008438:	dc000015 	stw	r16,0(sp)
1000843c:	3825883a 	mov	r18,r7
10008440:	3027883a 	mov	r19,r6
10008444:	000f4980 	call	1000f498 <__divsi3>
10008448:	00c00044 	movi	r3,1
1000844c:	000b883a 	mov	r5,zero
10008450:	1880030e 	bge	r3,r2,10008460 <__s2b+0x54>
10008454:	18c7883a 	add	r3,r3,r3
10008458:	29400044 	addi	r5,r5,1
1000845c:	18bffd16 	blt	r3,r2,10008454 <__alt_data_end+0xf8008454>
10008460:	8809883a 	mov	r4,r17
10008464:	00081f80 	call	100081f8 <_Balloc>
10008468:	d8c00717 	ldw	r3,28(sp)
1000846c:	10c00515 	stw	r3,20(r2)
10008470:	00c00044 	movi	r3,1
10008474:	10c00415 	stw	r3,16(r2)
10008478:	00c00244 	movi	r3,9
1000847c:	1cc0210e 	bge	r3,r19,10008504 <__s2b+0xf8>
10008480:	a0eb883a 	add	r21,r20,r3
10008484:	a821883a 	mov	r16,r21
10008488:	a4e9883a 	add	r20,r20,r19
1000848c:	81c00007 	ldb	r7,0(r16)
10008490:	8809883a 	mov	r4,r17
10008494:	84000044 	addi	r16,r16,1
10008498:	100b883a 	mov	r5,r2
1000849c:	01800284 	movi	r6,10
100084a0:	39fff404 	addi	r7,r7,-48
100084a4:	00082c80 	call	100082c8 <__multadd>
100084a8:	853ff81e 	bne	r16,r20,1000848c <__alt_data_end+0xf800848c>
100084ac:	ace1883a 	add	r16,r21,r19
100084b0:	843ffe04 	addi	r16,r16,-8
100084b4:	9c800a0e 	bge	r19,r18,100084e0 <__s2b+0xd4>
100084b8:	94e5c83a 	sub	r18,r18,r19
100084bc:	84a5883a 	add	r18,r16,r18
100084c0:	81c00007 	ldb	r7,0(r16)
100084c4:	8809883a 	mov	r4,r17
100084c8:	84000044 	addi	r16,r16,1
100084cc:	100b883a 	mov	r5,r2
100084d0:	01800284 	movi	r6,10
100084d4:	39fff404 	addi	r7,r7,-48
100084d8:	00082c80 	call	100082c8 <__multadd>
100084dc:	84bff81e 	bne	r16,r18,100084c0 <__alt_data_end+0xf80084c0>
100084e0:	dfc00617 	ldw	ra,24(sp)
100084e4:	dd400517 	ldw	r21,20(sp)
100084e8:	dd000417 	ldw	r20,16(sp)
100084ec:	dcc00317 	ldw	r19,12(sp)
100084f0:	dc800217 	ldw	r18,8(sp)
100084f4:	dc400117 	ldw	r17,4(sp)
100084f8:	dc000017 	ldw	r16,0(sp)
100084fc:	dec00704 	addi	sp,sp,28
10008500:	f800283a 	ret
10008504:	a4000284 	addi	r16,r20,10
10008508:	1827883a 	mov	r19,r3
1000850c:	003fe906 	br	100084b4 <__alt_data_end+0xf80084b4>

10008510 <__hi0bits>:
10008510:	20bfffec 	andhi	r2,r4,65535
10008514:	1000141e 	bne	r2,zero,10008568 <__hi0bits+0x58>
10008518:	2008943a 	slli	r4,r4,16
1000851c:	00800404 	movi	r2,16
10008520:	20ffc02c 	andhi	r3,r4,65280
10008524:	1800021e 	bne	r3,zero,10008530 <__hi0bits+0x20>
10008528:	2008923a 	slli	r4,r4,8
1000852c:	10800204 	addi	r2,r2,8
10008530:	20fc002c 	andhi	r3,r4,61440
10008534:	1800021e 	bne	r3,zero,10008540 <__hi0bits+0x30>
10008538:	2008913a 	slli	r4,r4,4
1000853c:	10800104 	addi	r2,r2,4
10008540:	20f0002c 	andhi	r3,r4,49152
10008544:	1800031e 	bne	r3,zero,10008554 <__hi0bits+0x44>
10008548:	2109883a 	add	r4,r4,r4
1000854c:	10800084 	addi	r2,r2,2
10008550:	2109883a 	add	r4,r4,r4
10008554:	20000316 	blt	r4,zero,10008564 <__hi0bits+0x54>
10008558:	2110002c 	andhi	r4,r4,16384
1000855c:	2000041e 	bne	r4,zero,10008570 <__hi0bits+0x60>
10008560:	00800804 	movi	r2,32
10008564:	f800283a 	ret
10008568:	0005883a 	mov	r2,zero
1000856c:	003fec06 	br	10008520 <__alt_data_end+0xf8008520>
10008570:	10800044 	addi	r2,r2,1
10008574:	f800283a 	ret

10008578 <__lo0bits>:
10008578:	20c00017 	ldw	r3,0(r4)
1000857c:	188001cc 	andi	r2,r3,7
10008580:	10000826 	beq	r2,zero,100085a4 <__lo0bits+0x2c>
10008584:	1880004c 	andi	r2,r3,1
10008588:	1000211e 	bne	r2,zero,10008610 <__lo0bits+0x98>
1000858c:	1880008c 	andi	r2,r3,2
10008590:	1000211e 	bne	r2,zero,10008618 <__lo0bits+0xa0>
10008594:	1806d0ba 	srli	r3,r3,2
10008598:	00800084 	movi	r2,2
1000859c:	20c00015 	stw	r3,0(r4)
100085a0:	f800283a 	ret
100085a4:	18bfffcc 	andi	r2,r3,65535
100085a8:	10001326 	beq	r2,zero,100085f8 <__lo0bits+0x80>
100085ac:	0005883a 	mov	r2,zero
100085b0:	19403fcc 	andi	r5,r3,255
100085b4:	2800021e 	bne	r5,zero,100085c0 <__lo0bits+0x48>
100085b8:	1806d23a 	srli	r3,r3,8
100085bc:	10800204 	addi	r2,r2,8
100085c0:	194003cc 	andi	r5,r3,15
100085c4:	2800021e 	bne	r5,zero,100085d0 <__lo0bits+0x58>
100085c8:	1806d13a 	srli	r3,r3,4
100085cc:	10800104 	addi	r2,r2,4
100085d0:	194000cc 	andi	r5,r3,3
100085d4:	2800021e 	bne	r5,zero,100085e0 <__lo0bits+0x68>
100085d8:	1806d0ba 	srli	r3,r3,2
100085dc:	10800084 	addi	r2,r2,2
100085e0:	1940004c 	andi	r5,r3,1
100085e4:	2800081e 	bne	r5,zero,10008608 <__lo0bits+0x90>
100085e8:	1806d07a 	srli	r3,r3,1
100085ec:	1800051e 	bne	r3,zero,10008604 <__lo0bits+0x8c>
100085f0:	00800804 	movi	r2,32
100085f4:	f800283a 	ret
100085f8:	1806d43a 	srli	r3,r3,16
100085fc:	00800404 	movi	r2,16
10008600:	003feb06 	br	100085b0 <__alt_data_end+0xf80085b0>
10008604:	10800044 	addi	r2,r2,1
10008608:	20c00015 	stw	r3,0(r4)
1000860c:	f800283a 	ret
10008610:	0005883a 	mov	r2,zero
10008614:	f800283a 	ret
10008618:	1806d07a 	srli	r3,r3,1
1000861c:	00800044 	movi	r2,1
10008620:	20c00015 	stw	r3,0(r4)
10008624:	f800283a 	ret

10008628 <__i2b>:
10008628:	defffd04 	addi	sp,sp,-12
1000862c:	dc000015 	stw	r16,0(sp)
10008630:	04000044 	movi	r16,1
10008634:	dc400115 	stw	r17,4(sp)
10008638:	2823883a 	mov	r17,r5
1000863c:	800b883a 	mov	r5,r16
10008640:	dfc00215 	stw	ra,8(sp)
10008644:	00081f80 	call	100081f8 <_Balloc>
10008648:	14400515 	stw	r17,20(r2)
1000864c:	14000415 	stw	r16,16(r2)
10008650:	dfc00217 	ldw	ra,8(sp)
10008654:	dc400117 	ldw	r17,4(sp)
10008658:	dc000017 	ldw	r16,0(sp)
1000865c:	dec00304 	addi	sp,sp,12
10008660:	f800283a 	ret

10008664 <__multiply>:
10008664:	defff004 	addi	sp,sp,-64
10008668:	dc800815 	stw	r18,32(sp)
1000866c:	dc400715 	stw	r17,28(sp)
10008670:	34800417 	ldw	r18,16(r6)
10008674:	2c400417 	ldw	r17,16(r5)
10008678:	ddc00d15 	stw	r23,52(sp)
1000867c:	dc000615 	stw	r16,24(sp)
10008680:	dfc00f15 	stw	ra,60(sp)
10008684:	df000e15 	stw	fp,56(sp)
10008688:	dd800c15 	stw	r22,48(sp)
1000868c:	dd400b15 	stw	r21,44(sp)
10008690:	dd000a15 	stw	r20,40(sp)
10008694:	dcc00915 	stw	r19,36(sp)
10008698:	2821883a 	mov	r16,r5
1000869c:	302f883a 	mov	r23,r6
100086a0:	8c80050e 	bge	r17,r18,100086b8 <__multiply+0x54>
100086a4:	8807883a 	mov	r3,r17
100086a8:	3021883a 	mov	r16,r6
100086ac:	9023883a 	mov	r17,r18
100086b0:	282f883a 	mov	r23,r5
100086b4:	1825883a 	mov	r18,r3
100086b8:	80800217 	ldw	r2,8(r16)
100086bc:	8c87883a 	add	r3,r17,r18
100086c0:	d8c00115 	stw	r3,4(sp)
100086c4:	81400117 	ldw	r5,4(r16)
100086c8:	10c0010e 	bge	r2,r3,100086d0 <__multiply+0x6c>
100086cc:	29400044 	addi	r5,r5,1
100086d0:	00081f80 	call	100081f8 <_Balloc>
100086d4:	d8c00117 	ldw	r3,4(sp)
100086d8:	d8800515 	stw	r2,20(sp)
100086dc:	14c00504 	addi	r19,r2,20
100086e0:	1d400144 	addi	r21,r3,5
100086e4:	ad6b883a 	add	r21,r21,r21
100086e8:	ad6b883a 	add	r21,r21,r21
100086ec:	156b883a 	add	r21,r2,r21
100086f0:	dd400215 	stw	r21,8(sp)
100086f4:	9805883a 	mov	r2,r19
100086f8:	9d40042e 	bgeu	r19,r21,1000870c <__multiply+0xa8>
100086fc:	d8c00217 	ldw	r3,8(sp)
10008700:	10000015 	stw	zero,0(r2)
10008704:	10800104 	addi	r2,r2,4
10008708:	10fffc36 	bltu	r2,r3,100086fc <__alt_data_end+0xf80086fc>
1000870c:	94800144 	addi	r18,r18,5
10008710:	94a5883a 	add	r18,r18,r18
10008714:	94ad883a 	add	r22,r18,r18
10008718:	8c400144 	addi	r17,r17,5
1000871c:	8c63883a 	add	r17,r17,r17
10008720:	bdad883a 	add	r22,r23,r22
10008724:	80c00504 	addi	r3,r16,20
10008728:	8c63883a 	add	r17,r17,r17
1000872c:	bc800504 	addi	r18,r23,20
10008730:	dd800315 	stw	r22,12(sp)
10008734:	d8c00415 	stw	r3,16(sp)
10008738:	dcc00015 	stw	r19,0(sp)
1000873c:	8463883a 	add	r17,r16,r17
10008740:	9580412e 	bgeu	r18,r22,10008848 <__multiply+0x1e4>
10008744:	90800017 	ldw	r2,0(r18)
10008748:	173fffcc 	andi	fp,r2,65535
1000874c:	e0001a26 	beq	fp,zero,100087b8 <__multiply+0x154>
10008750:	dd000017 	ldw	r20,0(sp)
10008754:	dd800417 	ldw	r22,16(sp)
10008758:	002b883a 	mov	r21,zero
1000875c:	b4c00017 	ldw	r19,0(r22)
10008760:	a4000017 	ldw	r16,0(r20)
10008764:	e00b883a 	mov	r5,fp
10008768:	993fffcc 	andi	r4,r19,65535
1000876c:	000f5540 	call	1000f554 <__mulsi3>
10008770:	9808d43a 	srli	r4,r19,16
10008774:	817fffcc 	andi	r5,r16,65535
10008778:	1145883a 	add	r2,r2,r5
1000877c:	e00b883a 	mov	r5,fp
10008780:	1567883a 	add	r19,r2,r21
10008784:	8020d43a 	srli	r16,r16,16
10008788:	000f5540 	call	1000f554 <__mulsi3>
1000878c:	9808d43a 	srli	r4,r19,16
10008790:	1405883a 	add	r2,r2,r16
10008794:	a4c0000d 	sth	r19,0(r20)
10008798:	110f883a 	add	r7,r2,r4
1000879c:	a1c0008d 	sth	r7,2(r20)
100087a0:	b5800104 	addi	r22,r22,4
100087a4:	382ad43a 	srli	r21,r7,16
100087a8:	a5000104 	addi	r20,r20,4
100087ac:	b47feb36 	bltu	r22,r17,1000875c <__alt_data_end+0xf800875c>
100087b0:	a5400015 	stw	r21,0(r20)
100087b4:	90800017 	ldw	r2,0(r18)
100087b8:	1038d43a 	srli	fp,r2,16
100087bc:	e0001c26 	beq	fp,zero,10008830 <__multiply+0x1cc>
100087c0:	d8c00017 	ldw	r3,0(sp)
100087c4:	dd000417 	ldw	r20,16(sp)
100087c8:	002b883a 	mov	r21,zero
100087cc:	1d800017 	ldw	r22,0(r3)
100087d0:	182f883a 	mov	r23,r3
100087d4:	b021883a 	mov	r16,r22
100087d8:	a4c00017 	ldw	r19,0(r20)
100087dc:	8020d43a 	srli	r16,r16,16
100087e0:	e00b883a 	mov	r5,fp
100087e4:	993fffcc 	andi	r4,r19,65535
100087e8:	000f5540 	call	1000f554 <__mulsi3>
100087ec:	1405883a 	add	r2,r2,r16
100087f0:	9808d43a 	srli	r4,r19,16
100087f4:	156b883a 	add	r21,r2,r21
100087f8:	bdc00104 	addi	r23,r23,4
100087fc:	bdbfff0d 	sth	r22,-4(r23)
10008800:	bd7fff8d 	sth	r21,-2(r23)
10008804:	bc000017 	ldw	r16,0(r23)
10008808:	e00b883a 	mov	r5,fp
1000880c:	000f5540 	call	1000f554 <__mulsi3>
10008810:	a80ed43a 	srli	r7,r21,16
10008814:	813fffcc 	andi	r4,r16,65535
10008818:	2085883a 	add	r2,r4,r2
1000881c:	11ed883a 	add	r22,r2,r7
10008820:	a5000104 	addi	r20,r20,4
10008824:	b02ad43a 	srli	r21,r22,16
10008828:	a47feb36 	bltu	r20,r17,100087d8 <__alt_data_end+0xf80087d8>
1000882c:	bd800015 	stw	r22,0(r23)
10008830:	d8c00017 	ldw	r3,0(sp)
10008834:	94800104 	addi	r18,r18,4
10008838:	18c00104 	addi	r3,r3,4
1000883c:	d8c00015 	stw	r3,0(sp)
10008840:	d8c00317 	ldw	r3,12(sp)
10008844:	90ffbf36 	bltu	r18,r3,10008744 <__alt_data_end+0xf8008744>
10008848:	d8c00117 	ldw	r3,4(sp)
1000884c:	00c00c0e 	bge	zero,r3,10008880 <__multiply+0x21c>
10008850:	d8c00217 	ldw	r3,8(sp)
10008854:	18bfff17 	ldw	r2,-4(r3)
10008858:	1d7fff04 	addi	r21,r3,-4
1000885c:	10000326 	beq	r2,zero,1000886c <__multiply+0x208>
10008860:	00000706 	br	10008880 <__multiply+0x21c>
10008864:	a8800017 	ldw	r2,0(r21)
10008868:	1000051e 	bne	r2,zero,10008880 <__multiply+0x21c>
1000886c:	d8c00117 	ldw	r3,4(sp)
10008870:	ad7fff04 	addi	r21,r21,-4
10008874:	18ffffc4 	addi	r3,r3,-1
10008878:	d8c00115 	stw	r3,4(sp)
1000887c:	183ff91e 	bne	r3,zero,10008864 <__alt_data_end+0xf8008864>
10008880:	d8800517 	ldw	r2,20(sp)
10008884:	d8c00117 	ldw	r3,4(sp)
10008888:	10c00415 	stw	r3,16(r2)
1000888c:	dfc00f17 	ldw	ra,60(sp)
10008890:	df000e17 	ldw	fp,56(sp)
10008894:	ddc00d17 	ldw	r23,52(sp)
10008898:	dd800c17 	ldw	r22,48(sp)
1000889c:	dd400b17 	ldw	r21,44(sp)
100088a0:	dd000a17 	ldw	r20,40(sp)
100088a4:	dcc00917 	ldw	r19,36(sp)
100088a8:	dc800817 	ldw	r18,32(sp)
100088ac:	dc400717 	ldw	r17,28(sp)
100088b0:	dc000617 	ldw	r16,24(sp)
100088b4:	dec01004 	addi	sp,sp,64
100088b8:	f800283a 	ret

100088bc <__pow5mult>:
100088bc:	defffb04 	addi	sp,sp,-20
100088c0:	dcc00315 	stw	r19,12(sp)
100088c4:	dc800215 	stw	r18,8(sp)
100088c8:	dc000015 	stw	r16,0(sp)
100088cc:	dfc00415 	stw	ra,16(sp)
100088d0:	dc400115 	stw	r17,4(sp)
100088d4:	308000cc 	andi	r2,r6,3
100088d8:	3021883a 	mov	r16,r6
100088dc:	2027883a 	mov	r19,r4
100088e0:	2825883a 	mov	r18,r5
100088e4:	10002e1e 	bne	r2,zero,100089a0 <__pow5mult+0xe4>
100088e8:	8021d0ba 	srai	r16,r16,2
100088ec:	80001a26 	beq	r16,zero,10008958 <__pow5mult+0x9c>
100088f0:	9c401217 	ldw	r17,72(r19)
100088f4:	8800061e 	bne	r17,zero,10008910 <__pow5mult+0x54>
100088f8:	00003406 	br	100089cc <__pow5mult+0x110>
100088fc:	8021d07a 	srai	r16,r16,1
10008900:	80001526 	beq	r16,zero,10008958 <__pow5mult+0x9c>
10008904:	88c00017 	ldw	r3,0(r17)
10008908:	18001b26 	beq	r3,zero,10008978 <__pow5mult+0xbc>
1000890c:	1823883a 	mov	r17,r3
10008910:	80c0004c 	andi	r3,r16,1
10008914:	183ff926 	beq	r3,zero,100088fc <__alt_data_end+0xf80088fc>
10008918:	900b883a 	mov	r5,r18
1000891c:	880d883a 	mov	r6,r17
10008920:	9809883a 	mov	r4,r19
10008924:	00086640 	call	10008664 <__multiply>
10008928:	90001b26 	beq	r18,zero,10008998 <__pow5mult+0xdc>
1000892c:	91000117 	ldw	r4,4(r18)
10008930:	98c01317 	ldw	r3,76(r19)
10008934:	8021d07a 	srai	r16,r16,1
10008938:	2109883a 	add	r4,r4,r4
1000893c:	2109883a 	add	r4,r4,r4
10008940:	1907883a 	add	r3,r3,r4
10008944:	19000017 	ldw	r4,0(r3)
10008948:	91000015 	stw	r4,0(r18)
1000894c:	1c800015 	stw	r18,0(r3)
10008950:	1025883a 	mov	r18,r2
10008954:	803feb1e 	bne	r16,zero,10008904 <__alt_data_end+0xf8008904>
10008958:	9005883a 	mov	r2,r18
1000895c:	dfc00417 	ldw	ra,16(sp)
10008960:	dcc00317 	ldw	r19,12(sp)
10008964:	dc800217 	ldw	r18,8(sp)
10008968:	dc400117 	ldw	r17,4(sp)
1000896c:	dc000017 	ldw	r16,0(sp)
10008970:	dec00504 	addi	sp,sp,20
10008974:	f800283a 	ret
10008978:	880b883a 	mov	r5,r17
1000897c:	880d883a 	mov	r6,r17
10008980:	9809883a 	mov	r4,r19
10008984:	00086640 	call	10008664 <__multiply>
10008988:	88800015 	stw	r2,0(r17)
1000898c:	10000015 	stw	zero,0(r2)
10008990:	1023883a 	mov	r17,r2
10008994:	003fde06 	br	10008910 <__alt_data_end+0xf8008910>
10008998:	1025883a 	mov	r18,r2
1000899c:	003fd706 	br	100088fc <__alt_data_end+0xf80088fc>
100089a0:	10bfffc4 	addi	r2,r2,-1
100089a4:	1085883a 	add	r2,r2,r2
100089a8:	00c40074 	movhi	r3,4097
100089ac:	18ca3504 	addi	r3,r3,10452
100089b0:	1085883a 	add	r2,r2,r2
100089b4:	1885883a 	add	r2,r3,r2
100089b8:	11800017 	ldw	r6,0(r2)
100089bc:	000f883a 	mov	r7,zero
100089c0:	00082c80 	call	100082c8 <__multadd>
100089c4:	1025883a 	mov	r18,r2
100089c8:	003fc706 	br	100088e8 <__alt_data_end+0xf80088e8>
100089cc:	9809883a 	mov	r4,r19
100089d0:	01409c44 	movi	r5,625
100089d4:	00086280 	call	10008628 <__i2b>
100089d8:	98801215 	stw	r2,72(r19)
100089dc:	1023883a 	mov	r17,r2
100089e0:	10000015 	stw	zero,0(r2)
100089e4:	003fca06 	br	10008910 <__alt_data_end+0xf8008910>

100089e8 <__lshift>:
100089e8:	defff904 	addi	sp,sp,-28
100089ec:	dd400515 	stw	r21,20(sp)
100089f0:	dc400115 	stw	r17,4(sp)
100089f4:	2d400417 	ldw	r21,16(r5)
100089f8:	3023d17a 	srai	r17,r6,5
100089fc:	28800217 	ldw	r2,8(r5)
10008a00:	dd000415 	stw	r20,16(sp)
10008a04:	8d6b883a 	add	r21,r17,r21
10008a08:	dcc00315 	stw	r19,12(sp)
10008a0c:	dc800215 	stw	r18,8(sp)
10008a10:	dc000015 	stw	r16,0(sp)
10008a14:	dfc00615 	stw	ra,24(sp)
10008a18:	ac000044 	addi	r16,r21,1
10008a1c:	2825883a 	mov	r18,r5
10008a20:	3029883a 	mov	r20,r6
10008a24:	2027883a 	mov	r19,r4
10008a28:	29400117 	ldw	r5,4(r5)
10008a2c:	1400030e 	bge	r2,r16,10008a3c <__lshift+0x54>
10008a30:	1085883a 	add	r2,r2,r2
10008a34:	29400044 	addi	r5,r5,1
10008a38:	143ffd16 	blt	r2,r16,10008a30 <__alt_data_end+0xf8008a30>
10008a3c:	9809883a 	mov	r4,r19
10008a40:	00081f80 	call	100081f8 <_Balloc>
10008a44:	10c00504 	addi	r3,r2,20
10008a48:	0440090e 	bge	zero,r17,10008a70 <__lshift+0x88>
10008a4c:	000f883a 	mov	r7,zero
10008a50:	18000015 	stw	zero,0(r3)
10008a54:	39c00044 	addi	r7,r7,1
10008a58:	18c00104 	addi	r3,r3,4
10008a5c:	3c7ffc1e 	bne	r7,r17,10008a50 <__alt_data_end+0xf8008a50>
10008a60:	38c00144 	addi	r3,r7,5
10008a64:	18c7883a 	add	r3,r3,r3
10008a68:	18c7883a 	add	r3,r3,r3
10008a6c:	10c7883a 	add	r3,r2,r3
10008a70:	92000417 	ldw	r8,16(r18)
10008a74:	a18007cc 	andi	r6,r20,31
10008a78:	91c00504 	addi	r7,r18,20
10008a7c:	42000144 	addi	r8,r8,5
10008a80:	4211883a 	add	r8,r8,r8
10008a84:	4211883a 	add	r8,r8,r8
10008a88:	9211883a 	add	r8,r18,r8
10008a8c:	30002226 	beq	r6,zero,10008b18 <__lshift+0x130>
10008a90:	02800804 	movi	r10,32
10008a94:	5195c83a 	sub	r10,r10,r6
10008a98:	000b883a 	mov	r5,zero
10008a9c:	3a400017 	ldw	r9,0(r7)
10008aa0:	18c00104 	addi	r3,r3,4
10008aa4:	39c00104 	addi	r7,r7,4
10008aa8:	4992983a 	sll	r9,r9,r6
10008aac:	2a4ab03a 	or	r5,r5,r9
10008ab0:	197fff15 	stw	r5,-4(r3)
10008ab4:	397fff17 	ldw	r5,-4(r7)
10008ab8:	2a8ad83a 	srl	r5,r5,r10
10008abc:	3a3ff736 	bltu	r7,r8,10008a9c <__alt_data_end+0xf8008a9c>
10008ac0:	19400015 	stw	r5,0(r3)
10008ac4:	28000126 	beq	r5,zero,10008acc <__lshift+0xe4>
10008ac8:	ac000084 	addi	r16,r21,2
10008acc:	91000117 	ldw	r4,4(r18)
10008ad0:	98c01317 	ldw	r3,76(r19)
10008ad4:	843fffc4 	addi	r16,r16,-1
10008ad8:	2109883a 	add	r4,r4,r4
10008adc:	2109883a 	add	r4,r4,r4
10008ae0:	1907883a 	add	r3,r3,r4
10008ae4:	19000017 	ldw	r4,0(r3)
10008ae8:	14000415 	stw	r16,16(r2)
10008aec:	91000015 	stw	r4,0(r18)
10008af0:	1c800015 	stw	r18,0(r3)
10008af4:	dfc00617 	ldw	ra,24(sp)
10008af8:	dd400517 	ldw	r21,20(sp)
10008afc:	dd000417 	ldw	r20,16(sp)
10008b00:	dcc00317 	ldw	r19,12(sp)
10008b04:	dc800217 	ldw	r18,8(sp)
10008b08:	dc400117 	ldw	r17,4(sp)
10008b0c:	dc000017 	ldw	r16,0(sp)
10008b10:	dec00704 	addi	sp,sp,28
10008b14:	f800283a 	ret
10008b18:	39400017 	ldw	r5,0(r7)
10008b1c:	18c00104 	addi	r3,r3,4
10008b20:	39c00104 	addi	r7,r7,4
10008b24:	197fff15 	stw	r5,-4(r3)
10008b28:	3a3fe82e 	bgeu	r7,r8,10008acc <__alt_data_end+0xf8008acc>
10008b2c:	39400017 	ldw	r5,0(r7)
10008b30:	18c00104 	addi	r3,r3,4
10008b34:	39c00104 	addi	r7,r7,4
10008b38:	197fff15 	stw	r5,-4(r3)
10008b3c:	3a3ff636 	bltu	r7,r8,10008b18 <__alt_data_end+0xf8008b18>
10008b40:	003fe206 	br	10008acc <__alt_data_end+0xf8008acc>

10008b44 <__mcmp>:
10008b44:	20800417 	ldw	r2,16(r4)
10008b48:	28c00417 	ldw	r3,16(r5)
10008b4c:	10c5c83a 	sub	r2,r2,r3
10008b50:	10000f1e 	bne	r2,zero,10008b90 <__mcmp+0x4c>
10008b54:	18c00144 	addi	r3,r3,5
10008b58:	18c7883a 	add	r3,r3,r3
10008b5c:	18c7883a 	add	r3,r3,r3
10008b60:	21c00504 	addi	r7,r4,20
10008b64:	28cb883a 	add	r5,r5,r3
10008b68:	20c9883a 	add	r4,r4,r3
10008b6c:	213fff04 	addi	r4,r4,-4
10008b70:	297fff04 	addi	r5,r5,-4
10008b74:	21800017 	ldw	r6,0(r4)
10008b78:	28c00017 	ldw	r3,0(r5)
10008b7c:	30c0021e 	bne	r6,r3,10008b88 <__mcmp+0x44>
10008b80:	393ffa36 	bltu	r7,r4,10008b6c <__alt_data_end+0xf8008b6c>
10008b84:	f800283a 	ret
10008b88:	30c00236 	bltu	r6,r3,10008b94 <__mcmp+0x50>
10008b8c:	00800044 	movi	r2,1
10008b90:	f800283a 	ret
10008b94:	00bfffc4 	movi	r2,-1
10008b98:	f800283a 	ret

10008b9c <__mdiff>:
10008b9c:	defffb04 	addi	sp,sp,-20
10008ba0:	dc000015 	stw	r16,0(sp)
10008ba4:	2821883a 	mov	r16,r5
10008ba8:	dc800215 	stw	r18,8(sp)
10008bac:	300b883a 	mov	r5,r6
10008bb0:	2025883a 	mov	r18,r4
10008bb4:	8009883a 	mov	r4,r16
10008bb8:	dc400115 	stw	r17,4(sp)
10008bbc:	dfc00415 	stw	ra,16(sp)
10008bc0:	dcc00315 	stw	r19,12(sp)
10008bc4:	3023883a 	mov	r17,r6
10008bc8:	0008b440 	call	10008b44 <__mcmp>
10008bcc:	10005026 	beq	r2,zero,10008d10 <__mdiff+0x174>
10008bd0:	10004a16 	blt	r2,zero,10008cfc <__mdiff+0x160>
10008bd4:	0027883a 	mov	r19,zero
10008bd8:	81400117 	ldw	r5,4(r16)
10008bdc:	9009883a 	mov	r4,r18
10008be0:	00081f80 	call	100081f8 <_Balloc>
10008be4:	82400417 	ldw	r9,16(r16)
10008be8:	89800417 	ldw	r6,16(r17)
10008bec:	14c00315 	stw	r19,12(r2)
10008bf0:	4b800144 	addi	r14,r9,5
10008bf4:	31800144 	addi	r6,r6,5
10008bf8:	739d883a 	add	r14,r14,r14
10008bfc:	318d883a 	add	r6,r6,r6
10008c00:	739d883a 	add	r14,r14,r14
10008c04:	318d883a 	add	r6,r6,r6
10008c08:	81c00504 	addi	r7,r16,20
10008c0c:	839d883a 	add	r14,r16,r14
10008c10:	8a000504 	addi	r8,r17,20
10008c14:	898d883a 	add	r6,r17,r6
10008c18:	10c00504 	addi	r3,r2,20
10008c1c:	0009883a 	mov	r4,zero
10008c20:	3b000017 	ldw	r12,0(r7)
10008c24:	42c00017 	ldw	r11,0(r8)
10008c28:	42000104 	addi	r8,r8,4
10008c2c:	62bfffcc 	andi	r10,r12,65535
10008c30:	5b7fffcc 	andi	r13,r11,65535
10008c34:	5109883a 	add	r4,r10,r4
10008c38:	2355c83a 	sub	r10,r4,r13
10008c3c:	5816d43a 	srli	r11,r11,16
10008c40:	6008d43a 	srli	r4,r12,16
10008c44:	501bd43a 	srai	r13,r10,16
10008c48:	1a80000d 	sth	r10,0(r3)
10008c4c:	22c9c83a 	sub	r4,r4,r11
10008c50:	2349883a 	add	r4,r4,r13
10008c54:	1900008d 	sth	r4,2(r3)
10008c58:	39c00104 	addi	r7,r7,4
10008c5c:	2009d43a 	srai	r4,r4,16
10008c60:	18c00104 	addi	r3,r3,4
10008c64:	41bfee36 	bltu	r8,r6,10008c20 <__alt_data_end+0xf8008c20>
10008c68:	180b883a 	mov	r5,r3
10008c6c:	3815883a 	mov	r10,r7
10008c70:	3b80132e 	bgeu	r7,r14,10008cc0 <__mdiff+0x124>
10008c74:	3a000017 	ldw	r8,0(r7)
10008c78:	18c00104 	addi	r3,r3,4
10008c7c:	39c00104 	addi	r7,r7,4
10008c80:	41bfffcc 	andi	r6,r8,65535
10008c84:	310d883a 	add	r6,r6,r4
10008c88:	3009d43a 	srai	r4,r6,16
10008c8c:	4010d43a 	srli	r8,r8,16
10008c90:	19bfff0d 	sth	r6,-4(r3)
10008c94:	2209883a 	add	r4,r4,r8
10008c98:	193fff8d 	sth	r4,-2(r3)
10008c9c:	2009d43a 	srai	r4,r4,16
10008ca0:	3bbff436 	bltu	r7,r14,10008c74 <__alt_data_end+0xf8008c74>
10008ca4:	0286303a 	nor	r3,zero,r10
10008ca8:	1b87883a 	add	r3,r3,r14
10008cac:	1806d0ba 	srli	r3,r3,2
10008cb0:	18c00044 	addi	r3,r3,1
10008cb4:	18c7883a 	add	r3,r3,r3
10008cb8:	18c7883a 	add	r3,r3,r3
10008cbc:	28c7883a 	add	r3,r5,r3
10008cc0:	193fff17 	ldw	r4,-4(r3)
10008cc4:	18ffff04 	addi	r3,r3,-4
10008cc8:	2000041e 	bne	r4,zero,10008cdc <__mdiff+0x140>
10008ccc:	18ffff04 	addi	r3,r3,-4
10008cd0:	19000017 	ldw	r4,0(r3)
10008cd4:	4a7fffc4 	addi	r9,r9,-1
10008cd8:	203ffc26 	beq	r4,zero,10008ccc <__alt_data_end+0xf8008ccc>
10008cdc:	12400415 	stw	r9,16(r2)
10008ce0:	dfc00417 	ldw	ra,16(sp)
10008ce4:	dcc00317 	ldw	r19,12(sp)
10008ce8:	dc800217 	ldw	r18,8(sp)
10008cec:	dc400117 	ldw	r17,4(sp)
10008cf0:	dc000017 	ldw	r16,0(sp)
10008cf4:	dec00504 	addi	sp,sp,20
10008cf8:	f800283a 	ret
10008cfc:	8005883a 	mov	r2,r16
10008d00:	04c00044 	movi	r19,1
10008d04:	8821883a 	mov	r16,r17
10008d08:	1023883a 	mov	r17,r2
10008d0c:	003fb206 	br	10008bd8 <__alt_data_end+0xf8008bd8>
10008d10:	9009883a 	mov	r4,r18
10008d14:	000b883a 	mov	r5,zero
10008d18:	00081f80 	call	100081f8 <_Balloc>
10008d1c:	00c00044 	movi	r3,1
10008d20:	10c00415 	stw	r3,16(r2)
10008d24:	10000515 	stw	zero,20(r2)
10008d28:	dfc00417 	ldw	ra,16(sp)
10008d2c:	dcc00317 	ldw	r19,12(sp)
10008d30:	dc800217 	ldw	r18,8(sp)
10008d34:	dc400117 	ldw	r17,4(sp)
10008d38:	dc000017 	ldw	r16,0(sp)
10008d3c:	dec00504 	addi	sp,sp,20
10008d40:	f800283a 	ret

10008d44 <__ulp>:
10008d44:	295ffc2c 	andhi	r5,r5,32752
10008d48:	00bf3034 	movhi	r2,64704
10008d4c:	2887883a 	add	r3,r5,r2
10008d50:	00c0020e 	bge	zero,r3,10008d5c <__ulp+0x18>
10008d54:	0005883a 	mov	r2,zero
10008d58:	f800283a 	ret
10008d5c:	00c7c83a 	sub	r3,zero,r3
10008d60:	1805d53a 	srai	r2,r3,20
10008d64:	00c004c4 	movi	r3,19
10008d68:	18800a0e 	bge	r3,r2,10008d94 <__ulp+0x50>
10008d6c:	01000c84 	movi	r4,50
10008d70:	0007883a 	mov	r3,zero
10008d74:	20800516 	blt	r4,r2,10008d8c <__ulp+0x48>
10008d78:	01000cc4 	movi	r4,51
10008d7c:	2085c83a 	sub	r2,r4,r2
10008d80:	01000044 	movi	r4,1
10008d84:	2084983a 	sll	r2,r4,r2
10008d88:	f800283a 	ret
10008d8c:	00800044 	movi	r2,1
10008d90:	f800283a 	ret
10008d94:	00c00234 	movhi	r3,8
10008d98:	1887d83a 	sra	r3,r3,r2
10008d9c:	0005883a 	mov	r2,zero
10008da0:	f800283a 	ret

10008da4 <__b2d>:
10008da4:	defffa04 	addi	sp,sp,-24
10008da8:	dc000015 	stw	r16,0(sp)
10008dac:	24000417 	ldw	r16,16(r4)
10008db0:	dc400115 	stw	r17,4(sp)
10008db4:	dcc00315 	stw	r19,12(sp)
10008db8:	84000144 	addi	r16,r16,5
10008dbc:	8421883a 	add	r16,r16,r16
10008dc0:	8421883a 	add	r16,r16,r16
10008dc4:	2421883a 	add	r16,r4,r16
10008dc8:	847fff17 	ldw	r17,-4(r16)
10008dcc:	24c00504 	addi	r19,r4,20
10008dd0:	dd000415 	stw	r20,16(sp)
10008dd4:	8809883a 	mov	r4,r17
10008dd8:	dc800215 	stw	r18,8(sp)
10008ddc:	2829883a 	mov	r20,r5
10008de0:	dfc00515 	stw	ra,20(sp)
10008de4:	00085100 	call	10008510 <__hi0bits>
10008de8:	00c00804 	movi	r3,32
10008dec:	1887c83a 	sub	r3,r3,r2
10008df0:	a0c00015 	stw	r3,0(r20)
10008df4:	00c00284 	movi	r3,10
10008df8:	84bfff04 	addi	r18,r16,-4
10008dfc:	18801216 	blt	r3,r2,10008e48 <__b2d+0xa4>
10008e00:	010002c4 	movi	r4,11
10008e04:	2089c83a 	sub	r4,r4,r2
10008e08:	8906d83a 	srl	r3,r17,r4
10008e0c:	18cffc34 	orhi	r3,r3,16368
10008e10:	9c80322e 	bgeu	r19,r18,10008edc <__b2d+0x138>
10008e14:	817ffe17 	ldw	r5,-8(r16)
10008e18:	2908d83a 	srl	r4,r5,r4
10008e1c:	10800544 	addi	r2,r2,21
10008e20:	88a2983a 	sll	r17,r17,r2
10008e24:	2444b03a 	or	r2,r4,r17
10008e28:	dfc00517 	ldw	ra,20(sp)
10008e2c:	dd000417 	ldw	r20,16(sp)
10008e30:	dcc00317 	ldw	r19,12(sp)
10008e34:	dc800217 	ldw	r18,8(sp)
10008e38:	dc400117 	ldw	r17,4(sp)
10008e3c:	dc000017 	ldw	r16,0(sp)
10008e40:	dec00604 	addi	sp,sp,24
10008e44:	f800283a 	ret
10008e48:	9c801636 	bltu	r19,r18,10008ea4 <__b2d+0x100>
10008e4c:	113ffd44 	addi	r4,r2,-11
10008e50:	000b883a 	mov	r5,zero
10008e54:	20001726 	beq	r4,zero,10008eb4 <__b2d+0x110>
10008e58:	00c00ac4 	movi	r3,43
10008e5c:	1885c83a 	sub	r2,r3,r2
10008e60:	8906983a 	sll	r3,r17,r4
10008e64:	288cd83a 	srl	r6,r5,r2
10008e68:	18cffc34 	orhi	r3,r3,16368
10008e6c:	1986b03a 	or	r3,r3,r6
10008e70:	9c801c2e 	bgeu	r19,r18,10008ee4 <__b2d+0x140>
10008e74:	91bfff17 	ldw	r6,-4(r18)
10008e78:	3084d83a 	srl	r2,r6,r2
10008e7c:	2908983a 	sll	r4,r5,r4
10008e80:	1104b03a 	or	r2,r2,r4
10008e84:	dfc00517 	ldw	ra,20(sp)
10008e88:	dd000417 	ldw	r20,16(sp)
10008e8c:	dcc00317 	ldw	r19,12(sp)
10008e90:	dc800217 	ldw	r18,8(sp)
10008e94:	dc400117 	ldw	r17,4(sp)
10008e98:	dc000017 	ldw	r16,0(sp)
10008e9c:	dec00604 	addi	sp,sp,24
10008ea0:	f800283a 	ret
10008ea4:	113ffd44 	addi	r4,r2,-11
10008ea8:	84bffe04 	addi	r18,r16,-8
10008eac:	817ffe17 	ldw	r5,-8(r16)
10008eb0:	203fe91e 	bne	r4,zero,10008e58 <__alt_data_end+0xf8008e58>
10008eb4:	88cffc34 	orhi	r3,r17,16368
10008eb8:	2805883a 	mov	r2,r5
10008ebc:	dfc00517 	ldw	ra,20(sp)
10008ec0:	dd000417 	ldw	r20,16(sp)
10008ec4:	dcc00317 	ldw	r19,12(sp)
10008ec8:	dc800217 	ldw	r18,8(sp)
10008ecc:	dc400117 	ldw	r17,4(sp)
10008ed0:	dc000017 	ldw	r16,0(sp)
10008ed4:	dec00604 	addi	sp,sp,24
10008ed8:	f800283a 	ret
10008edc:	0009883a 	mov	r4,zero
10008ee0:	003fce06 	br	10008e1c <__alt_data_end+0xf8008e1c>
10008ee4:	0005883a 	mov	r2,zero
10008ee8:	003fe406 	br	10008e7c <__alt_data_end+0xf8008e7c>

10008eec <__d2b>:
10008eec:	defff804 	addi	sp,sp,-32
10008ef0:	dc400315 	stw	r17,12(sp)
10008ef4:	3023883a 	mov	r17,r6
10008ef8:	dc800415 	stw	r18,16(sp)
10008efc:	8824907a 	slli	r18,r17,1
10008f00:	dcc00515 	stw	r19,20(sp)
10008f04:	2827883a 	mov	r19,r5
10008f08:	9024d57a 	srli	r18,r18,21
10008f0c:	01400044 	movi	r5,1
10008f10:	dd000615 	stw	r20,24(sp)
10008f14:	dc000215 	stw	r16,8(sp)
10008f18:	dfc00715 	stw	ra,28(sp)
10008f1c:	3829883a 	mov	r20,r7
10008f20:	00081f80 	call	100081f8 <_Balloc>
10008f24:	1021883a 	mov	r16,r2
10008f28:	00800434 	movhi	r2,16
10008f2c:	10bfffc4 	addi	r2,r2,-1
10008f30:	88a2703a 	and	r17,r17,r2
10008f34:	90000126 	beq	r18,zero,10008f3c <__d2b+0x50>
10008f38:	8c400434 	orhi	r17,r17,16
10008f3c:	dc400015 	stw	r17,0(sp)
10008f40:	98002226 	beq	r19,zero,10008fcc <__d2b+0xe0>
10008f44:	d9000104 	addi	r4,sp,4
10008f48:	dcc00115 	stw	r19,4(sp)
10008f4c:	00085780 	call	10008578 <__lo0bits>
10008f50:	d8c00017 	ldw	r3,0(sp)
10008f54:	10002d1e 	bne	r2,zero,1000900c <__d2b+0x120>
10008f58:	d9000117 	ldw	r4,4(sp)
10008f5c:	81000515 	stw	r4,20(r16)
10008f60:	1823003a 	cmpeq	r17,r3,zero
10008f64:	01000084 	movi	r4,2
10008f68:	2463c83a 	sub	r17,r4,r17
10008f6c:	80c00615 	stw	r3,24(r16)
10008f70:	84400415 	stw	r17,16(r16)
10008f74:	90001d1e 	bne	r18,zero,10008fec <__d2b+0x100>
10008f78:	88c00104 	addi	r3,r17,4
10008f7c:	18c7883a 	add	r3,r3,r3
10008f80:	18c7883a 	add	r3,r3,r3
10008f84:	80c7883a 	add	r3,r16,r3
10008f88:	19000017 	ldw	r4,0(r3)
10008f8c:	10bef384 	addi	r2,r2,-1074
10008f90:	a0800015 	stw	r2,0(r20)
10008f94:	00085100 	call	10008510 <__hi0bits>
10008f98:	8822917a 	slli	r17,r17,5
10008f9c:	d8c00817 	ldw	r3,32(sp)
10008fa0:	8885c83a 	sub	r2,r17,r2
10008fa4:	18800015 	stw	r2,0(r3)
10008fa8:	8005883a 	mov	r2,r16
10008fac:	dfc00717 	ldw	ra,28(sp)
10008fb0:	dd000617 	ldw	r20,24(sp)
10008fb4:	dcc00517 	ldw	r19,20(sp)
10008fb8:	dc800417 	ldw	r18,16(sp)
10008fbc:	dc400317 	ldw	r17,12(sp)
10008fc0:	dc000217 	ldw	r16,8(sp)
10008fc4:	dec00804 	addi	sp,sp,32
10008fc8:	f800283a 	ret
10008fcc:	d809883a 	mov	r4,sp
10008fd0:	00085780 	call	10008578 <__lo0bits>
10008fd4:	d8c00017 	ldw	r3,0(sp)
10008fd8:	04400044 	movi	r17,1
10008fdc:	84400415 	stw	r17,16(r16)
10008fe0:	80c00515 	stw	r3,20(r16)
10008fe4:	10800804 	addi	r2,r2,32
10008fe8:	903fe326 	beq	r18,zero,10008f78 <__alt_data_end+0xf8008f78>
10008fec:	00c00d44 	movi	r3,53
10008ff0:	94bef344 	addi	r18,r18,-1075
10008ff4:	90a5883a 	add	r18,r18,r2
10008ff8:	1885c83a 	sub	r2,r3,r2
10008ffc:	d8c00817 	ldw	r3,32(sp)
10009000:	a4800015 	stw	r18,0(r20)
10009004:	18800015 	stw	r2,0(r3)
10009008:	003fe706 	br	10008fa8 <__alt_data_end+0xf8008fa8>
1000900c:	01000804 	movi	r4,32
10009010:	2089c83a 	sub	r4,r4,r2
10009014:	1908983a 	sll	r4,r3,r4
10009018:	d9400117 	ldw	r5,4(sp)
1000901c:	1886d83a 	srl	r3,r3,r2
10009020:	2148b03a 	or	r4,r4,r5
10009024:	81000515 	stw	r4,20(r16)
10009028:	d8c00015 	stw	r3,0(sp)
1000902c:	003fcc06 	br	10008f60 <__alt_data_end+0xf8008f60>

10009030 <__ratio>:
10009030:	defff904 	addi	sp,sp,-28
10009034:	dc400315 	stw	r17,12(sp)
10009038:	2823883a 	mov	r17,r5
1000903c:	d9400104 	addi	r5,sp,4
10009040:	dfc00615 	stw	ra,24(sp)
10009044:	dcc00515 	stw	r19,20(sp)
10009048:	dc800415 	stw	r18,16(sp)
1000904c:	2027883a 	mov	r19,r4
10009050:	dc000215 	stw	r16,8(sp)
10009054:	0008da40 	call	10008da4 <__b2d>
10009058:	8809883a 	mov	r4,r17
1000905c:	d80b883a 	mov	r5,sp
10009060:	1025883a 	mov	r18,r2
10009064:	1821883a 	mov	r16,r3
10009068:	0008da40 	call	10008da4 <__b2d>
1000906c:	99400417 	ldw	r5,16(r19)
10009070:	89000417 	ldw	r4,16(r17)
10009074:	d9800117 	ldw	r6,4(sp)
10009078:	2909c83a 	sub	r4,r5,r4
1000907c:	d9400017 	ldw	r5,0(sp)
10009080:	2008917a 	slli	r4,r4,5
10009084:	314bc83a 	sub	r5,r6,r5
10009088:	290b883a 	add	r5,r5,r4
1000908c:	01400e0e 	bge	zero,r5,100090c8 <__ratio+0x98>
10009090:	280a953a 	slli	r5,r5,20
10009094:	2c21883a 	add	r16,r5,r16
10009098:	9009883a 	mov	r4,r18
1000909c:	800b883a 	mov	r5,r16
100090a0:	100d883a 	mov	r6,r2
100090a4:	180f883a 	mov	r7,r3
100090a8:	000ed240 	call	1000ed24 <__divdf3>
100090ac:	dfc00617 	ldw	ra,24(sp)
100090b0:	dcc00517 	ldw	r19,20(sp)
100090b4:	dc800417 	ldw	r18,16(sp)
100090b8:	dc400317 	ldw	r17,12(sp)
100090bc:	dc000217 	ldw	r16,8(sp)
100090c0:	dec00704 	addi	sp,sp,28
100090c4:	f800283a 	ret
100090c8:	280a953a 	slli	r5,r5,20
100090cc:	1947c83a 	sub	r3,r3,r5
100090d0:	003ff106 	br	10009098 <__alt_data_end+0xf8009098>

100090d4 <_mprec_log10>:
100090d4:	defffe04 	addi	sp,sp,-8
100090d8:	dc000015 	stw	r16,0(sp)
100090dc:	dfc00115 	stw	ra,4(sp)
100090e0:	008005c4 	movi	r2,23
100090e4:	2021883a 	mov	r16,r4
100090e8:	11000d0e 	bge	r2,r4,10009120 <_mprec_log10+0x4c>
100090ec:	0005883a 	mov	r2,zero
100090f0:	00cffc34 	movhi	r3,16368
100090f4:	843fffc4 	addi	r16,r16,-1
100090f8:	1009883a 	mov	r4,r2
100090fc:	180b883a 	mov	r5,r3
10009100:	000d883a 	mov	r6,zero
10009104:	01d00934 	movhi	r7,16420
10009108:	000ea400 	call	1000ea40 <__muldf3>
1000910c:	803ff91e 	bne	r16,zero,100090f4 <__alt_data_end+0xf80090f4>
10009110:	dfc00117 	ldw	ra,4(sp)
10009114:	dc000017 	ldw	r16,0(sp)
10009118:	dec00204 	addi	sp,sp,8
1000911c:	f800283a 	ret
10009120:	202090fa 	slli	r16,r4,3
10009124:	00840074 	movhi	r2,4097
10009128:	108a0304 	addi	r2,r2,10252
1000912c:	1421883a 	add	r16,r2,r16
10009130:	80800017 	ldw	r2,0(r16)
10009134:	80c00117 	ldw	r3,4(r16)
10009138:	dfc00117 	ldw	ra,4(sp)
1000913c:	dc000017 	ldw	r16,0(sp)
10009140:	dec00204 	addi	sp,sp,8
10009144:	f800283a 	ret

10009148 <__copybits>:
10009148:	297fffc4 	addi	r5,r5,-1
1000914c:	31c00417 	ldw	r7,16(r6)
10009150:	2811d17a 	srai	r8,r5,5
10009154:	30800504 	addi	r2,r6,20
10009158:	39c00144 	addi	r7,r7,5
1000915c:	42000044 	addi	r8,r8,1
10009160:	39cf883a 	add	r7,r7,r7
10009164:	4211883a 	add	r8,r8,r8
10009168:	39cf883a 	add	r7,r7,r7
1000916c:	4211883a 	add	r8,r8,r8
10009170:	31cf883a 	add	r7,r6,r7
10009174:	2211883a 	add	r8,r4,r8
10009178:	11c00d2e 	bgeu	r2,r7,100091b0 <__copybits+0x68>
1000917c:	2007883a 	mov	r3,r4
10009180:	11400017 	ldw	r5,0(r2)
10009184:	18c00104 	addi	r3,r3,4
10009188:	10800104 	addi	r2,r2,4
1000918c:	197fff15 	stw	r5,-4(r3)
10009190:	11fffb36 	bltu	r2,r7,10009180 <__alt_data_end+0xf8009180>
10009194:	3985c83a 	sub	r2,r7,r6
10009198:	10bffac4 	addi	r2,r2,-21
1000919c:	1004d0ba 	srli	r2,r2,2
100091a0:	10800044 	addi	r2,r2,1
100091a4:	1085883a 	add	r2,r2,r2
100091a8:	1085883a 	add	r2,r2,r2
100091ac:	2089883a 	add	r4,r4,r2
100091b0:	2200032e 	bgeu	r4,r8,100091c0 <__copybits+0x78>
100091b4:	20000015 	stw	zero,0(r4)
100091b8:	21000104 	addi	r4,r4,4
100091bc:	223ffd36 	bltu	r4,r8,100091b4 <__alt_data_end+0xf80091b4>
100091c0:	f800283a 	ret

100091c4 <__any_on>:
100091c4:	21800417 	ldw	r6,16(r4)
100091c8:	2805d17a 	srai	r2,r5,5
100091cc:	20c00504 	addi	r3,r4,20
100091d0:	30800f0e 	bge	r6,r2,10009210 <__any_on+0x4c>
100091d4:	3005883a 	mov	r2,r6
100091d8:	10800144 	addi	r2,r2,5
100091dc:	1085883a 	add	r2,r2,r2
100091e0:	1085883a 	add	r2,r2,r2
100091e4:	2089883a 	add	r4,r4,r2
100091e8:	1900152e 	bgeu	r3,r4,10009240 <__any_on+0x7c>
100091ec:	20bfff17 	ldw	r2,-4(r4)
100091f0:	213fff04 	addi	r4,r4,-4
100091f4:	1000041e 	bne	r2,zero,10009208 <__any_on+0x44>
100091f8:	1900112e 	bgeu	r3,r4,10009240 <__any_on+0x7c>
100091fc:	213fff04 	addi	r4,r4,-4
10009200:	20800017 	ldw	r2,0(r4)
10009204:	103ffc26 	beq	r2,zero,100091f8 <__alt_data_end+0xf80091f8>
10009208:	00800044 	movi	r2,1
1000920c:	f800283a 	ret
10009210:	11bff10e 	bge	r2,r6,100091d8 <__alt_data_end+0xf80091d8>
10009214:	294007cc 	andi	r5,r5,31
10009218:	283fef26 	beq	r5,zero,100091d8 <__alt_data_end+0xf80091d8>
1000921c:	11800144 	addi	r6,r2,5
10009220:	318d883a 	add	r6,r6,r6
10009224:	318d883a 	add	r6,r6,r6
10009228:	218d883a 	add	r6,r4,r6
1000922c:	31800017 	ldw	r6,0(r6)
10009230:	314ed83a 	srl	r7,r6,r5
10009234:	394a983a 	sll	r5,r7,r5
10009238:	29bff31e 	bne	r5,r6,10009208 <__alt_data_end+0xf8009208>
1000923c:	003fe606 	br	100091d8 <__alt_data_end+0xf80091d8>
10009240:	0005883a 	mov	r2,zero
10009244:	f800283a 	ret

10009248 <_putc_r>:
10009248:	defffc04 	addi	sp,sp,-16
1000924c:	dc000215 	stw	r16,8(sp)
10009250:	dfc00315 	stw	ra,12(sp)
10009254:	2021883a 	mov	r16,r4
10009258:	20000226 	beq	r4,zero,10009264 <_putc_r+0x1c>
1000925c:	20800e17 	ldw	r2,56(r4)
10009260:	10001d26 	beq	r2,zero,100092d8 <_putc_r+0x90>
10009264:	30800217 	ldw	r2,8(r6)
10009268:	10bfffc4 	addi	r2,r2,-1
1000926c:	30800215 	stw	r2,8(r6)
10009270:	10000a16 	blt	r2,zero,1000929c <_putc_r+0x54>
10009274:	30800017 	ldw	r2,0(r6)
10009278:	11400005 	stb	r5,0(r2)
1000927c:	30800017 	ldw	r2,0(r6)
10009280:	10c00044 	addi	r3,r2,1
10009284:	10800003 	ldbu	r2,0(r2)
10009288:	30c00015 	stw	r3,0(r6)
1000928c:	dfc00317 	ldw	ra,12(sp)
10009290:	dc000217 	ldw	r16,8(sp)
10009294:	dec00404 	addi	sp,sp,16
10009298:	f800283a 	ret
1000929c:	30c00617 	ldw	r3,24(r6)
100092a0:	10c01316 	blt	r2,r3,100092f0 <_putc_r+0xa8>
100092a4:	30800017 	ldw	r2,0(r6)
100092a8:	01000284 	movi	r4,10
100092ac:	11400005 	stb	r5,0(r2)
100092b0:	30c00017 	ldw	r3,0(r6)
100092b4:	19400003 	ldbu	r5,0(r3)
100092b8:	29000d26 	beq	r5,r4,100092f0 <_putc_r+0xa8>
100092bc:	18c00044 	addi	r3,r3,1
100092c0:	2805883a 	mov	r2,r5
100092c4:	30c00015 	stw	r3,0(r6)
100092c8:	dfc00317 	ldw	ra,12(sp)
100092cc:	dc000217 	ldw	r16,8(sp)
100092d0:	dec00404 	addi	sp,sp,16
100092d4:	f800283a 	ret
100092d8:	d9400015 	stw	r5,0(sp)
100092dc:	d9800115 	stw	r6,4(sp)
100092e0:	0006aa00 	call	10006aa0 <__sinit>
100092e4:	d9800117 	ldw	r6,4(sp)
100092e8:	d9400017 	ldw	r5,0(sp)
100092ec:	003fdd06 	br	10009264 <__alt_data_end+0xf8009264>
100092f0:	8009883a 	mov	r4,r16
100092f4:	dfc00317 	ldw	ra,12(sp)
100092f8:	dc000217 	ldw	r16,8(sp)
100092fc:	dec00404 	addi	sp,sp,16
10009300:	000c59c1 	jmpi	1000c59c <__swbuf_r>

10009304 <putc>:
10009304:	defffc04 	addi	sp,sp,-16
10009308:	dc400115 	stw	r17,4(sp)
1000930c:	04440074 	movhi	r17,4097
10009310:	8c517f04 	addi	r17,r17,17916
10009314:	88800017 	ldw	r2,0(r17)
10009318:	dc800215 	stw	r18,8(sp)
1000931c:	dc000015 	stw	r16,0(sp)
10009320:	dfc00315 	stw	ra,12(sp)
10009324:	2025883a 	mov	r18,r4
10009328:	2821883a 	mov	r16,r5
1000932c:	10000226 	beq	r2,zero,10009338 <putc+0x34>
10009330:	10c00e17 	ldw	r3,56(r2)
10009334:	18002126 	beq	r3,zero,100093bc <putc+0xb8>
10009338:	80800217 	ldw	r2,8(r16)
1000933c:	10bfffc4 	addi	r2,r2,-1
10009340:	80800215 	stw	r2,8(r16)
10009344:	10000c16 	blt	r2,zero,10009378 <putc+0x74>
10009348:	80800017 	ldw	r2,0(r16)
1000934c:	14800005 	stb	r18,0(r2)
10009350:	80800017 	ldw	r2,0(r16)
10009354:	10c00044 	addi	r3,r2,1
10009358:	10800003 	ldbu	r2,0(r2)
1000935c:	80c00015 	stw	r3,0(r16)
10009360:	dfc00317 	ldw	ra,12(sp)
10009364:	dc800217 	ldw	r18,8(sp)
10009368:	dc400117 	ldw	r17,4(sp)
1000936c:	dc000017 	ldw	r16,0(sp)
10009370:	dec00404 	addi	sp,sp,16
10009374:	f800283a 	ret
10009378:	80c00617 	ldw	r3,24(r16)
1000937c:	10c01216 	blt	r2,r3,100093c8 <putc+0xc4>
10009380:	80800017 	ldw	r2,0(r16)
10009384:	01000284 	movi	r4,10
10009388:	14800005 	stb	r18,0(r2)
1000938c:	80c00017 	ldw	r3,0(r16)
10009390:	19400003 	ldbu	r5,0(r3)
10009394:	29001526 	beq	r5,r4,100093ec <putc+0xe8>
10009398:	18c00044 	addi	r3,r3,1
1000939c:	2805883a 	mov	r2,r5
100093a0:	80c00015 	stw	r3,0(r16)
100093a4:	dfc00317 	ldw	ra,12(sp)
100093a8:	dc800217 	ldw	r18,8(sp)
100093ac:	dc400117 	ldw	r17,4(sp)
100093b0:	dc000017 	ldw	r16,0(sp)
100093b4:	dec00404 	addi	sp,sp,16
100093b8:	f800283a 	ret
100093bc:	1009883a 	mov	r4,r2
100093c0:	0006aa00 	call	10006aa0 <__sinit>
100093c4:	003fdc06 	br	10009338 <__alt_data_end+0xf8009338>
100093c8:	89000017 	ldw	r4,0(r17)
100093cc:	900b883a 	mov	r5,r18
100093d0:	800d883a 	mov	r6,r16
100093d4:	dfc00317 	ldw	ra,12(sp)
100093d8:	dc800217 	ldw	r18,8(sp)
100093dc:	dc400117 	ldw	r17,4(sp)
100093e0:	dc000017 	ldw	r16,0(sp)
100093e4:	dec00404 	addi	sp,sp,16
100093e8:	000c59c1 	jmpi	1000c59c <__swbuf_r>
100093ec:	89000017 	ldw	r4,0(r17)
100093f0:	003ff706 	br	100093d0 <__alt_data_end+0xf80093d0>

100093f4 <_realloc_r>:
100093f4:	defff504 	addi	sp,sp,-44
100093f8:	dd400615 	stw	r21,24(sp)
100093fc:	dc800315 	stw	r18,12(sp)
10009400:	dc000115 	stw	r16,4(sp)
10009404:	dfc00a15 	stw	ra,40(sp)
10009408:	df000915 	stw	fp,36(sp)
1000940c:	ddc00815 	stw	r23,32(sp)
10009410:	dd800715 	stw	r22,28(sp)
10009414:	dd000515 	stw	r20,20(sp)
10009418:	dcc00415 	stw	r19,16(sp)
1000941c:	dc400215 	stw	r17,8(sp)
10009420:	2821883a 	mov	r16,r5
10009424:	202b883a 	mov	r21,r4
10009428:	3025883a 	mov	r18,r6
1000942c:	28009626 	beq	r5,zero,10009688 <_realloc_r+0x294>
10009430:	00103480 	call	10010348 <__malloc_lock>
10009434:	80bfff17 	ldw	r2,-4(r16)
10009438:	04ffff04 	movi	r19,-4
1000943c:	90c002c4 	addi	r3,r18,11
10009440:	01000584 	movi	r4,22
10009444:	85bffe04 	addi	r22,r16,-8
10009448:	14e6703a 	and	r19,r2,r19
1000944c:	20c0372e 	bgeu	r4,r3,1000952c <_realloc_r+0x138>
10009450:	047ffe04 	movi	r17,-8
10009454:	1c62703a 	and	r17,r3,r17
10009458:	8807883a 	mov	r3,r17
1000945c:	88005a16 	blt	r17,zero,100095c8 <_realloc_r+0x1d4>
10009460:	8c805936 	bltu	r17,r18,100095c8 <_realloc_r+0x1d4>
10009464:	98c0340e 	bge	r19,r3,10009538 <_realloc_r+0x144>
10009468:	07040074 	movhi	fp,4097
1000946c:	e70aea04 	addi	fp,fp,11176
10009470:	e1400217 	ldw	r5,8(fp)
10009474:	b4c9883a 	add	r4,r22,r19
10009478:	29009026 	beq	r5,r4,100096bc <_realloc_r+0x2c8>
1000947c:	21800117 	ldw	r6,4(r4)
10009480:	01ffff84 	movi	r7,-2
10009484:	31ce703a 	and	r7,r6,r7
10009488:	21cf883a 	add	r7,r4,r7
1000948c:	39c00117 	ldw	r7,4(r7)
10009490:	39c0004c 	andi	r7,r7,1
10009494:	38004326 	beq	r7,zero,100095a4 <_realloc_r+0x1b0>
10009498:	000d883a 	mov	r6,zero
1000949c:	0009883a 	mov	r4,zero
100094a0:	1080004c 	andi	r2,r2,1
100094a4:	10005a1e 	bne	r2,zero,10009610 <_realloc_r+0x21c>
100094a8:	85fffe17 	ldw	r23,-8(r16)
100094ac:	00bfff04 	movi	r2,-4
100094b0:	b5efc83a 	sub	r23,r22,r23
100094b4:	b9c00117 	ldw	r7,4(r23)
100094b8:	388e703a 	and	r7,r7,r2
100094bc:	3ccf883a 	add	r7,r7,r19
100094c0:	20005226 	beq	r4,zero,1000960c <_realloc_r+0x218>
100094c4:	31e9883a 	add	r20,r6,r7
100094c8:	2140c726 	beq	r4,r5,100097e8 <_realloc_r+0x3f4>
100094cc:	a0c04f16 	blt	r20,r3,1000960c <_realloc_r+0x218>
100094d0:	20800317 	ldw	r2,12(r4)
100094d4:	20c00217 	ldw	r3,8(r4)
100094d8:	99bfff04 	addi	r6,r19,-4
100094dc:	01000904 	movi	r4,36
100094e0:	18800315 	stw	r2,12(r3)
100094e4:	10c00215 	stw	r3,8(r2)
100094e8:	b8c00217 	ldw	r3,8(r23)
100094ec:	b8800317 	ldw	r2,12(r23)
100094f0:	bc800204 	addi	r18,r23,8
100094f4:	18800315 	stw	r2,12(r3)
100094f8:	10c00215 	stw	r3,8(r2)
100094fc:	2180ed36 	bltu	r4,r6,100098b4 <_realloc_r+0x4c0>
10009500:	008004c4 	movi	r2,19
10009504:	11809b2e 	bgeu	r2,r6,10009774 <_realloc_r+0x380>
10009508:	80800017 	ldw	r2,0(r16)
1000950c:	b8800215 	stw	r2,8(r23)
10009510:	80800117 	ldw	r2,4(r16)
10009514:	b8800315 	stw	r2,12(r23)
10009518:	008006c4 	movi	r2,27
1000951c:	1180f936 	bltu	r2,r6,10009904 <_realloc_r+0x510>
10009520:	b8800404 	addi	r2,r23,16
10009524:	80c00204 	addi	r3,r16,8
10009528:	00009406 	br	1000977c <_realloc_r+0x388>
1000952c:	00c00404 	movi	r3,16
10009530:	1823883a 	mov	r17,r3
10009534:	003fca06 	br	10009460 <__alt_data_end+0xf8009460>
10009538:	9829883a 	mov	r20,r19
1000953c:	a447c83a 	sub	r3,r20,r17
10009540:	010003c4 	movi	r4,15
10009544:	1080004c 	andi	r2,r2,1
10009548:	20c02336 	bltu	r4,r3,100095d8 <_realloc_r+0x1e4>
1000954c:	1504b03a 	or	r2,r2,r20
10009550:	b0800115 	stw	r2,4(r22)
10009554:	b52d883a 	add	r22,r22,r20
10009558:	b0800117 	ldw	r2,4(r22)
1000955c:	10800054 	ori	r2,r2,1
10009560:	b0800115 	stw	r2,4(r22)
10009564:	a809883a 	mov	r4,r21
10009568:	00103680 	call	10010368 <__malloc_unlock>
1000956c:	8025883a 	mov	r18,r16
10009570:	9005883a 	mov	r2,r18
10009574:	dfc00a17 	ldw	ra,40(sp)
10009578:	df000917 	ldw	fp,36(sp)
1000957c:	ddc00817 	ldw	r23,32(sp)
10009580:	dd800717 	ldw	r22,28(sp)
10009584:	dd400617 	ldw	r21,24(sp)
10009588:	dd000517 	ldw	r20,20(sp)
1000958c:	dcc00417 	ldw	r19,16(sp)
10009590:	dc800317 	ldw	r18,12(sp)
10009594:	dc400217 	ldw	r17,8(sp)
10009598:	dc000117 	ldw	r16,4(sp)
1000959c:	dec00b04 	addi	sp,sp,44
100095a0:	f800283a 	ret
100095a4:	01ffff04 	movi	r7,-4
100095a8:	31cc703a 	and	r6,r6,r7
100095ac:	34e9883a 	add	r20,r6,r19
100095b0:	a0ffbb16 	blt	r20,r3,100094a0 <__alt_data_end+0xf80094a0>
100095b4:	20c00317 	ldw	r3,12(r4)
100095b8:	21000217 	ldw	r4,8(r4)
100095bc:	20c00315 	stw	r3,12(r4)
100095c0:	19000215 	stw	r4,8(r3)
100095c4:	003fdd06 	br	1000953c <__alt_data_end+0xf800953c>
100095c8:	00800304 	movi	r2,12
100095cc:	a8800015 	stw	r2,0(r21)
100095d0:	0025883a 	mov	r18,zero
100095d4:	003fe606 	br	10009570 <__alt_data_end+0xf8009570>
100095d8:	1444b03a 	or	r2,r2,r17
100095dc:	b0800115 	stw	r2,4(r22)
100095e0:	b44b883a 	add	r5,r22,r17
100095e4:	18800054 	ori	r2,r3,1
100095e8:	28800115 	stw	r2,4(r5)
100095ec:	28c7883a 	add	r3,r5,r3
100095f0:	18800117 	ldw	r2,4(r3)
100095f4:	a809883a 	mov	r4,r21
100095f8:	29400204 	addi	r5,r5,8
100095fc:	10800054 	ori	r2,r2,1
10009600:	18800115 	stw	r2,4(r3)
10009604:	00070a00 	call	100070a0 <_free_r>
10009608:	003fd606 	br	10009564 <__alt_data_end+0xf8009564>
1000960c:	38c0330e 	bge	r7,r3,100096dc <_realloc_r+0x2e8>
10009610:	900b883a 	mov	r5,r18
10009614:	a809883a 	mov	r4,r21
10009618:	0000edc0 	call	10000edc <_malloc_r>
1000961c:	1025883a 	mov	r18,r2
10009620:	10001626 	beq	r2,zero,1000967c <_realloc_r+0x288>
10009624:	80bfff17 	ldw	r2,-4(r16)
10009628:	00ffff84 	movi	r3,-2
1000962c:	913ffe04 	addi	r4,r18,-8
10009630:	10c6703a 	and	r3,r2,r3
10009634:	b0c7883a 	add	r3,r22,r3
10009638:	20c09926 	beq	r4,r3,100098a0 <_realloc_r+0x4ac>
1000963c:	99bfff04 	addi	r6,r19,-4
10009640:	00800904 	movi	r2,36
10009644:	11806436 	bltu	r2,r6,100097d8 <_realloc_r+0x3e4>
10009648:	00c004c4 	movi	r3,19
1000964c:	19804036 	bltu	r3,r6,10009750 <_realloc_r+0x35c>
10009650:	9005883a 	mov	r2,r18
10009654:	8007883a 	mov	r3,r16
10009658:	19000017 	ldw	r4,0(r3)
1000965c:	11000015 	stw	r4,0(r2)
10009660:	19000117 	ldw	r4,4(r3)
10009664:	11000115 	stw	r4,4(r2)
10009668:	18c00217 	ldw	r3,8(r3)
1000966c:	10c00215 	stw	r3,8(r2)
10009670:	a809883a 	mov	r4,r21
10009674:	800b883a 	mov	r5,r16
10009678:	00070a00 	call	100070a0 <_free_r>
1000967c:	a809883a 	mov	r4,r21
10009680:	00103680 	call	10010368 <__malloc_unlock>
10009684:	003fba06 	br	10009570 <__alt_data_end+0xf8009570>
10009688:	300b883a 	mov	r5,r6
1000968c:	dfc00a17 	ldw	ra,40(sp)
10009690:	df000917 	ldw	fp,36(sp)
10009694:	ddc00817 	ldw	r23,32(sp)
10009698:	dd800717 	ldw	r22,28(sp)
1000969c:	dd400617 	ldw	r21,24(sp)
100096a0:	dd000517 	ldw	r20,20(sp)
100096a4:	dcc00417 	ldw	r19,16(sp)
100096a8:	dc800317 	ldw	r18,12(sp)
100096ac:	dc400217 	ldw	r17,8(sp)
100096b0:	dc000117 	ldw	r16,4(sp)
100096b4:	dec00b04 	addi	sp,sp,44
100096b8:	0000edc1 	jmpi	10000edc <_malloc_r>
100096bc:	29800117 	ldw	r6,4(r5)
100096c0:	013fff04 	movi	r4,-4
100096c4:	89c00404 	addi	r7,r17,16
100096c8:	310c703a 	and	r6,r6,r4
100096cc:	34c9883a 	add	r4,r6,r19
100096d0:	21c0340e 	bge	r4,r7,100097a4 <_realloc_r+0x3b0>
100096d4:	2809883a 	mov	r4,r5
100096d8:	003f7106 	br	100094a0 <__alt_data_end+0xf80094a0>
100096dc:	b8800317 	ldw	r2,12(r23)
100096e0:	b8c00217 	ldw	r3,8(r23)
100096e4:	99bfff04 	addi	r6,r19,-4
100096e8:	01000904 	movi	r4,36
100096ec:	18800315 	stw	r2,12(r3)
100096f0:	10c00215 	stw	r3,8(r2)
100096f4:	bc800204 	addi	r18,r23,8
100096f8:	21807836 	bltu	r4,r6,100098dc <_realloc_r+0x4e8>
100096fc:	008004c4 	movi	r2,19
10009700:	1180732e 	bgeu	r2,r6,100098d0 <_realloc_r+0x4dc>
10009704:	80800017 	ldw	r2,0(r16)
10009708:	b8800215 	stw	r2,8(r23)
1000970c:	80800117 	ldw	r2,4(r16)
10009710:	b8800315 	stw	r2,12(r23)
10009714:	008006c4 	movi	r2,27
10009718:	11808936 	bltu	r2,r6,10009940 <_realloc_r+0x54c>
1000971c:	b8800404 	addi	r2,r23,16
10009720:	80c00204 	addi	r3,r16,8
10009724:	19000017 	ldw	r4,0(r3)
10009728:	9021883a 	mov	r16,r18
1000972c:	3829883a 	mov	r20,r7
10009730:	11000015 	stw	r4,0(r2)
10009734:	19000117 	ldw	r4,4(r3)
10009738:	b82d883a 	mov	r22,r23
1000973c:	11000115 	stw	r4,4(r2)
10009740:	18c00217 	ldw	r3,8(r3)
10009744:	10c00215 	stw	r3,8(r2)
10009748:	b8800117 	ldw	r2,4(r23)
1000974c:	003f7b06 	br	1000953c <__alt_data_end+0xf800953c>
10009750:	80c00017 	ldw	r3,0(r16)
10009754:	90c00015 	stw	r3,0(r18)
10009758:	80c00117 	ldw	r3,4(r16)
1000975c:	90c00115 	stw	r3,4(r18)
10009760:	00c006c4 	movi	r3,27
10009764:	19804636 	bltu	r3,r6,10009880 <_realloc_r+0x48c>
10009768:	90800204 	addi	r2,r18,8
1000976c:	80c00204 	addi	r3,r16,8
10009770:	003fb906 	br	10009658 <__alt_data_end+0xf8009658>
10009774:	9005883a 	mov	r2,r18
10009778:	8007883a 	mov	r3,r16
1000977c:	19000017 	ldw	r4,0(r3)
10009780:	9021883a 	mov	r16,r18
10009784:	b82d883a 	mov	r22,r23
10009788:	11000015 	stw	r4,0(r2)
1000978c:	19000117 	ldw	r4,4(r3)
10009790:	11000115 	stw	r4,4(r2)
10009794:	18c00217 	ldw	r3,8(r3)
10009798:	10c00215 	stw	r3,8(r2)
1000979c:	b8800117 	ldw	r2,4(r23)
100097a0:	003f6606 	br	1000953c <__alt_data_end+0xf800953c>
100097a4:	2445c83a 	sub	r2,r4,r17
100097a8:	b46d883a 	add	r22,r22,r17
100097ac:	10800054 	ori	r2,r2,1
100097b0:	b0800115 	stw	r2,4(r22)
100097b4:	80bfff17 	ldw	r2,-4(r16)
100097b8:	a809883a 	mov	r4,r21
100097bc:	e5800215 	stw	r22,8(fp)
100097c0:	1080004c 	andi	r2,r2,1
100097c4:	88a2b03a 	or	r17,r17,r2
100097c8:	847fff15 	stw	r17,-4(r16)
100097cc:	00103680 	call	10010368 <__malloc_unlock>
100097d0:	8025883a 	mov	r18,r16
100097d4:	003f6606 	br	10009570 <__alt_data_end+0xf8009570>
100097d8:	9009883a 	mov	r4,r18
100097dc:	800b883a 	mov	r5,r16
100097e0:	0007f900 	call	10007f90 <memmove>
100097e4:	003fa206 	br	10009670 <__alt_data_end+0xf8009670>
100097e8:	88800404 	addi	r2,r17,16
100097ec:	a0bf8716 	blt	r20,r2,1000960c <__alt_data_end+0xf800960c>
100097f0:	b8800317 	ldw	r2,12(r23)
100097f4:	b8c00217 	ldw	r3,8(r23)
100097f8:	99bfff04 	addi	r6,r19,-4
100097fc:	01000904 	movi	r4,36
10009800:	18800315 	stw	r2,12(r3)
10009804:	10c00215 	stw	r3,8(r2)
10009808:	bc800204 	addi	r18,r23,8
1000980c:	21806536 	bltu	r4,r6,100099a4 <_realloc_r+0x5b0>
10009810:	008004c4 	movi	r2,19
10009814:	1180592e 	bgeu	r2,r6,1000997c <_realloc_r+0x588>
10009818:	80800017 	ldw	r2,0(r16)
1000981c:	b8800215 	stw	r2,8(r23)
10009820:	80800117 	ldw	r2,4(r16)
10009824:	b8800315 	stw	r2,12(r23)
10009828:	008006c4 	movi	r2,27
1000982c:	11806136 	bltu	r2,r6,100099b4 <_realloc_r+0x5c0>
10009830:	b8800404 	addi	r2,r23,16
10009834:	80c00204 	addi	r3,r16,8
10009838:	19000017 	ldw	r4,0(r3)
1000983c:	11000015 	stw	r4,0(r2)
10009840:	19000117 	ldw	r4,4(r3)
10009844:	11000115 	stw	r4,4(r2)
10009848:	18c00217 	ldw	r3,8(r3)
1000984c:	10c00215 	stw	r3,8(r2)
10009850:	a447c83a 	sub	r3,r20,r17
10009854:	bc45883a 	add	r2,r23,r17
10009858:	18c00054 	ori	r3,r3,1
1000985c:	10c00115 	stw	r3,4(r2)
10009860:	b8c00117 	ldw	r3,4(r23)
10009864:	e0800215 	stw	r2,8(fp)
10009868:	a809883a 	mov	r4,r21
1000986c:	1880004c 	andi	r2,r3,1
10009870:	88a2b03a 	or	r17,r17,r2
10009874:	bc400115 	stw	r17,4(r23)
10009878:	00103680 	call	10010368 <__malloc_unlock>
1000987c:	003f3c06 	br	10009570 <__alt_data_end+0xf8009570>
10009880:	80c00217 	ldw	r3,8(r16)
10009884:	90c00215 	stw	r3,8(r18)
10009888:	80c00317 	ldw	r3,12(r16)
1000988c:	90c00315 	stw	r3,12(r18)
10009890:	30802426 	beq	r6,r2,10009924 <_realloc_r+0x530>
10009894:	90800404 	addi	r2,r18,16
10009898:	80c00404 	addi	r3,r16,16
1000989c:	003f6e06 	br	10009658 <__alt_data_end+0xf8009658>
100098a0:	953fff17 	ldw	r20,-4(r18)
100098a4:	00ffff04 	movi	r3,-4
100098a8:	a0e8703a 	and	r20,r20,r3
100098ac:	a4e9883a 	add	r20,r20,r19
100098b0:	003f2206 	br	1000953c <__alt_data_end+0xf800953c>
100098b4:	800b883a 	mov	r5,r16
100098b8:	9009883a 	mov	r4,r18
100098bc:	0007f900 	call	10007f90 <memmove>
100098c0:	9021883a 	mov	r16,r18
100098c4:	b8800117 	ldw	r2,4(r23)
100098c8:	b82d883a 	mov	r22,r23
100098cc:	003f1b06 	br	1000953c <__alt_data_end+0xf800953c>
100098d0:	9005883a 	mov	r2,r18
100098d4:	8007883a 	mov	r3,r16
100098d8:	003f9206 	br	10009724 <__alt_data_end+0xf8009724>
100098dc:	800b883a 	mov	r5,r16
100098e0:	9009883a 	mov	r4,r18
100098e4:	d9c00015 	stw	r7,0(sp)
100098e8:	0007f900 	call	10007f90 <memmove>
100098ec:	d9c00017 	ldw	r7,0(sp)
100098f0:	9021883a 	mov	r16,r18
100098f4:	b8800117 	ldw	r2,4(r23)
100098f8:	3829883a 	mov	r20,r7
100098fc:	b82d883a 	mov	r22,r23
10009900:	003f0e06 	br	1000953c <__alt_data_end+0xf800953c>
10009904:	80800217 	ldw	r2,8(r16)
10009908:	b8800415 	stw	r2,16(r23)
1000990c:	80800317 	ldw	r2,12(r16)
10009910:	b8800515 	stw	r2,20(r23)
10009914:	31001226 	beq	r6,r4,10009960 <_realloc_r+0x56c>
10009918:	b8800604 	addi	r2,r23,24
1000991c:	80c00404 	addi	r3,r16,16
10009920:	003f9606 	br	1000977c <__alt_data_end+0xf800977c>
10009924:	81000417 	ldw	r4,16(r16)
10009928:	90800604 	addi	r2,r18,24
1000992c:	80c00604 	addi	r3,r16,24
10009930:	91000415 	stw	r4,16(r18)
10009934:	81000517 	ldw	r4,20(r16)
10009938:	91000515 	stw	r4,20(r18)
1000993c:	003f4606 	br	10009658 <__alt_data_end+0xf8009658>
10009940:	80800217 	ldw	r2,8(r16)
10009944:	b8800415 	stw	r2,16(r23)
10009948:	80800317 	ldw	r2,12(r16)
1000994c:	b8800515 	stw	r2,20(r23)
10009950:	31000d26 	beq	r6,r4,10009988 <_realloc_r+0x594>
10009954:	b8800604 	addi	r2,r23,24
10009958:	80c00404 	addi	r3,r16,16
1000995c:	003f7106 	br	10009724 <__alt_data_end+0xf8009724>
10009960:	81000417 	ldw	r4,16(r16)
10009964:	b8800804 	addi	r2,r23,32
10009968:	80c00604 	addi	r3,r16,24
1000996c:	b9000615 	stw	r4,24(r23)
10009970:	81000517 	ldw	r4,20(r16)
10009974:	b9000715 	stw	r4,28(r23)
10009978:	003f8006 	br	1000977c <__alt_data_end+0xf800977c>
1000997c:	9005883a 	mov	r2,r18
10009980:	8007883a 	mov	r3,r16
10009984:	003fac06 	br	10009838 <__alt_data_end+0xf8009838>
10009988:	81000417 	ldw	r4,16(r16)
1000998c:	b8800804 	addi	r2,r23,32
10009990:	80c00604 	addi	r3,r16,24
10009994:	b9000615 	stw	r4,24(r23)
10009998:	81000517 	ldw	r4,20(r16)
1000999c:	b9000715 	stw	r4,28(r23)
100099a0:	003f6006 	br	10009724 <__alt_data_end+0xf8009724>
100099a4:	9009883a 	mov	r4,r18
100099a8:	800b883a 	mov	r5,r16
100099ac:	0007f900 	call	10007f90 <memmove>
100099b0:	003fa706 	br	10009850 <__alt_data_end+0xf8009850>
100099b4:	80800217 	ldw	r2,8(r16)
100099b8:	b8800415 	stw	r2,16(r23)
100099bc:	80800317 	ldw	r2,12(r16)
100099c0:	b8800515 	stw	r2,20(r23)
100099c4:	31000326 	beq	r6,r4,100099d4 <_realloc_r+0x5e0>
100099c8:	b8800604 	addi	r2,r23,24
100099cc:	80c00404 	addi	r3,r16,16
100099d0:	003f9906 	br	10009838 <__alt_data_end+0xf8009838>
100099d4:	81000417 	ldw	r4,16(r16)
100099d8:	b8800804 	addi	r2,r23,32
100099dc:	80c00604 	addi	r3,r16,24
100099e0:	b9000615 	stw	r4,24(r23)
100099e4:	81000517 	ldw	r4,20(r16)
100099e8:	b9000715 	stw	r4,28(r23)
100099ec:	003f9206 	br	10009838 <__alt_data_end+0xf8009838>

100099f0 <lflush>:
100099f0:	20c0030b 	ldhu	r3,12(r4)
100099f4:	00800244 	movi	r2,9
100099f8:	18c0024c 	andi	r3,r3,9
100099fc:	18800226 	beq	r3,r2,10009a08 <lflush+0x18>
10009a00:	0005883a 	mov	r2,zero
10009a04:	f800283a 	ret
10009a08:	00069cc1 	jmpi	100069cc <fflush>

10009a0c <__srefill_r>:
10009a0c:	defffd04 	addi	sp,sp,-12
10009a10:	dc400115 	stw	r17,4(sp)
10009a14:	dc000015 	stw	r16,0(sp)
10009a18:	dfc00215 	stw	ra,8(sp)
10009a1c:	2023883a 	mov	r17,r4
10009a20:	2821883a 	mov	r16,r5
10009a24:	20000226 	beq	r4,zero,10009a30 <__srefill_r+0x24>
10009a28:	20800e17 	ldw	r2,56(r4)
10009a2c:	10004426 	beq	r2,zero,10009b40 <__srefill_r+0x134>
10009a30:	8080030b 	ldhu	r2,12(r16)
10009a34:	80000115 	stw	zero,4(r16)
10009a38:	10c0080c 	andi	r3,r2,32
10009a3c:	18ffffcc 	andi	r3,r3,65535
10009a40:	18e0001c 	xori	r3,r3,32768
10009a44:	18e00004 	addi	r3,r3,-32768
10009a48:	1800371e 	bne	r3,zero,10009b28 <__srefill_r+0x11c>
10009a4c:	10c0010c 	andi	r3,r2,4
10009a50:	18ffffcc 	andi	r3,r3,65535
10009a54:	18e0001c 	xori	r3,r3,32768
10009a58:	18e00004 	addi	r3,r3,-32768
10009a5c:	18002226 	beq	r3,zero,10009ae8 <__srefill_r+0xdc>
10009a60:	81400c17 	ldw	r5,48(r16)
10009a64:	28000826 	beq	r5,zero,10009a88 <__srefill_r+0x7c>
10009a68:	80801004 	addi	r2,r16,64
10009a6c:	28800226 	beq	r5,r2,10009a78 <__srefill_r+0x6c>
10009a70:	8809883a 	mov	r4,r17
10009a74:	00070a00 	call	100070a0 <_free_r>
10009a78:	80800f17 	ldw	r2,60(r16)
10009a7c:	80000c15 	stw	zero,48(r16)
10009a80:	80800115 	stw	r2,4(r16)
10009a84:	1000401e 	bne	r2,zero,10009b88 <__srefill_r+0x17c>
10009a88:	80800417 	ldw	r2,16(r16)
10009a8c:	10005026 	beq	r2,zero,10009bd0 <__srefill_r+0x1c4>
10009a90:	8080030b 	ldhu	r2,12(r16)
10009a94:	108000cc 	andi	r2,r2,3
10009a98:	10002b1e 	bne	r2,zero,10009b48 <__srefill_r+0x13c>
10009a9c:	81800417 	ldw	r6,16(r16)
10009aa0:	80800817 	ldw	r2,32(r16)
10009aa4:	81400717 	ldw	r5,28(r16)
10009aa8:	81c00517 	ldw	r7,20(r16)
10009aac:	8809883a 	mov	r4,r17
10009ab0:	81800015 	stw	r6,0(r16)
10009ab4:	103ee83a 	callr	r2
10009ab8:	8100030b 	ldhu	r4,12(r16)
10009abc:	00f7ffc4 	movi	r3,-8193
10009ac0:	80800115 	stw	r2,4(r16)
10009ac4:	20c6703a 	and	r3,r4,r3
10009ac8:	80c0030d 	sth	r3,12(r16)
10009acc:	0080130e 	bge	zero,r2,10009b1c <__srefill_r+0x110>
10009ad0:	0005883a 	mov	r2,zero
10009ad4:	dfc00217 	ldw	ra,8(sp)
10009ad8:	dc400117 	ldw	r17,4(sp)
10009adc:	dc000017 	ldw	r16,0(sp)
10009ae0:	dec00304 	addi	sp,sp,12
10009ae4:	f800283a 	ret
10009ae8:	10c0040c 	andi	r3,r2,16
10009aec:	18ffffcc 	andi	r3,r3,65535
10009af0:	18e0001c 	xori	r3,r3,32768
10009af4:	18e00004 	addi	r3,r3,-32768
10009af8:	18003926 	beq	r3,zero,10009be0 <__srefill_r+0x1d4>
10009afc:	10c0020c 	andi	r3,r2,8
10009b00:	18ffffcc 	andi	r3,r3,65535
10009b04:	18e0001c 	xori	r3,r3,32768
10009b08:	18e00004 	addi	r3,r3,-32768
10009b0c:	1800261e 	bne	r3,zero,10009ba8 <__srefill_r+0x19c>
10009b10:	10800114 	ori	r2,r2,4
10009b14:	8080030d 	sth	r2,12(r16)
10009b18:	003fdb06 	br	10009a88 <__alt_data_end+0xf8009a88>
10009b1c:	1000111e 	bne	r2,zero,10009b64 <__srefill_r+0x158>
10009b20:	18c00814 	ori	r3,r3,32
10009b24:	80c0030d 	sth	r3,12(r16)
10009b28:	00bfffc4 	movi	r2,-1
10009b2c:	dfc00217 	ldw	ra,8(sp)
10009b30:	dc400117 	ldw	r17,4(sp)
10009b34:	dc000017 	ldw	r16,0(sp)
10009b38:	dec00304 	addi	sp,sp,12
10009b3c:	f800283a 	ret
10009b40:	0006aa00 	call	10006aa0 <__sinit>
10009b44:	003fba06 	br	10009a30 <__alt_data_end+0xf8009a30>
10009b48:	00840074 	movhi	r2,4097
10009b4c:	10917e04 	addi	r2,r2,17912
10009b50:	11000017 	ldw	r4,0(r2)
10009b54:	01440074 	movhi	r5,4097
10009b58:	29667c04 	addi	r5,r5,-26128
10009b5c:	00078540 	call	10007854 <_fwalk>
10009b60:	003fce06 	br	10009a9c <__alt_data_end+0xf8009a9c>
10009b64:	18c01014 	ori	r3,r3,64
10009b68:	00bfffc4 	movi	r2,-1
10009b6c:	80000115 	stw	zero,4(r16)
10009b70:	80c0030d 	sth	r3,12(r16)
10009b74:	dfc00217 	ldw	ra,8(sp)
10009b78:	dc400117 	ldw	r17,4(sp)
10009b7c:	dc000017 	ldw	r16,0(sp)
10009b80:	dec00304 	addi	sp,sp,12
10009b84:	f800283a 	ret
10009b88:	80c00e17 	ldw	r3,56(r16)
10009b8c:	0005883a 	mov	r2,zero
10009b90:	80c00015 	stw	r3,0(r16)
10009b94:	dfc00217 	ldw	ra,8(sp)
10009b98:	dc400117 	ldw	r17,4(sp)
10009b9c:	dc000017 	ldw	r16,0(sp)
10009ba0:	dec00304 	addi	sp,sp,12
10009ba4:	f800283a 	ret
10009ba8:	8809883a 	mov	r4,r17
10009bac:	800b883a 	mov	r5,r16
10009bb0:	00067e40 	call	100067e4 <_fflush_r>
10009bb4:	103fdc1e 	bne	r2,zero,10009b28 <__alt_data_end+0xf8009b28>
10009bb8:	8080030b 	ldhu	r2,12(r16)
10009bbc:	00fffdc4 	movi	r3,-9
10009bc0:	80000215 	stw	zero,8(r16)
10009bc4:	1884703a 	and	r2,r3,r2
10009bc8:	80000615 	stw	zero,24(r16)
10009bcc:	003fd006 	br	10009b10 <__alt_data_end+0xf8009b10>
10009bd0:	8809883a 	mov	r4,r17
10009bd4:	800b883a 	mov	r5,r16
10009bd8:	0007ac80 	call	10007ac8 <__smakebuf_r>
10009bdc:	003fac06 	br	10009a90 <__alt_data_end+0xf8009a90>
10009be0:	00c00244 	movi	r3,9
10009be4:	10801014 	ori	r2,r2,64
10009be8:	88c00015 	stw	r3,0(r17)
10009bec:	8080030d 	sth	r2,12(r16)
10009bf0:	00bfffc4 	movi	r2,-1
10009bf4:	003fb706 	br	10009ad4 <__alt_data_end+0xf8009ad4>

10009bf8 <__isinfd>:
10009bf8:	0105c83a 	sub	r2,zero,r4
10009bfc:	1108b03a 	or	r4,r2,r4
10009c00:	2004d7fa 	srli	r2,r4,31
10009c04:	00e00034 	movhi	r3,32768
10009c08:	18ffffc4 	addi	r3,r3,-1
10009c0c:	28ca703a 	and	r5,r5,r3
10009c10:	1144b03a 	or	r2,r2,r5
10009c14:	00dffc34 	movhi	r3,32752
10009c18:	1885c83a 	sub	r2,r3,r2
10009c1c:	0087c83a 	sub	r3,zero,r2
10009c20:	1884b03a 	or	r2,r3,r2
10009c24:	1005d7fa 	srai	r2,r2,31
10009c28:	10800044 	addi	r2,r2,1
10009c2c:	f800283a 	ret

10009c30 <__isnand>:
10009c30:	0105c83a 	sub	r2,zero,r4
10009c34:	1108b03a 	or	r4,r2,r4
10009c38:	2004d7fa 	srli	r2,r4,31
10009c3c:	00e00034 	movhi	r3,32768
10009c40:	18ffffc4 	addi	r3,r3,-1
10009c44:	28ca703a 	and	r5,r5,r3
10009c48:	1144b03a 	or	r2,r2,r5
10009c4c:	00dffc34 	movhi	r3,32752
10009c50:	1885c83a 	sub	r2,r3,r2
10009c54:	1004d7fa 	srli	r2,r2,31
10009c58:	f800283a 	ret

10009c5c <__sccl>:
10009c5c:	2a400003 	ldbu	r9,0(r5)
10009c60:	00801784 	movi	r2,94
10009c64:	48802626 	beq	r9,r2,10009d00 <__sccl+0xa4>
10009c68:	28800044 	addi	r2,r5,1
10009c6c:	0011883a 	mov	r8,zero
10009c70:	000b883a 	mov	r5,zero
10009c74:	0007883a 	mov	r3,zero
10009c78:	01c04004 	movi	r7,256
10009c7c:	20cd883a 	add	r6,r4,r3
10009c80:	32000005 	stb	r8,0(r6)
10009c84:	18c00044 	addi	r3,r3,1
10009c88:	19fffc1e 	bne	r3,r7,10009c7c <__alt_data_end+0xf8009c7c>
10009c8c:	48000f26 	beq	r9,zero,10009ccc <__sccl+0x70>
10009c90:	01800044 	movi	r6,1
10009c94:	314dc83a 	sub	r6,r6,r5
10009c98:	02001744 	movi	r8,93
10009c9c:	01400b44 	movi	r5,45
10009ca0:	2247883a 	add	r3,r4,r9
10009ca4:	19800005 	stb	r6,0(r3)
10009ca8:	10c00003 	ldbu	r3,0(r2)
10009cac:	11c00044 	addi	r7,r2,1
10009cb0:	19400a26 	beq	r3,r5,10009cdc <__sccl+0x80>
10009cb4:	1a000726 	beq	r3,r8,10009cd4 <__sccl+0x78>
10009cb8:	1800011e 	bne	r3,zero,10009cc0 <__sccl+0x64>
10009cbc:	f800283a 	ret
10009cc0:	1813883a 	mov	r9,r3
10009cc4:	3805883a 	mov	r2,r7
10009cc8:	003ff506 	br	10009ca0 <__alt_data_end+0xf8009ca0>
10009ccc:	10bfffc4 	addi	r2,r2,-1
10009cd0:	f800283a 	ret
10009cd4:	3805883a 	mov	r2,r7
10009cd8:	f800283a 	ret
10009cdc:	10c00043 	ldbu	r3,1(r2)
10009ce0:	1a000c26 	beq	r3,r8,10009d14 <__sccl+0xb8>
10009ce4:	1a400b16 	blt	r3,r9,10009d14 <__sccl+0xb8>
10009ce8:	10800084 	addi	r2,r2,2
10009cec:	4a400044 	addi	r9,r9,1
10009cf0:	224f883a 	add	r7,r4,r9
10009cf4:	39800005 	stb	r6,0(r7)
10009cf8:	48fffc16 	blt	r9,r3,10009cec <__alt_data_end+0xf8009cec>
10009cfc:	003fea06 	br	10009ca8 <__alt_data_end+0xf8009ca8>
10009d00:	2a400043 	ldbu	r9,1(r5)
10009d04:	28800084 	addi	r2,r5,2
10009d08:	02000044 	movi	r8,1
10009d0c:	01400044 	movi	r5,1
10009d10:	003fd806 	br	10009c74 <__alt_data_end+0xf8009c74>
10009d14:	2813883a 	mov	r9,r5
10009d18:	3805883a 	mov	r2,r7
10009d1c:	003fe006 	br	10009ca0 <__alt_data_end+0xf8009ca0>

10009d20 <nanf>:
10009d20:	009ff034 	movhi	r2,32704
10009d24:	f800283a 	ret

10009d28 <_sprintf_r>:
10009d28:	deffe704 	addi	sp,sp,-100
10009d2c:	2807883a 	mov	r3,r5
10009d30:	dfc01715 	stw	ra,92(sp)
10009d34:	d9c01815 	stw	r7,96(sp)
10009d38:	00a00034 	movhi	r2,32768
10009d3c:	10bfffc4 	addi	r2,r2,-1
10009d40:	02008204 	movi	r8,520
10009d44:	d8800215 	stw	r2,8(sp)
10009d48:	d8800515 	stw	r2,20(sp)
10009d4c:	d80b883a 	mov	r5,sp
10009d50:	d9c01804 	addi	r7,sp,96
10009d54:	00bfffc4 	movi	r2,-1
10009d58:	d8c00015 	stw	r3,0(sp)
10009d5c:	d8c00415 	stw	r3,16(sp)
10009d60:	da00030d 	sth	r8,12(sp)
10009d64:	d880038d 	sth	r2,14(sp)
10009d68:	00017f00 	call	100017f0 <___vfprintf_internal_r>
10009d6c:	d8c00017 	ldw	r3,0(sp)
10009d70:	18000005 	stb	zero,0(r3)
10009d74:	dfc01717 	ldw	ra,92(sp)
10009d78:	dec01904 	addi	sp,sp,100
10009d7c:	f800283a 	ret

10009d80 <sprintf>:
10009d80:	deffe604 	addi	sp,sp,-104
10009d84:	2007883a 	mov	r3,r4
10009d88:	dfc01715 	stw	ra,92(sp)
10009d8c:	d9801815 	stw	r6,96(sp)
10009d90:	d9c01915 	stw	r7,100(sp)
10009d94:	00840074 	movhi	r2,4097
10009d98:	10917f04 	addi	r2,r2,17916
10009d9c:	11000017 	ldw	r4,0(r2)
10009da0:	00a00034 	movhi	r2,32768
10009da4:	10bfffc4 	addi	r2,r2,-1
10009da8:	280d883a 	mov	r6,r5
10009dac:	02008204 	movi	r8,520
10009db0:	d8800215 	stw	r2,8(sp)
10009db4:	d8800515 	stw	r2,20(sp)
10009db8:	d80b883a 	mov	r5,sp
10009dbc:	d9c01804 	addi	r7,sp,96
10009dc0:	00bfffc4 	movi	r2,-1
10009dc4:	d8c00015 	stw	r3,0(sp)
10009dc8:	d8c00415 	stw	r3,16(sp)
10009dcc:	da00030d 	sth	r8,12(sp)
10009dd0:	d880038d 	sth	r2,14(sp)
10009dd4:	00017f00 	call	100017f0 <___vfprintf_internal_r>
10009dd8:	d8c00017 	ldw	r3,0(sp)
10009ddc:	18000005 	stb	zero,0(r3)
10009de0:	dfc01717 	ldw	ra,92(sp)
10009de4:	dec01a04 	addi	sp,sp,104
10009de8:	f800283a 	ret

10009dec <__sread>:
10009dec:	defffe04 	addi	sp,sp,-8
10009df0:	dc000015 	stw	r16,0(sp)
10009df4:	2821883a 	mov	r16,r5
10009df8:	2940038f 	ldh	r5,14(r5)
10009dfc:	dfc00115 	stw	ra,4(sp)
10009e00:	000d6bc0 	call	1000d6bc <_read_r>
10009e04:	10000716 	blt	r2,zero,10009e24 <__sread+0x38>
10009e08:	80c01417 	ldw	r3,80(r16)
10009e0c:	1887883a 	add	r3,r3,r2
10009e10:	80c01415 	stw	r3,80(r16)
10009e14:	dfc00117 	ldw	ra,4(sp)
10009e18:	dc000017 	ldw	r16,0(sp)
10009e1c:	dec00204 	addi	sp,sp,8
10009e20:	f800283a 	ret
10009e24:	80c0030b 	ldhu	r3,12(r16)
10009e28:	18fbffcc 	andi	r3,r3,61439
10009e2c:	80c0030d 	sth	r3,12(r16)
10009e30:	dfc00117 	ldw	ra,4(sp)
10009e34:	dc000017 	ldw	r16,0(sp)
10009e38:	dec00204 	addi	sp,sp,8
10009e3c:	f800283a 	ret

10009e40 <__swrite>:
10009e40:	2880030b 	ldhu	r2,12(r5)
10009e44:	defffb04 	addi	sp,sp,-20
10009e48:	dcc00315 	stw	r19,12(sp)
10009e4c:	10c0400c 	andi	r3,r2,256
10009e50:	18ffffcc 	andi	r3,r3,65535
10009e54:	18e0001c 	xori	r3,r3,32768
10009e58:	dc800215 	stw	r18,8(sp)
10009e5c:	dc400115 	stw	r17,4(sp)
10009e60:	dc000015 	stw	r16,0(sp)
10009e64:	dfc00415 	stw	ra,16(sp)
10009e68:	18e00004 	addi	r3,r3,-32768
10009e6c:	2821883a 	mov	r16,r5
10009e70:	2027883a 	mov	r19,r4
10009e74:	3025883a 	mov	r18,r6
10009e78:	3823883a 	mov	r17,r7
10009e7c:	18000526 	beq	r3,zero,10009e94 <__swrite+0x54>
10009e80:	2940038f 	ldh	r5,14(r5)
10009e84:	000d883a 	mov	r6,zero
10009e88:	01c00084 	movi	r7,2
10009e8c:	000d6500 	call	1000d650 <_lseek_r>
10009e90:	8080030b 	ldhu	r2,12(r16)
10009e94:	8140038f 	ldh	r5,14(r16)
10009e98:	10bbffcc 	andi	r2,r2,61439
10009e9c:	9809883a 	mov	r4,r19
10009ea0:	900d883a 	mov	r6,r18
10009ea4:	880f883a 	mov	r7,r17
10009ea8:	8080030d 	sth	r2,12(r16)
10009eac:	dfc00417 	ldw	ra,16(sp)
10009eb0:	dcc00317 	ldw	r19,12(sp)
10009eb4:	dc800217 	ldw	r18,8(sp)
10009eb8:	dc400117 	ldw	r17,4(sp)
10009ebc:	dc000017 	ldw	r16,0(sp)
10009ec0:	dec00504 	addi	sp,sp,20
10009ec4:	000c6f41 	jmpi	1000c6f4 <_write_r>

10009ec8 <__sseek>:
10009ec8:	defffe04 	addi	sp,sp,-8
10009ecc:	dc000015 	stw	r16,0(sp)
10009ed0:	2821883a 	mov	r16,r5
10009ed4:	2940038f 	ldh	r5,14(r5)
10009ed8:	dfc00115 	stw	ra,4(sp)
10009edc:	000d6500 	call	1000d650 <_lseek_r>
10009ee0:	00ffffc4 	movi	r3,-1
10009ee4:	10c00826 	beq	r2,r3,10009f08 <__sseek+0x40>
10009ee8:	80c0030b 	ldhu	r3,12(r16)
10009eec:	80801415 	stw	r2,80(r16)
10009ef0:	18c40014 	ori	r3,r3,4096
10009ef4:	80c0030d 	sth	r3,12(r16)
10009ef8:	dfc00117 	ldw	ra,4(sp)
10009efc:	dc000017 	ldw	r16,0(sp)
10009f00:	dec00204 	addi	sp,sp,8
10009f04:	f800283a 	ret
10009f08:	80c0030b 	ldhu	r3,12(r16)
10009f0c:	18fbffcc 	andi	r3,r3,61439
10009f10:	80c0030d 	sth	r3,12(r16)
10009f14:	dfc00117 	ldw	ra,4(sp)
10009f18:	dc000017 	ldw	r16,0(sp)
10009f1c:	dec00204 	addi	sp,sp,8
10009f20:	f800283a 	ret

10009f24 <__sclose>:
10009f24:	2940038f 	ldh	r5,14(r5)
10009f28:	000c82c1 	jmpi	1000c82c <_close_r>

10009f2c <strcmp>:
10009f2c:	2904b03a 	or	r2,r5,r4
10009f30:	108000cc 	andi	r2,r2,3
10009f34:	1000171e 	bne	r2,zero,10009f94 <strcmp+0x68>
10009f38:	20800017 	ldw	r2,0(r4)
10009f3c:	28c00017 	ldw	r3,0(r5)
10009f40:	10c0141e 	bne	r2,r3,10009f94 <strcmp+0x68>
10009f44:	027fbff4 	movhi	r9,65279
10009f48:	4a7fbfc4 	addi	r9,r9,-257
10009f4c:	1247883a 	add	r3,r2,r9
10009f50:	0084303a 	nor	r2,zero,r2
10009f54:	1884703a 	and	r2,r3,r2
10009f58:	02202074 	movhi	r8,32897
10009f5c:	42202004 	addi	r8,r8,-32640
10009f60:	1204703a 	and	r2,r2,r8
10009f64:	10000226 	beq	r2,zero,10009f70 <strcmp+0x44>
10009f68:	00001706 	br	10009fc8 <strcmp+0x9c>
10009f6c:	3000161e 	bne	r6,zero,10009fc8 <strcmp+0x9c>
10009f70:	21000104 	addi	r4,r4,4
10009f74:	20800017 	ldw	r2,0(r4)
10009f78:	29400104 	addi	r5,r5,4
10009f7c:	28c00017 	ldw	r3,0(r5)
10009f80:	124f883a 	add	r7,r2,r9
10009f84:	008c303a 	nor	r6,zero,r2
10009f88:	398c703a 	and	r6,r7,r6
10009f8c:	320c703a 	and	r6,r6,r8
10009f90:	10fff626 	beq	r2,r3,10009f6c <__alt_data_end+0xf8009f6c>
10009f94:	20800007 	ldb	r2,0(r4)
10009f98:	1000051e 	bne	r2,zero,10009fb0 <strcmp+0x84>
10009f9c:	00000606 	br	10009fb8 <strcmp+0x8c>
10009fa0:	21000044 	addi	r4,r4,1
10009fa4:	20800007 	ldb	r2,0(r4)
10009fa8:	29400044 	addi	r5,r5,1
10009fac:	10000226 	beq	r2,zero,10009fb8 <strcmp+0x8c>
10009fb0:	28c00007 	ldb	r3,0(r5)
10009fb4:	10fffa26 	beq	r2,r3,10009fa0 <__alt_data_end+0xf8009fa0>
10009fb8:	20c00003 	ldbu	r3,0(r4)
10009fbc:	28800003 	ldbu	r2,0(r5)
10009fc0:	1885c83a 	sub	r2,r3,r2
10009fc4:	f800283a 	ret
10009fc8:	0005883a 	mov	r2,zero
10009fcc:	f800283a 	ret

10009fd0 <strlen>:
10009fd0:	208000cc 	andi	r2,r4,3
10009fd4:	10001f1e 	bne	r2,zero,1000a054 <strlen+0x84>
10009fd8:	20800017 	ldw	r2,0(r4)
10009fdc:	01ffbff4 	movhi	r7,65279
10009fe0:	39ffbfc4 	addi	r7,r7,-257
10009fe4:	01a02074 	movhi	r6,32897
10009fe8:	31a02004 	addi	r6,r6,-32640
10009fec:	11c7883a 	add	r3,r2,r7
10009ff0:	0084303a 	nor	r2,zero,r2
10009ff4:	1886703a 	and	r3,r3,r2
10009ff8:	1986703a 	and	r3,r3,r6
10009ffc:	2005883a 	mov	r2,r4
1000a000:	1800101e 	bne	r3,zero,1000a044 <strlen+0x74>
1000a004:	10800104 	addi	r2,r2,4
1000a008:	10c00017 	ldw	r3,0(r2)
1000a00c:	19cb883a 	add	r5,r3,r7
1000a010:	00c6303a 	nor	r3,zero,r3
1000a014:	28c6703a 	and	r3,r5,r3
1000a018:	1986703a 	and	r3,r3,r6
1000a01c:	1800091e 	bne	r3,zero,1000a044 <strlen+0x74>
1000a020:	10800104 	addi	r2,r2,4
1000a024:	10c00017 	ldw	r3,0(r2)
1000a028:	19cb883a 	add	r5,r3,r7
1000a02c:	00c6303a 	nor	r3,zero,r3
1000a030:	28c6703a 	and	r3,r5,r3
1000a034:	1986703a 	and	r3,r3,r6
1000a038:	183ff226 	beq	r3,zero,1000a004 <__alt_data_end+0xf800a004>
1000a03c:	00000106 	br	1000a044 <strlen+0x74>
1000a040:	10800044 	addi	r2,r2,1
1000a044:	10c00007 	ldb	r3,0(r2)
1000a048:	183ffd1e 	bne	r3,zero,1000a040 <__alt_data_end+0xf800a040>
1000a04c:	1105c83a 	sub	r2,r2,r4
1000a050:	f800283a 	ret
1000a054:	2005883a 	mov	r2,r4
1000a058:	003ffa06 	br	1000a044 <__alt_data_end+0xf800a044>

1000a05c <_strtod_r>:
1000a05c:	deffdc04 	addi	sp,sp,-144
1000a060:	dc001a15 	stw	r16,104(sp)
1000a064:	d9400e15 	stw	r5,56(sp)
1000a068:	d9801115 	stw	r6,68(sp)
1000a06c:	d9400c15 	stw	r5,48(sp)
1000a070:	2805883a 	mov	r2,r5
1000a074:	dfc02315 	stw	ra,140(sp)
1000a078:	df002215 	stw	fp,136(sp)
1000a07c:	ddc02115 	stw	r23,132(sp)
1000a080:	dd802015 	stw	r22,128(sp)
1000a084:	dd401f15 	stw	r21,124(sp)
1000a088:	dd001e15 	stw	r20,120(sp)
1000a08c:	dcc01d15 	stw	r19,116(sp)
1000a090:	dc801c15 	stw	r18,112(sp)
1000a094:	dc401b15 	stw	r17,108(sp)
1000a098:	2021883a 	mov	r16,r4
1000a09c:	d8000615 	stw	zero,24(sp)
1000a0a0:	d8000715 	stw	zero,28(sp)
1000a0a4:	01400b44 	movi	r5,45
1000a0a8:	01840074 	movhi	r6,4097
1000a0ac:	31a88004 	addi	r6,r6,-24064
1000a0b0:	10c00003 	ldbu	r3,0(r2)
1000a0b4:	19003fcc 	andi	r4,r3,255
1000a0b8:	29004c2e 	bgeu	r5,r4,1000a1ec <_strtod_r+0x190>
1000a0bc:	1c803fcc 	andi	r18,r3,255
1000a0c0:	9480201c 	xori	r18,r18,128
1000a0c4:	102d883a 	mov	r22,r2
1000a0c8:	d8001215 	stw	zero,72(sp)
1000a0cc:	94bfe004 	addi	r18,r18,-128
1000a0d0:	00800c04 	movi	r2,48
1000a0d4:	9080f526 	beq	r18,r2,1000a4ac <_strtod_r+0x450>
1000a0d8:	d8001315 	stw	zero,76(sp)
1000a0dc:	04c00bc4 	movi	r19,47
1000a0e0:	900f883a 	mov	r7,r18
1000a0e4:	9c84770e 	bge	r19,r18,1000b2c4 <_strtod_r+0x1268>
1000a0e8:	05c00e44 	movi	r23,57
1000a0ec:	bc847a16 	blt	r23,r18,1000b2d8 <_strtod_r+0x127c>
1000a0f0:	0039883a 	mov	fp,zero
1000a0f4:	b4400044 	addi	r17,r22,1
1000a0f8:	dd801015 	stw	r22,64(sp)
1000a0fc:	d8000f15 	stw	zero,60(sp)
1000a100:	e02d883a 	mov	r22,fp
1000a104:	002b883a 	mov	r21,zero
1000a108:	8039883a 	mov	fp,r16
1000a10c:	05000204 	movi	r20,8
1000a110:	0021883a 	mov	r16,zero
1000a114:	a5408c16 	blt	r20,r21,1000a348 <_strtod_r+0x2ec>
1000a118:	b009883a 	mov	r4,r22
1000a11c:	01400284 	movi	r5,10
1000a120:	000f5540 	call	1000f554 <__mulsi3>
1000a124:	1485883a 	add	r2,r2,r18
1000a128:	15bff404 	addi	r22,r2,-48
1000a12c:	dc400c15 	stw	r17,48(sp)
1000a130:	8c800007 	ldb	r18,0(r17)
1000a134:	ad400044 	addi	r21,r21,1
1000a138:	880b883a 	mov	r5,r17
1000a13c:	900f883a 	mov	r7,r18
1000a140:	9c808e0e 	bge	r19,r18,1000a37c <_strtod_r+0x320>
1000a144:	8c400044 	addi	r17,r17,1
1000a148:	bcbff20e 	bge	r23,r18,1000a114 <__alt_data_end+0xf800a114>
1000a14c:	dc000f15 	stw	r16,60(sp)
1000a150:	e021883a 	mov	r16,fp
1000a154:	b039883a 	mov	fp,r22
1000a158:	dd801017 	ldw	r22,64(sp)
1000a15c:	a827883a 	mov	r19,r21
1000a160:	dd801415 	stw	r22,80(sp)
1000a164:	000d883a 	mov	r6,zero
1000a168:	0029883a 	mov	r20,zero
1000a16c:	d8001015 	stw	zero,64(sp)
1000a170:	00801944 	movi	r2,101
1000a174:	3880dd26 	beq	r7,r2,1000a4ec <_strtod_r+0x490>
1000a178:	00801144 	movi	r2,69
1000a17c:	3880db26 	beq	r7,r2,1000a4ec <_strtod_r+0x490>
1000a180:	0009883a 	mov	r4,zero
1000a184:	a8011d1e 	bne	r21,zero,1000a5fc <_strtod_r+0x5a0>
1000a188:	3001591e 	bne	r6,zero,1000a6f0 <_strtod_r+0x694>
1000a18c:	d8c01317 	ldw	r3,76(sp)
1000a190:	1801571e 	bne	r3,zero,1000a6f0 <_strtod_r+0x694>
1000a194:	d8c01017 	ldw	r3,64(sp)
1000a198:	1803081e 	bne	r3,zero,1000adbc <_strtod_r+0xd60>
1000a19c:	00801384 	movi	r2,78
1000a1a0:	38847e26 	beq	r7,r2,1000b39c <_strtod_r+0x1340>
1000a1a4:	11c47916 	blt	r2,r7,1000b38c <_strtod_r+0x1330>
1000a1a8:	00801244 	movi	r2,73
1000a1ac:	3883031e 	bne	r7,r2,1000adbc <_strtod_r+0xd60>
1000a1b0:	d8800c17 	ldw	r2,48(sp)
1000a1b4:	01040074 	movhi	r4,4097
1000a1b8:	210a3804 	addi	r4,r4,10464
1000a1bc:	01801004 	movi	r6,64
1000a1c0:	01c01684 	movi	r7,90
1000a1c4:	21400007 	ldb	r5,0(r4)
1000a1c8:	21000044 	addi	r4,r4,1
1000a1cc:	2804b426 	beq	r5,zero,1000b4a0 <_strtod_r+0x1444>
1000a1d0:	10800044 	addi	r2,r2,1
1000a1d4:	10c00007 	ldb	r3,0(r2)
1000a1d8:	30c0020e 	bge	r6,r3,1000a1e4 <_strtod_r+0x188>
1000a1dc:	38c00116 	blt	r7,r3,1000a1e4 <_strtod_r+0x188>
1000a1e0:	18c00804 	addi	r3,r3,32
1000a1e4:	197ff726 	beq	r3,r5,1000a1c4 <__alt_data_end+0xf800a1c4>
1000a1e8:	0002f406 	br	1000adbc <_strtod_r+0xd60>
1000a1ec:	2109883a 	add	r4,r4,r4
1000a1f0:	2109883a 	add	r4,r4,r4
1000a1f4:	2189883a 	add	r4,r4,r6
1000a1f8:	21000017 	ldw	r4,0(r4)
1000a1fc:	2000683a 	jmp	r4
1000a200:	1000a2cc 	andi	zero,r2,651
1000a204:	1000a0bc 	xorhi	zero,r2,642
1000a208:	1000a0bc 	xorhi	zero,r2,642
1000a20c:	1000a0bc 	xorhi	zero,r2,642
1000a210:	1000a0bc 	xorhi	zero,r2,642
1000a214:	1000a0bc 	xorhi	zero,r2,642
1000a218:	1000a0bc 	xorhi	zero,r2,642
1000a21c:	1000a0bc 	xorhi	zero,r2,642
1000a220:	1000a0bc 	xorhi	zero,r2,642
1000a224:	1000a330 	cmpltui	zero,r2,652
1000a228:	1000a330 	cmpltui	zero,r2,652
1000a22c:	1000a330 	cmpltui	zero,r2,652
1000a230:	1000a330 	cmpltui	zero,r2,652
1000a234:	1000a330 	cmpltui	zero,r2,652
1000a238:	1000a0bc 	xorhi	zero,r2,642
1000a23c:	1000a0bc 	xorhi	zero,r2,642
1000a240:	1000a0bc 	xorhi	zero,r2,642
1000a244:	1000a0bc 	xorhi	zero,r2,642
1000a248:	1000a0bc 	xorhi	zero,r2,642
1000a24c:	1000a0bc 	xorhi	zero,r2,642
1000a250:	1000a0bc 	xorhi	zero,r2,642
1000a254:	1000a0bc 	xorhi	zero,r2,642
1000a258:	1000a0bc 	xorhi	zero,r2,642
1000a25c:	1000a0bc 	xorhi	zero,r2,642
1000a260:	1000a0bc 	xorhi	zero,r2,642
1000a264:	1000a0bc 	xorhi	zero,r2,642
1000a268:	1000a0bc 	xorhi	zero,r2,642
1000a26c:	1000a0bc 	xorhi	zero,r2,642
1000a270:	1000a0bc 	xorhi	zero,r2,642
1000a274:	1000a0bc 	xorhi	zero,r2,642
1000a278:	1000a0bc 	xorhi	zero,r2,642
1000a27c:	1000a0bc 	xorhi	zero,r2,642
1000a280:	1000a330 	cmpltui	zero,r2,652
1000a284:	1000a0bc 	xorhi	zero,r2,642
1000a288:	1000a0bc 	xorhi	zero,r2,642
1000a28c:	1000a0bc 	xorhi	zero,r2,642
1000a290:	1000a0bc 	xorhi	zero,r2,642
1000a294:	1000a0bc 	xorhi	zero,r2,642
1000a298:	1000a0bc 	xorhi	zero,r2,642
1000a29c:	1000a0bc 	xorhi	zero,r2,642
1000a2a0:	1000a0bc 	xorhi	zero,r2,642
1000a2a4:	1000a0bc 	xorhi	zero,r2,642
1000a2a8:	1000a0bc 	xorhi	zero,r2,642
1000a2ac:	1000a2b8 	rdprs	zero,r2,650
1000a2b0:	1000a0bc 	xorhi	zero,r2,642
1000a2b4:	1000a33c 	xorhi	zero,r2,652
1000a2b8:	d8001215 	stw	zero,72(sp)
1000a2bc:	15800044 	addi	r22,r2,1
1000a2c0:	dd800c15 	stw	r22,48(sp)
1000a2c4:	14800047 	ldb	r18,1(r2)
1000a2c8:	903f811e 	bne	r18,zero,1000a0d0 <__alt_data_end+0xf800a0d0>
1000a2cc:	0005883a 	mov	r2,zero
1000a2d0:	0007883a 	mov	r3,zero
1000a2d4:	d9400e17 	ldw	r5,56(sp)
1000a2d8:	d8001215 	stw	zero,72(sp)
1000a2dc:	d9400c15 	stw	r5,48(sp)
1000a2e0:	d9001117 	ldw	r4,68(sp)
1000a2e4:	20000326 	beq	r4,zero,1000a2f4 <_strtod_r+0x298>
1000a2e8:	d9000c17 	ldw	r4,48(sp)
1000a2ec:	d9401117 	ldw	r5,68(sp)
1000a2f0:	29000015 	stw	r4,0(r5)
1000a2f4:	d9001217 	ldw	r4,72(sp)
1000a2f8:	20000126 	beq	r4,zero,1000a300 <_strtod_r+0x2a4>
1000a2fc:	18e0003c 	xorhi	r3,r3,32768
1000a300:	dfc02317 	ldw	ra,140(sp)
1000a304:	df002217 	ldw	fp,136(sp)
1000a308:	ddc02117 	ldw	r23,132(sp)
1000a30c:	dd802017 	ldw	r22,128(sp)
1000a310:	dd401f17 	ldw	r21,124(sp)
1000a314:	dd001e17 	ldw	r20,120(sp)
1000a318:	dcc01d17 	ldw	r19,116(sp)
1000a31c:	dc801c17 	ldw	r18,112(sp)
1000a320:	dc401b17 	ldw	r17,108(sp)
1000a324:	dc001a17 	ldw	r16,104(sp)
1000a328:	dec02404 	addi	sp,sp,144
1000a32c:	f800283a 	ret
1000a330:	10800044 	addi	r2,r2,1
1000a334:	d8800c15 	stw	r2,48(sp)
1000a338:	003f5d06 	br	1000a0b0 <__alt_data_end+0xf800a0b0>
1000a33c:	00c00044 	movi	r3,1
1000a340:	d8c01215 	stw	r3,72(sp)
1000a344:	003fdd06 	br	1000a2bc <__alt_data_end+0xf800a2bc>
1000a348:	010003c4 	movi	r4,15
1000a34c:	257f7716 	blt	r4,r21,1000a12c <__alt_data_end+0xf800a12c>
1000a350:	8009883a 	mov	r4,r16
1000a354:	01400284 	movi	r5,10
1000a358:	000f5540 	call	1000f554 <__mulsi3>
1000a35c:	dc400c15 	stw	r17,48(sp)
1000a360:	1485883a 	add	r2,r2,r18
1000a364:	8c800007 	ldb	r18,0(r17)
1000a368:	143ff404 	addi	r16,r2,-48
1000a36c:	ad400044 	addi	r21,r21,1
1000a370:	880b883a 	mov	r5,r17
1000a374:	900f883a 	mov	r7,r18
1000a378:	9cbf7216 	blt	r19,r18,1000a144 <__alt_data_end+0xf800a144>
1000a37c:	dc000f15 	stw	r16,60(sp)
1000a380:	e021883a 	mov	r16,fp
1000a384:	b039883a 	mov	fp,r22
1000a388:	dd801017 	ldw	r22,64(sp)
1000a38c:	00800b84 	movi	r2,46
1000a390:	9082561e 	bne	r18,r2,1000acec <_strtod_r+0xc90>
1000a394:	28800044 	addi	r2,r5,1
1000a398:	d8800c15 	stw	r2,48(sp)
1000a39c:	29c00047 	ldb	r7,1(r5)
1000a3a0:	a802611e 	bne	r21,zero,1000ad28 <_strtod_r+0xccc>
1000a3a4:	00800c04 	movi	r2,48
1000a3a8:	3884161e 	bne	r7,r2,1000b404 <_strtod_r+0x13a8>
1000a3ac:	00800044 	movi	r2,1
1000a3b0:	3809883a 	mov	r4,r7
1000a3b4:	100d883a 	mov	r6,r2
1000a3b8:	10800044 	addi	r2,r2,1
1000a3bc:	2887883a 	add	r3,r5,r2
1000a3c0:	d8c00c15 	stw	r3,48(sp)
1000a3c4:	2987883a 	add	r3,r5,r6
1000a3c8:	19c00047 	ldb	r7,1(r3)
1000a3cc:	393ff926 	beq	r7,r4,1000a3b4 <__alt_data_end+0xf800a3b4>
1000a3d0:	38bff3c4 	addi	r2,r7,-49
1000a3d4:	00c00204 	movi	r3,8
1000a3d8:	1882ad36 	bltu	r3,r2,1000ae90 <_strtod_r+0xe34>
1000a3dc:	d9400c17 	ldw	r5,48(sp)
1000a3e0:	3029883a 	mov	r20,r6
1000a3e4:	002f883a 	mov	r23,zero
1000a3e8:	d9401415 	stw	r5,80(sp)
1000a3ec:	2823883a 	mov	r17,r5
1000a3f0:	01800044 	movi	r6,1
1000a3f4:	3dbff404 	addi	r22,r7,-48
1000a3f8:	b0002826 	beq	r22,zero,1000a49c <_strtod_r+0x440>
1000a3fc:	00800044 	movi	r2,1
1000a400:	a1a9883a 	add	r20,r20,r6
1000a404:	30844826 	beq	r6,r2,1000b528 <_strtod_r+0x14cc>
1000a408:	b9a7883a 	add	r19,r23,r6
1000a40c:	dc401015 	stw	r17,64(sp)
1000a410:	e023883a 	mov	r17,fp
1000a414:	b039883a 	mov	fp,r22
1000a418:	802d883a 	mov	r22,r16
1000a41c:	dc000f17 	ldw	r16,60(sp)
1000a420:	98ffffc4 	addi	r3,r19,-1
1000a424:	dd001615 	stw	r20,88(sp)
1000a428:	04800204 	movi	r18,8
1000a42c:	d9801515 	stw	r6,84(sp)
1000a430:	b829883a 	mov	r20,r23
1000a434:	1827883a 	mov	r19,r3
1000a438:	a5000044 	addi	r20,r20,1
1000a43c:	a17fffc4 	addi	r5,r20,-1
1000a440:	9142b916 	blt	r18,r5,1000af28 <_strtod_r+0xecc>
1000a444:	8809883a 	mov	r4,r17
1000a448:	01400284 	movi	r5,10
1000a44c:	000f5540 	call	1000f554 <__mulsi3>
1000a450:	1023883a 	mov	r17,r2
1000a454:	a4fff81e 	bne	r20,r19,1000a438 <__alt_data_end+0xf800a438>
1000a458:	d9801517 	ldw	r6,84(sp)
1000a45c:	dc000f15 	stw	r16,60(sp)
1000a460:	dd001617 	ldw	r20,88(sp)
1000a464:	b021883a 	mov	r16,r22
1000a468:	e02d883a 	mov	r22,fp
1000a46c:	8839883a 	mov	fp,r17
1000a470:	dc401017 	ldw	r17,64(sp)
1000a474:	b985883a 	add	r2,r23,r6
1000a478:	10bfffc4 	addi	r2,r2,-1
1000a47c:	00c00204 	movi	r3,8
1000a480:	15c00044 	addi	r23,r2,1
1000a484:	1883d616 	blt	r3,r2,1000b3e0 <_strtod_r+0x1384>
1000a488:	e009883a 	mov	r4,fp
1000a48c:	01400284 	movi	r5,10
1000a490:	000f5540 	call	1000f554 <__mulsi3>
1000a494:	15b9883a 	add	fp,r2,r22
1000a498:	000d883a 	mov	r6,zero
1000a49c:	88800044 	addi	r2,r17,1
1000a4a0:	d8800c15 	stw	r2,48(sp)
1000a4a4:	89c00047 	ldb	r7,1(r17)
1000a4a8:	00022306 	br	1000ad38 <_strtod_r+0xcdc>
1000a4ac:	b0800047 	ldb	r2,1(r22)
1000a4b0:	01001604 	movi	r4,88
1000a4b4:	1102a326 	beq	r2,r4,1000af44 <_strtod_r+0xee8>
1000a4b8:	01001e04 	movi	r4,120
1000a4bc:	1102a126 	beq	r2,r4,1000af44 <_strtod_r+0xee8>
1000a4c0:	b0800044 	addi	r2,r22,1
1000a4c4:	9009883a 	mov	r4,r18
1000a4c8:	d8800c15 	stw	r2,48(sp)
1000a4cc:	14800007 	ldb	r18,0(r2)
1000a4d0:	102d883a 	mov	r22,r2
1000a4d4:	10800044 	addi	r2,r2,1
1000a4d8:	913ffb26 	beq	r18,r4,1000a4c8 <__alt_data_end+0xf800a4c8>
1000a4dc:	90022526 	beq	r18,zero,1000ad74 <_strtod_r+0xd18>
1000a4e0:	00c00044 	movi	r3,1
1000a4e4:	d8c01315 	stw	r3,76(sp)
1000a4e8:	003efc06 	br	1000a0dc <__alt_data_end+0xf800a0dc>
1000a4ec:	a800011e 	bne	r21,zero,1000a4f4 <_strtod_r+0x498>
1000a4f0:	30023026 	beq	r6,zero,1000adb4 <_strtod_r+0xd58>
1000a4f4:	d9400c17 	ldw	r5,48(sp)
1000a4f8:	28800044 	addi	r2,r5,1
1000a4fc:	d8800c15 	stw	r2,48(sp)
1000a500:	29c00047 	ldb	r7,1(r5)
1000a504:	d9400e15 	stw	r5,56(sp)
1000a508:	00800ac4 	movi	r2,43
1000a50c:	38821026 	beq	r7,r2,1000ad50 <_strtod_r+0xcf4>
1000a510:	00800b44 	movi	r2,45
1000a514:	38821426 	beq	r7,r2,1000ad68 <_strtod_r+0xd0c>
1000a518:	d8001515 	stw	zero,84(sp)
1000a51c:	38bff404 	addi	r2,r7,-48
1000a520:	00c00244 	movi	r3,9
1000a524:	1881fc36 	bltu	r3,r2,1000ad18 <_strtod_r+0xcbc>
1000a528:	00800c04 	movi	r2,48
1000a52c:	3880071e 	bne	r7,r2,1000a54c <_strtod_r+0x4f0>
1000a530:	d8800c17 	ldw	r2,48(sp)
1000a534:	3807883a 	mov	r3,r7
1000a538:	10800044 	addi	r2,r2,1
1000a53c:	d8800c15 	stw	r2,48(sp)
1000a540:	11c00007 	ldb	r7,0(r2)
1000a544:	10800044 	addi	r2,r2,1
1000a548:	38fffc26 	beq	r7,r3,1000a53c <__alt_data_end+0xf800a53c>
1000a54c:	38bff3c4 	addi	r2,r7,-49
1000a550:	00c00204 	movi	r3,8
1000a554:	18bf0a36 	bltu	r3,r2,1000a180 <__alt_data_end+0xf800a180>
1000a558:	d8c00c17 	ldw	r3,48(sp)
1000a55c:	393ff404 	addi	r4,r7,-48
1000a560:	05c00bc4 	movi	r23,47
1000a564:	18800044 	addi	r2,r3,1
1000a568:	d8800c15 	stw	r2,48(sp)
1000a56c:	19c00047 	ldb	r7,1(r3)
1000a570:	d8c01615 	stw	r3,88(sp)
1000a574:	b9c0160e 	bge	r23,r7,1000a5d0 <_strtod_r+0x574>
1000a578:	00c00e44 	movi	r3,57
1000a57c:	19c01416 	blt	r3,r7,1000a5d0 <_strtod_r+0x574>
1000a580:	d9401617 	ldw	r5,88(sp)
1000a584:	dc001715 	stw	r16,92(sp)
1000a588:	1823883a 	mov	r17,r3
1000a58c:	2d800084 	addi	r22,r5,2
1000a590:	3025883a 	mov	r18,r6
1000a594:	3821883a 	mov	r16,r7
1000a598:	00000206 	br	1000a5a4 <_strtod_r+0x548>
1000a59c:	b5800044 	addi	r22,r22,1
1000a5a0:	8c000816 	blt	r17,r16,1000a5c4 <_strtod_r+0x568>
1000a5a4:	01400284 	movi	r5,10
1000a5a8:	000f5540 	call	1000f554 <__mulsi3>
1000a5ac:	dd800c15 	stw	r22,48(sp)
1000a5b0:	1405883a 	add	r2,r2,r16
1000a5b4:	b4000007 	ldb	r16,0(r22)
1000a5b8:	113ff404 	addi	r4,r2,-48
1000a5bc:	b005883a 	mov	r2,r22
1000a5c0:	bc3ff616 	blt	r23,r16,1000a59c <__alt_data_end+0xf800a59c>
1000a5c4:	800f883a 	mov	r7,r16
1000a5c8:	dc001717 	ldw	r16,92(sp)
1000a5cc:	900d883a 	mov	r6,r18
1000a5d0:	d8c01617 	ldw	r3,88(sp)
1000a5d4:	10c5c83a 	sub	r2,r2,r3
1000a5d8:	00c00204 	movi	r3,8
1000a5dc:	18833716 	blt	r3,r2,1000b2bc <_strtod_r+0x1260>
1000a5e0:	009387c4 	movi	r2,19999
1000a5e4:	1100010e 	bge	r2,r4,1000a5ec <_strtod_r+0x590>
1000a5e8:	1009883a 	mov	r4,r2
1000a5ec:	d8c01517 	ldw	r3,84(sp)
1000a5f0:	183ee426 	beq	r3,zero,1000a184 <__alt_data_end+0xf800a184>
1000a5f4:	0109c83a 	sub	r4,zero,r4
1000a5f8:	a83ee326 	beq	r21,zero,1000a188 <__alt_data_end+0xf800a188>
1000a5fc:	2529c83a 	sub	r20,r4,r20
1000a600:	dd001015 	stw	r20,64(sp)
1000a604:	9800011e 	bne	r19,zero,1000a60c <_strtod_r+0x5b0>
1000a608:	a827883a 	mov	r19,r21
1000a60c:	00800404 	movi	r2,16
1000a610:	a823883a 	mov	r17,r21
1000a614:	1540010e 	bge	r2,r21,1000a61c <_strtod_r+0x5c0>
1000a618:	1023883a 	mov	r17,r2
1000a61c:	e009883a 	mov	r4,fp
1000a620:	000f3080 	call	1000f308 <__floatunsidf>
1000a624:	d8800615 	stw	r2,24(sp)
1000a628:	d8c00715 	stw	r3,28(sp)
1000a62c:	01000244 	movi	r4,9
1000a630:	2440150e 	bge	r4,r17,1000a688 <_strtod_r+0x62c>
1000a634:	893ffdc4 	addi	r4,r17,-9
1000a638:	200890fa 	slli	r4,r4,3
1000a63c:	180b883a 	mov	r5,r3
1000a640:	00c40074 	movhi	r3,4097
1000a644:	18ca0304 	addi	r3,r3,10252
1000a648:	1907883a 	add	r3,r3,r4
1000a64c:	19800017 	ldw	r6,0(r3)
1000a650:	19c00117 	ldw	r7,4(r3)
1000a654:	1009883a 	mov	r4,r2
1000a658:	000ea400 	call	1000ea40 <__muldf3>
1000a65c:	d9000f17 	ldw	r4,60(sp)
1000a660:	1025883a 	mov	r18,r2
1000a664:	1829883a 	mov	r20,r3
1000a668:	000f3080 	call	1000f308 <__floatunsidf>
1000a66c:	9009883a 	mov	r4,r18
1000a670:	a00b883a 	mov	r5,r20
1000a674:	100d883a 	mov	r6,r2
1000a678:	180f883a 	mov	r7,r3
1000a67c:	000e98c0 	call	1000e98c <__adddf3>
1000a680:	d8800615 	stw	r2,24(sp)
1000a684:	d8c00715 	stw	r3,28(sp)
1000a688:	008003c4 	movi	r2,15
1000a68c:	15401b16 	blt	r2,r21,1000a6fc <_strtod_r+0x6a0>
1000a690:	d8c01017 	ldw	r3,64(sp)
1000a694:	18001626 	beq	r3,zero,1000a6f0 <_strtod_r+0x694>
1000a698:	d9001017 	ldw	r4,64(sp)
1000a69c:	01032e0e 	bge	zero,r4,1000b358 <_strtod_r+0x12fc>
1000a6a0:	00c00584 	movi	r3,22
1000a6a4:	19031016 	blt	r3,r4,1000b2e8 <_strtod_r+0x128c>
1000a6a8:	200490fa 	slli	r2,r4,3
1000a6ac:	00c40074 	movhi	r3,4097
1000a6b0:	18ca0304 	addi	r3,r3,10252
1000a6b4:	d9000617 	ldw	r4,24(sp)
1000a6b8:	1885883a 	add	r2,r3,r2
1000a6bc:	d9400717 	ldw	r5,28(sp)
1000a6c0:	11800017 	ldw	r6,0(r2)
1000a6c4:	11c00117 	ldw	r7,4(r2)
1000a6c8:	000ea400 	call	1000ea40 <__muldf3>
1000a6cc:	003f0406 	br	1000a2e0 <__alt_data_end+0xf800a2e0>
1000a6d0:	00dffc34 	movhi	r3,32752
1000a6d4:	d8c00715 	stw	r3,28(sp)
1000a6d8:	d8000615 	stw	zero,24(sp)
1000a6dc:	1080020c 	andi	r2,r2,8
1000a6e0:	10000326 	beq	r2,zero,1000a6f0 <_strtod_r+0x694>
1000a6e4:	d8800717 	ldw	r2,28(sp)
1000a6e8:	10a00034 	orhi	r2,r2,32768
1000a6ec:	d8800715 	stw	r2,28(sp)
1000a6f0:	d8800617 	ldw	r2,24(sp)
1000a6f4:	d8c00717 	ldw	r3,28(sp)
1000a6f8:	003ef906 	br	1000a2e0 <__alt_data_end+0xf800a2e0>
1000a6fc:	d8801017 	ldw	r2,64(sp)
1000a700:	ac63c83a 	sub	r17,r21,r17
1000a704:	1463883a 	add	r17,r2,r17
1000a708:	0442a70e 	bge	zero,r17,1000b1a8 <_strtod_r+0x114c>
1000a70c:	888003cc 	andi	r2,r17,15
1000a710:	10000b26 	beq	r2,zero,1000a740 <_strtod_r+0x6e4>
1000a714:	100490fa 	slli	r2,r2,3
1000a718:	00c40074 	movhi	r3,4097
1000a71c:	18ca0304 	addi	r3,r3,10252
1000a720:	d9000617 	ldw	r4,24(sp)
1000a724:	1885883a 	add	r2,r3,r2
1000a728:	d9400717 	ldw	r5,28(sp)
1000a72c:	11800017 	ldw	r6,0(r2)
1000a730:	11c00117 	ldw	r7,4(r2)
1000a734:	000ea400 	call	1000ea40 <__muldf3>
1000a738:	d8800615 	stw	r2,24(sp)
1000a73c:	d8c00715 	stw	r3,28(sp)
1000a740:	00bffc04 	movi	r2,-16
1000a744:	88a2703a 	and	r17,r17,r2
1000a748:	8801a41e 	bne	r17,zero,1000addc <_strtod_r+0xd80>
1000a74c:	0029883a 	mov	r20,zero
1000a750:	d9401417 	ldw	r5,80(sp)
1000a754:	df000015 	stw	fp,0(sp)
1000a758:	8009883a 	mov	r4,r16
1000a75c:	980d883a 	mov	r6,r19
1000a760:	a80f883a 	mov	r7,r21
1000a764:	000840c0 	call	1000840c <__s2b>
1000a768:	d8c01017 	ldw	r3,64(sp)
1000a76c:	102d883a 	mov	r22,r2
1000a770:	b1000304 	addi	r4,r22,12
1000a774:	1805d7fa 	srai	r2,r3,31
1000a778:	00f9c83a 	sub	fp,zero,r3
1000a77c:	d9001315 	stw	r4,76(sp)
1000a780:	e0b8703a 	and	fp,fp,r2
1000a784:	df000e15 	stw	fp,56(sp)
1000a788:	b1400117 	ldw	r5,4(r22)
1000a78c:	8009883a 	mov	r4,r16
1000a790:	0027883a 	mov	r19,zero
1000a794:	00081f80 	call	100081f8 <_Balloc>
1000a798:	b1800417 	ldw	r6,16(r22)
1000a79c:	d9401317 	ldw	r5,76(sp)
1000a7a0:	11000304 	addi	r4,r2,12
1000a7a4:	31800084 	addi	r6,r6,2
1000a7a8:	318d883a 	add	r6,r6,r6
1000a7ac:	318d883a 	add	r6,r6,r6
1000a7b0:	1025883a 	mov	r18,r2
1000a7b4:	0007e500 	call	10007e50 <memcpy>
1000a7b8:	d9400617 	ldw	r5,24(sp)
1000a7bc:	d9800717 	ldw	r6,28(sp)
1000a7c0:	d8800a04 	addi	r2,sp,40
1000a7c4:	8009883a 	mov	r4,r16
1000a7c8:	d9c00d04 	addi	r7,sp,52
1000a7cc:	d8800015 	stw	r2,0(sp)
1000a7d0:	0008eec0 	call	10008eec <__d2b>
1000a7d4:	8009883a 	mov	r4,r16
1000a7d8:	01400044 	movi	r5,1
1000a7dc:	d8800b15 	stw	r2,44(sp)
1000a7e0:	00086280 	call	10008628 <__i2b>
1000a7e4:	d8c01017 	ldw	r3,64(sp)
1000a7e8:	1023883a 	mov	r17,r2
1000a7ec:	00c0010e 	bge	zero,r3,1000a7f4 <_strtod_r+0x798>
1000a7f0:	1827883a 	mov	r19,r3
1000a7f4:	d8800d17 	ldw	r2,52(sp)
1000a7f8:	1000de16 	blt	r2,zero,1000ab74 <_strtod_r+0xb18>
1000a7fc:	d9000e17 	ldw	r4,56(sp)
1000a800:	9807883a 	mov	r3,r19
1000a804:	20af883a 	add	r23,r4,r2
1000a808:	d9000a17 	ldw	r4,40(sp)
1000a80c:	1505c83a 	sub	r2,r2,r20
1000a810:	017f00c4 	movi	r5,-1021
1000a814:	110d883a 	add	r6,r2,r4
1000a818:	31409a0e 	bge	r6,r5,1000aa84 <_strtod_r+0xa28>
1000a81c:	10810cc4 	addi	r2,r2,1075
1000a820:	b8b9883a 	add	fp,r23,r2
1000a824:	1885883a 	add	r2,r3,r2
1000a828:	152b883a 	add	r21,r2,r20
1000a82c:	e005883a 	mov	r2,fp
1000a830:	bf00010e 	bge	r23,fp,1000a838 <_strtod_r+0x7dc>
1000a834:	b805883a 	mov	r2,r23
1000a838:	a880010e 	bge	r21,r2,1000a840 <_strtod_r+0x7e4>
1000a83c:	a805883a 	mov	r2,r21
1000a840:	0080030e 	bge	zero,r2,1000a850 <_strtod_r+0x7f4>
1000a844:	e0b9c83a 	sub	fp,fp,r2
1000a848:	a8abc83a 	sub	r21,r21,r2
1000a84c:	b8afc83a 	sub	r23,r23,r2
1000a850:	d9400e17 	ldw	r5,56(sp)
1000a854:	28000f26 	beq	r5,zero,1000a894 <_strtod_r+0x838>
1000a858:	280d883a 	mov	r6,r5
1000a85c:	8009883a 	mov	r4,r16
1000a860:	880b883a 	mov	r5,r17
1000a864:	00088bc0 	call	100088bc <__pow5mult>
1000a868:	d9800b17 	ldw	r6,44(sp)
1000a86c:	8009883a 	mov	r4,r16
1000a870:	100b883a 	mov	r5,r2
1000a874:	1023883a 	mov	r17,r2
1000a878:	00086640 	call	10008664 <__multiply>
1000a87c:	d9400b17 	ldw	r5,44(sp)
1000a880:	8009883a 	mov	r4,r16
1000a884:	d8801815 	stw	r2,96(sp)
1000a888:	00082a00 	call	100082a0 <_Bfree>
1000a88c:	d8801817 	ldw	r2,96(sp)
1000a890:	d8800b15 	stw	r2,44(sp)
1000a894:	0700050e 	bge	zero,fp,1000a8ac <_strtod_r+0x850>
1000a898:	d9400b17 	ldw	r5,44(sp)
1000a89c:	8009883a 	mov	r4,r16
1000a8a0:	e00d883a 	mov	r6,fp
1000a8a4:	00089e80 	call	100089e8 <__lshift>
1000a8a8:	d8800b15 	stw	r2,44(sp)
1000a8ac:	98000526 	beq	r19,zero,1000a8c4 <_strtod_r+0x868>
1000a8b0:	900b883a 	mov	r5,r18
1000a8b4:	8009883a 	mov	r4,r16
1000a8b8:	980d883a 	mov	r6,r19
1000a8bc:	00088bc0 	call	100088bc <__pow5mult>
1000a8c0:	1025883a 	mov	r18,r2
1000a8c4:	0540050e 	bge	zero,r21,1000a8dc <_strtod_r+0x880>
1000a8c8:	900b883a 	mov	r5,r18
1000a8cc:	8009883a 	mov	r4,r16
1000a8d0:	a80d883a 	mov	r6,r21
1000a8d4:	00089e80 	call	100089e8 <__lshift>
1000a8d8:	1025883a 	mov	r18,r2
1000a8dc:	05c0050e 	bge	zero,r23,1000a8f4 <_strtod_r+0x898>
1000a8e0:	880b883a 	mov	r5,r17
1000a8e4:	8009883a 	mov	r4,r16
1000a8e8:	b80d883a 	mov	r6,r23
1000a8ec:	00089e80 	call	100089e8 <__lshift>
1000a8f0:	1023883a 	mov	r17,r2
1000a8f4:	d9400b17 	ldw	r5,44(sp)
1000a8f8:	8009883a 	mov	r4,r16
1000a8fc:	900d883a 	mov	r6,r18
1000a900:	0008b9c0 	call	10008b9c <__mdiff>
1000a904:	1027883a 	mov	r19,r2
1000a908:	10800317 	ldw	r2,12(r2)
1000a90c:	9809883a 	mov	r4,r19
1000a910:	98000315 	stw	zero,12(r19)
1000a914:	880b883a 	mov	r5,r17
1000a918:	d8800f15 	stw	r2,60(sp)
1000a91c:	0008b440 	call	10008b44 <__mcmp>
1000a920:	1001cb16 	blt	r2,zero,1000b050 <_strtod_r+0xff4>
1000a924:	1001fa26 	beq	r2,zero,1000b110 <_strtod_r+0x10b4>
1000a928:	9809883a 	mov	r4,r19
1000a92c:	880b883a 	mov	r5,r17
1000a930:	00090300 	call	10009030 <__ratio>
1000a934:	1009883a 	mov	r4,r2
1000a938:	180b883a 	mov	r5,r3
1000a93c:	000d883a 	mov	r6,zero
1000a940:	01d00034 	movhi	r7,16384
1000a944:	102f883a 	mov	r23,r2
1000a948:	1839883a 	mov	fp,r3
1000a94c:	000f0b40 	call	1000f0b4 <__ledf2>
1000a950:	00804f16 	blt	zero,r2,1000aa90 <_strtod_r+0xa34>
1000a954:	d9400f17 	ldw	r5,60(sp)
1000a958:	28008926 	beq	r5,zero,1000ab80 <_strtod_r+0xb24>
1000a95c:	da400717 	ldw	r9,28(sp)
1000a960:	05cffc34 	movhi	r23,16368
1000a964:	d8000815 	stw	zero,32(sp)
1000a968:	ddc00915 	stw	r23,36(sp)
1000a96c:	002b883a 	mov	r21,zero
1000a970:	4f1ffc2c 	andhi	fp,r9,32752
1000a974:	009ff834 	movhi	r2,32736
1000a978:	e0805526 	beq	fp,r2,1000aad0 <_strtod_r+0xa74>
1000a97c:	a0001b26 	beq	r20,zero,1000a9ec <_strtod_r+0x990>
1000a980:	0081a834 	movhi	r2,1696
1000a984:	17001936 	bltu	r2,fp,1000a9ec <_strtod_r+0x990>
1000a988:	a809883a 	mov	r4,r21
1000a98c:	b80b883a 	mov	r5,r23
1000a990:	01bff034 	movhi	r6,65472
1000a994:	01d07834 	movhi	r7,16864
1000a998:	39ffffc4 	addi	r7,r7,-1
1000a99c:	000f0b40 	call	1000f0b4 <__ledf2>
1000a9a0:	00800d16 	blt	zero,r2,1000a9d8 <_strtod_r+0x97c>
1000a9a4:	a809883a 	mov	r4,r21
1000a9a8:	b80b883a 	mov	r5,r23
1000a9ac:	000d8380 	call	1000d838 <__fixunsdfsi>
1000a9b0:	1000d626 	beq	r2,zero,1000ad0c <_strtod_r+0xcb0>
1000a9b4:	1009883a 	mov	r4,r2
1000a9b8:	000f3080 	call	1000f308 <__floatunsidf>
1000a9bc:	102b883a 	mov	r21,r2
1000a9c0:	182f883a 	mov	r23,r3
1000a9c4:	d9400f17 	ldw	r5,60(sp)
1000a9c8:	2800ce1e 	bne	r5,zero,1000ad04 <_strtod_r+0xca8>
1000a9cc:	b8a0003c 	xorhi	r2,r23,32768
1000a9d0:	dd400815 	stw	r21,32(sp)
1000a9d4:	d8800915 	stw	r2,36(sp)
1000a9d8:	d8c00917 	ldw	r3,36(sp)
1000a9dc:	0081ac34 	movhi	r2,1712
1000a9e0:	1885883a 	add	r2,r3,r2
1000a9e4:	1705c83a 	sub	r2,r2,fp
1000a9e8:	d8800915 	stw	r2,36(sp)
1000a9ec:	d9000617 	ldw	r4,24(sp)
1000a9f0:	d9400717 	ldw	r5,28(sp)
1000a9f4:	0008d440 	call	10008d44 <__ulp>
1000a9f8:	da800617 	ldw	r10,24(sp)
1000a9fc:	da400717 	ldw	r9,28(sp)
1000aa00:	d9800817 	ldw	r6,32(sp)
1000aa04:	d9c00917 	ldw	r7,36(sp)
1000aa08:	1009883a 	mov	r4,r2
1000aa0c:	180b883a 	mov	r5,r3
1000aa10:	da401915 	stw	r9,100(sp)
1000aa14:	da801815 	stw	r10,96(sp)
1000aa18:	000ea400 	call	1000ea40 <__muldf3>
1000aa1c:	da401917 	ldw	r9,100(sp)
1000aa20:	da801817 	ldw	r10,96(sp)
1000aa24:	100d883a 	mov	r6,r2
1000aa28:	480b883a 	mov	r5,r9
1000aa2c:	5009883a 	mov	r4,r10
1000aa30:	180f883a 	mov	r7,r3
1000aa34:	000e98c0 	call	1000e98c <__adddf3>
1000aa38:	d8800615 	stw	r2,24(sp)
1000aa3c:	d8c00715 	stw	r3,28(sp)
1000aa40:	1813883a 	mov	r9,r3
1000aa44:	a000021e 	bne	r20,zero,1000aa50 <_strtod_r+0x9f4>
1000aa48:	489ffc2c 	andhi	r2,r9,32752
1000aa4c:	e0807226 	beq	fp,r2,1000ac18 <_strtod_r+0xbbc>
1000aa50:	d9400b17 	ldw	r5,44(sp)
1000aa54:	8009883a 	mov	r4,r16
1000aa58:	00082a00 	call	100082a0 <_Bfree>
1000aa5c:	8009883a 	mov	r4,r16
1000aa60:	900b883a 	mov	r5,r18
1000aa64:	00082a00 	call	100082a0 <_Bfree>
1000aa68:	8009883a 	mov	r4,r16
1000aa6c:	880b883a 	mov	r5,r17
1000aa70:	00082a00 	call	100082a0 <_Bfree>
1000aa74:	8009883a 	mov	r4,r16
1000aa78:	980b883a 	mov	r5,r19
1000aa7c:	00082a00 	call	100082a0 <_Bfree>
1000aa80:	003f4106 	br	1000a788 <__alt_data_end+0xf800a788>
1000aa84:	00800d84 	movi	r2,54
1000aa88:	1105c83a 	sub	r2,r2,r4
1000aa8c:	003f6406 	br	1000a820 <__alt_data_end+0xf800a820>
1000aa90:	b809883a 	mov	r4,r23
1000aa94:	e00b883a 	mov	r5,fp
1000aa98:	000d883a 	mov	r6,zero
1000aa9c:	01cff834 	movhi	r7,16352
1000aaa0:	000ea400 	call	1000ea40 <__muldf3>
1000aaa4:	d9000f17 	ldw	r4,60(sp)
1000aaa8:	102b883a 	mov	r21,r2
1000aaac:	182f883a 	mov	r23,r3
1000aab0:	2000011e 	bne	r4,zero,1000aab8 <_strtod_r+0xa5c>
1000aab4:	18e0003c 	xorhi	r3,r3,32768
1000aab8:	da400717 	ldw	r9,28(sp)
1000aabc:	d8800815 	stw	r2,32(sp)
1000aac0:	d8c00915 	stw	r3,36(sp)
1000aac4:	4f1ffc2c 	andhi	fp,r9,32752
1000aac8:	009ff834 	movhi	r2,32736
1000aacc:	e0bfab1e 	bne	fp,r2,1000a97c <__alt_data_end+0xf800a97c>
1000aad0:	d8800617 	ldw	r2,24(sp)
1000aad4:	00ff2c34 	movhi	r3,64688
1000aad8:	48d3883a 	add	r9,r9,r3
1000aadc:	1009883a 	mov	r4,r2
1000aae0:	d8800415 	stw	r2,16(sp)
1000aae4:	d8800717 	ldw	r2,28(sp)
1000aae8:	480b883a 	mov	r5,r9
1000aaec:	da400715 	stw	r9,28(sp)
1000aaf0:	d8800515 	stw	r2,20(sp)
1000aaf4:	0008d440 	call	10008d44 <__ulp>
1000aaf8:	da800617 	ldw	r10,24(sp)
1000aafc:	da400717 	ldw	r9,28(sp)
1000ab00:	d9800817 	ldw	r6,32(sp)
1000ab04:	d9c00917 	ldw	r7,36(sp)
1000ab08:	1009883a 	mov	r4,r2
1000ab0c:	180b883a 	mov	r5,r3
1000ab10:	da401915 	stw	r9,100(sp)
1000ab14:	da801815 	stw	r10,96(sp)
1000ab18:	000ea400 	call	1000ea40 <__muldf3>
1000ab1c:	da801817 	ldw	r10,96(sp)
1000ab20:	da401917 	ldw	r9,100(sp)
1000ab24:	100d883a 	mov	r6,r2
1000ab28:	5009883a 	mov	r4,r10
1000ab2c:	480b883a 	mov	r5,r9
1000ab30:	180f883a 	mov	r7,r3
1000ab34:	000e98c0 	call	1000e98c <__adddf3>
1000ab38:	d8800615 	stw	r2,24(sp)
1000ab3c:	015f2834 	movhi	r5,31904
1000ab40:	297fffc4 	addi	r5,r5,-1
1000ab44:	189ffc2c 	andhi	r2,r3,32752
1000ab48:	2880642e 	bgeu	r5,r2,1000acdc <_strtod_r+0xc80>
1000ab4c:	d8800517 	ldw	r2,20(sp)
1000ab50:	00dffc34 	movhi	r3,32752
1000ab54:	18ffffc4 	addi	r3,r3,-1
1000ab58:	10c18526 	beq	r2,r3,1000b170 <_strtod_r+0x1114>
1000ab5c:	011ffc34 	movhi	r4,32752
1000ab60:	213fffc4 	addi	r4,r4,-1
1000ab64:	00bfffc4 	movi	r2,-1
1000ab68:	d9000715 	stw	r4,28(sp)
1000ab6c:	d8800615 	stw	r2,24(sp)
1000ab70:	003fb706 	br	1000aa50 <__alt_data_end+0xf800aa50>
1000ab74:	9887c83a 	sub	r3,r19,r2
1000ab78:	ddc00e17 	ldw	r23,56(sp)
1000ab7c:	003f2206 	br	1000a808 <__alt_data_end+0xf800a808>
1000ab80:	d8800617 	ldw	r2,24(sp)
1000ab84:	10001a1e 	bne	r2,zero,1000abf0 <_strtod_r+0xb94>
1000ab88:	da400717 	ldw	r9,28(sp)
1000ab8c:	00c00434 	movhi	r3,16
1000ab90:	18ffffc4 	addi	r3,r3,-1
1000ab94:	48c4703a 	and	r2,r9,r3
1000ab98:	1000191e 	bne	r2,zero,1000ac00 <_strtod_r+0xba4>
1000ab9c:	b809883a 	mov	r4,r23
1000aba0:	e00b883a 	mov	r5,fp
1000aba4:	000d883a 	mov	r6,zero
1000aba8:	01cffc34 	movhi	r7,16368
1000abac:	da401915 	stw	r9,100(sp)
1000abb0:	000f0580 	call	1000f058 <__ltdf2>
1000abb4:	da401917 	ldw	r9,100(sp)
1000abb8:	1001bb16 	blt	r2,zero,1000b2a8 <_strtod_r+0x124c>
1000abbc:	b809883a 	mov	r4,r23
1000abc0:	e00b883a 	mov	r5,fp
1000abc4:	000d883a 	mov	r6,zero
1000abc8:	01cff834 	movhi	r7,16352
1000abcc:	000ea400 	call	1000ea40 <__muldf3>
1000abd0:	da401917 	ldw	r9,100(sp)
1000abd4:	182f883a 	mov	r23,r3
1000abd8:	102b883a 	mov	r21,r2
1000abdc:	1007883a 	mov	r3,r2
1000abe0:	b8a0003c 	xorhi	r2,r23,32768
1000abe4:	d8c00815 	stw	r3,32(sp)
1000abe8:	d8800915 	stw	r2,36(sp)
1000abec:	003f6006 	br	1000a970 <__alt_data_end+0xf800a970>
1000abf0:	00c00044 	movi	r3,1
1000abf4:	da400717 	ldw	r9,28(sp)
1000abf8:	10c0011e 	bne	r2,r3,1000ac00 <_strtod_r+0xba4>
1000abfc:	4800c526 	beq	r9,zero,1000af14 <_strtod_r+0xeb8>
1000ac00:	00affc34 	movhi	r2,49136
1000ac04:	d8000815 	stw	zero,32(sp)
1000ac08:	d8800915 	stw	r2,36(sp)
1000ac0c:	002b883a 	mov	r21,zero
1000ac10:	05cffc34 	movhi	r23,16368
1000ac14:	003f5606 	br	1000a970 <__alt_data_end+0xf800a970>
1000ac18:	b80b883a 	mov	r5,r23
1000ac1c:	a809883a 	mov	r4,r21
1000ac20:	da401915 	stw	r9,100(sp)
1000ac24:	000f1e40 	call	1000f1e4 <__fixdfsi>
1000ac28:	1009883a 	mov	r4,r2
1000ac2c:	000f1100 	call	1000f110 <__floatsidf>
1000ac30:	b80b883a 	mov	r5,r23
1000ac34:	a809883a 	mov	r4,r21
1000ac38:	100d883a 	mov	r6,r2
1000ac3c:	180f883a 	mov	r7,r3
1000ac40:	000e9e00 	call	1000e9e0 <__subdf3>
1000ac44:	102f883a 	mov	r23,r2
1000ac48:	d8800f17 	ldw	r2,60(sp)
1000ac4c:	1839883a 	mov	fp,r3
1000ac50:	da401917 	ldw	r9,100(sp)
1000ac54:	1000021e 	bne	r2,zero,1000ac60 <_strtod_r+0xc04>
1000ac58:	d8800617 	ldw	r2,24(sp)
1000ac5c:	10004826 	beq	r2,zero,1000ad80 <_strtod_r+0xd24>
1000ac60:	b809883a 	mov	r4,r23
1000ac64:	e00b883a 	mov	r5,fp
1000ac68:	01a52834 	movhi	r6,38048
1000ac6c:	318d6544 	addi	r6,r6,13717
1000ac70:	01cff834 	movhi	r7,16352
1000ac74:	39ffffc4 	addi	r7,r7,-1
1000ac78:	000f0580 	call	1000f058 <__ltdf2>
1000ac7c:	10000716 	blt	r2,zero,1000ac9c <_strtod_r+0xc40>
1000ac80:	b809883a 	mov	r4,r23
1000ac84:	e00b883a 	mov	r5,fp
1000ac88:	018d6c34 	movhi	r6,13744
1000ac8c:	31b94d44 	addi	r6,r6,-6859
1000ac90:	01cff834 	movhi	r7,16352
1000ac94:	000ef900 	call	1000ef90 <__gtdf2>
1000ac98:	00bf6d0e 	bge	zero,r2,1000aa50 <__alt_data_end+0xf800aa50>
1000ac9c:	d9400b17 	ldw	r5,44(sp)
1000aca0:	8009883a 	mov	r4,r16
1000aca4:	00082a00 	call	100082a0 <_Bfree>
1000aca8:	8009883a 	mov	r4,r16
1000acac:	900b883a 	mov	r5,r18
1000acb0:	00082a00 	call	100082a0 <_Bfree>
1000acb4:	8009883a 	mov	r4,r16
1000acb8:	880b883a 	mov	r5,r17
1000acbc:	00082a00 	call	100082a0 <_Bfree>
1000acc0:	8009883a 	mov	r4,r16
1000acc4:	b00b883a 	mov	r5,r22
1000acc8:	00082a00 	call	100082a0 <_Bfree>
1000accc:	8009883a 	mov	r4,r16
1000acd0:	980b883a 	mov	r5,r19
1000acd4:	00082a00 	call	100082a0 <_Bfree>
1000acd8:	003e8506 	br	1000a6f0 <__alt_data_end+0xf800a6f0>
1000acdc:	0240d434 	movhi	r9,848
1000ace0:	1a53883a 	add	r9,r3,r9
1000ace4:	da400715 	stw	r9,28(sp)
1000ace8:	003f5606 	br	1000aa44 <__alt_data_end+0xf800aa44>
1000acec:	a827883a 	mov	r19,r21
1000acf0:	dd801415 	stw	r22,80(sp)
1000acf4:	000d883a 	mov	r6,zero
1000acf8:	0029883a 	mov	r20,zero
1000acfc:	d8001015 	stw	zero,64(sp)
1000ad00:	003d1d06 	br	1000a178 <__alt_data_end+0xf800a178>
1000ad04:	b805883a 	mov	r2,r23
1000ad08:	003f3106 	br	1000a9d0 <__alt_data_end+0xf800a9d0>
1000ad0c:	002b883a 	mov	r21,zero
1000ad10:	05cffc34 	movhi	r23,16368
1000ad14:	003f2b06 	br	1000a9c4 <__alt_data_end+0xf800a9c4>
1000ad18:	d9400e17 	ldw	r5,56(sp)
1000ad1c:	0009883a 	mov	r4,zero
1000ad20:	d9400c15 	stw	r5,48(sp)
1000ad24:	003d1706 	br	1000a184 <__alt_data_end+0xf800a184>
1000ad28:	dd801415 	stw	r22,80(sp)
1000ad2c:	a82f883a 	mov	r23,r21
1000ad30:	000d883a 	mov	r6,zero
1000ad34:	0029883a 	mov	r20,zero
1000ad38:	3dbff404 	addi	r22,r7,-48
1000ad3c:	00800244 	movi	r2,9
1000ad40:	15802136 	bltu	r2,r22,1000adc8 <_strtod_r+0xd6c>
1000ad44:	31800044 	addi	r6,r6,1
1000ad48:	dc400c17 	ldw	r17,48(sp)
1000ad4c:	003daa06 	br	1000a3f8 <__alt_data_end+0xf800a3f8>
1000ad50:	d8001515 	stw	zero,84(sp)
1000ad54:	d9400e17 	ldw	r5,56(sp)
1000ad58:	28800084 	addi	r2,r5,2
1000ad5c:	d8800c15 	stw	r2,48(sp)
1000ad60:	29c00087 	ldb	r7,2(r5)
1000ad64:	003ded06 	br	1000a51c <__alt_data_end+0xf800a51c>
1000ad68:	00c00044 	movi	r3,1
1000ad6c:	d8c01515 	stw	r3,84(sp)
1000ad70:	003ff806 	br	1000ad54 <__alt_data_end+0xf800ad54>
1000ad74:	0005883a 	mov	r2,zero
1000ad78:	0007883a 	mov	r3,zero
1000ad7c:	003d5806 	br	1000a2e0 <__alt_data_end+0xf800a2e0>
1000ad80:	00c00434 	movhi	r3,16
1000ad84:	18ffffc4 	addi	r3,r3,-1
1000ad88:	48d2703a 	and	r9,r9,r3
1000ad8c:	483fb41e 	bne	r9,zero,1000ac60 <__alt_data_end+0xf800ac60>
1000ad90:	b809883a 	mov	r4,r23
1000ad94:	e00b883a 	mov	r5,fp
1000ad98:	01a52834 	movhi	r6,38048
1000ad9c:	318d6544 	addi	r6,r6,13717
1000ada0:	01cff434 	movhi	r7,16336
1000ada4:	39ffffc4 	addi	r7,r7,-1
1000ada8:	000f0580 	call	1000f058 <__ltdf2>
1000adac:	103f280e 	bge	r2,zero,1000aa50 <__alt_data_end+0xf800aa50>
1000adb0:	003fba06 	br	1000ac9c <__alt_data_end+0xf800ac9c>
1000adb4:	d8c01317 	ldw	r3,76(sp)
1000adb8:	183dce1e 	bne	r3,zero,1000a4f4 <__alt_data_end+0xf800a4f4>
1000adbc:	d8800617 	ldw	r2,24(sp)
1000adc0:	d8c00717 	ldw	r3,28(sp)
1000adc4:	003d4306 	br	1000a2d4 <__alt_data_end+0xf800a2d4>
1000adc8:	00c00044 	movi	r3,1
1000adcc:	a827883a 	mov	r19,r21
1000add0:	d8c01015 	stw	r3,64(sp)
1000add4:	b82b883a 	mov	r21,r23
1000add8:	003ce506 	br	1000a170 <__alt_data_end+0xf800a170>
1000addc:	00804d04 	movi	r2,308
1000ade0:	1440ec16 	blt	r2,r17,1000b194 <_strtod_r+0x1138>
1000ade4:	8825d13a 	srai	r18,r17,4
1000ade8:	05c00044 	movi	r23,1
1000adec:	bc81ca0e 	bge	r23,r18,1000b518 <_strtod_r+0x14bc>
1000adf0:	d8800617 	ldw	r2,24(sp)
1000adf4:	d8c00717 	ldw	r3,28(sp)
1000adf8:	05840074 	movhi	r22,4097
1000adfc:	b589f904 	addi	r22,r22,10212
1000ae00:	b029883a 	mov	r20,r22
1000ae04:	0023883a 	mov	r17,zero
1000ae08:	9180004c 	andi	r6,r18,1
1000ae0c:	30000526 	beq	r6,zero,1000ae24 <_strtod_r+0xdc8>
1000ae10:	a1800017 	ldw	r6,0(r20)
1000ae14:	a1c00117 	ldw	r7,4(r20)
1000ae18:	1009883a 	mov	r4,r2
1000ae1c:	180b883a 	mov	r5,r3
1000ae20:	000ea400 	call	1000ea40 <__muldf3>
1000ae24:	9025d07a 	srai	r18,r18,1
1000ae28:	8c400044 	addi	r17,r17,1
1000ae2c:	a5000204 	addi	r20,r20,8
1000ae30:	bcbff516 	blt	r23,r18,1000ae08 <__alt_data_end+0xf800ae08>
1000ae34:	d8800615 	stw	r2,24(sp)
1000ae38:	d8c00715 	stw	r3,28(sp)
1000ae3c:	880490fa 	slli	r2,r17,3
1000ae40:	d9400717 	ldw	r5,28(sp)
1000ae44:	d9000617 	ldw	r4,24(sp)
1000ae48:	b0a3883a 	add	r17,r22,r2
1000ae4c:	89800017 	ldw	r6,0(r17)
1000ae50:	89c00117 	ldw	r7,4(r17)
1000ae54:	00bf2c34 	movhi	r2,64688
1000ae58:	288b883a 	add	r5,r5,r2
1000ae5c:	000ea400 	call	1000ea40 <__muldf3>
1000ae60:	d8800615 	stw	r2,24(sp)
1000ae64:	011f2834 	movhi	r4,31904
1000ae68:	189ffc2c 	andhi	r2,r3,32752
1000ae6c:	2080c936 	bltu	r4,r2,1000b194 <_strtod_r+0x1138>
1000ae70:	011f2434 	movhi	r4,31888
1000ae74:	2081652e 	bgeu	r4,r2,1000b40c <_strtod_r+0x13b0>
1000ae78:	009ffc34 	movhi	r2,32752
1000ae7c:	10bfffc4 	addi	r2,r2,-1
1000ae80:	d8800715 	stw	r2,28(sp)
1000ae84:	00bfffc4 	movi	r2,-1
1000ae88:	d8800615 	stw	r2,24(sp)
1000ae8c:	003e2f06 	br	1000a74c <__alt_data_end+0xf800a74c>
1000ae90:	00c00044 	movi	r3,1
1000ae94:	0027883a 	mov	r19,zero
1000ae98:	dd801415 	stw	r22,80(sp)
1000ae9c:	0029883a 	mov	r20,zero
1000aea0:	d8c01015 	stw	r3,64(sp)
1000aea4:	003cb206 	br	1000a170 <__alt_data_end+0xf800a170>
1000aea8:	d8800717 	ldw	r2,28(sp)
1000aeac:	00c00434 	movhi	r3,16
1000aeb0:	18ffffc4 	addi	r3,r3,-1
1000aeb4:	10c6703a 	and	r3,r2,r3
1000aeb8:	1801471e 	bne	r3,zero,1000b3d8 <_strtod_r+0x137c>
1000aebc:	d8c00617 	ldw	r3,24(sp)
1000aec0:	18007e26 	beq	r3,zero,1000b0bc <_strtod_r+0x1060>
1000aec4:	18c0004c 	andi	r3,r3,1
1000aec8:	1800a726 	beq	r3,zero,1000b168 <_strtod_r+0x110c>
1000aecc:	ddc00617 	ldw	r23,24(sp)
1000aed0:	dd400717 	ldw	r21,28(sp)
1000aed4:	b809883a 	mov	r4,r23
1000aed8:	a80b883a 	mov	r5,r21
1000aedc:	0008d440 	call	10008d44 <__ulp>
1000aee0:	b809883a 	mov	r4,r23
1000aee4:	a80b883a 	mov	r5,r21
1000aee8:	100d883a 	mov	r6,r2
1000aeec:	180f883a 	mov	r7,r3
1000aef0:	000e9e00 	call	1000e9e0 <__subdf3>
1000aef4:	1009883a 	mov	r4,r2
1000aef8:	180b883a 	mov	r5,r3
1000aefc:	000d883a 	mov	r6,zero
1000af00:	000f883a 	mov	r7,zero
1000af04:	d8800615 	stw	r2,24(sp)
1000af08:	d8c00715 	stw	r3,28(sp)
1000af0c:	000eed80 	call	1000eed8 <__eqdf2>
1000af10:	1000951e 	bne	r2,zero,1000b168 <_strtod_r+0x110c>
1000af14:	d8000615 	stw	zero,24(sp)
1000af18:	d8000715 	stw	zero,28(sp)
1000af1c:	00800884 	movi	r2,34
1000af20:	80800015 	stw	r2,0(r16)
1000af24:	003f5d06 	br	1000ac9c <__alt_data_end+0xf800ac9c>
1000af28:	00800404 	movi	r2,16
1000af2c:	153d4916 	blt	r2,r20,1000a454 <__alt_data_end+0xf800a454>
1000af30:	8009883a 	mov	r4,r16
1000af34:	01400284 	movi	r5,10
1000af38:	000f5540 	call	1000f554 <__mulsi3>
1000af3c:	1021883a 	mov	r16,r2
1000af40:	003d4406 	br	1000a454 <__alt_data_end+0xf800a454>
1000af44:	d9001217 	ldw	r4,72(sp)
1000af48:	d8800b04 	addi	r2,sp,44
1000af4c:	04c40074 	movhi	r19,4097
1000af50:	9cccef04 	addi	r19,r19,13244
1000af54:	d9000115 	stw	r4,4(sp)
1000af58:	d8800015 	stw	r2,0(sp)
1000af5c:	8009883a 	mov	r4,r16
1000af60:	d9400c04 	addi	r5,sp,48
1000af64:	980d883a 	mov	r6,r19
1000af68:	d9c00a04 	addi	r7,sp,40
1000af6c:	000cbe80 	call	1000cbe8 <__gethex>
1000af70:	148001cc 	andi	r18,r2,7
1000af74:	903dde26 	beq	r18,zero,1000a6f0 <__alt_data_end+0xf800a6f0>
1000af78:	00c00184 	movi	r3,6
1000af7c:	90c0f226 	beq	r18,r3,1000b348 <_strtod_r+0x12ec>
1000af80:	d9800b17 	ldw	r6,44(sp)
1000af84:	30000826 	beq	r6,zero,1000afa8 <_strtod_r+0xf4c>
1000af88:	99400017 	ldw	r5,0(r19)
1000af8c:	d9000204 	addi	r4,sp,8
1000af90:	d8801815 	stw	r2,96(sp)
1000af94:	00091480 	call	10009148 <__copybits>
1000af98:	d9400b17 	ldw	r5,44(sp)
1000af9c:	8009883a 	mov	r4,r16
1000afa0:	00082a00 	call	100082a0 <_Bfree>
1000afa4:	d8801817 	ldw	r2,96(sp)
1000afa8:	00c00184 	movi	r3,6
1000afac:	d9000a17 	ldw	r4,40(sp)
1000afb0:	1cbdca36 	bltu	r3,r18,1000a6dc <__alt_data_end+0xf800a6dc>
1000afb4:	94a5883a 	add	r18,r18,r18
1000afb8:	94a5883a 	add	r18,r18,r18
1000afbc:	00c40074 	movhi	r3,4097
1000afc0:	18ebf404 	addi	r3,r3,-20528
1000afc4:	90c7883a 	add	r3,r18,r3
1000afc8:	18c00017 	ldw	r3,0(r3)
1000afcc:	1800683a 	jmp	r3
1000afd0:	1000b044 	addi	zero,r2,705
1000afd4:	1000b000 	call	11000b00 <_gp+0xfe4514>
1000afd8:	1000afec 	andhi	zero,r2,703
1000afdc:	1000a6d0 	cmplti	zero,r2,667
1000afe0:	1000b02c 	andhi	zero,r2,704
1000afe4:	1000b000 	call	11000b00 <_gp+0xfe4514>
1000afe8:	1000b044 	addi	zero,r2,705
1000afec:	d8c00217 	ldw	r3,8(sp)
1000aff0:	d8c00615 	stw	r3,24(sp)
1000aff4:	d8c00317 	ldw	r3,12(sp)
1000aff8:	d8c00715 	stw	r3,28(sp)
1000affc:	003db706 	br	1000a6dc <__alt_data_end+0xf800a6dc>
1000b000:	21010cc4 	addi	r4,r4,1075
1000b004:	d9400317 	ldw	r5,12(sp)
1000b008:	2008953a 	slli	r4,r4,20
1000b00c:	00fffc34 	movhi	r3,65520
1000b010:	18ffffc4 	addi	r3,r3,-1
1000b014:	28c6703a 	and	r3,r5,r3
1000b018:	20c6b03a 	or	r3,r4,r3
1000b01c:	d9000217 	ldw	r4,8(sp)
1000b020:	d8c00715 	stw	r3,28(sp)
1000b024:	d9000615 	stw	r4,24(sp)
1000b028:	003dac06 	br	1000a6dc <__alt_data_end+0xf800a6dc>
1000b02c:	00e00034 	movhi	r3,32768
1000b030:	18ffffc4 	addi	r3,r3,-1
1000b034:	d8c00715 	stw	r3,28(sp)
1000b038:	00ffffc4 	movi	r3,-1
1000b03c:	d8c00615 	stw	r3,24(sp)
1000b040:	003da606 	br	1000a6dc <__alt_data_end+0xf800a6dc>
1000b044:	d8000715 	stw	zero,28(sp)
1000b048:	d8000615 	stw	zero,24(sp)
1000b04c:	003da306 	br	1000a6dc <__alt_data_end+0xf800a6dc>
1000b050:	d8c00f17 	ldw	r3,60(sp)
1000b054:	1800441e 	bne	r3,zero,1000b168 <_strtod_r+0x110c>
1000b058:	d8800617 	ldw	r2,24(sp)
1000b05c:	1000421e 	bne	r2,zero,1000b168 <_strtod_r+0x110c>
1000b060:	d8800717 	ldw	r2,28(sp)
1000b064:	00c00434 	movhi	r3,16
1000b068:	18ffffc4 	addi	r3,r3,-1
1000b06c:	10c6703a 	and	r3,r2,r3
1000b070:	18003d1e 	bne	r3,zero,1000b168 <_strtod_r+0x110c>
1000b074:	109ffc2c 	andhi	r2,r2,32752
1000b078:	00c1ac34 	movhi	r3,1712
1000b07c:	18803a2e 	bgeu	r3,r2,1000b168 <_strtod_r+0x110c>
1000b080:	98800517 	ldw	r2,20(r19)
1000b084:	1000031e 	bne	r2,zero,1000b094 <_strtod_r+0x1038>
1000b088:	98800417 	ldw	r2,16(r19)
1000b08c:	00c00044 	movi	r3,1
1000b090:	1880350e 	bge	r3,r2,1000b168 <_strtod_r+0x110c>
1000b094:	980b883a 	mov	r5,r19
1000b098:	8009883a 	mov	r4,r16
1000b09c:	01800044 	movi	r6,1
1000b0a0:	00089e80 	call	100089e8 <__lshift>
1000b0a4:	1009883a 	mov	r4,r2
1000b0a8:	880b883a 	mov	r5,r17
1000b0ac:	1027883a 	mov	r19,r2
1000b0b0:	0008b440 	call	10008b44 <__mcmp>
1000b0b4:	00802c0e 	bge	zero,r2,1000b168 <_strtod_r+0x110c>
1000b0b8:	d8800717 	ldw	r2,28(sp)
1000b0bc:	109ffc2c 	andhi	r2,r2,32752
1000b0c0:	a000ed26 	beq	r20,zero,1000b478 <_strtod_r+0x141c>
1000b0c4:	00c1ac34 	movhi	r3,1712
1000b0c8:	1880eb36 	bltu	r3,r2,1000b478 <_strtod_r+0x141c>
1000b0cc:	00c0dc34 	movhi	r3,880
1000b0d0:	18bf902e 	bgeu	r3,r2,1000af14 <__alt_data_end+0xf800af14>
1000b0d4:	d9000617 	ldw	r4,24(sp)
1000b0d8:	d9400717 	ldw	r5,28(sp)
1000b0dc:	008e5434 	movhi	r2,14672
1000b0e0:	000d883a 	mov	r6,zero
1000b0e4:	100f883a 	mov	r7,r2
1000b0e8:	d8800515 	stw	r2,20(sp)
1000b0ec:	d8000415 	stw	zero,16(sp)
1000b0f0:	000ea400 	call	1000ea40 <__muldf3>
1000b0f4:	d8800615 	stw	r2,24(sp)
1000b0f8:	d8c00715 	stw	r3,28(sp)
1000b0fc:	183ee71e 	bne	r3,zero,1000ac9c <__alt_data_end+0xf800ac9c>
1000b100:	103ee61e 	bne	r2,zero,1000ac9c <__alt_data_end+0xf800ac9c>
1000b104:	00800884 	movi	r2,34
1000b108:	80800015 	stw	r2,0(r16)
1000b10c:	003ee306 	br	1000ac9c <__alt_data_end+0xf800ac9c>
1000b110:	d9000f17 	ldw	r4,60(sp)
1000b114:	203f6426 	beq	r4,zero,1000aea8 <__alt_data_end+0xf800aea8>
1000b118:	d8c00717 	ldw	r3,28(sp)
1000b11c:	00800434 	movhi	r2,16
1000b120:	10bfffc4 	addi	r2,r2,-1
1000b124:	1888703a 	and	r4,r3,r2
1000b128:	2080bd26 	beq	r4,r2,1000b420 <_strtod_r+0x13c4>
1000b12c:	d8800617 	ldw	r2,24(sp)
1000b130:	1080004c 	andi	r2,r2,1
1000b134:	10000c26 	beq	r2,zero,1000b168 <_strtod_r+0x110c>
1000b138:	ddc00617 	ldw	r23,24(sp)
1000b13c:	dd400717 	ldw	r21,28(sp)
1000b140:	b809883a 	mov	r4,r23
1000b144:	a80b883a 	mov	r5,r21
1000b148:	0008d440 	call	10008d44 <__ulp>
1000b14c:	b809883a 	mov	r4,r23
1000b150:	a80b883a 	mov	r5,r21
1000b154:	100d883a 	mov	r6,r2
1000b158:	180f883a 	mov	r7,r3
1000b15c:	000e98c0 	call	1000e98c <__adddf3>
1000b160:	d8800615 	stw	r2,24(sp)
1000b164:	d8c00715 	stw	r3,28(sp)
1000b168:	a03fda1e 	bne	r20,zero,1000b0d4 <__alt_data_end+0xf800b0d4>
1000b16c:	003ecb06 	br	1000ac9c <__alt_data_end+0xf800ac9c>
1000b170:	d8c00417 	ldw	r3,16(sp)
1000b174:	00bfffc4 	movi	r2,-1
1000b178:	18be781e 	bne	r3,r2,1000ab5c <__alt_data_end+0xf800ab5c>
1000b17c:	00800884 	movi	r2,34
1000b180:	80800015 	stw	r2,0(r16)
1000b184:	009ffc34 	movhi	r2,32752
1000b188:	d8800715 	stw	r2,28(sp)
1000b18c:	d8000615 	stw	zero,24(sp)
1000b190:	003ec206 	br	1000ac9c <__alt_data_end+0xf800ac9c>
1000b194:	00800884 	movi	r2,34
1000b198:	80800015 	stw	r2,0(r16)
1000b19c:	00dffc34 	movhi	r3,32752
1000b1a0:	0005883a 	mov	r2,zero
1000b1a4:	003c4e06 	br	1000a2e0 <__alt_data_end+0xf800a2e0>
1000b1a8:	883d6826 	beq	r17,zero,1000a74c <__alt_data_end+0xf800a74c>
1000b1ac:	0463c83a 	sub	r17,zero,r17
1000b1b0:	888003cc 	andi	r2,r17,15
1000b1b4:	10000b26 	beq	r2,zero,1000b1e4 <_strtod_r+0x1188>
1000b1b8:	100490fa 	slli	r2,r2,3
1000b1bc:	00c40074 	movhi	r3,4097
1000b1c0:	18ca0304 	addi	r3,r3,10252
1000b1c4:	d9000617 	ldw	r4,24(sp)
1000b1c8:	1885883a 	add	r2,r3,r2
1000b1cc:	d9400717 	ldw	r5,28(sp)
1000b1d0:	11800017 	ldw	r6,0(r2)
1000b1d4:	11c00117 	ldw	r7,4(r2)
1000b1d8:	000ed240 	call	1000ed24 <__divdf3>
1000b1dc:	d8800615 	stw	r2,24(sp)
1000b1e0:	d8c00715 	stw	r3,28(sp)
1000b1e4:	8823d13a 	srai	r17,r17,4
1000b1e8:	883d5826 	beq	r17,zero,1000a74c <__alt_data_end+0xf800a74c>
1000b1ec:	008007c4 	movi	r2,31
1000b1f0:	14402816 	blt	r2,r17,1000b294 <_strtod_r+0x1238>
1000b1f4:	8880040c 	andi	r2,r17,16
1000b1f8:	1000cf1e 	bne	r2,zero,1000b538 <_strtod_r+0x14dc>
1000b1fc:	0029883a 	mov	r20,zero
1000b200:	0440100e 	bge	zero,r17,1000b244 <_strtod_r+0x11e8>
1000b204:	d8800617 	ldw	r2,24(sp)
1000b208:	d8c00717 	ldw	r3,28(sp)
1000b20c:	04840074 	movhi	r18,4097
1000b210:	948a3c04 	addi	r18,r18,10480
1000b214:	8980004c 	andi	r6,r17,1
1000b218:	30000526 	beq	r6,zero,1000b230 <_strtod_r+0x11d4>
1000b21c:	91800017 	ldw	r6,0(r18)
1000b220:	91c00117 	ldw	r7,4(r18)
1000b224:	1009883a 	mov	r4,r2
1000b228:	180b883a 	mov	r5,r3
1000b22c:	000ea400 	call	1000ea40 <__muldf3>
1000b230:	8823d07a 	srai	r17,r17,1
1000b234:	94800204 	addi	r18,r18,8
1000b238:	883ff61e 	bne	r17,zero,1000b214 <__alt_data_end+0xf800b214>
1000b23c:	d8800615 	stw	r2,24(sp)
1000b240:	d8c00715 	stw	r3,28(sp)
1000b244:	a0000d26 	beq	r20,zero,1000b27c <_strtod_r+0x1220>
1000b248:	d8c00717 	ldw	r3,28(sp)
1000b24c:	01001ac4 	movi	r4,107
1000b250:	189ffc2c 	andhi	r2,r3,32752
1000b254:	1004d53a 	srli	r2,r2,20
1000b258:	2085c83a 	sub	r2,r4,r2
1000b25c:	0080070e 	bge	zero,r2,1000b27c <_strtod_r+0x1220>
1000b260:	010007c4 	movi	r4,31
1000b264:	2080c30e 	bge	r4,r2,1000b574 <_strtod_r+0x1518>
1000b268:	d8000615 	stw	zero,24(sp)
1000b26c:	01000d04 	movi	r4,52
1000b270:	2080c60e 	bge	r4,r2,1000b58c <_strtod_r+0x1530>
1000b274:	0080dc34 	movhi	r2,880
1000b278:	d8800715 	stw	r2,28(sp)
1000b27c:	d9000617 	ldw	r4,24(sp)
1000b280:	d9400717 	ldw	r5,28(sp)
1000b284:	000d883a 	mov	r6,zero
1000b288:	000f883a 	mov	r7,zero
1000b28c:	000eed80 	call	1000eed8 <__eqdf2>
1000b290:	103d2f1e 	bne	r2,zero,1000a750 <__alt_data_end+0xf800a750>
1000b294:	00800884 	movi	r2,34
1000b298:	80800015 	stw	r2,0(r16)
1000b29c:	0007883a 	mov	r3,zero
1000b2a0:	0005883a 	mov	r2,zero
1000b2a4:	003c0e06 	br	1000a2e0 <__alt_data_end+0xf800a2e0>
1000b2a8:	0007883a 	mov	r3,zero
1000b2ac:	00aff834 	movhi	r2,49120
1000b2b0:	002b883a 	mov	r21,zero
1000b2b4:	05cff834 	movhi	r23,16352
1000b2b8:	003e4a06 	br	1000abe4 <__alt_data_end+0xf800abe4>
1000b2bc:	011387c4 	movi	r4,19999
1000b2c0:	003cca06 	br	1000a5ec <__alt_data_end+0xf800a5ec>
1000b2c4:	b00b883a 	mov	r5,r22
1000b2c8:	d8000f15 	stw	zero,60(sp)
1000b2cc:	0039883a 	mov	fp,zero
1000b2d0:	002b883a 	mov	r21,zero
1000b2d4:	003c2d06 	br	1000a38c <__alt_data_end+0xf800a38c>
1000b2d8:	d8000f15 	stw	zero,60(sp)
1000b2dc:	0039883a 	mov	fp,zero
1000b2e0:	002b883a 	mov	r21,zero
1000b2e4:	003b9d06 	br	1000a15c <__alt_data_end+0xf800a15c>
1000b2e8:	d9401017 	ldw	r5,64(sp)
1000b2ec:	00c00944 	movi	r3,37
1000b2f0:	1d47c83a 	sub	r3,r3,r21
1000b2f4:	197d0116 	blt	r3,r5,1000a6fc <__alt_data_end+0xf800a6fc>
1000b2f8:	1563c83a 	sub	r17,r2,r21
1000b2fc:	880490fa 	slli	r2,r17,3
1000b300:	04040074 	movhi	r16,4097
1000b304:	840a0304 	addi	r16,r16,10252
1000b308:	d9000617 	ldw	r4,24(sp)
1000b30c:	8085883a 	add	r2,r16,r2
1000b310:	d9400717 	ldw	r5,28(sp)
1000b314:	11800017 	ldw	r6,0(r2)
1000b318:	11c00117 	ldw	r7,4(r2)
1000b31c:	000ea400 	call	1000ea40 <__muldf3>
1000b320:	d9001017 	ldw	r4,64(sp)
1000b324:	180b883a 	mov	r5,r3
1000b328:	244dc83a 	sub	r6,r4,r17
1000b32c:	300c90fa 	slli	r6,r6,3
1000b330:	1009883a 	mov	r4,r2
1000b334:	81a1883a 	add	r16,r16,r6
1000b338:	81800017 	ldw	r6,0(r16)
1000b33c:	81c00117 	ldw	r7,4(r16)
1000b340:	000ea400 	call	1000ea40 <__muldf3>
1000b344:	003be606 	br	1000a2e0 <__alt_data_end+0xf800a2e0>
1000b348:	d9400e17 	ldw	r5,56(sp)
1000b34c:	d8001215 	stw	zero,72(sp)
1000b350:	d9400c15 	stw	r5,48(sp)
1000b354:	003ce606 	br	1000a6f0 <__alt_data_end+0xf800a6f0>
1000b358:	d9401017 	ldw	r5,64(sp)
1000b35c:	00bffa84 	movi	r2,-22
1000b360:	28bce616 	blt	r5,r2,1000a6fc <__alt_data_end+0xf800a6fc>
1000b364:	280490fa 	slli	r2,r5,3
1000b368:	00c40074 	movhi	r3,4097
1000b36c:	18ca0304 	addi	r3,r3,10252
1000b370:	d9000617 	ldw	r4,24(sp)
1000b374:	1885c83a 	sub	r2,r3,r2
1000b378:	d9400717 	ldw	r5,28(sp)
1000b37c:	11800017 	ldw	r6,0(r2)
1000b380:	11c00117 	ldw	r7,4(r2)
1000b384:	000ed240 	call	1000ed24 <__divdf3>
1000b388:	003bd506 	br	1000a2e0 <__alt_data_end+0xf800a2e0>
1000b38c:	00801a44 	movi	r2,105
1000b390:	38bb8726 	beq	r7,r2,1000a1b0 <__alt_data_end+0xf800a1b0>
1000b394:	00801b84 	movi	r2,110
1000b398:	38be881e 	bne	r7,r2,1000adbc <__alt_data_end+0xf800adbc>
1000b39c:	d8c00c17 	ldw	r3,48(sp)
1000b3a0:	01040074 	movhi	r4,4097
1000b3a4:	210a3b04 	addi	r4,r4,10476
1000b3a8:	01801004 	movi	r6,64
1000b3ac:	01c01684 	movi	r7,90
1000b3b0:	21400007 	ldb	r5,0(r4)
1000b3b4:	21000044 	addi	r4,r4,1
1000b3b8:	28004e26 	beq	r5,zero,1000b4f4 <_strtod_r+0x1498>
1000b3bc:	18c00044 	addi	r3,r3,1
1000b3c0:	18800007 	ldb	r2,0(r3)
1000b3c4:	3080020e 	bge	r6,r2,1000b3d0 <_strtod_r+0x1374>
1000b3c8:	38800116 	blt	r7,r2,1000b3d0 <_strtod_r+0x1374>
1000b3cc:	10800804 	addi	r2,r2,32
1000b3d0:	117ff726 	beq	r2,r5,1000b3b0 <__alt_data_end+0xf800b3b0>
1000b3d4:	003e7906 	br	1000adbc <__alt_data_end+0xf800adbc>
1000b3d8:	d8c00617 	ldw	r3,24(sp)
1000b3dc:	003eb906 	br	1000aec4 <__alt_data_end+0xf800aec4>
1000b3e0:	00800404 	movi	r2,16
1000b3e4:	15c02216 	blt	r2,r23,1000b470 <_strtod_r+0x1414>
1000b3e8:	d9000f17 	ldw	r4,60(sp)
1000b3ec:	01400284 	movi	r5,10
1000b3f0:	000f5540 	call	1000f554 <__mulsi3>
1000b3f4:	15ad883a 	add	r22,r2,r22
1000b3f8:	dd800f15 	stw	r22,60(sp)
1000b3fc:	000d883a 	mov	r6,zero
1000b400:	003c2606 	br	1000a49c <__alt_data_end+0xf800a49c>
1000b404:	000d883a 	mov	r6,zero
1000b408:	003bf106 	br	1000a3d0 <__alt_data_end+0xf800a3d0>
1000b40c:	0080d434 	movhi	r2,848
1000b410:	1887883a 	add	r3,r3,r2
1000b414:	d8c00715 	stw	r3,28(sp)
1000b418:	0029883a 	mov	r20,zero
1000b41c:	003ccc06 	br	1000a750 <__alt_data_end+0xf800a750>
1000b420:	d8800617 	ldw	r2,24(sp)
1000b424:	a0001026 	beq	r20,zero,1000b468 <_strtod_r+0x140c>
1000b428:	191ffc2c 	andhi	r4,r3,32752
1000b42c:	0141a834 	movhi	r5,1696
1000b430:	29000d36 	bltu	r5,r4,1000b468 <_strtod_r+0x140c>
1000b434:	2008d53a 	srli	r4,r4,20
1000b438:	01401ac4 	movi	r5,107
1000b43c:	2909c83a 	sub	r4,r5,r4
1000b440:	017fffc4 	movi	r5,-1
1000b444:	2908983a 	sll	r4,r5,r4
1000b448:	113f391e 	bne	r2,r4,1000b130 <__alt_data_end+0xf800b130>
1000b44c:	18dffc2c 	andhi	r3,r3,32752
1000b450:	00800434 	movhi	r2,16
1000b454:	1885883a 	add	r2,r3,r2
1000b458:	d8800715 	stw	r2,28(sp)
1000b45c:	d8000615 	stw	zero,24(sp)
1000b460:	a03f1c1e 	bne	r20,zero,1000b0d4 <__alt_data_end+0xf800b0d4>
1000b464:	003e0d06 	br	1000ac9c <__alt_data_end+0xf800ac9c>
1000b468:	013fffc4 	movi	r4,-1
1000b46c:	003ff606 	br	1000b448 <__alt_data_end+0xf800b448>
1000b470:	000d883a 	mov	r6,zero
1000b474:	003c0906 	br	1000a49c <__alt_data_end+0xf800a49c>
1000b478:	00fffc34 	movhi	r3,65520
1000b47c:	10c5883a 	add	r2,r2,r3
1000b480:	00c00434 	movhi	r3,16
1000b484:	18ffffc4 	addi	r3,r3,-1
1000b488:	10c4b03a 	or	r2,r2,r3
1000b48c:	d8800715 	stw	r2,28(sp)
1000b490:	00bfffc4 	movi	r2,-1
1000b494:	d8800615 	stw	r2,24(sp)
1000b498:	a03f0e1e 	bne	r20,zero,1000b0d4 <__alt_data_end+0xf800b0d4>
1000b49c:	003dff06 	br	1000ac9c <__alt_data_end+0xf800ac9c>
1000b4a0:	1011883a 	mov	r8,r2
1000b4a4:	d8800c15 	stw	r2,48(sp)
1000b4a8:	01040074 	movhi	r4,4097
1000b4ac:	210a3904 	addi	r4,r4,10468
1000b4b0:	01801004 	movi	r6,64
1000b4b4:	01c01684 	movi	r7,90
1000b4b8:	21400007 	ldb	r5,0(r4)
1000b4bc:	10800044 	addi	r2,r2,1
1000b4c0:	21000044 	addi	r4,r4,1
1000b4c4:	28001a26 	beq	r5,zero,1000b530 <_strtod_r+0x14d4>
1000b4c8:	10c00007 	ldb	r3,0(r2)
1000b4cc:	30c0020e 	bge	r6,r3,1000b4d8 <_strtod_r+0x147c>
1000b4d0:	38c00116 	blt	r7,r3,1000b4d8 <_strtod_r+0x147c>
1000b4d4:	18c00804 	addi	r3,r3,32
1000b4d8:	197ff726 	beq	r3,r5,1000b4b8 <__alt_data_end+0xf800b4b8>
1000b4dc:	40800044 	addi	r2,r8,1
1000b4e0:	d8800c15 	stw	r2,48(sp)
1000b4e4:	009ffc34 	movhi	r2,32752
1000b4e8:	d8800715 	stw	r2,28(sp)
1000b4ec:	d8000615 	stw	zero,24(sp)
1000b4f0:	003c7f06 	br	1000a6f0 <__alt_data_end+0xf800a6f0>
1000b4f4:	18800044 	addi	r2,r3,1
1000b4f8:	d8800c15 	stw	r2,48(sp)
1000b4fc:	18c00047 	ldb	r3,1(r3)
1000b500:	00800a04 	movi	r2,40
1000b504:	18800e26 	beq	r3,r2,1000b540 <_strtod_r+0x14e4>
1000b508:	00bffe34 	movhi	r2,65528
1000b50c:	d8800715 	stw	r2,28(sp)
1000b510:	d8000615 	stw	zero,24(sp)
1000b514:	003c7606 	br	1000a6f0 <__alt_data_end+0xf800a6f0>
1000b518:	0023883a 	mov	r17,zero
1000b51c:	05840074 	movhi	r22,4097
1000b520:	b589f904 	addi	r22,r22,10212
1000b524:	003e4506 	br	1000ae3c <__alt_data_end+0xf800ae3c>
1000b528:	b805883a 	mov	r2,r23
1000b52c:	003bd306 	br	1000a47c <__alt_data_end+0xf800a47c>
1000b530:	d8800c15 	stw	r2,48(sp)
1000b534:	003feb06 	br	1000b4e4 <__alt_data_end+0xf800b4e4>
1000b538:	05001a84 	movi	r20,106
1000b53c:	003f3006 	br	1000b200 <__alt_data_end+0xf800b200>
1000b540:	d9000c04 	addi	r4,sp,48
1000b544:	01440074 	movhi	r5,4097
1000b548:	294cf404 	addi	r5,r5,13264
1000b54c:	d9800204 	addi	r6,sp,8
1000b550:	000d3600 	call	1000d360 <__hexnan>
1000b554:	00c00144 	movi	r3,5
1000b558:	10ffeb1e 	bne	r2,r3,1000b508 <__alt_data_end+0xf800b508>
1000b55c:	d8800317 	ldw	r2,12(sp)
1000b560:	109ffc34 	orhi	r2,r2,32752
1000b564:	d8800715 	stw	r2,28(sp)
1000b568:	d8800217 	ldw	r2,8(sp)
1000b56c:	d8800615 	stw	r2,24(sp)
1000b570:	003c5f06 	br	1000a6f0 <__alt_data_end+0xf800a6f0>
1000b574:	00ffffc4 	movi	r3,-1
1000b578:	1884983a 	sll	r2,r3,r2
1000b57c:	d8c00617 	ldw	r3,24(sp)
1000b580:	1884703a 	and	r2,r3,r2
1000b584:	d8800615 	stw	r2,24(sp)
1000b588:	003f3c06 	br	1000b27c <__alt_data_end+0xf800b27c>
1000b58c:	10bff804 	addi	r2,r2,-32
1000b590:	013fffc4 	movi	r4,-1
1000b594:	2084983a 	sll	r2,r4,r2
1000b598:	10c6703a 	and	r3,r2,r3
1000b59c:	d8c00715 	stw	r3,28(sp)
1000b5a0:	003f3606 	br	1000b27c <__alt_data_end+0xf800b27c>

1000b5a4 <strtod>:
1000b5a4:	00c40074 	movhi	r3,4097
1000b5a8:	18d17f04 	addi	r3,r3,17916
1000b5ac:	2005883a 	mov	r2,r4
1000b5b0:	19000017 	ldw	r4,0(r3)
1000b5b4:	280d883a 	mov	r6,r5
1000b5b8:	100b883a 	mov	r5,r2
1000b5bc:	000a05c1 	jmpi	1000a05c <_strtod_r>

1000b5c0 <strtof>:
1000b5c0:	defffb04 	addi	sp,sp,-20
1000b5c4:	dcc00315 	stw	r19,12(sp)
1000b5c8:	04c40074 	movhi	r19,4097
1000b5cc:	9cd17f04 	addi	r19,r19,17916
1000b5d0:	2005883a 	mov	r2,r4
1000b5d4:	99000017 	ldw	r4,0(r19)
1000b5d8:	280d883a 	mov	r6,r5
1000b5dc:	100b883a 	mov	r5,r2
1000b5e0:	dfc00415 	stw	ra,16(sp)
1000b5e4:	dc800215 	stw	r18,8(sp)
1000b5e8:	dc400115 	stw	r17,4(sp)
1000b5ec:	dc000015 	stw	r16,0(sp)
1000b5f0:	000a05c0 	call	1000a05c <_strtod_r>
1000b5f4:	1009883a 	mov	r4,r2
1000b5f8:	180b883a 	mov	r5,r3
1000b5fc:	1025883a 	mov	r18,r2
1000b600:	1823883a 	mov	r17,r3
1000b604:	000f2a80 	call	1000f2a8 <__truncdfsf2>
1000b608:	1009883a 	mov	r4,r2
1000b60c:	000b883a 	mov	r5,zero
1000b610:	1021883a 	mov	r16,r2
1000b614:	000e5340 	call	1000e534 <__nesf2>
1000b618:	1000111e 	bne	r2,zero,1000b660 <strtof+0xa0>
1000b61c:	9009883a 	mov	r4,r18
1000b620:	880b883a 	mov	r5,r17
1000b624:	000d883a 	mov	r6,zero
1000b628:	000f883a 	mov	r7,zero
1000b62c:	000ef340 	call	1000ef34 <__nedf2>
1000b630:	10000b26 	beq	r2,zero,1000b660 <strtof+0xa0>
1000b634:	98800017 	ldw	r2,0(r19)
1000b638:	00c00884 	movi	r3,34
1000b63c:	10c00015 	stw	r3,0(r2)
1000b640:	8005883a 	mov	r2,r16
1000b644:	dfc00417 	ldw	ra,16(sp)
1000b648:	dcc00317 	ldw	r19,12(sp)
1000b64c:	dc800217 	ldw	r18,8(sp)
1000b650:	dc400117 	ldw	r17,4(sp)
1000b654:	dc000017 	ldw	r16,0(sp)
1000b658:	dec00504 	addi	sp,sp,20
1000b65c:	f800283a 	ret
1000b660:	8009883a 	mov	r4,r16
1000b664:	015fe034 	movhi	r5,32640
1000b668:	297fffc4 	addi	r5,r5,-1
1000b66c:	000e5880 	call	1000e588 <__gtsf2>
1000b670:	0080070e 	bge	zero,r2,1000b690 <strtof+0xd0>
1000b674:	9009883a 	mov	r4,r18
1000b678:	880b883a 	mov	r5,r17
1000b67c:	01bfffc4 	movi	r6,-1
1000b680:	01dffc34 	movhi	r7,32752
1000b684:	39ffffc4 	addi	r7,r7,-1
1000b688:	000ef900 	call	1000ef90 <__gtdf2>
1000b68c:	00bfe90e 	bge	zero,r2,1000b634 <__alt_data_end+0xf800b634>
1000b690:	8009883a 	mov	r4,r16
1000b694:	017fe034 	movhi	r5,65408
1000b698:	297fffc4 	addi	r5,r5,-1
1000b69c:	000e5e40 	call	1000e5e4 <__ltsf2>
1000b6a0:	103fe70e 	bge	r2,zero,1000b640 <__alt_data_end+0xf800b640>
1000b6a4:	9009883a 	mov	r4,r18
1000b6a8:	880b883a 	mov	r5,r17
1000b6ac:	01bfffc4 	movi	r6,-1
1000b6b0:	01fffc34 	movhi	r7,65520
1000b6b4:	39ffffc4 	addi	r7,r7,-1
1000b6b8:	000f0580 	call	1000f058 <__ltdf2>
1000b6bc:	103fdd0e 	bge	r2,zero,1000b634 <__alt_data_end+0xf800b634>
1000b6c0:	8005883a 	mov	r2,r16
1000b6c4:	dfc00417 	ldw	ra,16(sp)
1000b6c8:	dcc00317 	ldw	r19,12(sp)
1000b6cc:	dc800217 	ldw	r18,8(sp)
1000b6d0:	dc400117 	ldw	r17,4(sp)
1000b6d4:	dc000017 	ldw	r16,0(sp)
1000b6d8:	dec00504 	addi	sp,sp,20
1000b6dc:	f800283a 	ret

1000b6e0 <_strtol_r>:
1000b6e0:	defff304 	addi	sp,sp,-52
1000b6e4:	00840074 	movhi	r2,4097
1000b6e8:	10917d04 	addi	r2,r2,17908
1000b6ec:	df000b15 	stw	fp,44(sp)
1000b6f0:	17000017 	ldw	fp,0(r2)
1000b6f4:	ddc00a15 	stw	r23,40(sp)
1000b6f8:	dd000715 	stw	r20,28(sp)
1000b6fc:	dcc00615 	stw	r19,24(sp)
1000b700:	dc000315 	stw	r16,12(sp)
1000b704:	dfc00c15 	stw	ra,48(sp)
1000b708:	dd800915 	stw	r22,36(sp)
1000b70c:	dd400815 	stw	r21,32(sp)
1000b710:	dc800515 	stw	r18,20(sp)
1000b714:	dc400415 	stw	r17,16(sp)
1000b718:	2827883a 	mov	r19,r5
1000b71c:	d9000215 	stw	r4,8(sp)
1000b720:	3029883a 	mov	r20,r6
1000b724:	382f883a 	mov	r23,r7
1000b728:	2821883a 	mov	r16,r5
1000b72c:	84400007 	ldb	r17,0(r16)
1000b730:	84000044 	addi	r16,r16,1
1000b734:	e445883a 	add	r2,fp,r17
1000b738:	10800003 	ldbu	r2,0(r2)
1000b73c:	1080020c 	andi	r2,r2,8
1000b740:	10803fcc 	andi	r2,r2,255
1000b744:	1080201c 	xori	r2,r2,128
1000b748:	10bfe004 	addi	r2,r2,-128
1000b74c:	103ff71e 	bne	r2,zero,1000b72c <__alt_data_end+0xf800b72c>
1000b750:	00800b44 	movi	r2,45
1000b754:	88806a26 	beq	r17,r2,1000b900 <_strtol_r+0x220>
1000b758:	00800ac4 	movi	r2,43
1000b75c:	88806d26 	beq	r17,r2,1000b914 <_strtol_r+0x234>
1000b760:	d8000015 	stw	zero,0(sp)
1000b764:	b800481e 	bne	r23,zero,1000b888 <_strtol_r+0x1a8>
1000b768:	00800c04 	movi	r2,48
1000b76c:	88804a26 	beq	r17,r2,1000b898 <_strtol_r+0x1b8>
1000b770:	05c00284 	movi	r23,10
1000b774:	b825883a 	mov	r18,r23
1000b778:	d8c00017 	ldw	r3,0(sp)
1000b77c:	00a00034 	movhi	r2,32768
1000b780:	900b883a 	mov	r5,r18
1000b784:	182b003a 	cmpeq	r21,r3,zero
1000b788:	156bc83a 	sub	r21,r2,r21
1000b78c:	a809883a 	mov	r4,r21
1000b790:	000f54c0 	call	1000f54c <__umodsi3>
1000b794:	a809883a 	mov	r4,r21
1000b798:	900b883a 	mov	r5,r18
1000b79c:	d8800115 	stw	r2,4(sp)
1000b7a0:	000f5440 	call	1000f544 <__udivsi3>
1000b7a4:	e447883a 	add	r3,fp,r17
1000b7a8:	18c00003 	ldbu	r3,0(r3)
1000b7ac:	102b883a 	mov	r21,r2
1000b7b0:	000d883a 	mov	r6,zero
1000b7b4:	1940010c 	andi	r5,r3,4
1000b7b8:	29403fcc 	andi	r5,r5,255
1000b7bc:	2940201c 	xori	r5,r5,128
1000b7c0:	297fe004 	addi	r5,r5,-128
1000b7c4:	0009883a 	mov	r4,zero
1000b7c8:	05bfffc4 	movi	r22,-1
1000b7cc:	28001226 	beq	r5,zero,1000b818 <_strtol_r+0x138>
1000b7d0:	8c7ff404 	addi	r17,r17,-48
1000b7d4:	8dc0170e 	bge	r17,r23,1000b834 <_strtol_r+0x154>
1000b7d8:	35800626 	beq	r6,r22,1000b7f4 <_strtol_r+0x114>
1000b7dc:	a9003a36 	bltu	r21,r4,1000b8c8 <_strtol_r+0x1e8>
1000b7e0:	25403726 	beq	r4,r21,1000b8c0 <_strtol_r+0x1e0>
1000b7e4:	900b883a 	mov	r5,r18
1000b7e8:	000f5540 	call	1000f554 <__mulsi3>
1000b7ec:	8889883a 	add	r4,r17,r2
1000b7f0:	01800044 	movi	r6,1
1000b7f4:	84400007 	ldb	r17,0(r16)
1000b7f8:	84000044 	addi	r16,r16,1
1000b7fc:	e447883a 	add	r3,fp,r17
1000b800:	18c00003 	ldbu	r3,0(r3)
1000b804:	1940010c 	andi	r5,r3,4
1000b808:	29403fcc 	andi	r5,r5,255
1000b80c:	2940201c 	xori	r5,r5,128
1000b810:	297fe004 	addi	r5,r5,-128
1000b814:	283fee1e 	bne	r5,zero,1000b7d0 <__alt_data_end+0xf800b7d0>
1000b818:	188000cc 	andi	r2,r3,3
1000b81c:	10000526 	beq	r2,zero,1000b834 <_strtol_r+0x154>
1000b820:	18c0004c 	andi	r3,r3,1
1000b824:	18002a26 	beq	r3,zero,1000b8d0 <_strtol_r+0x1f0>
1000b828:	00800dc4 	movi	r2,55
1000b82c:	88a3c83a 	sub	r17,r17,r2
1000b830:	8dffe916 	blt	r17,r23,1000b7d8 <__alt_data_end+0xf800b7d8>
1000b834:	00bfffc4 	movi	r2,-1
1000b838:	d8c00017 	ldw	r3,0(sp)
1000b83c:	30802726 	beq	r6,r2,1000b8dc <_strtol_r+0x1fc>
1000b840:	18000126 	beq	r3,zero,1000b848 <_strtol_r+0x168>
1000b844:	0109c83a 	sub	r4,zero,r4
1000b848:	2005883a 	mov	r2,r4
1000b84c:	a0000226 	beq	r20,zero,1000b858 <_strtol_r+0x178>
1000b850:	3000291e 	bne	r6,zero,1000b8f8 <_strtol_r+0x218>
1000b854:	a4c00015 	stw	r19,0(r20)
1000b858:	dfc00c17 	ldw	ra,48(sp)
1000b85c:	df000b17 	ldw	fp,44(sp)
1000b860:	ddc00a17 	ldw	r23,40(sp)
1000b864:	dd800917 	ldw	r22,36(sp)
1000b868:	dd400817 	ldw	r21,32(sp)
1000b86c:	dd000717 	ldw	r20,28(sp)
1000b870:	dcc00617 	ldw	r19,24(sp)
1000b874:	dc800517 	ldw	r18,20(sp)
1000b878:	dc400417 	ldw	r17,16(sp)
1000b87c:	dc000317 	ldw	r16,12(sp)
1000b880:	dec00d04 	addi	sp,sp,52
1000b884:	f800283a 	ret
1000b888:	00800404 	movi	r2,16
1000b88c:	b8bfb91e 	bne	r23,r2,1000b774 <__alt_data_end+0xf800b774>
1000b890:	00800c04 	movi	r2,48
1000b894:	88bfb71e 	bne	r17,r2,1000b774 <__alt_data_end+0xf800b774>
1000b898:	80800007 	ldb	r2,0(r16)
1000b89c:	00c01e04 	movi	r3,120
1000b8a0:	10c02026 	beq	r2,r3,1000b924 <_strtol_r+0x244>
1000b8a4:	00c01604 	movi	r3,88
1000b8a8:	10c01e26 	beq	r2,r3,1000b924 <_strtol_r+0x244>
1000b8ac:	b800221e 	bne	r23,zero,1000b938 <_strtol_r+0x258>
1000b8b0:	04800204 	movi	r18,8
1000b8b4:	04400c04 	movi	r17,48
1000b8b8:	902f883a 	mov	r23,r18
1000b8bc:	003fae06 	br	1000b778 <__alt_data_end+0xf800b778>
1000b8c0:	d8800117 	ldw	r2,4(sp)
1000b8c4:	147fc70e 	bge	r2,r17,1000b7e4 <__alt_data_end+0xf800b7e4>
1000b8c8:	01bfffc4 	movi	r6,-1
1000b8cc:	003fc906 	br	1000b7f4 <__alt_data_end+0xf800b7f4>
1000b8d0:	008015c4 	movi	r2,87
1000b8d4:	88a3c83a 	sub	r17,r17,r2
1000b8d8:	003fd506 	br	1000b830 <__alt_data_end+0xf800b830>
1000b8dc:	d9000217 	ldw	r4,8(sp)
1000b8e0:	1805003a 	cmpeq	r2,r3,zero
1000b8e4:	00c00884 	movi	r3,34
1000b8e8:	20c00015 	stw	r3,0(r4)
1000b8ec:	00e00034 	movhi	r3,32768
1000b8f0:	1885c83a 	sub	r2,r3,r2
1000b8f4:	a03fd826 	beq	r20,zero,1000b858 <__alt_data_end+0xf800b858>
1000b8f8:	84ffffc4 	addi	r19,r16,-1
1000b8fc:	003fd506 	br	1000b854 <__alt_data_end+0xf800b854>
1000b900:	00c00044 	movi	r3,1
1000b904:	84400007 	ldb	r17,0(r16)
1000b908:	d8c00015 	stw	r3,0(sp)
1000b90c:	80e1883a 	add	r16,r16,r3
1000b910:	003f9406 	br	1000b764 <__alt_data_end+0xf800b764>
1000b914:	84400007 	ldb	r17,0(r16)
1000b918:	d8000015 	stw	zero,0(sp)
1000b91c:	84000044 	addi	r16,r16,1
1000b920:	003f9006 	br	1000b764 <__alt_data_end+0xf800b764>
1000b924:	04800404 	movi	r18,16
1000b928:	84400047 	ldb	r17,1(r16)
1000b92c:	902f883a 	mov	r23,r18
1000b930:	84000084 	addi	r16,r16,2
1000b934:	003f9006 	br	1000b778 <__alt_data_end+0xf800b778>
1000b938:	b825883a 	mov	r18,r23
1000b93c:	04400c04 	movi	r17,48
1000b940:	003f8d06 	br	1000b778 <__alt_data_end+0xf800b778>

1000b944 <strtol>:
1000b944:	00840074 	movhi	r2,4097
1000b948:	10917f04 	addi	r2,r2,17916
1000b94c:	2007883a 	mov	r3,r4
1000b950:	11000017 	ldw	r4,0(r2)
1000b954:	2805883a 	mov	r2,r5
1000b958:	300f883a 	mov	r7,r6
1000b95c:	180b883a 	mov	r5,r3
1000b960:	100d883a 	mov	r6,r2
1000b964:	000b6e01 	jmpi	1000b6e0 <_strtol_r>

1000b968 <_strtoll_r>:
1000b968:	defff004 	addi	sp,sp,-64
1000b96c:	00840074 	movhi	r2,4097
1000b970:	10917d04 	addi	r2,r2,17908
1000b974:	ddc00d15 	stw	r23,52(sp)
1000b978:	15c00017 	ldw	r23,0(r2)
1000b97c:	df000e15 	stw	fp,56(sp)
1000b980:	dc000615 	stw	r16,24(sp)
1000b984:	dfc00f15 	stw	ra,60(sp)
1000b988:	dd800c15 	stw	r22,48(sp)
1000b98c:	dd400b15 	stw	r21,44(sp)
1000b990:	dd000a15 	stw	r20,40(sp)
1000b994:	dcc00915 	stw	r19,36(sp)
1000b998:	dc800815 	stw	r18,32(sp)
1000b99c:	dc400715 	stw	r17,28(sp)
1000b9a0:	d9400015 	stw	r5,0(sp)
1000b9a4:	d9000415 	stw	r4,16(sp)
1000b9a8:	d9800115 	stw	r6,4(sp)
1000b9ac:	3839883a 	mov	fp,r7
1000b9b0:	2821883a 	mov	r16,r5
1000b9b4:	82000007 	ldb	r8,0(r16)
1000b9b8:	84000044 	addi	r16,r16,1
1000b9bc:	ba05883a 	add	r2,r23,r8
1000b9c0:	10800003 	ldbu	r2,0(r2)
1000b9c4:	1080020c 	andi	r2,r2,8
1000b9c8:	10803fcc 	andi	r2,r2,255
1000b9cc:	1080201c 	xori	r2,r2,128
1000b9d0:	10bfe004 	addi	r2,r2,-128
1000b9d4:	103ff71e 	bne	r2,zero,1000b9b4 <__alt_data_end+0xf800b9b4>
1000b9d8:	00800b44 	movi	r2,45
1000b9dc:	40807a26 	beq	r8,r2,1000bbc8 <_strtoll_r+0x260>
1000b9e0:	00800ac4 	movi	r2,43
1000b9e4:	40808826 	beq	r8,r2,1000bc08 <_strtoll_r+0x2a0>
1000b9e8:	d8000215 	stw	zero,8(sp)
1000b9ec:	e000061e 	bne	fp,zero,1000ba08 <_strtoll_r+0xa0>
1000b9f0:	00800c04 	movi	r2,48
1000b9f4:	40808b26 	beq	r8,r2,1000bc24 <_strtoll_r+0x2bc>
1000b9f8:	04800284 	movi	r18,10
1000b9fc:	0027883a 	mov	r19,zero
1000ba00:	9039883a 	mov	fp,r18
1000ba04:	00000406 	br	1000ba18 <_strtoll_r+0xb0>
1000ba08:	00800404 	movi	r2,16
1000ba0c:	e0809926 	beq	fp,r2,1000bc74 <_strtoll_r+0x30c>
1000ba10:	e027d7fa 	srai	r19,fp,31
1000ba14:	e025883a 	mov	r18,fp
1000ba18:	d9000217 	ldw	r4,8(sp)
1000ba1c:	20006226 	beq	r4,zero,1000bba8 <_strtoll_r+0x240>
1000ba20:	002b883a 	mov	r21,zero
1000ba24:	04600034 	movhi	r17,32768
1000ba28:	a809883a 	mov	r4,r21
1000ba2c:	880b883a 	mov	r5,r17
1000ba30:	900d883a 	mov	r6,r18
1000ba34:	980f883a 	mov	r7,r19
1000ba38:	da000515 	stw	r8,20(sp)
1000ba3c:	000df0c0 	call	1000df0c <__umoddi3>
1000ba40:	a809883a 	mov	r4,r21
1000ba44:	880b883a 	mov	r5,r17
1000ba48:	900d883a 	mov	r6,r18
1000ba4c:	980f883a 	mov	r7,r19
1000ba50:	d8800315 	stw	r2,12(sp)
1000ba54:	000d8bc0 	call	1000d8bc <__udivdi3>
1000ba58:	da000517 	ldw	r8,20(sp)
1000ba5c:	182b883a 	mov	r21,r3
1000ba60:	1023883a 	mov	r17,r2
1000ba64:	ba0d883a 	add	r6,r23,r8
1000ba68:	31800003 	ldbu	r6,0(r6)
1000ba6c:	0007883a 	mov	r3,zero
1000ba70:	0009883a 	mov	r4,zero
1000ba74:	3240010c 	andi	r9,r6,4
1000ba78:	4a403fcc 	andi	r9,r9,255
1000ba7c:	4a40201c 	xori	r9,r9,128
1000ba80:	4a7fe004 	addi	r9,r9,-128
1000ba84:	000b883a 	mov	r5,zero
1000ba88:	05bfffc4 	movi	r22,-1
1000ba8c:	48001026 	beq	r9,zero,1000bad0 <_strtoll_r+0x168>
1000ba90:	453ff404 	addi	r20,r8,-48
1000ba94:	a700150e 	bge	r20,fp,1000baec <_strtoll_r+0x184>
1000ba98:	1d800426 	beq	r3,r22,1000baac <_strtoll_r+0x144>
1000ba9c:	a9400236 	bltu	r21,r5,1000baa8 <_strtoll_r+0x140>
1000baa0:	2d402e1e 	bne	r5,r21,1000bb5c <_strtoll_r+0x1f4>
1000baa4:	89002d2e 	bgeu	r17,r4,1000bb5c <_strtoll_r+0x1f4>
1000baa8:	00ffffc4 	movi	r3,-1
1000baac:	82000007 	ldb	r8,0(r16)
1000bab0:	84000044 	addi	r16,r16,1
1000bab4:	ba0d883a 	add	r6,r23,r8
1000bab8:	31800003 	ldbu	r6,0(r6)
1000babc:	3240010c 	andi	r9,r6,4
1000bac0:	4a403fcc 	andi	r9,r9,255
1000bac4:	4a40201c 	xori	r9,r9,128
1000bac8:	4a7fe004 	addi	r9,r9,-128
1000bacc:	483ff01e 	bne	r9,zero,1000ba90 <__alt_data_end+0xf800ba90>
1000bad0:	308000cc 	andi	r2,r6,3
1000bad4:	10000526 	beq	r2,zero,1000baec <_strtoll_r+0x184>
1000bad8:	3180004c 	andi	r6,r6,1
1000badc:	30002b26 	beq	r6,zero,1000bb8c <_strtoll_r+0x224>
1000bae0:	00800dc4 	movi	r2,55
1000bae4:	40a9c83a 	sub	r20,r8,r2
1000bae8:	a73feb16 	blt	r20,fp,1000ba98 <__alt_data_end+0xf800ba98>
1000baec:	00bfffc4 	movi	r2,-1
1000baf0:	18803a26 	beq	r3,r2,1000bbdc <_strtoll_r+0x274>
1000baf4:	d8800217 	ldw	r2,8(sp)
1000baf8:	10000426 	beq	r2,zero,1000bb0c <_strtoll_r+0x1a4>
1000bafc:	0109c83a 	sub	r4,zero,r4
1000bb00:	2004c03a 	cmpne	r2,r4,zero
1000bb04:	014bc83a 	sub	r5,zero,r5
1000bb08:	288bc83a 	sub	r5,r5,r2
1000bb0c:	d8800117 	ldw	r2,4(sp)
1000bb10:	10004f26 	beq	r2,zero,1000bc50 <_strtoll_r+0x2e8>
1000bb14:	2005883a 	mov	r2,r4
1000bb18:	1800271e 	bne	r3,zero,1000bbb8 <_strtoll_r+0x250>
1000bb1c:	2807883a 	mov	r3,r5
1000bb20:	d9400017 	ldw	r5,0(sp)
1000bb24:	d9000117 	ldw	r4,4(sp)
1000bb28:	21400015 	stw	r5,0(r4)
1000bb2c:	dfc00f17 	ldw	ra,60(sp)
1000bb30:	df000e17 	ldw	fp,56(sp)
1000bb34:	ddc00d17 	ldw	r23,52(sp)
1000bb38:	dd800c17 	ldw	r22,48(sp)
1000bb3c:	dd400b17 	ldw	r21,44(sp)
1000bb40:	dd000a17 	ldw	r20,40(sp)
1000bb44:	dcc00917 	ldw	r19,36(sp)
1000bb48:	dc800817 	ldw	r18,32(sp)
1000bb4c:	dc400717 	ldw	r17,28(sp)
1000bb50:	dc000617 	ldw	r16,24(sp)
1000bb54:	dec01004 	addi	sp,sp,64
1000bb58:	f800283a 	ret
1000bb5c:	24400e26 	beq	r4,r17,1000bb98 <_strtoll_r+0x230>
1000bb60:	900d883a 	mov	r6,r18
1000bb64:	980f883a 	mov	r7,r19
1000bb68:	000d7280 	call	1000d728 <__muldi3>
1000bb6c:	a00dd7fa 	srai	r6,r20,31
1000bb70:	a085883a 	add	r2,r20,r2
1000bb74:	1511803a 	cmpltu	r8,r2,r20
1000bb78:	30c7883a 	add	r3,r6,r3
1000bb7c:	40cb883a 	add	r5,r8,r3
1000bb80:	1009883a 	mov	r4,r2
1000bb84:	00c00044 	movi	r3,1
1000bb88:	003fc806 	br	1000baac <__alt_data_end+0xf800baac>
1000bb8c:	008015c4 	movi	r2,87
1000bb90:	40a9c83a 	sub	r20,r8,r2
1000bb94:	003fd406 	br	1000bae8 <__alt_data_end+0xf800bae8>
1000bb98:	2d7ff11e 	bne	r5,r21,1000bb60 <__alt_data_end+0xf800bb60>
1000bb9c:	d8800317 	ldw	r2,12(sp)
1000bba0:	153fc116 	blt	r2,r20,1000baa8 <__alt_data_end+0xf800baa8>
1000bba4:	003fee06 	br	1000bb60 <__alt_data_end+0xf800bb60>
1000bba8:	057fffc4 	movi	r21,-1
1000bbac:	04600034 	movhi	r17,32768
1000bbb0:	8c7fffc4 	addi	r17,r17,-1
1000bbb4:	003f9c06 	br	1000ba28 <__alt_data_end+0xf800ba28>
1000bbb8:	2807883a 	mov	r3,r5
1000bbbc:	843fffc4 	addi	r16,r16,-1
1000bbc0:	dc000015 	stw	r16,0(sp)
1000bbc4:	003fd606 	br	1000bb20 <__alt_data_end+0xf800bb20>
1000bbc8:	00800044 	movi	r2,1
1000bbcc:	82000007 	ldb	r8,0(r16)
1000bbd0:	d8800215 	stw	r2,8(sp)
1000bbd4:	80a1883a 	add	r16,r16,r2
1000bbd8:	003f8406 	br	1000b9ec <__alt_data_end+0xf800b9ec>
1000bbdc:	d9000217 	ldw	r4,8(sp)
1000bbe0:	20000d1e 	bne	r4,zero,1000bc18 <_strtoll_r+0x2b0>
1000bbe4:	1805883a 	mov	r2,r3
1000bbe8:	00e00034 	movhi	r3,32768
1000bbec:	18ffffc4 	addi	r3,r3,-1
1000bbf0:	d9400417 	ldw	r5,16(sp)
1000bbf4:	01000884 	movi	r4,34
1000bbf8:	29000015 	stw	r4,0(r5)
1000bbfc:	d9000117 	ldw	r4,4(sp)
1000bc00:	203fee1e 	bne	r4,zero,1000bbbc <__alt_data_end+0xf800bbbc>
1000bc04:	003fc906 	br	1000bb2c <__alt_data_end+0xf800bb2c>
1000bc08:	82000007 	ldb	r8,0(r16)
1000bc0c:	d8000215 	stw	zero,8(sp)
1000bc10:	84000044 	addi	r16,r16,1
1000bc14:	003f7506 	br	1000b9ec <__alt_data_end+0xf800b9ec>
1000bc18:	0005883a 	mov	r2,zero
1000bc1c:	00e00034 	movhi	r3,32768
1000bc20:	003ff306 	br	1000bbf0 <__alt_data_end+0xf800bbf0>
1000bc24:	80800007 	ldb	r2,0(r16)
1000bc28:	00c01e04 	movi	r3,120
1000bc2c:	10c00b26 	beq	r2,r3,1000bc5c <_strtoll_r+0x2f4>
1000bc30:	00c01604 	movi	r3,88
1000bc34:	10c00926 	beq	r2,r3,1000bc5c <_strtoll_r+0x2f4>
1000bc38:	e000131e 	bne	fp,zero,1000bc88 <_strtoll_r+0x320>
1000bc3c:	04800204 	movi	r18,8
1000bc40:	0027883a 	mov	r19,zero
1000bc44:	02000c04 	movi	r8,48
1000bc48:	9039883a 	mov	fp,r18
1000bc4c:	003f7206 	br	1000ba18 <__alt_data_end+0xf800ba18>
1000bc50:	2005883a 	mov	r2,r4
1000bc54:	2807883a 	mov	r3,r5
1000bc58:	003fb406 	br	1000bb2c <__alt_data_end+0xf800bb2c>
1000bc5c:	04800404 	movi	r18,16
1000bc60:	82000047 	ldb	r8,1(r16)
1000bc64:	0027883a 	mov	r19,zero
1000bc68:	84000084 	addi	r16,r16,2
1000bc6c:	9039883a 	mov	fp,r18
1000bc70:	003f6906 	br	1000ba18 <__alt_data_end+0xf800ba18>
1000bc74:	00800c04 	movi	r2,48
1000bc78:	40bfea26 	beq	r8,r2,1000bc24 <__alt_data_end+0xf800bc24>
1000bc7c:	e025883a 	mov	r18,fp
1000bc80:	0027883a 	mov	r19,zero
1000bc84:	003f6406 	br	1000ba18 <__alt_data_end+0xf800ba18>
1000bc88:	e025883a 	mov	r18,fp
1000bc8c:	e027d7fa 	srai	r19,fp,31
1000bc90:	02000c04 	movi	r8,48
1000bc94:	003f6006 	br	1000ba18 <__alt_data_end+0xf800ba18>

1000bc98 <_strtoul_r>:
1000bc98:	defff304 	addi	sp,sp,-52
1000bc9c:	00840074 	movhi	r2,4097
1000bca0:	10917d04 	addi	r2,r2,17908
1000bca4:	df000b15 	stw	fp,44(sp)
1000bca8:	17000017 	ldw	fp,0(r2)
1000bcac:	ddc00a15 	stw	r23,40(sp)
1000bcb0:	dd000715 	stw	r20,28(sp)
1000bcb4:	dcc00615 	stw	r19,24(sp)
1000bcb8:	dc000315 	stw	r16,12(sp)
1000bcbc:	dfc00c15 	stw	ra,48(sp)
1000bcc0:	dd800915 	stw	r22,36(sp)
1000bcc4:	dd400815 	stw	r21,32(sp)
1000bcc8:	dc800515 	stw	r18,20(sp)
1000bccc:	dc400415 	stw	r17,16(sp)
1000bcd0:	2827883a 	mov	r19,r5
1000bcd4:	d9000215 	stw	r4,8(sp)
1000bcd8:	3029883a 	mov	r20,r6
1000bcdc:	382f883a 	mov	r23,r7
1000bce0:	2821883a 	mov	r16,r5
1000bce4:	84400007 	ldb	r17,0(r16)
1000bce8:	84000044 	addi	r16,r16,1
1000bcec:	e445883a 	add	r2,fp,r17
1000bcf0:	10800003 	ldbu	r2,0(r2)
1000bcf4:	1080020c 	andi	r2,r2,8
1000bcf8:	10803fcc 	andi	r2,r2,255
1000bcfc:	1080201c 	xori	r2,r2,128
1000bd00:	10bfe004 	addi	r2,r2,-128
1000bd04:	103ff71e 	bne	r2,zero,1000bce4 <__alt_data_end+0xf800bce4>
1000bd08:	00800b44 	movi	r2,45
1000bd0c:	88805e26 	beq	r17,r2,1000be88 <_strtoul_r+0x1f0>
1000bd10:	00800ac4 	movi	r2,43
1000bd14:	88806126 	beq	r17,r2,1000be9c <_strtoul_r+0x204>
1000bd18:	d8000115 	stw	zero,4(sp)
1000bd1c:	b800091e 	bne	r23,zero,1000bd44 <_strtoul_r+0xac>
1000bd20:	00800c04 	movi	r2,48
1000bd24:	88806326 	beq	r17,r2,1000beb4 <_strtoul_r+0x21c>
1000bd28:	05c00284 	movi	r23,10
1000bd2c:	00800144 	movi	r2,5
1000bd30:	d8800015 	stw	r2,0(sp)
1000bd34:	058666b4 	movhi	r22,6554
1000bd38:	b5a66644 	addi	r22,r22,-26215
1000bd3c:	b825883a 	mov	r18,r23
1000bd40:	00000b06 	br	1000bd70 <_strtoul_r+0xd8>
1000bd44:	00800404 	movi	r2,16
1000bd48:	b8805826 	beq	r23,r2,1000beac <_strtoul_r+0x214>
1000bd4c:	013fffc4 	movi	r4,-1
1000bd50:	b80b883a 	mov	r5,r23
1000bd54:	000f5440 	call	1000f544 <__udivsi3>
1000bd58:	013fffc4 	movi	r4,-1
1000bd5c:	b80b883a 	mov	r5,r23
1000bd60:	102d883a 	mov	r22,r2
1000bd64:	000f54c0 	call	1000f54c <__umodsi3>
1000bd68:	d8800015 	stw	r2,0(sp)
1000bd6c:	b825883a 	mov	r18,r23
1000bd70:	e447883a 	add	r3,fp,r17
1000bd74:	18c00003 	ldbu	r3,0(r3)
1000bd78:	0011883a 	mov	r8,zero
1000bd7c:	0009883a 	mov	r4,zero
1000bd80:	1980010c 	andi	r6,r3,4
1000bd84:	31803fcc 	andi	r6,r6,255
1000bd88:	3180201c 	xori	r6,r6,128
1000bd8c:	31bfe004 	addi	r6,r6,-128
1000bd90:	057fffc4 	movi	r21,-1
1000bd94:	30001226 	beq	r6,zero,1000bde0 <_strtoul_r+0x148>
1000bd98:	8c7ff404 	addi	r17,r17,-48
1000bd9c:	8dc0170e 	bge	r17,r23,1000bdfc <_strtoul_r+0x164>
1000bda0:	45400626 	beq	r8,r21,1000bdbc <_strtoul_r+0x124>
1000bda4:	b1002c36 	bltu	r22,r4,1000be58 <_strtoul_r+0x1c0>
1000bda8:	25802926 	beq	r4,r22,1000be50 <_strtoul_r+0x1b8>
1000bdac:	900b883a 	mov	r5,r18
1000bdb0:	000f5540 	call	1000f554 <__mulsi3>
1000bdb4:	8889883a 	add	r4,r17,r2
1000bdb8:	02000044 	movi	r8,1
1000bdbc:	84400007 	ldb	r17,0(r16)
1000bdc0:	84000044 	addi	r16,r16,1
1000bdc4:	e447883a 	add	r3,fp,r17
1000bdc8:	18c00003 	ldbu	r3,0(r3)
1000bdcc:	1980010c 	andi	r6,r3,4
1000bdd0:	31803fcc 	andi	r6,r6,255
1000bdd4:	3180201c 	xori	r6,r6,128
1000bdd8:	31bfe004 	addi	r6,r6,-128
1000bddc:	303fee1e 	bne	r6,zero,1000bd98 <__alt_data_end+0xf800bd98>
1000bde0:	188000cc 	andi	r2,r3,3
1000bde4:	10000526 	beq	r2,zero,1000bdfc <_strtoul_r+0x164>
1000bde8:	18c0004c 	andi	r3,r3,1
1000bdec:	18001c26 	beq	r3,zero,1000be60 <_strtoul_r+0x1c8>
1000bdf0:	00800dc4 	movi	r2,55
1000bdf4:	88a3c83a 	sub	r17,r17,r2
1000bdf8:	8dffe916 	blt	r17,r23,1000bda0 <__alt_data_end+0xf800bda0>
1000bdfc:	00bfffc4 	movi	r2,-1
1000be00:	40801a26 	beq	r8,r2,1000be6c <_strtoul_r+0x1d4>
1000be04:	d8c00117 	ldw	r3,4(sp)
1000be08:	18000126 	beq	r3,zero,1000be10 <_strtoul_r+0x178>
1000be0c:	0109c83a 	sub	r4,zero,r4
1000be10:	a0000226 	beq	r20,zero,1000be1c <_strtoul_r+0x184>
1000be14:	40001a1e 	bne	r8,zero,1000be80 <_strtoul_r+0x1e8>
1000be18:	a4c00015 	stw	r19,0(r20)
1000be1c:	2005883a 	mov	r2,r4
1000be20:	dfc00c17 	ldw	ra,48(sp)
1000be24:	df000b17 	ldw	fp,44(sp)
1000be28:	ddc00a17 	ldw	r23,40(sp)
1000be2c:	dd800917 	ldw	r22,36(sp)
1000be30:	dd400817 	ldw	r21,32(sp)
1000be34:	dd000717 	ldw	r20,28(sp)
1000be38:	dcc00617 	ldw	r19,24(sp)
1000be3c:	dc800517 	ldw	r18,20(sp)
1000be40:	dc400417 	ldw	r17,16(sp)
1000be44:	dc000317 	ldw	r16,12(sp)
1000be48:	dec00d04 	addi	sp,sp,52
1000be4c:	f800283a 	ret
1000be50:	d8800017 	ldw	r2,0(sp)
1000be54:	147fd50e 	bge	r2,r17,1000bdac <__alt_data_end+0xf800bdac>
1000be58:	023fffc4 	movi	r8,-1
1000be5c:	003fd706 	br	1000bdbc <__alt_data_end+0xf800bdbc>
1000be60:	008015c4 	movi	r2,87
1000be64:	88a3c83a 	sub	r17,r17,r2
1000be68:	003fe306 	br	1000bdf8 <__alt_data_end+0xf800bdf8>
1000be6c:	d8c00217 	ldw	r3,8(sp)
1000be70:	00800884 	movi	r2,34
1000be74:	4009883a 	mov	r4,r8
1000be78:	18800015 	stw	r2,0(r3)
1000be7c:	a03fe726 	beq	r20,zero,1000be1c <__alt_data_end+0xf800be1c>
1000be80:	84ffffc4 	addi	r19,r16,-1
1000be84:	003fe406 	br	1000be18 <__alt_data_end+0xf800be18>
1000be88:	00c00044 	movi	r3,1
1000be8c:	84400007 	ldb	r17,0(r16)
1000be90:	d8c00115 	stw	r3,4(sp)
1000be94:	80e1883a 	add	r16,r16,r3
1000be98:	003fa006 	br	1000bd1c <__alt_data_end+0xf800bd1c>
1000be9c:	84400007 	ldb	r17,0(r16)
1000bea0:	d8000115 	stw	zero,4(sp)
1000bea4:	84000044 	addi	r16,r16,1
1000bea8:	003f9c06 	br	1000bd1c <__alt_data_end+0xf800bd1c>
1000beac:	00800c04 	movi	r2,48
1000beb0:	88bfa61e 	bne	r17,r2,1000bd4c <__alt_data_end+0xf800bd4c>
1000beb4:	80800007 	ldb	r2,0(r16)
1000beb8:	00c01e04 	movi	r3,120
1000bebc:	10c00b26 	beq	r2,r3,1000beec <_strtoul_r+0x254>
1000bec0:	00c01604 	movi	r3,88
1000bec4:	10c00926 	beq	r2,r3,1000beec <_strtoul_r+0x254>
1000bec8:	b800111e 	bne	r23,zero,1000bf10 <_strtoul_r+0x278>
1000becc:	04800204 	movi	r18,8
1000bed0:	008001c4 	movi	r2,7
1000bed4:	d8800015 	stw	r2,0(sp)
1000bed8:	05880034 	movhi	r22,8192
1000bedc:	b5bfffc4 	addi	r22,r22,-1
1000bee0:	04400c04 	movi	r17,48
1000bee4:	902f883a 	mov	r23,r18
1000bee8:	003fa106 	br	1000bd70 <__alt_data_end+0xf800bd70>
1000beec:	04800404 	movi	r18,16
1000bef0:	008003c4 	movi	r2,15
1000bef4:	84400047 	ldb	r17,1(r16)
1000bef8:	d8800015 	stw	r2,0(sp)
1000befc:	84000084 	addi	r16,r16,2
1000bf00:	05840034 	movhi	r22,4096
1000bf04:	b5bfffc4 	addi	r22,r22,-1
1000bf08:	902f883a 	mov	r23,r18
1000bf0c:	003f9806 	br	1000bd70 <__alt_data_end+0xf800bd70>
1000bf10:	013fffc4 	movi	r4,-1
1000bf14:	b80b883a 	mov	r5,r23
1000bf18:	000f5440 	call	1000f544 <__udivsi3>
1000bf1c:	013fffc4 	movi	r4,-1
1000bf20:	b80b883a 	mov	r5,r23
1000bf24:	102d883a 	mov	r22,r2
1000bf28:	000f54c0 	call	1000f54c <__umodsi3>
1000bf2c:	d8800015 	stw	r2,0(sp)
1000bf30:	b825883a 	mov	r18,r23
1000bf34:	04400c04 	movi	r17,48
1000bf38:	003f8d06 	br	1000bd70 <__alt_data_end+0xf800bd70>

1000bf3c <strtoul>:
1000bf3c:	00840074 	movhi	r2,4097
1000bf40:	10917f04 	addi	r2,r2,17916
1000bf44:	2007883a 	mov	r3,r4
1000bf48:	11000017 	ldw	r4,0(r2)
1000bf4c:	2805883a 	mov	r2,r5
1000bf50:	300f883a 	mov	r7,r6
1000bf54:	180b883a 	mov	r5,r3
1000bf58:	100d883a 	mov	r6,r2
1000bf5c:	000bc981 	jmpi	1000bc98 <_strtoul_r>

1000bf60 <_strtoull_r>:
1000bf60:	defff004 	addi	sp,sp,-64
1000bf64:	00840074 	movhi	r2,4097
1000bf68:	10917d04 	addi	r2,r2,17908
1000bf6c:	dd800c15 	stw	r22,48(sp)
1000bf70:	15800017 	ldw	r22,0(r2)
1000bf74:	df000e15 	stw	fp,56(sp)
1000bf78:	dc000615 	stw	r16,24(sp)
1000bf7c:	dfc00f15 	stw	ra,60(sp)
1000bf80:	ddc00d15 	stw	r23,52(sp)
1000bf84:	dd400b15 	stw	r21,44(sp)
1000bf88:	dd000a15 	stw	r20,40(sp)
1000bf8c:	dcc00915 	stw	r19,36(sp)
1000bf90:	dc800815 	stw	r18,32(sp)
1000bf94:	dc400715 	stw	r17,28(sp)
1000bf98:	d9400015 	stw	r5,0(sp)
1000bf9c:	d9000415 	stw	r4,16(sp)
1000bfa0:	d9800115 	stw	r6,4(sp)
1000bfa4:	3839883a 	mov	fp,r7
1000bfa8:	2821883a 	mov	r16,r5
1000bfac:	82000007 	ldb	r8,0(r16)
1000bfb0:	84000044 	addi	r16,r16,1
1000bfb4:	b205883a 	add	r2,r22,r8
1000bfb8:	10800003 	ldbu	r2,0(r2)
1000bfbc:	1080020c 	andi	r2,r2,8
1000bfc0:	10803fcc 	andi	r2,r2,255
1000bfc4:	1080201c 	xori	r2,r2,128
1000bfc8:	10bfe004 	addi	r2,r2,-128
1000bfcc:	103ff71e 	bne	r2,zero,1000bfac <__alt_data_end+0xf800bfac>
1000bfd0:	00800b44 	movi	r2,45
1000bfd4:	40807e26 	beq	r8,r2,1000c1d0 <_strtoull_r+0x270>
1000bfd8:	00800ac4 	movi	r2,43
1000bfdc:	40808126 	beq	r8,r2,1000c1e4 <_strtoull_r+0x284>
1000bfe0:	d8000315 	stw	zero,12(sp)
1000bfe4:	e0000c1e 	bne	fp,zero,1000c018 <_strtoull_r+0xb8>
1000bfe8:	00800c04 	movi	r2,48
1000bfec:	40808126 	beq	r8,r2,1000c1f4 <_strtoull_r+0x294>
1000bff0:	04c00284 	movi	r19,10
1000bff4:	00800144 	movi	r2,5
1000bff8:	d8800215 	stw	r2,8(sp)
1000bffc:	046666b4 	movhi	r17,39322
1000c000:	8c666644 	addi	r17,r17,-26215
1000c004:	05c666b4 	movhi	r23,6554
1000c008:	bde66644 	addi	r23,r23,-26215
1000c00c:	0025883a 	mov	r18,zero
1000c010:	9839883a 	mov	fp,r19
1000c014:	00001306 	br	1000c064 <_strtoull_r+0x104>
1000c018:	00800404 	movi	r2,16
1000c01c:	e0809026 	beq	fp,r2,1000c260 <_strtoull_r+0x300>
1000c020:	e025d7fa 	srai	r18,fp,31
1000c024:	013fffc4 	movi	r4,-1
1000c028:	200b883a 	mov	r5,r4
1000c02c:	e00d883a 	mov	r6,fp
1000c030:	900f883a 	mov	r7,r18
1000c034:	da000515 	stw	r8,20(sp)
1000c038:	000d8bc0 	call	1000d8bc <__udivdi3>
1000c03c:	013fffc4 	movi	r4,-1
1000c040:	200b883a 	mov	r5,r4
1000c044:	e00d883a 	mov	r6,fp
1000c048:	900f883a 	mov	r7,r18
1000c04c:	1023883a 	mov	r17,r2
1000c050:	182f883a 	mov	r23,r3
1000c054:	000df0c0 	call	1000df0c <__umoddi3>
1000c058:	da000517 	ldw	r8,20(sp)
1000c05c:	d8800215 	stw	r2,8(sp)
1000c060:	e027883a 	mov	r19,fp
1000c064:	b20d883a 	add	r6,r22,r8
1000c068:	32400003 	ldbu	r9,0(r6)
1000c06c:	0007883a 	mov	r3,zero
1000c070:	0009883a 	mov	r4,zero
1000c074:	4a80010c 	andi	r10,r9,4
1000c078:	52803fcc 	andi	r10,r10,255
1000c07c:	5280201c 	xori	r10,r10,128
1000c080:	52bfe004 	addi	r10,r10,-128
1000c084:	000b883a 	mov	r5,zero
1000c088:	057fffc4 	movi	r21,-1
1000c08c:	50001026 	beq	r10,zero,1000c0d0 <_strtoull_r+0x170>
1000c090:	453ff404 	addi	r20,r8,-48
1000c094:	a700150e 	bge	r20,fp,1000c0ec <_strtoull_r+0x18c>
1000c098:	1d400426 	beq	r3,r21,1000c0ac <_strtoull_r+0x14c>
1000c09c:	b9400236 	bltu	r23,r5,1000c0a8 <_strtoull_r+0x148>
1000c0a0:	2dc0301e 	bne	r5,r23,1000c164 <_strtoull_r+0x204>
1000c0a4:	89002f2e 	bgeu	r17,r4,1000c164 <_strtoull_r+0x204>
1000c0a8:	00ffffc4 	movi	r3,-1
1000c0ac:	82000007 	ldb	r8,0(r16)
1000c0b0:	84000044 	addi	r16,r16,1
1000c0b4:	b20d883a 	add	r6,r22,r8
1000c0b8:	32400003 	ldbu	r9,0(r6)
1000c0bc:	4a80010c 	andi	r10,r9,4
1000c0c0:	52803fcc 	andi	r10,r10,255
1000c0c4:	5280201c 	xori	r10,r10,128
1000c0c8:	52bfe004 	addi	r10,r10,-128
1000c0cc:	503ff01e 	bne	r10,zero,1000c090 <__alt_data_end+0xf800c090>
1000c0d0:	488000cc 	andi	r2,r9,3
1000c0d4:	10000526 	beq	r2,zero,1000c0ec <_strtoull_r+0x18c>
1000c0d8:	4a40004c 	andi	r9,r9,1
1000c0dc:	48002d26 	beq	r9,zero,1000c194 <_strtoull_r+0x234>
1000c0e0:	00800dc4 	movi	r2,55
1000c0e4:	40a9c83a 	sub	r20,r8,r2
1000c0e8:	a73feb16 	blt	r20,fp,1000c098 <__alt_data_end+0xf800c098>
1000c0ec:	00bfffc4 	movi	r2,-1
1000c0f0:	18802f26 	beq	r3,r2,1000c1b0 <_strtoull_r+0x250>
1000c0f4:	d8800317 	ldw	r2,12(sp)
1000c0f8:	10000426 	beq	r2,zero,1000c10c <_strtoull_r+0x1ac>
1000c0fc:	0109c83a 	sub	r4,zero,r4
1000c100:	2004c03a 	cmpne	r2,r4,zero
1000c104:	014bc83a 	sub	r5,zero,r5
1000c108:	288bc83a 	sub	r5,r5,r2
1000c10c:	d8800117 	ldw	r2,4(sp)
1000c110:	10000626 	beq	r2,zero,1000c12c <_strtoull_r+0x1cc>
1000c114:	18000226 	beq	r3,zero,1000c120 <_strtoull_r+0x1c0>
1000c118:	843fffc4 	addi	r16,r16,-1
1000c11c:	dc000015 	stw	r16,0(sp)
1000c120:	d8800017 	ldw	r2,0(sp)
1000c124:	d8c00117 	ldw	r3,4(sp)
1000c128:	18800015 	stw	r2,0(r3)
1000c12c:	2005883a 	mov	r2,r4
1000c130:	2807883a 	mov	r3,r5
1000c134:	dfc00f17 	ldw	ra,60(sp)
1000c138:	df000e17 	ldw	fp,56(sp)
1000c13c:	ddc00d17 	ldw	r23,52(sp)
1000c140:	dd800c17 	ldw	r22,48(sp)
1000c144:	dd400b17 	ldw	r21,44(sp)
1000c148:	dd000a17 	ldw	r20,40(sp)
1000c14c:	dcc00917 	ldw	r19,36(sp)
1000c150:	dc800817 	ldw	r18,32(sp)
1000c154:	dc400717 	ldw	r17,28(sp)
1000c158:	dc000617 	ldw	r16,24(sp)
1000c15c:	dec01004 	addi	sp,sp,64
1000c160:	f800283a 	ret
1000c164:	24400e26 	beq	r4,r17,1000c1a0 <_strtoull_r+0x240>
1000c168:	980d883a 	mov	r6,r19
1000c16c:	900f883a 	mov	r7,r18
1000c170:	000d7280 	call	1000d728 <__muldi3>
1000c174:	a00dd7fa 	srai	r6,r20,31
1000c178:	a085883a 	add	r2,r20,r2
1000c17c:	1511803a 	cmpltu	r8,r2,r20
1000c180:	30c7883a 	add	r3,r6,r3
1000c184:	40cb883a 	add	r5,r8,r3
1000c188:	1009883a 	mov	r4,r2
1000c18c:	00c00044 	movi	r3,1
1000c190:	003fc606 	br	1000c0ac <__alt_data_end+0xf800c0ac>
1000c194:	008015c4 	movi	r2,87
1000c198:	40a9c83a 	sub	r20,r8,r2
1000c19c:	003fd206 	br	1000c0e8 <__alt_data_end+0xf800c0e8>
1000c1a0:	2dfff11e 	bne	r5,r23,1000c168 <__alt_data_end+0xf800c168>
1000c1a4:	d8800217 	ldw	r2,8(sp)
1000c1a8:	153fbf16 	blt	r2,r20,1000c0a8 <__alt_data_end+0xf800c0a8>
1000c1ac:	003fee06 	br	1000c168 <__alt_data_end+0xf800c168>
1000c1b0:	d9000417 	ldw	r4,16(sp)
1000c1b4:	00800884 	movi	r2,34
1000c1b8:	180b883a 	mov	r5,r3
1000c1bc:	20800015 	stw	r2,0(r4)
1000c1c0:	d8800117 	ldw	r2,4(sp)
1000c1c4:	1809883a 	mov	r4,r3
1000c1c8:	103fd31e 	bne	r2,zero,1000c118 <__alt_data_end+0xf800c118>
1000c1cc:	003fd706 	br	1000c12c <__alt_data_end+0xf800c12c>
1000c1d0:	00800044 	movi	r2,1
1000c1d4:	82000007 	ldb	r8,0(r16)
1000c1d8:	d8800315 	stw	r2,12(sp)
1000c1dc:	80a1883a 	add	r16,r16,r2
1000c1e0:	003f8006 	br	1000bfe4 <__alt_data_end+0xf800bfe4>
1000c1e4:	82000007 	ldb	r8,0(r16)
1000c1e8:	d8000315 	stw	zero,12(sp)
1000c1ec:	84000044 	addi	r16,r16,1
1000c1f0:	003f7c06 	br	1000bfe4 <__alt_data_end+0xf800bfe4>
1000c1f4:	80800007 	ldb	r2,0(r16)
1000c1f8:	00c01e04 	movi	r3,120
1000c1fc:	10c00d26 	beq	r2,r3,1000c234 <_strtoull_r+0x2d4>
1000c200:	00c01604 	movi	r3,88
1000c204:	10c00b26 	beq	r2,r3,1000c234 <_strtoull_r+0x2d4>
1000c208:	e000291e 	bne	fp,zero,1000c2b0 <_strtoull_r+0x350>
1000c20c:	04c00204 	movi	r19,8
1000c210:	008001c4 	movi	r2,7
1000c214:	d8800215 	stw	r2,8(sp)
1000c218:	047fffc4 	movi	r17,-1
1000c21c:	05c80034 	movhi	r23,8192
1000c220:	bdffffc4 	addi	r23,r23,-1
1000c224:	0025883a 	mov	r18,zero
1000c228:	02000c04 	movi	r8,48
1000c22c:	9839883a 	mov	fp,r19
1000c230:	003f8c06 	br	1000c064 <__alt_data_end+0xf800c064>
1000c234:	04c00404 	movi	r19,16
1000c238:	008003c4 	movi	r2,15
1000c23c:	82000047 	ldb	r8,1(r16)
1000c240:	d8800215 	stw	r2,8(sp)
1000c244:	84000084 	addi	r16,r16,2
1000c248:	047fffc4 	movi	r17,-1
1000c24c:	05c40034 	movhi	r23,4096
1000c250:	bdffffc4 	addi	r23,r23,-1
1000c254:	0025883a 	mov	r18,zero
1000c258:	9839883a 	mov	fp,r19
1000c25c:	003f8106 	br	1000c064 <__alt_data_end+0xf800c064>
1000c260:	00800c04 	movi	r2,48
1000c264:	40bfe326 	beq	r8,r2,1000c1f4 <__alt_data_end+0xf800c1f4>
1000c268:	013fffc4 	movi	r4,-1
1000c26c:	200b883a 	mov	r5,r4
1000c270:	e00d883a 	mov	r6,fp
1000c274:	000f883a 	mov	r7,zero
1000c278:	da000515 	stw	r8,20(sp)
1000c27c:	000d8bc0 	call	1000d8bc <__udivdi3>
1000c280:	013fffc4 	movi	r4,-1
1000c284:	200b883a 	mov	r5,r4
1000c288:	e00d883a 	mov	r6,fp
1000c28c:	000f883a 	mov	r7,zero
1000c290:	1023883a 	mov	r17,r2
1000c294:	182f883a 	mov	r23,r3
1000c298:	000df0c0 	call	1000df0c <__umoddi3>
1000c29c:	d8800215 	stw	r2,8(sp)
1000c2a0:	e027883a 	mov	r19,fp
1000c2a4:	0025883a 	mov	r18,zero
1000c2a8:	da000517 	ldw	r8,20(sp)
1000c2ac:	003f6d06 	br	1000c064 <__alt_data_end+0xf800c064>
1000c2b0:	e025d7fa 	srai	r18,fp,31
1000c2b4:	013fffc4 	movi	r4,-1
1000c2b8:	200b883a 	mov	r5,r4
1000c2bc:	e00d883a 	mov	r6,fp
1000c2c0:	900f883a 	mov	r7,r18
1000c2c4:	000d8bc0 	call	1000d8bc <__udivdi3>
1000c2c8:	013fffc4 	movi	r4,-1
1000c2cc:	200b883a 	mov	r5,r4
1000c2d0:	e00d883a 	mov	r6,fp
1000c2d4:	900f883a 	mov	r7,r18
1000c2d8:	1023883a 	mov	r17,r2
1000c2dc:	182f883a 	mov	r23,r3
1000c2e0:	000df0c0 	call	1000df0c <__umoddi3>
1000c2e4:	d8800215 	stw	r2,8(sp)
1000c2e8:	e027883a 	mov	r19,fp
1000c2ec:	02000c04 	movi	r8,48
1000c2f0:	003f5c06 	br	1000c064 <__alt_data_end+0xf800c064>

1000c2f4 <__submore>:
1000c2f4:	defffa04 	addi	sp,sp,-24
1000c2f8:	dc000015 	stw	r16,0(sp)
1000c2fc:	2821883a 	mov	r16,r5
1000c300:	29400c17 	ldw	r5,48(r5)
1000c304:	dfc00515 	stw	ra,20(sp)
1000c308:	dd000415 	stw	r20,16(sp)
1000c30c:	dcc00315 	stw	r19,12(sp)
1000c310:	dc800215 	stw	r18,8(sp)
1000c314:	dc400115 	stw	r17,4(sp)
1000c318:	80801004 	addi	r2,r16,64
1000c31c:	28801726 	beq	r5,r2,1000c37c <__submore+0x88>
1000c320:	84400d17 	ldw	r17,52(r16)
1000c324:	8c67883a 	add	r19,r17,r17
1000c328:	980d883a 	mov	r6,r19
1000c32c:	00093f40 	call	100093f4 <_realloc_r>
1000c330:	1025883a 	mov	r18,r2
1000c334:	10002926 	beq	r2,zero,1000c3dc <__submore+0xe8>
1000c338:	1469883a 	add	r20,r2,r17
1000c33c:	a009883a 	mov	r4,r20
1000c340:	100b883a 	mov	r5,r2
1000c344:	880d883a 	mov	r6,r17
1000c348:	0007e500 	call	10007e50 <memcpy>
1000c34c:	0005883a 	mov	r2,zero
1000c350:	85000015 	stw	r20,0(r16)
1000c354:	84800c15 	stw	r18,48(r16)
1000c358:	84c00d15 	stw	r19,52(r16)
1000c35c:	dfc00517 	ldw	ra,20(sp)
1000c360:	dd000417 	ldw	r20,16(sp)
1000c364:	dcc00317 	ldw	r19,12(sp)
1000c368:	dc800217 	ldw	r18,8(sp)
1000c36c:	dc400117 	ldw	r17,4(sp)
1000c370:	dc000017 	ldw	r16,0(sp)
1000c374:	dec00604 	addi	sp,sp,24
1000c378:	f800283a 	ret
1000c37c:	04410004 	movi	r17,1024
1000c380:	880b883a 	mov	r5,r17
1000c384:	0000edc0 	call	10000edc <_malloc_r>
1000c388:	1007883a 	mov	r3,r2
1000c38c:	10001326 	beq	r2,zero,1000c3dc <__submore+0xe8>
1000c390:	80801083 	ldbu	r2,66(r16)
1000c394:	80c00c15 	stw	r3,48(r16)
1000c398:	84400d15 	stw	r17,52(r16)
1000c39c:	1880ffc5 	stb	r2,1023(r3)
1000c3a0:	81401043 	ldbu	r5,65(r16)
1000c3a4:	1900ff44 	addi	r4,r3,1021
1000c3a8:	0005883a 	mov	r2,zero
1000c3ac:	1940ff85 	stb	r5,1022(r3)
1000c3b0:	81401003 	ldbu	r5,64(r16)
1000c3b4:	1940ff45 	stb	r5,1021(r3)
1000c3b8:	81000015 	stw	r4,0(r16)
1000c3bc:	dfc00517 	ldw	ra,20(sp)
1000c3c0:	dd000417 	ldw	r20,16(sp)
1000c3c4:	dcc00317 	ldw	r19,12(sp)
1000c3c8:	dc800217 	ldw	r18,8(sp)
1000c3cc:	dc400117 	ldw	r17,4(sp)
1000c3d0:	dc000017 	ldw	r16,0(sp)
1000c3d4:	dec00604 	addi	sp,sp,24
1000c3d8:	f800283a 	ret
1000c3dc:	00bfffc4 	movi	r2,-1
1000c3e0:	003fde06 	br	1000c35c <__alt_data_end+0xf800c35c>

1000c3e4 <_ungetc_r>:
1000c3e4:	defffc04 	addi	sp,sp,-16
1000c3e8:	dc800215 	stw	r18,8(sp)
1000c3ec:	dc400115 	stw	r17,4(sp)
1000c3f0:	dc000015 	stw	r16,0(sp)
1000c3f4:	dfc00315 	stw	ra,12(sp)
1000c3f8:	00bfffc4 	movi	r2,-1
1000c3fc:	2825883a 	mov	r18,r5
1000c400:	2023883a 	mov	r17,r4
1000c404:	3021883a 	mov	r16,r6
1000c408:	28803026 	beq	r5,r2,1000c4cc <_ungetc_r+0xe8>
1000c40c:	20000226 	beq	r4,zero,1000c418 <_ungetc_r+0x34>
1000c410:	20800e17 	ldw	r2,56(r4)
1000c414:	10002f26 	beq	r2,zero,1000c4d4 <_ungetc_r+0xf0>
1000c418:	80c0030b 	ldhu	r3,12(r16)
1000c41c:	00bff7c4 	movi	r2,-33
1000c420:	1900010c 	andi	r4,r3,4
1000c424:	213fffcc 	andi	r4,r4,65535
1000c428:	1884703a 	and	r2,r3,r2
1000c42c:	2120001c 	xori	r4,r4,32768
1000c430:	8080030d 	sth	r2,12(r16)
1000c434:	21200004 	addi	r4,r4,-32768
1000c438:	20000c1e 	bne	r4,zero,1000c46c <_ungetc_r+0x88>
1000c43c:	1900040c 	andi	r4,r3,16
1000c440:	213fffcc 	andi	r4,r4,65535
1000c444:	2120001c 	xori	r4,r4,32768
1000c448:	21200004 	addi	r4,r4,-32768
1000c44c:	20001f26 	beq	r4,zero,1000c4cc <_ungetc_r+0xe8>
1000c450:	18c0020c 	andi	r3,r3,8
1000c454:	18ffffcc 	andi	r3,r3,65535
1000c458:	18e0001c 	xori	r3,r3,32768
1000c45c:	18e00004 	addi	r3,r3,-32768
1000c460:	1800371e 	bne	r3,zero,1000c540 <_ungetc_r+0x15c>
1000c464:	10800114 	ori	r2,r2,4
1000c468:	8080030d 	sth	r2,12(r16)
1000c46c:	80800c17 	ldw	r2,48(r16)
1000c470:	94803fcc 	andi	r18,r18,255
1000c474:	10001926 	beq	r2,zero,1000c4dc <_ungetc_r+0xf8>
1000c478:	80c00117 	ldw	r3,4(r16)
1000c47c:	80800d17 	ldw	r2,52(r16)
1000c480:	18800e0e 	bge	r3,r2,1000c4bc <_ungetc_r+0xd8>
1000c484:	80800017 	ldw	r2,0(r16)
1000c488:	10ffffc4 	addi	r3,r2,-1
1000c48c:	80c00015 	stw	r3,0(r16)
1000c490:	14bfffc5 	stb	r18,-1(r2)
1000c494:	80800117 	ldw	r2,4(r16)
1000c498:	10800044 	addi	r2,r2,1
1000c49c:	80800115 	stw	r2,4(r16)
1000c4a0:	9005883a 	mov	r2,r18
1000c4a4:	dfc00317 	ldw	ra,12(sp)
1000c4a8:	dc800217 	ldw	r18,8(sp)
1000c4ac:	dc400117 	ldw	r17,4(sp)
1000c4b0:	dc000017 	ldw	r16,0(sp)
1000c4b4:	dec00404 	addi	sp,sp,16
1000c4b8:	f800283a 	ret
1000c4bc:	8809883a 	mov	r4,r17
1000c4c0:	800b883a 	mov	r5,r16
1000c4c4:	000c2f40 	call	1000c2f4 <__submore>
1000c4c8:	103fee26 	beq	r2,zero,1000c484 <__alt_data_end+0xf800c484>
1000c4cc:	04bfffc4 	movi	r18,-1
1000c4d0:	003ff306 	br	1000c4a0 <__alt_data_end+0xf800c4a0>
1000c4d4:	0006aa00 	call	10006aa0 <__sinit>
1000c4d8:	003fcf06 	br	1000c418 <__alt_data_end+0xf800c418>
1000c4dc:	80c00417 	ldw	r3,16(r16)
1000c4e0:	80800017 	ldw	r2,0(r16)
1000c4e4:	18000326 	beq	r3,zero,1000c4f4 <_ungetc_r+0x110>
1000c4e8:	1880022e 	bgeu	r3,r2,1000c4f4 <_ungetc_r+0x110>
1000c4ec:	10ffffc3 	ldbu	r3,-1(r2)
1000c4f0:	1c801d26 	beq	r3,r18,1000c568 <_ungetc_r+0x184>
1000c4f4:	81400117 	ldw	r5,4(r16)
1000c4f8:	80800e15 	stw	r2,56(r16)
1000c4fc:	008000c4 	movi	r2,3
1000c500:	80800d15 	stw	r2,52(r16)
1000c504:	00800044 	movi	r2,1
1000c508:	81001004 	addi	r4,r16,64
1000c50c:	80c01084 	addi	r3,r16,66
1000c510:	80800115 	stw	r2,4(r16)
1000c514:	9005883a 	mov	r2,r18
1000c518:	81400f15 	stw	r5,60(r16)
1000c51c:	81000c15 	stw	r4,48(r16)
1000c520:	84801085 	stb	r18,66(r16)
1000c524:	80c00015 	stw	r3,0(r16)
1000c528:	dfc00317 	ldw	ra,12(sp)
1000c52c:	dc800217 	ldw	r18,8(sp)
1000c530:	dc400117 	ldw	r17,4(sp)
1000c534:	dc000017 	ldw	r16,0(sp)
1000c538:	dec00404 	addi	sp,sp,16
1000c53c:	f800283a 	ret
1000c540:	8809883a 	mov	r4,r17
1000c544:	800b883a 	mov	r5,r16
1000c548:	00067e40 	call	100067e4 <_fflush_r>
1000c54c:	103fdf1e 	bne	r2,zero,1000c4cc <__alt_data_end+0xf800c4cc>
1000c550:	8080030b 	ldhu	r2,12(r16)
1000c554:	00fffdc4 	movi	r3,-9
1000c558:	80000215 	stw	zero,8(r16)
1000c55c:	1884703a 	and	r2,r3,r2
1000c560:	80000615 	stw	zero,24(r16)
1000c564:	003fbf06 	br	1000c464 <__alt_data_end+0xf800c464>
1000c568:	80c00117 	ldw	r3,4(r16)
1000c56c:	10bfffc4 	addi	r2,r2,-1
1000c570:	80800015 	stw	r2,0(r16)
1000c574:	18800044 	addi	r2,r3,1
1000c578:	80800115 	stw	r2,4(r16)
1000c57c:	003fc806 	br	1000c4a0 <__alt_data_end+0xf800c4a0>

1000c580 <ungetc>:
1000c580:	00c40074 	movhi	r3,4097
1000c584:	18d17f04 	addi	r3,r3,17916
1000c588:	2005883a 	mov	r2,r4
1000c58c:	19000017 	ldw	r4,0(r3)
1000c590:	280d883a 	mov	r6,r5
1000c594:	100b883a 	mov	r5,r2
1000c598:	000c3e41 	jmpi	1000c3e4 <_ungetc_r>

1000c59c <__swbuf_r>:
1000c59c:	defffc04 	addi	sp,sp,-16
1000c5a0:	dc800215 	stw	r18,8(sp)
1000c5a4:	dc400115 	stw	r17,4(sp)
1000c5a8:	dc000015 	stw	r16,0(sp)
1000c5ac:	dfc00315 	stw	ra,12(sp)
1000c5b0:	2023883a 	mov	r17,r4
1000c5b4:	2825883a 	mov	r18,r5
1000c5b8:	3021883a 	mov	r16,r6
1000c5bc:	20000226 	beq	r4,zero,1000c5c8 <__swbuf_r+0x2c>
1000c5c0:	20800e17 	ldw	r2,56(r4)
1000c5c4:	10003b26 	beq	r2,zero,1000c6b4 <__swbuf_r+0x118>
1000c5c8:	8080030b 	ldhu	r2,12(r16)
1000c5cc:	80c00617 	ldw	r3,24(r16)
1000c5d0:	1080020c 	andi	r2,r2,8
1000c5d4:	10bfffcc 	andi	r2,r2,65535
1000c5d8:	10a0001c 	xori	r2,r2,32768
1000c5dc:	80c00215 	stw	r3,8(r16)
1000c5e0:	10a00004 	addi	r2,r2,-32768
1000c5e4:	10002226 	beq	r2,zero,1000c670 <__swbuf_r+0xd4>
1000c5e8:	80800417 	ldw	r2,16(r16)
1000c5ec:	10002026 	beq	r2,zero,1000c670 <__swbuf_r+0xd4>
1000c5f0:	80c00017 	ldw	r3,0(r16)
1000c5f4:	81000517 	ldw	r4,20(r16)
1000c5f8:	94803fcc 	andi	r18,r18,255
1000c5fc:	1885c83a 	sub	r2,r3,r2
1000c600:	1100250e 	bge	r2,r4,1000c698 <__swbuf_r+0xfc>
1000c604:	10800044 	addi	r2,r2,1
1000c608:	81400217 	ldw	r5,8(r16)
1000c60c:	19000044 	addi	r4,r3,1
1000c610:	297fffc4 	addi	r5,r5,-1
1000c614:	81400215 	stw	r5,8(r16)
1000c618:	1c800005 	stb	r18,0(r3)
1000c61c:	80c00517 	ldw	r3,20(r16)
1000c620:	81000015 	stw	r4,0(r16)
1000c624:	18800c26 	beq	r3,r2,1000c658 <__swbuf_r+0xbc>
1000c628:	8080030b 	ldhu	r2,12(r16)
1000c62c:	1080004c 	andi	r2,r2,1
1000c630:	10000226 	beq	r2,zero,1000c63c <__swbuf_r+0xa0>
1000c634:	00800284 	movi	r2,10
1000c638:	90800726 	beq	r18,r2,1000c658 <__swbuf_r+0xbc>
1000c63c:	9005883a 	mov	r2,r18
1000c640:	dfc00317 	ldw	ra,12(sp)
1000c644:	dc800217 	ldw	r18,8(sp)
1000c648:	dc400117 	ldw	r17,4(sp)
1000c64c:	dc000017 	ldw	r16,0(sp)
1000c650:	dec00404 	addi	sp,sp,16
1000c654:	f800283a 	ret
1000c658:	8809883a 	mov	r4,r17
1000c65c:	800b883a 	mov	r5,r16
1000c660:	00067e40 	call	100067e4 <_fflush_r>
1000c664:	103ff526 	beq	r2,zero,1000c63c <__alt_data_end+0xf800c63c>
1000c668:	04bfffc4 	movi	r18,-1
1000c66c:	003ff306 	br	1000c63c <__alt_data_end+0xf800c63c>
1000c670:	8809883a 	mov	r4,r17
1000c674:	800b883a 	mov	r5,r16
1000c678:	0004e180 	call	10004e18 <__swsetup_r>
1000c67c:	10000f1e 	bne	r2,zero,1000c6bc <__swbuf_r+0x120>
1000c680:	80800417 	ldw	r2,16(r16)
1000c684:	80c00017 	ldw	r3,0(r16)
1000c688:	81000517 	ldw	r4,20(r16)
1000c68c:	94803fcc 	andi	r18,r18,255
1000c690:	1885c83a 	sub	r2,r3,r2
1000c694:	113fdb16 	blt	r2,r4,1000c604 <__alt_data_end+0xf800c604>
1000c698:	8809883a 	mov	r4,r17
1000c69c:	800b883a 	mov	r5,r16
1000c6a0:	00067e40 	call	100067e4 <_fflush_r>
1000c6a4:	103ff01e 	bne	r2,zero,1000c668 <__alt_data_end+0xf800c668>
1000c6a8:	80c00017 	ldw	r3,0(r16)
1000c6ac:	00800044 	movi	r2,1
1000c6b0:	003fd506 	br	1000c608 <__alt_data_end+0xf800c608>
1000c6b4:	0006aa00 	call	10006aa0 <__sinit>
1000c6b8:	003fc306 	br	1000c5c8 <__alt_data_end+0xf800c5c8>
1000c6bc:	8080030b 	ldhu	r2,12(r16)
1000c6c0:	04bfffc4 	movi	r18,-1
1000c6c4:	10801014 	ori	r2,r2,64
1000c6c8:	8080030d 	sth	r2,12(r16)
1000c6cc:	00800244 	movi	r2,9
1000c6d0:	88800015 	stw	r2,0(r17)
1000c6d4:	003fd906 	br	1000c63c <__alt_data_end+0xf800c63c>

1000c6d8 <__swbuf>:
1000c6d8:	00c40074 	movhi	r3,4097
1000c6dc:	18d17f04 	addi	r3,r3,17916
1000c6e0:	2005883a 	mov	r2,r4
1000c6e4:	19000017 	ldw	r4,0(r3)
1000c6e8:	280d883a 	mov	r6,r5
1000c6ec:	100b883a 	mov	r5,r2
1000c6f0:	000c59c1 	jmpi	1000c59c <__swbuf_r>

1000c6f4 <_write_r>:
1000c6f4:	defffd04 	addi	sp,sp,-12
1000c6f8:	dc400115 	stw	r17,4(sp)
1000c6fc:	dc000015 	stw	r16,0(sp)
1000c700:	2023883a 	mov	r17,r4
1000c704:	04040074 	movhi	r16,4097
1000c708:	84187a04 	addi	r16,r16,25064
1000c70c:	2809883a 	mov	r4,r5
1000c710:	300b883a 	mov	r5,r6
1000c714:	380d883a 	mov	r6,r7
1000c718:	dfc00215 	stw	ra,8(sp)
1000c71c:	80000015 	stw	zero,0(r16)
1000c720:	001064c0 	call	1001064c <write>
1000c724:	00ffffc4 	movi	r3,-1
1000c728:	10c00526 	beq	r2,r3,1000c740 <_write_r+0x4c>
1000c72c:	dfc00217 	ldw	ra,8(sp)
1000c730:	dc400117 	ldw	r17,4(sp)
1000c734:	dc000017 	ldw	r16,0(sp)
1000c738:	dec00304 	addi	sp,sp,12
1000c73c:	f800283a 	ret
1000c740:	80c00017 	ldw	r3,0(r16)
1000c744:	183ff926 	beq	r3,zero,1000c72c <__alt_data_end+0xf800c72c>
1000c748:	88c00015 	stw	r3,0(r17)
1000c74c:	dfc00217 	ldw	ra,8(sp)
1000c750:	dc400117 	ldw	r17,4(sp)
1000c754:	dc000017 	ldw	r16,0(sp)
1000c758:	dec00304 	addi	sp,sp,12
1000c75c:	f800283a 	ret

1000c760 <_calloc_r>:
1000c760:	defffe04 	addi	sp,sp,-8
1000c764:	dc000015 	stw	r16,0(sp)
1000c768:	2021883a 	mov	r16,r4
1000c76c:	3009883a 	mov	r4,r6
1000c770:	dfc00115 	stw	ra,4(sp)
1000c774:	000f5540 	call	1000f554 <__mulsi3>
1000c778:	8009883a 	mov	r4,r16
1000c77c:	100b883a 	mov	r5,r2
1000c780:	0000edc0 	call	10000edc <_malloc_r>
1000c784:	1021883a 	mov	r16,r2
1000c788:	10000c26 	beq	r2,zero,1000c7bc <_calloc_r+0x5c>
1000c78c:	11bfff17 	ldw	r6,-4(r2)
1000c790:	00ffff04 	movi	r3,-4
1000c794:	00800904 	movi	r2,36
1000c798:	30cc703a 	and	r6,r6,r3
1000c79c:	30cd883a 	add	r6,r6,r3
1000c7a0:	11801436 	bltu	r2,r6,1000c7f4 <_calloc_r+0x94>
1000c7a4:	00c004c4 	movi	r3,19
1000c7a8:	19800936 	bltu	r3,r6,1000c7d0 <_calloc_r+0x70>
1000c7ac:	8005883a 	mov	r2,r16
1000c7b0:	10000015 	stw	zero,0(r2)
1000c7b4:	10000115 	stw	zero,4(r2)
1000c7b8:	10000215 	stw	zero,8(r2)
1000c7bc:	8005883a 	mov	r2,r16
1000c7c0:	dfc00117 	ldw	ra,4(sp)
1000c7c4:	dc000017 	ldw	r16,0(sp)
1000c7c8:	dec00204 	addi	sp,sp,8
1000c7cc:	f800283a 	ret
1000c7d0:	80000015 	stw	zero,0(r16)
1000c7d4:	80000115 	stw	zero,4(r16)
1000c7d8:	00c006c4 	movi	r3,27
1000c7dc:	19800d2e 	bgeu	r3,r6,1000c814 <_calloc_r+0xb4>
1000c7e0:	80000215 	stw	zero,8(r16)
1000c7e4:	80000315 	stw	zero,12(r16)
1000c7e8:	30800c26 	beq	r6,r2,1000c81c <_calloc_r+0xbc>
1000c7ec:	80800404 	addi	r2,r16,16
1000c7f0:	003fef06 	br	1000c7b0 <__alt_data_end+0xf800c7b0>
1000c7f4:	8009883a 	mov	r4,r16
1000c7f8:	000b883a 	mov	r5,zero
1000c7fc:	000811c0 	call	1000811c <memset>
1000c800:	8005883a 	mov	r2,r16
1000c804:	dfc00117 	ldw	ra,4(sp)
1000c808:	dc000017 	ldw	r16,0(sp)
1000c80c:	dec00204 	addi	sp,sp,8
1000c810:	f800283a 	ret
1000c814:	80800204 	addi	r2,r16,8
1000c818:	003fe506 	br	1000c7b0 <__alt_data_end+0xf800c7b0>
1000c81c:	80000415 	stw	zero,16(r16)
1000c820:	80000515 	stw	zero,20(r16)
1000c824:	80800604 	addi	r2,r16,24
1000c828:	003fe106 	br	1000c7b0 <__alt_data_end+0xf800c7b0>

1000c82c <_close_r>:
1000c82c:	defffd04 	addi	sp,sp,-12
1000c830:	dc400115 	stw	r17,4(sp)
1000c834:	dc000015 	stw	r16,0(sp)
1000c838:	2023883a 	mov	r17,r4
1000c83c:	04040074 	movhi	r16,4097
1000c840:	84187a04 	addi	r16,r16,25064
1000c844:	2809883a 	mov	r4,r5
1000c848:	dfc00215 	stw	ra,8(sp)
1000c84c:	80000015 	stw	zero,0(r16)
1000c850:	000fdd40 	call	1000fdd4 <close>
1000c854:	00ffffc4 	movi	r3,-1
1000c858:	10c00526 	beq	r2,r3,1000c870 <_close_r+0x44>
1000c85c:	dfc00217 	ldw	ra,8(sp)
1000c860:	dc400117 	ldw	r17,4(sp)
1000c864:	dc000017 	ldw	r16,0(sp)
1000c868:	dec00304 	addi	sp,sp,12
1000c86c:	f800283a 	ret
1000c870:	80c00017 	ldw	r3,0(r16)
1000c874:	183ff926 	beq	r3,zero,1000c85c <__alt_data_end+0xf800c85c>
1000c878:	88c00015 	stw	r3,0(r17)
1000c87c:	dfc00217 	ldw	ra,8(sp)
1000c880:	dc400117 	ldw	r17,4(sp)
1000c884:	dc000017 	ldw	r16,0(sp)
1000c888:	dec00304 	addi	sp,sp,12
1000c88c:	f800283a 	ret

1000c890 <_fclose_r>:
1000c890:	defffc04 	addi	sp,sp,-16
1000c894:	dc400115 	stw	r17,4(sp)
1000c898:	dc000015 	stw	r16,0(sp)
1000c89c:	dfc00315 	stw	ra,12(sp)
1000c8a0:	dc800215 	stw	r18,8(sp)
1000c8a4:	2821883a 	mov	r16,r5
1000c8a8:	2023883a 	mov	r17,r4
1000c8ac:	28003426 	beq	r5,zero,1000c980 <_fclose_r+0xf0>
1000c8b0:	0006ca80 	call	10006ca8 <__sfp_lock_acquire>
1000c8b4:	88000226 	beq	r17,zero,1000c8c0 <_fclose_r+0x30>
1000c8b8:	88800e17 	ldw	r2,56(r17)
1000c8bc:	10003826 	beq	r2,zero,1000c9a0 <_fclose_r+0x110>
1000c8c0:	8080030f 	ldh	r2,12(r16)
1000c8c4:	10002526 	beq	r2,zero,1000c95c <_fclose_r+0xcc>
1000c8c8:	8809883a 	mov	r4,r17
1000c8cc:	800b883a 	mov	r5,r16
1000c8d0:	00067e40 	call	100067e4 <_fflush_r>
1000c8d4:	1025883a 	mov	r18,r2
1000c8d8:	80800b17 	ldw	r2,44(r16)
1000c8dc:	10000426 	beq	r2,zero,1000c8f0 <_fclose_r+0x60>
1000c8e0:	81400717 	ldw	r5,28(r16)
1000c8e4:	8809883a 	mov	r4,r17
1000c8e8:	103ee83a 	callr	r2
1000c8ec:	10003516 	blt	r2,zero,1000c9c4 <_fclose_r+0x134>
1000c8f0:	8080030b 	ldhu	r2,12(r16)
1000c8f4:	1080200c 	andi	r2,r2,128
1000c8f8:	10bfffcc 	andi	r2,r2,65535
1000c8fc:	10a0001c 	xori	r2,r2,32768
1000c900:	10a00004 	addi	r2,r2,-32768
1000c904:	10002b1e 	bne	r2,zero,1000c9b4 <_fclose_r+0x124>
1000c908:	81400c17 	ldw	r5,48(r16)
1000c90c:	28000526 	beq	r5,zero,1000c924 <_fclose_r+0x94>
1000c910:	80801004 	addi	r2,r16,64
1000c914:	28800226 	beq	r5,r2,1000c920 <_fclose_r+0x90>
1000c918:	8809883a 	mov	r4,r17
1000c91c:	00070a00 	call	100070a0 <_free_r>
1000c920:	80000c15 	stw	zero,48(r16)
1000c924:	81401117 	ldw	r5,68(r16)
1000c928:	28000326 	beq	r5,zero,1000c938 <_fclose_r+0xa8>
1000c92c:	8809883a 	mov	r4,r17
1000c930:	00070a00 	call	100070a0 <_free_r>
1000c934:	80001115 	stw	zero,68(r16)
1000c938:	8000030d 	sth	zero,12(r16)
1000c93c:	0006cac0 	call	10006cac <__sfp_lock_release>
1000c940:	9005883a 	mov	r2,r18
1000c944:	dfc00317 	ldw	ra,12(sp)
1000c948:	dc800217 	ldw	r18,8(sp)
1000c94c:	dc400117 	ldw	r17,4(sp)
1000c950:	dc000017 	ldw	r16,0(sp)
1000c954:	dec00404 	addi	sp,sp,16
1000c958:	f800283a 	ret
1000c95c:	0006cac0 	call	10006cac <__sfp_lock_release>
1000c960:	0025883a 	mov	r18,zero
1000c964:	9005883a 	mov	r2,r18
1000c968:	dfc00317 	ldw	ra,12(sp)
1000c96c:	dc800217 	ldw	r18,8(sp)
1000c970:	dc400117 	ldw	r17,4(sp)
1000c974:	dc000017 	ldw	r16,0(sp)
1000c978:	dec00404 	addi	sp,sp,16
1000c97c:	f800283a 	ret
1000c980:	0025883a 	mov	r18,zero
1000c984:	9005883a 	mov	r2,r18
1000c988:	dfc00317 	ldw	ra,12(sp)
1000c98c:	dc800217 	ldw	r18,8(sp)
1000c990:	dc400117 	ldw	r17,4(sp)
1000c994:	dc000017 	ldw	r16,0(sp)
1000c998:	dec00404 	addi	sp,sp,16
1000c99c:	f800283a 	ret
1000c9a0:	8809883a 	mov	r4,r17
1000c9a4:	0006aa00 	call	10006aa0 <__sinit>
1000c9a8:	8080030f 	ldh	r2,12(r16)
1000c9ac:	103fc61e 	bne	r2,zero,1000c8c8 <__alt_data_end+0xf800c8c8>
1000c9b0:	003fea06 	br	1000c95c <__alt_data_end+0xf800c95c>
1000c9b4:	81400417 	ldw	r5,16(r16)
1000c9b8:	8809883a 	mov	r4,r17
1000c9bc:	00070a00 	call	100070a0 <_free_r>
1000c9c0:	003fd106 	br	1000c908 <__alt_data_end+0xf800c908>
1000c9c4:	04bfffc4 	movi	r18,-1
1000c9c8:	003fc906 	br	1000c8f0 <__alt_data_end+0xf800c8f0>

1000c9cc <fclose>:
1000c9cc:	00840074 	movhi	r2,4097
1000c9d0:	10917f04 	addi	r2,r2,17916
1000c9d4:	200b883a 	mov	r5,r4
1000c9d8:	11000017 	ldw	r4,0(r2)
1000c9dc:	000c8901 	jmpi	1000c890 <_fclose_r>

1000c9e0 <_fstat_r>:
1000c9e0:	defffd04 	addi	sp,sp,-12
1000c9e4:	dc400115 	stw	r17,4(sp)
1000c9e8:	dc000015 	stw	r16,0(sp)
1000c9ec:	2023883a 	mov	r17,r4
1000c9f0:	04040074 	movhi	r16,4097
1000c9f4:	84187a04 	addi	r16,r16,25064
1000c9f8:	2809883a 	mov	r4,r5
1000c9fc:	300b883a 	mov	r5,r6
1000ca00:	dfc00215 	stw	ra,8(sp)
1000ca04:	80000015 	stw	zero,0(r16)
1000ca08:	000ff1c0 	call	1000ff1c <fstat>
1000ca0c:	00ffffc4 	movi	r3,-1
1000ca10:	10c00526 	beq	r2,r3,1000ca28 <_fstat_r+0x48>
1000ca14:	dfc00217 	ldw	ra,8(sp)
1000ca18:	dc400117 	ldw	r17,4(sp)
1000ca1c:	dc000017 	ldw	r16,0(sp)
1000ca20:	dec00304 	addi	sp,sp,12
1000ca24:	f800283a 	ret
1000ca28:	80c00017 	ldw	r3,0(r16)
1000ca2c:	183ff926 	beq	r3,zero,1000ca14 <__alt_data_end+0xf800ca14>
1000ca30:	88c00015 	stw	r3,0(r17)
1000ca34:	dfc00217 	ldw	ra,8(sp)
1000ca38:	dc400117 	ldw	r17,4(sp)
1000ca3c:	dc000017 	ldw	r16,0(sp)
1000ca40:	dec00304 	addi	sp,sp,12
1000ca44:	f800283a 	ret

1000ca48 <rshift>:
1000ca48:	2805d17a 	srai	r2,r5,5
1000ca4c:	20c00417 	ldw	r3,16(r4)
1000ca50:	22800504 	addi	r10,r4,20
1000ca54:	10c0270e 	bge	r2,r3,1000caf4 <rshift+0xac>
1000ca58:	19800144 	addi	r6,r3,5
1000ca5c:	12c00144 	addi	r11,r2,5
1000ca60:	318d883a 	add	r6,r6,r6
1000ca64:	5ad7883a 	add	r11,r11,r11
1000ca68:	318d883a 	add	r6,r6,r6
1000ca6c:	5ad7883a 	add	r11,r11,r11
1000ca70:	294007cc 	andi	r5,r5,31
1000ca74:	218d883a 	add	r6,r4,r6
1000ca78:	22d7883a 	add	r11,r4,r11
1000ca7c:	28002026 	beq	r5,zero,1000cb00 <rshift+0xb8>
1000ca80:	59c00017 	ldw	r7,0(r11)
1000ca84:	02400804 	movi	r9,32
1000ca88:	58800104 	addi	r2,r11,4
1000ca8c:	4953c83a 	sub	r9,r9,r5
1000ca90:	394ed83a 	srl	r7,r7,r5
1000ca94:	11802e2e 	bgeu	r2,r6,1000cb50 <rshift+0x108>
1000ca98:	5007883a 	mov	r3,r10
1000ca9c:	12000017 	ldw	r8,0(r2)
1000caa0:	18c00104 	addi	r3,r3,4
1000caa4:	10800104 	addi	r2,r2,4
1000caa8:	4250983a 	sll	r8,r8,r9
1000caac:	3a0eb03a 	or	r7,r7,r8
1000cab0:	19ffff15 	stw	r7,-4(r3)
1000cab4:	11ffff17 	ldw	r7,-4(r2)
1000cab8:	394ed83a 	srl	r7,r7,r5
1000cabc:	11bff736 	bltu	r2,r6,1000ca9c <__alt_data_end+0xf800ca9c>
1000cac0:	32c5c83a 	sub	r2,r6,r11
1000cac4:	10bffec4 	addi	r2,r2,-5
1000cac8:	1004d0ba 	srli	r2,r2,2
1000cacc:	10800184 	addi	r2,r2,6
1000cad0:	1085883a 	add	r2,r2,r2
1000cad4:	1085883a 	add	r2,r2,r2
1000cad8:	2085883a 	add	r2,r4,r2
1000cadc:	11c00015 	stw	r7,0(r2)
1000cae0:	38001626 	beq	r7,zero,1000cb3c <rshift+0xf4>
1000cae4:	10800104 	addi	r2,r2,4
1000cae8:	1295c83a 	sub	r10,r2,r10
1000caec:	5015d0ba 	srai	r10,r10,2
1000caf0:	00001406 	br	1000cb44 <rshift+0xfc>
1000caf4:	20000415 	stw	zero,16(r4)
1000caf8:	20000515 	stw	zero,20(r4)
1000cafc:	f800283a 	ret
1000cb00:	59bffc2e 	bgeu	r11,r6,1000caf4 <__alt_data_end+0xf800caf4>
1000cb04:	5007883a 	mov	r3,r10
1000cb08:	5805883a 	mov	r2,r11
1000cb0c:	11400017 	ldw	r5,0(r2)
1000cb10:	18c00104 	addi	r3,r3,4
1000cb14:	10800104 	addi	r2,r2,4
1000cb18:	197fff15 	stw	r5,-4(r3)
1000cb1c:	11bffb36 	bltu	r2,r6,1000cb0c <__alt_data_end+0xf800cb0c>
1000cb20:	02c4303a 	nor	r2,zero,r11
1000cb24:	1185883a 	add	r2,r2,r6
1000cb28:	1004d0ba 	srli	r2,r2,2
1000cb2c:	10800184 	addi	r2,r2,6
1000cb30:	1085883a 	add	r2,r2,r2
1000cb34:	1085883a 	add	r2,r2,r2
1000cb38:	2085883a 	add	r2,r4,r2
1000cb3c:	1295c83a 	sub	r10,r2,r10
1000cb40:	5015d0ba 	srai	r10,r10,2
1000cb44:	22800415 	stw	r10,16(r4)
1000cb48:	503feb26 	beq	r10,zero,1000caf8 <__alt_data_end+0xf800caf8>
1000cb4c:	f800283a 	ret
1000cb50:	5005883a 	mov	r2,r10
1000cb54:	003fe106 	br	1000cadc <__alt_data_end+0xf800cadc>

1000cb58 <__hexdig_init>:
1000cb58:	01440074 	movhi	r5,4097
1000cb5c:	294a4a44 	addi	r5,r5,10537
1000cb60:	01000404 	movi	r4,16
1000cb64:	00c00c04 	movi	r3,48
1000cb68:	00840074 	movhi	r2,4097
1000cb6c:	10988e04 	addi	r2,r2,25144
1000cb70:	29800003 	ldbu	r6,0(r5)
1000cb74:	10c7883a 	add	r3,r2,r3
1000cb78:	19000005 	stb	r4,0(r3)
1000cb7c:	29400044 	addi	r5,r5,1
1000cb80:	3007883a 	mov	r3,r6
1000cb84:	21000044 	addi	r4,r4,1
1000cb88:	303ff91e 	bne	r6,zero,1000cb70 <__alt_data_end+0xf800cb70>
1000cb8c:	01440074 	movhi	r5,4097
1000cb90:	294a4844 	addi	r5,r5,10529
1000cb94:	01000684 	movi	r4,26
1000cb98:	00c01844 	movi	r3,97
1000cb9c:	29800003 	ldbu	r6,0(r5)
1000cba0:	10c7883a 	add	r3,r2,r3
1000cba4:	19000005 	stb	r4,0(r3)
1000cba8:	29400044 	addi	r5,r5,1
1000cbac:	3007883a 	mov	r3,r6
1000cbb0:	21000044 	addi	r4,r4,1
1000cbb4:	303ff91e 	bne	r6,zero,1000cb9c <__alt_data_end+0xf800cb9c>
1000cbb8:	01440074 	movhi	r5,4097
1000cbbc:	294a4644 	addi	r5,r5,10521
1000cbc0:	01000684 	movi	r4,26
1000cbc4:	00c01044 	movi	r3,65
1000cbc8:	29800003 	ldbu	r6,0(r5)
1000cbcc:	10c7883a 	add	r3,r2,r3
1000cbd0:	19000005 	stb	r4,0(r3)
1000cbd4:	29400044 	addi	r5,r5,1
1000cbd8:	3007883a 	mov	r3,r6
1000cbdc:	21000044 	addi	r4,r4,1
1000cbe0:	303ff91e 	bne	r6,zero,1000cbc8 <__alt_data_end+0xf800cbc8>
1000cbe4:	f800283a 	ret

1000cbe8 <__gethex>:
1000cbe8:	defff204 	addi	sp,sp,-56
1000cbec:	dc800615 	stw	r18,24(sp)
1000cbf0:	04840074 	movhi	r18,4097
1000cbf4:	94988e04 	addi	r18,r18,25144
1000cbf8:	90800c03 	ldbu	r2,48(r18)
1000cbfc:	dd400915 	stw	r21,36(sp)
1000cc00:	dc400515 	stw	r17,20(sp)
1000cc04:	dfc00d15 	stw	ra,52(sp)
1000cc08:	df000c15 	stw	fp,48(sp)
1000cc0c:	ddc00b15 	stw	r23,44(sp)
1000cc10:	dd800a15 	stw	r22,40(sp)
1000cc14:	dd000815 	stw	r20,32(sp)
1000cc18:	dcc00715 	stw	r19,28(sp)
1000cc1c:	dc000415 	stw	r16,16(sp)
1000cc20:	d9000115 	stw	r4,4(sp)
1000cc24:	d9c00215 	stw	r7,8(sp)
1000cc28:	282b883a 	mov	r21,r5
1000cc2c:	3023883a 	mov	r17,r6
1000cc30:	1000b926 	beq	r2,zero,1000cf18 <__gethex+0x330>
1000cc34:	a9000017 	ldw	r4,0(r21)
1000cc38:	00800c04 	movi	r2,48
1000cc3c:	20c00083 	ldbu	r3,2(r4)
1000cc40:	24c00084 	addi	r19,r4,2
1000cc44:	1881601e 	bne	r3,r2,1000d1c8 <__gethex+0x5e0>
1000cc48:	017fff84 	movi	r5,-2
1000cc4c:	208000c4 	addi	r2,r4,3
1000cc50:	290bc83a 	sub	r5,r5,r4
1000cc54:	1809883a 	mov	r4,r3
1000cc58:	28b9883a 	add	fp,r5,r2
1000cc5c:	1027883a 	mov	r19,r2
1000cc60:	10800044 	addi	r2,r2,1
1000cc64:	10ffffc3 	ldbu	r3,-1(r2)
1000cc68:	193ffb26 	beq	r3,r4,1000cc58 <__alt_data_end+0xf800cc58>
1000cc6c:	90c5883a 	add	r2,r18,r3
1000cc70:	10800003 	ldbu	r2,0(r2)
1000cc74:	01440074 	movhi	r5,4097
1000cc78:	29588e04 	addi	r5,r5,25144
1000cc7c:	10002b26 	beq	r2,zero,1000cd2c <__gethex+0x144>
1000cc80:	98800003 	ldbu	r2,0(r19)
1000cc84:	0009883a 	mov	r4,zero
1000cc88:	288b883a 	add	r5,r5,r2
1000cc8c:	28c00003 	ldbu	r3,0(r5)
1000cc90:	18016826 	beq	r3,zero,1000d234 <__gethex+0x64c>
1000cc94:	9821883a 	mov	r16,r19
1000cc98:	84000044 	addi	r16,r16,1
1000cc9c:	80800003 	ldbu	r2,0(r16)
1000cca0:	9087883a 	add	r3,r18,r2
1000cca4:	18c00003 	ldbu	r3,0(r3)
1000cca8:	183ffb1e 	bne	r3,zero,1000cc98 <__alt_data_end+0xf800cc98>
1000ccac:	d8000015 	stw	zero,0(sp)
1000ccb0:	00c00b84 	movi	r3,46
1000ccb4:	10c0f226 	beq	r2,r3,1000d080 <__gethex+0x498>
1000ccb8:	80800003 	ldbu	r2,0(r16)
1000ccbc:	20014426 	beq	r4,zero,1000d1d0 <__gethex+0x5e8>
1000ccc0:	8109c83a 	sub	r4,r16,r4
1000ccc4:	2109883a 	add	r4,r4,r4
1000ccc8:	2109883a 	add	r4,r4,r4
1000cccc:	0129c83a 	sub	r20,zero,r4
1000ccd0:	00c01404 	movi	r3,80
1000ccd4:	10c01e26 	beq	r2,r3,1000cd50 <__gethex+0x168>
1000ccd8:	00c01c04 	movi	r3,112
1000ccdc:	10c01c26 	beq	r2,r3,1000cd50 <__gethex+0x168>
1000cce0:	d8c00017 	ldw	r3,0(sp)
1000cce4:	802d883a 	mov	r22,r16
1000cce8:	ad800015 	stw	r22,0(r21)
1000ccec:	18004026 	beq	r3,zero,1000cdf0 <__gethex+0x208>
1000ccf0:	e001061e 	bne	fp,zero,1000d10c <__gethex+0x524>
1000ccf4:	04000184 	movi	r16,6
1000ccf8:	8005883a 	mov	r2,r16
1000ccfc:	dfc00d17 	ldw	ra,52(sp)
1000cd00:	df000c17 	ldw	fp,48(sp)
1000cd04:	ddc00b17 	ldw	r23,44(sp)
1000cd08:	dd800a17 	ldw	r22,40(sp)
1000cd0c:	dd400917 	ldw	r21,36(sp)
1000cd10:	dd000817 	ldw	r20,32(sp)
1000cd14:	dcc00717 	ldw	r19,28(sp)
1000cd18:	dc800617 	ldw	r18,24(sp)
1000cd1c:	dc400517 	ldw	r17,20(sp)
1000cd20:	dc000417 	ldw	r16,16(sp)
1000cd24:	dec00e04 	addi	sp,sp,56
1000cd28:	f800283a 	ret
1000cd2c:	00800b84 	movi	r2,46
1000cd30:	1880d626 	beq	r3,r2,1000d08c <__gethex+0x4a4>
1000cd34:	98800003 	ldbu	r2,0(r19)
1000cd38:	00c00044 	movi	r3,1
1000cd3c:	d8c00015 	stw	r3,0(sp)
1000cd40:	00c01404 	movi	r3,80
1000cd44:	9821883a 	mov	r16,r19
1000cd48:	0029883a 	mov	r20,zero
1000cd4c:	10ffe21e 	bne	r2,r3,1000ccd8 <__alt_data_end+0xf800ccd8>
1000cd50:	80800043 	ldbu	r2,1(r16)
1000cd54:	00c00ac4 	movi	r3,43
1000cd58:	10c0f326 	beq	r2,r3,1000d128 <__gethex+0x540>
1000cd5c:	00c00b44 	movi	r3,45
1000cd60:	10c0ec26 	beq	r2,r3,1000d114 <__gethex+0x52c>
1000cd64:	80c00044 	addi	r3,r16,1
1000cd68:	d8000315 	stw	zero,12(sp)
1000cd6c:	9085883a 	add	r2,r18,r2
1000cd70:	11000003 	ldbu	r4,0(r2)
1000cd74:	203fda26 	beq	r4,zero,1000cce0 <__alt_data_end+0xf800cce0>
1000cd78:	01800644 	movi	r6,25
1000cd7c:	313fd816 	blt	r6,r4,1000cce0 <__alt_data_end+0xf800cce0>
1000cd80:	18800043 	ldbu	r2,1(r3)
1000cd84:	01440074 	movhi	r5,4097
1000cd88:	29588e04 	addi	r5,r5,25144
1000cd8c:	213ffc04 	addi	r4,r4,-16
1000cd90:	2885883a 	add	r2,r5,r2
1000cd94:	15c00003 	ldbu	r23,0(r2)
1000cd98:	1d800044 	addi	r22,r3,1
1000cd9c:	b8000d26 	beq	r23,zero,1000cdd4 <__gethex+0x1ec>
1000cda0:	35c0030e 	bge	r6,r23,1000cdb0 <__gethex+0x1c8>
1000cda4:	00000b06 	br	1000cdd4 <__gethex+0x1ec>
1000cda8:	00800644 	movi	r2,25
1000cdac:	15c00916 	blt	r2,r23,1000cdd4 <__gethex+0x1ec>
1000cdb0:	01400284 	movi	r5,10
1000cdb4:	000f5540 	call	1000f554 <__mulsi3>
1000cdb8:	b5800044 	addi	r22,r22,1
1000cdbc:	b1400003 	ldbu	r5,0(r22)
1000cdc0:	15c5883a 	add	r2,r2,r23
1000cdc4:	113ffc04 	addi	r4,r2,-16
1000cdc8:	914b883a 	add	r5,r18,r5
1000cdcc:	2dc00003 	ldbu	r23,0(r5)
1000cdd0:	b83ff51e 	bne	r23,zero,1000cda8 <__alt_data_end+0xf800cda8>
1000cdd4:	d8c00317 	ldw	r3,12(sp)
1000cdd8:	18000126 	beq	r3,zero,1000cde0 <__gethex+0x1f8>
1000cddc:	0109c83a 	sub	r4,zero,r4
1000cde0:	d8c00017 	ldw	r3,0(sp)
1000cde4:	ad800015 	stw	r22,0(r21)
1000cde8:	a129883a 	add	r20,r20,r4
1000cdec:	183fc01e 	bne	r3,zero,1000ccf0 <__alt_data_end+0xf800ccf0>
1000cdf0:	84c5c83a 	sub	r2,r16,r19
1000cdf4:	10bfffc4 	addi	r2,r2,-1
1000cdf8:	00c001c4 	movi	r3,7
1000cdfc:	000b883a 	mov	r5,zero
1000ce00:	1880030e 	bge	r3,r2,1000ce10 <__gethex+0x228>
1000ce04:	1005d07a 	srai	r2,r2,1
1000ce08:	29400044 	addi	r5,r5,1
1000ce0c:	18bffd16 	blt	r3,r2,1000ce04 <__alt_data_end+0xf800ce04>
1000ce10:	d9000117 	ldw	r4,4(sp)
1000ce14:	00081f80 	call	100081f8 <_Balloc>
1000ce18:	102d883a 	mov	r22,r2
1000ce1c:	15400504 	addi	r21,r2,20
1000ce20:	9c001b2e 	bgeu	r19,r16,1000ce90 <__gethex+0x2a8>
1000ce24:	843fffc4 	addi	r16,r16,-1
1000ce28:	98bfffc4 	addi	r2,r19,-1
1000ce2c:	a80b883a 	mov	r5,r21
1000ce30:	0009883a 	mov	r4,zero
1000ce34:	0007883a 	mov	r3,zero
1000ce38:	02800b84 	movi	r10,46
1000ce3c:	02c00804 	movi	r11,32
1000ce40:	00000806 	br	1000ce64 <__gethex+0x27c>
1000ce44:	18c00104 	addi	r3,r3,4
1000ce48:	918d883a 	add	r6,r18,r6
1000ce4c:	32400003 	ldbu	r9,0(r6)
1000ce50:	4a4003cc 	andi	r9,r9,15
1000ce54:	49ce983a 	sll	r7,r9,r7
1000ce58:	21c8b03a 	or	r4,r4,r7
1000ce5c:	843fffc4 	addi	r16,r16,-1
1000ce60:	80800d26 	beq	r16,r2,1000ce98 <__gethex+0x2b0>
1000ce64:	81800003 	ldbu	r6,0(r16)
1000ce68:	180f883a 	mov	r7,r3
1000ce6c:	32bffb26 	beq	r6,r10,1000ce5c <__alt_data_end+0xf800ce5c>
1000ce70:	1afff41e 	bne	r3,r11,1000ce44 <__alt_data_end+0xf800ce44>
1000ce74:	29000015 	stw	r4,0(r5)
1000ce78:	81800003 	ldbu	r6,0(r16)
1000ce7c:	0009883a 	mov	r4,zero
1000ce80:	000f883a 	mov	r7,zero
1000ce84:	29400104 	addi	r5,r5,4
1000ce88:	00c00104 	movi	r3,4
1000ce8c:	003fee06 	br	1000ce48 <__alt_data_end+0xf800ce48>
1000ce90:	a80b883a 	mov	r5,r21
1000ce94:	0009883a 	mov	r4,zero
1000ce98:	28c00104 	addi	r3,r5,4
1000ce9c:	1d47c83a 	sub	r3,r3,r21
1000cea0:	1807d0ba 	srai	r3,r3,2
1000cea4:	29000015 	stw	r4,0(r5)
1000cea8:	1820917a 	slli	r16,r3,5
1000ceac:	b0c00415 	stw	r3,16(r22)
1000ceb0:	00085100 	call	10008510 <__hi0bits>
1000ceb4:	8dc00017 	ldw	r23,0(r17)
1000ceb8:	8085c83a 	sub	r2,r16,r2
1000cebc:	b8809c16 	blt	r23,r2,1000d130 <__gethex+0x548>
1000cec0:	15c0b716 	blt	r2,r23,1000d1a0 <__gethex+0x5b8>
1000cec4:	0039883a 	mov	fp,zero
1000cec8:	88c00217 	ldw	r3,8(r17)
1000cecc:	1d006516 	blt	r3,r20,1000d064 <__gethex+0x47c>
1000ced0:	88800117 	ldw	r2,4(r17)
1000ced4:	a080830e 	bge	r20,r2,1000d0e4 <__gethex+0x4fc>
1000ced8:	1529c83a 	sub	r20,r2,r20
1000cedc:	a5c01016 	blt	r20,r23,1000cf20 <__gethex+0x338>
1000cee0:	88c00317 	ldw	r3,12(r17)
1000cee4:	01000084 	movi	r4,2
1000cee8:	1900c726 	beq	r3,r4,1000d208 <__gethex+0x620>
1000ceec:	010000c4 	movi	r4,3
1000cef0:	1900f026 	beq	r3,r4,1000d2b4 <__gethex+0x6cc>
1000cef4:	01000044 	movi	r4,1
1000cef8:	1900e626 	beq	r3,r4,1000d294 <__gethex+0x6ac>
1000cefc:	d9000117 	ldw	r4,4(sp)
1000cf00:	b00b883a 	mov	r5,r22
1000cf04:	04001404 	movi	r16,80
1000cf08:	00082a00 	call	100082a0 <_Bfree>
1000cf0c:	d8c00e17 	ldw	r3,56(sp)
1000cf10:	18000015 	stw	zero,0(r3)
1000cf14:	003f7806 	br	1000ccf8 <__alt_data_end+0xf800ccf8>
1000cf18:	000cb580 	call	1000cb58 <__hexdig_init>
1000cf1c:	003f4506 	br	1000cc34 <__alt_data_end+0xf800cc34>
1000cf20:	a43fffc4 	addi	r16,r20,-1
1000cf24:	e000b21e 	bne	fp,zero,1000d1f0 <__gethex+0x608>
1000cf28:	0400040e 	bge	zero,r16,1000cf3c <__gethex+0x354>
1000cf2c:	b009883a 	mov	r4,r22
1000cf30:	800b883a 	mov	r5,r16
1000cf34:	00091c40 	call	100091c4 <__any_on>
1000cf38:	1039883a 	mov	fp,r2
1000cf3c:	8005d17a 	srai	r2,r16,5
1000cf40:	00c00044 	movi	r3,1
1000cf44:	840007cc 	andi	r16,r16,31
1000cf48:	1085883a 	add	r2,r2,r2
1000cf4c:	1085883a 	add	r2,r2,r2
1000cf50:	a885883a 	add	r2,r21,r2
1000cf54:	1c06983a 	sll	r3,r3,r16
1000cf58:	10800017 	ldw	r2,0(r2)
1000cf5c:	1884703a 	and	r2,r3,r2
1000cf60:	10000126 	beq	r2,zero,1000cf68 <__gethex+0x380>
1000cf64:	e7000094 	ori	fp,fp,2
1000cf68:	a00b883a 	mov	r5,r20
1000cf6c:	b009883a 	mov	r4,r22
1000cf70:	000ca480 	call	1000ca48 <rshift>
1000cf74:	bd2fc83a 	sub	r23,r23,r20
1000cf78:	8d000117 	ldw	r20,4(r17)
1000cf7c:	04000084 	movi	r16,2
1000cf80:	e0005d26 	beq	fp,zero,1000d0f8 <__gethex+0x510>
1000cf84:	88800317 	ldw	r2,12(r17)
1000cf88:	00c00084 	movi	r3,2
1000cf8c:	10c0b026 	beq	r2,r3,1000d250 <__gethex+0x668>
1000cf90:	00c000c4 	movi	r3,3
1000cf94:	10c05526 	beq	r2,r3,1000d0ec <__gethex+0x504>
1000cf98:	00c00044 	movi	r3,1
1000cf9c:	10c0551e 	bne	r2,r3,1000d0f4 <__gethex+0x50c>
1000cfa0:	e080008c 	andi	r2,fp,2
1000cfa4:	10005326 	beq	r2,zero,1000d0f4 <__gethex+0x50c>
1000cfa8:	a8800017 	ldw	r2,0(r21)
1000cfac:	e084b03a 	or	r2,fp,r2
1000cfb0:	10c4703a 	and	r2,r2,r3
1000cfb4:	10004f26 	beq	r2,zero,1000d0f4 <__gethex+0x50c>
1000cfb8:	b7000417 	ldw	fp,16(r22)
1000cfbc:	00ffffc4 	movi	r3,-1
1000cfc0:	e1000144 	addi	r4,fp,5
1000cfc4:	2109883a 	add	r4,r4,r4
1000cfc8:	2109883a 	add	r4,r4,r4
1000cfcc:	b109883a 	add	r4,r22,r4
1000cfd0:	a8800017 	ldw	r2,0(r21)
1000cfd4:	10c0ba1e 	bne	r2,r3,1000d2c0 <__gethex+0x6d8>
1000cfd8:	a8000015 	stw	zero,0(r21)
1000cfdc:	ad400104 	addi	r21,r21,4
1000cfe0:	a93ffb36 	bltu	r21,r4,1000cfd0 <__alt_data_end+0xf800cfd0>
1000cfe4:	b0800217 	ldw	r2,8(r22)
1000cfe8:	e080bd0e 	bge	fp,r2,1000d2e0 <__gethex+0x6f8>
1000cfec:	e005883a 	mov	r2,fp
1000cff0:	10c00144 	addi	r3,r2,5
1000cff4:	18c7883a 	add	r3,r3,r3
1000cff8:	18c7883a 	add	r3,r3,r3
1000cffc:	b0c7883a 	add	r3,r22,r3
1000d000:	10800044 	addi	r2,r2,1
1000d004:	01000044 	movi	r4,1
1000d008:	19000015 	stw	r4,0(r3)
1000d00c:	b0800415 	stw	r2,16(r22)
1000d010:	00800084 	movi	r2,2
1000d014:	8080ad26 	beq	r16,r2,1000d2cc <__gethex+0x6e4>
1000d018:	b0800417 	ldw	r2,16(r22)
1000d01c:	e0800b16 	blt	fp,r2,1000d04c <__gethex+0x464>
1000d020:	bdc007cc 	andi	r23,r23,31
1000d024:	b8008626 	beq	r23,zero,1000d240 <__gethex+0x658>
1000d028:	e7000104 	addi	fp,fp,4
1000d02c:	e739883a 	add	fp,fp,fp
1000d030:	e739883a 	add	fp,fp,fp
1000d034:	b705883a 	add	r2,r22,fp
1000d038:	11000017 	ldw	r4,0(r2)
1000d03c:	00085100 	call	10008510 <__hi0bits>
1000d040:	00c00804 	movi	r3,32
1000d044:	1defc83a 	sub	r23,r3,r23
1000d048:	15c07d0e 	bge	r2,r23,1000d240 <__gethex+0x658>
1000d04c:	b009883a 	mov	r4,r22
1000d050:	01400044 	movi	r5,1
1000d054:	000ca480 	call	1000ca48 <rshift>
1000d058:	88800217 	ldw	r2,8(r17)
1000d05c:	a5000044 	addi	r20,r20,1
1000d060:	1500770e 	bge	r2,r20,1000d240 <__gethex+0x658>
1000d064:	d9000117 	ldw	r4,4(sp)
1000d068:	b00b883a 	mov	r5,r22
1000d06c:	040028c4 	movi	r16,163
1000d070:	00082a00 	call	100082a0 <_Bfree>
1000d074:	d8800e17 	ldw	r2,56(sp)
1000d078:	10000015 	stw	zero,0(r2)
1000d07c:	003f1e06 	br	1000ccf8 <__alt_data_end+0xf800ccf8>
1000d080:	20007826 	beq	r4,zero,1000d264 <__gethex+0x67c>
1000d084:	80800003 	ldbu	r2,0(r16)
1000d088:	003f0d06 	br	1000ccc0 <__alt_data_end+0xf800ccc0>
1000d08c:	98800043 	ldbu	r2,1(r19)
1000d090:	9c000044 	addi	r16,r19,1
1000d094:	288b883a 	add	r5,r5,r2
1000d098:	28c00003 	ldbu	r3,0(r5)
1000d09c:	18005026 	beq	r3,zero,1000d1e0 <__gethex+0x5f8>
1000d0a0:	00c00c04 	movi	r3,48
1000d0a4:	10c0541e 	bne	r2,r3,1000d1f8 <__gethex+0x610>
1000d0a8:	800d883a 	mov	r6,r16
1000d0ac:	1007883a 	mov	r3,r2
1000d0b0:	31800044 	addi	r6,r6,1
1000d0b4:	30800003 	ldbu	r2,0(r6)
1000d0b8:	10fffd26 	beq	r2,r3,1000d0b0 <__alt_data_end+0xf800d0b0>
1000d0bc:	9087883a 	add	r3,r18,r2
1000d0c0:	18c00003 	ldbu	r3,0(r3)
1000d0c4:	3027883a 	mov	r19,r6
1000d0c8:	18004c1e 	bne	r3,zero,1000d1fc <__gethex+0x614>
1000d0cc:	00c00044 	movi	r3,1
1000d0d0:	8009883a 	mov	r4,r16
1000d0d4:	d8c00015 	stw	r3,0(sp)
1000d0d8:	1839883a 	mov	fp,r3
1000d0dc:	3021883a 	mov	r16,r6
1000d0e0:	003ef306 	br	1000ccb0 <__alt_data_end+0xf800ccb0>
1000d0e4:	04000044 	movi	r16,1
1000d0e8:	003fa506 	br	1000cf80 <__alt_data_end+0xf800cf80>
1000d0ec:	d8800f17 	ldw	r2,60(sp)
1000d0f0:	103fb11e 	bne	r2,zero,1000cfb8 <__alt_data_end+0xf800cfb8>
1000d0f4:	84000414 	ori	r16,r16,16
1000d0f8:	d8800e17 	ldw	r2,56(sp)
1000d0fc:	d8c00217 	ldw	r3,8(sp)
1000d100:	15800015 	stw	r22,0(r2)
1000d104:	1d000015 	stw	r20,0(r3)
1000d108:	003efb06 	br	1000ccf8 <__alt_data_end+0xf800ccf8>
1000d10c:	0021883a 	mov	r16,zero
1000d110:	003ef906 	br	1000ccf8 <__alt_data_end+0xf800ccf8>
1000d114:	00c00044 	movi	r3,1
1000d118:	d8c00315 	stw	r3,12(sp)
1000d11c:	80800083 	ldbu	r2,2(r16)
1000d120:	80c00084 	addi	r3,r16,2
1000d124:	003f1106 	br	1000cd6c <__alt_data_end+0xf800cd6c>
1000d128:	d8000315 	stw	zero,12(sp)
1000d12c:	003ffb06 	br	1000d11c <__alt_data_end+0xf800d11c>
1000d130:	15e1c83a 	sub	r16,r2,r23
1000d134:	b009883a 	mov	r4,r22
1000d138:	800b883a 	mov	r5,r16
1000d13c:	00091c40 	call	100091c4 <__any_on>
1000d140:	10002526 	beq	r2,zero,1000d1d8 <__gethex+0x5f0>
1000d144:	80bfffc4 	addi	r2,r16,-1
1000d148:	1007d17a 	srai	r3,r2,5
1000d14c:	110007cc 	andi	r4,r2,31
1000d150:	07000044 	movi	fp,1
1000d154:	18c00144 	addi	r3,r3,5
1000d158:	18c7883a 	add	r3,r3,r3
1000d15c:	18c7883a 	add	r3,r3,r3
1000d160:	b0c7883a 	add	r3,r22,r3
1000d164:	e108983a 	sll	r4,fp,r4
1000d168:	18c00017 	ldw	r3,0(r3)
1000d16c:	20c6703a 	and	r3,r4,r3
1000d170:	18000626 	beq	r3,zero,1000d18c <__gethex+0x5a4>
1000d174:	e080340e 	bge	fp,r2,1000d248 <__gethex+0x660>
1000d178:	b009883a 	mov	r4,r22
1000d17c:	817fff84 	addi	r5,r16,-2
1000d180:	00091c40 	call	100091c4 <__any_on>
1000d184:	10003026 	beq	r2,zero,1000d248 <__gethex+0x660>
1000d188:	070000c4 	movi	fp,3
1000d18c:	b009883a 	mov	r4,r22
1000d190:	800b883a 	mov	r5,r16
1000d194:	000ca480 	call	1000ca48 <rshift>
1000d198:	a429883a 	add	r20,r20,r16
1000d19c:	003f4a06 	br	1000cec8 <__alt_data_end+0xf800cec8>
1000d1a0:	d9000117 	ldw	r4,4(sp)
1000d1a4:	b8a1c83a 	sub	r16,r23,r2
1000d1a8:	b00b883a 	mov	r5,r22
1000d1ac:	800d883a 	mov	r6,r16
1000d1b0:	00089e80 	call	100089e8 <__lshift>
1000d1b4:	102d883a 	mov	r22,r2
1000d1b8:	a429c83a 	sub	r20,r20,r16
1000d1bc:	15400504 	addi	r21,r2,20
1000d1c0:	0039883a 	mov	fp,zero
1000d1c4:	003f4006 	br	1000cec8 <__alt_data_end+0xf800cec8>
1000d1c8:	0039883a 	mov	fp,zero
1000d1cc:	003ea706 	br	1000cc6c <__alt_data_end+0xf800cc6c>
1000d1d0:	0029883a 	mov	r20,zero
1000d1d4:	003ebe06 	br	1000ccd0 <__alt_data_end+0xf800ccd0>
1000d1d8:	0039883a 	mov	fp,zero
1000d1dc:	003feb06 	br	1000d18c <__alt_data_end+0xf800d18c>
1000d1e0:	00c00044 	movi	r3,1
1000d1e4:	0029883a 	mov	r20,zero
1000d1e8:	d8c00015 	stw	r3,0(sp)
1000d1ec:	003eb806 	br	1000ccd0 <__alt_data_end+0xf800ccd0>
1000d1f0:	07000044 	movi	fp,1
1000d1f4:	003f5106 	br	1000cf3c <__alt_data_end+0xf800cf3c>
1000d1f8:	8027883a 	mov	r19,r16
1000d1fc:	8009883a 	mov	r4,r16
1000d200:	07000044 	movi	fp,1
1000d204:	003ea306 	br	1000cc94 <__alt_data_end+0xf800cc94>
1000d208:	d8c00f17 	ldw	r3,60(sp)
1000d20c:	183f3b1e 	bne	r3,zero,1000cefc <__alt_data_end+0xf800cefc>
1000d210:	d8c00217 	ldw	r3,8(sp)
1000d214:	04001884 	movi	r16,98
1000d218:	18800015 	stw	r2,0(r3)
1000d21c:	00800044 	movi	r2,1
1000d220:	b0800415 	stw	r2,16(r22)
1000d224:	a8800015 	stw	r2,0(r21)
1000d228:	d8800e17 	ldw	r2,56(sp)
1000d22c:	15800015 	stw	r22,0(r2)
1000d230:	003eb106 	br	1000ccf8 <__alt_data_end+0xf800ccf8>
1000d234:	9821883a 	mov	r16,r19
1000d238:	d8000015 	stw	zero,0(sp)
1000d23c:	003e9c06 	br	1000ccb0 <__alt_data_end+0xf800ccb0>
1000d240:	04000844 	movi	r16,33
1000d244:	003fac06 	br	1000d0f8 <__alt_data_end+0xf800d0f8>
1000d248:	07000084 	movi	fp,2
1000d24c:	003fcf06 	br	1000d18c <__alt_data_end+0xf800d18c>
1000d250:	d8c00f17 	ldw	r3,60(sp)
1000d254:	00800044 	movi	r2,1
1000d258:	10c5c83a 	sub	r2,r2,r3
1000d25c:	103fa526 	beq	r2,zero,1000d0f4 <__alt_data_end+0xf800d0f4>
1000d260:	003f5506 	br	1000cfb8 <__alt_data_end+0xf800cfb8>
1000d264:	80800043 	ldbu	r2,1(r16)
1000d268:	81000044 	addi	r4,r16,1
1000d26c:	2021883a 	mov	r16,r4
1000d270:	9087883a 	add	r3,r18,r2
1000d274:	18c00003 	ldbu	r3,0(r3)
1000d278:	183e9026 	beq	r3,zero,1000ccbc <__alt_data_end+0xf800ccbc>
1000d27c:	84000044 	addi	r16,r16,1
1000d280:	80800003 	ldbu	r2,0(r16)
1000d284:	9087883a 	add	r3,r18,r2
1000d288:	18c00003 	ldbu	r3,0(r3)
1000d28c:	183ffb1e 	bne	r3,zero,1000d27c <__alt_data_end+0xf800d27c>
1000d290:	003e8a06 	br	1000ccbc <__alt_data_end+0xf800ccbc>
1000d294:	a5ff191e 	bne	r20,r23,1000cefc <__alt_data_end+0xf800cefc>
1000d298:	1dffdd0e 	bge	r3,r23,1000d210 <__alt_data_end+0xf800d210>
1000d29c:	b009883a 	mov	r4,r22
1000d2a0:	b97fffc4 	addi	r5,r23,-1
1000d2a4:	00091c40 	call	100091c4 <__any_on>
1000d2a8:	103f1426 	beq	r2,zero,1000cefc <__alt_data_end+0xf800cefc>
1000d2ac:	88800117 	ldw	r2,4(r17)
1000d2b0:	003fd706 	br	1000d210 <__alt_data_end+0xf800d210>
1000d2b4:	d8c00f17 	ldw	r3,60(sp)
1000d2b8:	183f1026 	beq	r3,zero,1000cefc <__alt_data_end+0xf800cefc>
1000d2bc:	003fd406 	br	1000d210 <__alt_data_end+0xf800d210>
1000d2c0:	10800044 	addi	r2,r2,1
1000d2c4:	a8800015 	stw	r2,0(r21)
1000d2c8:	003f5106 	br	1000d010 <__alt_data_end+0xf800d010>
1000d2cc:	88800017 	ldw	r2,0(r17)
1000d2d0:	10bfffc4 	addi	r2,r2,-1
1000d2d4:	15c01426 	beq	r2,r23,1000d328 <__gethex+0x740>
1000d2d8:	04000884 	movi	r16,34
1000d2dc:	003f8606 	br	1000d0f8 <__alt_data_end+0xf800d0f8>
1000d2e0:	b1400117 	ldw	r5,4(r22)
1000d2e4:	d9000117 	ldw	r4,4(sp)
1000d2e8:	29400044 	addi	r5,r5,1
1000d2ec:	00081f80 	call	100081f8 <_Balloc>
1000d2f0:	b1800417 	ldw	r6,16(r22)
1000d2f4:	b1400304 	addi	r5,r22,12
1000d2f8:	11000304 	addi	r4,r2,12
1000d2fc:	31800084 	addi	r6,r6,2
1000d300:	318d883a 	add	r6,r6,r6
1000d304:	318d883a 	add	r6,r6,r6
1000d308:	102b883a 	mov	r21,r2
1000d30c:	0007e500 	call	10007e50 <memcpy>
1000d310:	d9000117 	ldw	r4,4(sp)
1000d314:	b00b883a 	mov	r5,r22
1000d318:	a82d883a 	mov	r22,r21
1000d31c:	00082a00 	call	100082a0 <_Bfree>
1000d320:	a8800417 	ldw	r2,16(r21)
1000d324:	003f3206 	br	1000cff0 <__alt_data_end+0xf800cff0>
1000d328:	b805d17a 	srai	r2,r23,5
1000d32c:	04000044 	movi	r16,1
1000d330:	bdc007cc 	andi	r23,r23,31
1000d334:	10800144 	addi	r2,r2,5
1000d338:	1085883a 	add	r2,r2,r2
1000d33c:	1085883a 	add	r2,r2,r2
1000d340:	b085883a 	add	r2,r22,r2
1000d344:	10800017 	ldw	r2,0(r2)
1000d348:	85e0983a 	sll	r16,r16,r23
1000d34c:	80a0703a 	and	r16,r16,r2
1000d350:	8020c03a 	cmpne	r16,r16,zero
1000d354:	00800884 	movi	r2,34
1000d358:	1421c83a 	sub	r16,r2,r16
1000d35c:	003f6606 	br	1000d0f8 <__alt_data_end+0xf800d0f8>

1000d360 <__hexnan>:
1000d360:	defff604 	addi	sp,sp,-40
1000d364:	dc000315 	stw	r16,12(sp)
1000d368:	04040074 	movhi	r16,4097
1000d36c:	84188e04 	addi	r16,r16,25144
1000d370:	80800c03 	ldbu	r2,48(r16)
1000d374:	dfc00915 	stw	ra,36(sp)
1000d378:	dd400815 	stw	r21,32(sp)
1000d37c:	dd000715 	stw	r20,28(sp)
1000d380:	dcc00615 	stw	r19,24(sp)
1000d384:	dc800515 	stw	r18,20(sp)
1000d388:	dc400415 	stw	r17,16(sp)
1000d38c:	10006c26 	beq	r2,zero,1000d540 <__hexnan+0x1e0>
1000d390:	2d000017 	ldw	r20,0(r5)
1000d394:	a025d17a 	srai	r18,r20,5
1000d398:	a50007cc 	andi	r20,r20,31
1000d39c:	94a5883a 	add	r18,r18,r18
1000d3a0:	94a5883a 	add	r18,r18,r18
1000d3a4:	34a5883a 	add	r18,r6,r18
1000d3a8:	a0000126 	beq	r20,zero,1000d3b0 <__hexnan+0x50>
1000d3ac:	94800104 	addi	r18,r18,4
1000d3b0:	20c00017 	ldw	r3,0(r4)
1000d3b4:	903fff15 	stw	zero,-4(r18)
1000d3b8:	947fff04 	addi	r17,r18,-4
1000d3bc:	18800043 	ldbu	r2,1(r3)
1000d3c0:	8817883a 	mov	r11,r17
1000d3c4:	880b883a 	mov	r5,r17
1000d3c8:	0011883a 	mov	r8,zero
1000d3cc:	001b883a 	mov	r13,zero
1000d3d0:	0015883a 	mov	r10,zero
1000d3d4:	03c00204 	movi	r15,8
1000d3d8:	03800804 	movi	r14,32
1000d3dc:	04c001c4 	movi	r19,7
1000d3e0:	10001b26 	beq	r2,zero,1000d450 <__hexnan+0xf0>
1000d3e4:	808f883a 	add	r7,r16,r2
1000d3e8:	39c00003 	ldbu	r7,0(r7)
1000d3ec:	3a403fcc 	andi	r9,r7,255
1000d3f0:	4800301e 	bne	r9,zero,1000d4b4 <__hexnan+0x154>
1000d3f4:	70804636 	bltu	r14,r2,1000d510 <__hexnan+0x1b0>
1000d3f8:	6a80120e 	bge	r13,r10,1000d444 <__hexnan+0xe4>
1000d3fc:	2ac00f2e 	bgeu	r5,r11,1000d43c <__hexnan+0xdc>
1000d400:	9a000e16 	blt	r19,r8,1000d43c <__hexnan+0xdc>
1000d404:	7a11c83a 	sub	r8,r15,r8
1000d408:	4211883a 	add	r8,r8,r8
1000d40c:	29c00017 	ldw	r7,0(r5)
1000d410:	4211883a 	add	r8,r8,r8
1000d414:	722bc83a 	sub	r21,r14,r8
1000d418:	2805883a 	mov	r2,r5
1000d41c:	12400117 	ldw	r9,4(r2)
1000d420:	10800104 	addi	r2,r2,4
1000d424:	4d58983a 	sll	r12,r9,r21
1000d428:	3b18b03a 	or	r12,r7,r12
1000d42c:	4a0ed83a 	srl	r7,r9,r8
1000d430:	133fff15 	stw	r12,-4(r2)
1000d434:	11c00015 	stw	r7,0(r2)
1000d438:	12fff836 	bltu	r2,r11,1000d41c <__alt_data_end+0xf800d41c>
1000d43c:	31402d36 	bltu	r6,r5,1000d4f4 <__hexnan+0x194>
1000d440:	02000204 	movi	r8,8
1000d444:	18c00044 	addi	r3,r3,1
1000d448:	18800043 	ldbu	r2,1(r3)
1000d44c:	103fe51e 	bne	r2,zero,1000d3e4 <__alt_data_end+0xf800d3e4>
1000d450:	50003126 	beq	r10,zero,1000d518 <__hexnan+0x1b8>
1000d454:	2ac0022e 	bgeu	r5,r11,1000d460 <__hexnan+0x100>
1000d458:	008001c4 	movi	r2,7
1000d45c:	1200520e 	bge	r2,r8,1000d5a8 <__hexnan+0x248>
1000d460:	31403f2e 	bgeu	r6,r5,1000d560 <__hexnan+0x200>
1000d464:	3005883a 	mov	r2,r6
1000d468:	28c00017 	ldw	r3,0(r5)
1000d46c:	10800104 	addi	r2,r2,4
1000d470:	29400104 	addi	r5,r5,4
1000d474:	10ffff15 	stw	r3,-4(r2)
1000d478:	897ffb2e 	bgeu	r17,r5,1000d468 <__alt_data_end+0xf800d468>
1000d47c:	10000015 	stw	zero,0(r2)
1000d480:	10800104 	addi	r2,r2,4
1000d484:	88bffd2e 	bgeu	r17,r2,1000d47c <__alt_data_end+0xf800d47c>
1000d488:	90bfff17 	ldw	r2,-4(r18)
1000d48c:	1000071e 	bne	r2,zero,1000d4ac <__hexnan+0x14c>
1000d490:	34403c26 	beq	r6,r17,1000d584 <__hexnan+0x224>
1000d494:	8805883a 	mov	r2,r17
1000d498:	00000106 	br	1000d4a0 <__hexnan+0x140>
1000d49c:	30803a26 	beq	r6,r2,1000d588 <__hexnan+0x228>
1000d4a0:	10bfff04 	addi	r2,r2,-4
1000d4a4:	10c00017 	ldw	r3,0(r2)
1000d4a8:	183ffc26 	beq	r3,zero,1000d49c <__alt_data_end+0xf800d49c>
1000d4ac:	00800144 	movi	r2,5
1000d4b0:	00001a06 	br	1000d51c <__hexnan+0x1bc>
1000d4b4:	42000044 	addi	r8,r8,1
1000d4b8:	52800044 	addi	r10,r10,1
1000d4bc:	7a000716 	blt	r15,r8,1000d4dc <__hexnan+0x17c>
1000d4c0:	28800017 	ldw	r2,0(r5)
1000d4c4:	1004913a 	slli	r2,r2,4
1000d4c8:	39c003cc 	andi	r7,r7,15
1000d4cc:	11ceb03a 	or	r7,r2,r7
1000d4d0:	29c00015 	stw	r7,0(r5)
1000d4d4:	18c00044 	addi	r3,r3,1
1000d4d8:	003fdb06 	br	1000d448 <__alt_data_end+0xf800d448>
1000d4dc:	317fd92e 	bgeu	r6,r5,1000d444 <__alt_data_end+0xf800d444>
1000d4e0:	283fff15 	stw	zero,-4(r5)
1000d4e4:	0005883a 	mov	r2,zero
1000d4e8:	297fff04 	addi	r5,r5,-4
1000d4ec:	02000044 	movi	r8,1
1000d4f0:	003ff506 	br	1000d4c8 <__alt_data_end+0xf800d4c8>
1000d4f4:	283fff15 	stw	zero,-4(r5)
1000d4f8:	297fff04 	addi	r5,r5,-4
1000d4fc:	501b883a 	mov	r13,r10
1000d500:	2817883a 	mov	r11,r5
1000d504:	0011883a 	mov	r8,zero
1000d508:	18c00044 	addi	r3,r3,1
1000d50c:	003fce06 	br	1000d448 <__alt_data_end+0xf800d448>
1000d510:	01c00a44 	movi	r7,41
1000d514:	11c02026 	beq	r2,r7,1000d598 <__hexnan+0x238>
1000d518:	00800104 	movi	r2,4
1000d51c:	dfc00917 	ldw	ra,36(sp)
1000d520:	dd400817 	ldw	r21,32(sp)
1000d524:	dd000717 	ldw	r20,28(sp)
1000d528:	dcc00617 	ldw	r19,24(sp)
1000d52c:	dc800517 	ldw	r18,20(sp)
1000d530:	dc400417 	ldw	r17,16(sp)
1000d534:	dc000317 	ldw	r16,12(sp)
1000d538:	dec00a04 	addi	sp,sp,40
1000d53c:	f800283a 	ret
1000d540:	d9000015 	stw	r4,0(sp)
1000d544:	d9400115 	stw	r5,4(sp)
1000d548:	d9800215 	stw	r6,8(sp)
1000d54c:	000cb580 	call	1000cb58 <__hexdig_init>
1000d550:	d9800217 	ldw	r6,8(sp)
1000d554:	d9400117 	ldw	r5,4(sp)
1000d558:	d9000017 	ldw	r4,0(sp)
1000d55c:	003f8c06 	br	1000d390 <__alt_data_end+0xf800d390>
1000d560:	a03fc926 	beq	r20,zero,1000d488 <__alt_data_end+0xf800d488>
1000d564:	00800804 	movi	r2,32
1000d568:	1529c83a 	sub	r20,r2,r20
1000d56c:	00ffffc4 	movi	r3,-1
1000d570:	90bfff17 	ldw	r2,-4(r18)
1000d574:	1d06d83a 	srl	r3,r3,r20
1000d578:	1884703a 	and	r2,r3,r2
1000d57c:	90bfff15 	stw	r2,-4(r18)
1000d580:	003fc206 	br	1000d48c <__alt_data_end+0xf800d48c>
1000d584:	3005883a 	mov	r2,r6
1000d588:	00c00044 	movi	r3,1
1000d58c:	10c00015 	stw	r3,0(r2)
1000d590:	00800144 	movi	r2,5
1000d594:	003fe106 	br	1000d51c <__alt_data_end+0xf800d51c>
1000d598:	503fdf26 	beq	r10,zero,1000d518 <__alt_data_end+0xf800d518>
1000d59c:	18c00084 	addi	r3,r3,2
1000d5a0:	20c00015 	stw	r3,0(r4)
1000d5a4:	003fab06 	br	1000d454 <__alt_data_end+0xf800d454>
1000d5a8:	00800204 	movi	r2,8
1000d5ac:	1211c83a 	sub	r8,r2,r8
1000d5b0:	4211883a 	add	r8,r8,r8
1000d5b4:	28c00017 	ldw	r3,0(r5)
1000d5b8:	4211883a 	add	r8,r8,r8
1000d5bc:	02400804 	movi	r9,32
1000d5c0:	4a13c83a 	sub	r9,r9,r8
1000d5c4:	2805883a 	mov	r2,r5
1000d5c8:	11000117 	ldw	r4,4(r2)
1000d5cc:	10800104 	addi	r2,r2,4
1000d5d0:	224e983a 	sll	r7,r4,r9
1000d5d4:	19ceb03a 	or	r7,r3,r7
1000d5d8:	2206d83a 	srl	r3,r4,r8
1000d5dc:	11ffff15 	stw	r7,-4(r2)
1000d5e0:	10c00015 	stw	r3,0(r2)
1000d5e4:	12fff836 	bltu	r2,r11,1000d5c8 <__alt_data_end+0xf800d5c8>
1000d5e8:	003f9d06 	br	1000d460 <__alt_data_end+0xf800d460>

1000d5ec <_isatty_r>:
1000d5ec:	defffd04 	addi	sp,sp,-12
1000d5f0:	dc400115 	stw	r17,4(sp)
1000d5f4:	dc000015 	stw	r16,0(sp)
1000d5f8:	2023883a 	mov	r17,r4
1000d5fc:	04040074 	movhi	r16,4097
1000d600:	84187a04 	addi	r16,r16,25064
1000d604:	2809883a 	mov	r4,r5
1000d608:	dfc00215 	stw	ra,8(sp)
1000d60c:	80000015 	stw	zero,0(r16)
1000d610:	001001c0 	call	1001001c <isatty>
1000d614:	00ffffc4 	movi	r3,-1
1000d618:	10c00526 	beq	r2,r3,1000d630 <_isatty_r+0x44>
1000d61c:	dfc00217 	ldw	ra,8(sp)
1000d620:	dc400117 	ldw	r17,4(sp)
1000d624:	dc000017 	ldw	r16,0(sp)
1000d628:	dec00304 	addi	sp,sp,12
1000d62c:	f800283a 	ret
1000d630:	80c00017 	ldw	r3,0(r16)
1000d634:	183ff926 	beq	r3,zero,1000d61c <__alt_data_end+0xf800d61c>
1000d638:	88c00015 	stw	r3,0(r17)
1000d63c:	dfc00217 	ldw	ra,8(sp)
1000d640:	dc400117 	ldw	r17,4(sp)
1000d644:	dc000017 	ldw	r16,0(sp)
1000d648:	dec00304 	addi	sp,sp,12
1000d64c:	f800283a 	ret

1000d650 <_lseek_r>:
1000d650:	defffd04 	addi	sp,sp,-12
1000d654:	dc400115 	stw	r17,4(sp)
1000d658:	dc000015 	stw	r16,0(sp)
1000d65c:	2023883a 	mov	r17,r4
1000d660:	04040074 	movhi	r16,4097
1000d664:	84187a04 	addi	r16,r16,25064
1000d668:	2809883a 	mov	r4,r5
1000d66c:	300b883a 	mov	r5,r6
1000d670:	380d883a 	mov	r6,r7
1000d674:	dfc00215 	stw	ra,8(sp)
1000d678:	80000015 	stw	zero,0(r16)
1000d67c:	00101fc0 	call	100101fc <lseek>
1000d680:	00ffffc4 	movi	r3,-1
1000d684:	10c00526 	beq	r2,r3,1000d69c <_lseek_r+0x4c>
1000d688:	dfc00217 	ldw	ra,8(sp)
1000d68c:	dc400117 	ldw	r17,4(sp)
1000d690:	dc000017 	ldw	r16,0(sp)
1000d694:	dec00304 	addi	sp,sp,12
1000d698:	f800283a 	ret
1000d69c:	80c00017 	ldw	r3,0(r16)
1000d6a0:	183ff926 	beq	r3,zero,1000d688 <__alt_data_end+0xf800d688>
1000d6a4:	88c00015 	stw	r3,0(r17)
1000d6a8:	dfc00217 	ldw	ra,8(sp)
1000d6ac:	dc400117 	ldw	r17,4(sp)
1000d6b0:	dc000017 	ldw	r16,0(sp)
1000d6b4:	dec00304 	addi	sp,sp,12
1000d6b8:	f800283a 	ret

1000d6bc <_read_r>:
1000d6bc:	defffd04 	addi	sp,sp,-12
1000d6c0:	dc400115 	stw	r17,4(sp)
1000d6c4:	dc000015 	stw	r16,0(sp)
1000d6c8:	2023883a 	mov	r17,r4
1000d6cc:	04040074 	movhi	r16,4097
1000d6d0:	84187a04 	addi	r16,r16,25064
1000d6d4:	2809883a 	mov	r4,r5
1000d6d8:	300b883a 	mov	r5,r6
1000d6dc:	380d883a 	mov	r6,r7
1000d6e0:	dfc00215 	stw	ra,8(sp)
1000d6e4:	80000015 	stw	zero,0(r16)
1000d6e8:	00103d80 	call	100103d8 <read>
1000d6ec:	00ffffc4 	movi	r3,-1
1000d6f0:	10c00526 	beq	r2,r3,1000d708 <_read_r+0x4c>
1000d6f4:	dfc00217 	ldw	ra,8(sp)
1000d6f8:	dc400117 	ldw	r17,4(sp)
1000d6fc:	dc000017 	ldw	r16,0(sp)
1000d700:	dec00304 	addi	sp,sp,12
1000d704:	f800283a 	ret
1000d708:	80c00017 	ldw	r3,0(r16)
1000d70c:	183ff926 	beq	r3,zero,1000d6f4 <__alt_data_end+0xf800d6f4>
1000d710:	88c00015 	stw	r3,0(r17)
1000d714:	dfc00217 	ldw	ra,8(sp)
1000d718:	dc400117 	ldw	r17,4(sp)
1000d71c:	dc000017 	ldw	r16,0(sp)
1000d720:	dec00304 	addi	sp,sp,12
1000d724:	f800283a 	ret

1000d728 <__muldi3>:
1000d728:	defff604 	addi	sp,sp,-40
1000d72c:	dd400515 	stw	r21,20(sp)
1000d730:	dd000415 	stw	r20,16(sp)
1000d734:	257fffcc 	andi	r21,r4,65535
1000d738:	353fffcc 	andi	r20,r6,65535
1000d73c:	dcc00315 	stw	r19,12(sp)
1000d740:	3026d43a 	srli	r19,r6,16
1000d744:	dd800615 	stw	r22,24(sp)
1000d748:	dc800215 	stw	r18,8(sp)
1000d74c:	dc400115 	stw	r17,4(sp)
1000d750:	2024d43a 	srli	r18,r4,16
1000d754:	2023883a 	mov	r17,r4
1000d758:	282d883a 	mov	r22,r5
1000d75c:	a009883a 	mov	r4,r20
1000d760:	a80b883a 	mov	r5,r21
1000d764:	dfc00915 	stw	ra,36(sp)
1000d768:	df000815 	stw	fp,32(sp)
1000d76c:	ddc00715 	stw	r23,28(sp)
1000d770:	3839883a 	mov	fp,r7
1000d774:	dc000015 	stw	r16,0(sp)
1000d778:	3021883a 	mov	r16,r6
1000d77c:	000f5540 	call	1000f554 <__mulsi3>
1000d780:	a80b883a 	mov	r5,r21
1000d784:	9809883a 	mov	r4,r19
1000d788:	102f883a 	mov	r23,r2
1000d78c:	000f5540 	call	1000f554 <__mulsi3>
1000d790:	a009883a 	mov	r4,r20
1000d794:	900b883a 	mov	r5,r18
1000d798:	102b883a 	mov	r21,r2
1000d79c:	000f5540 	call	1000f554 <__mulsi3>
1000d7a0:	9809883a 	mov	r4,r19
1000d7a4:	900b883a 	mov	r5,r18
1000d7a8:	1029883a 	mov	r20,r2
1000d7ac:	000f5540 	call	1000f554 <__mulsi3>
1000d7b0:	1007883a 	mov	r3,r2
1000d7b4:	b804d43a 	srli	r2,r23,16
1000d7b8:	a549883a 	add	r4,r20,r21
1000d7bc:	2089883a 	add	r4,r4,r2
1000d7c0:	2500022e 	bgeu	r4,r20,1000d7cc <__muldi3+0xa4>
1000d7c4:	00800074 	movhi	r2,1
1000d7c8:	1887883a 	add	r3,r3,r2
1000d7cc:	200cd43a 	srli	r6,r4,16
1000d7d0:	2004943a 	slli	r2,r4,16
1000d7d4:	e00b883a 	mov	r5,fp
1000d7d8:	8809883a 	mov	r4,r17
1000d7dc:	bdffffcc 	andi	r23,r23,65535
1000d7e0:	19a3883a 	add	r17,r3,r6
1000d7e4:	15ef883a 	add	r23,r2,r23
1000d7e8:	000f5540 	call	1000f554 <__mulsi3>
1000d7ec:	8009883a 	mov	r4,r16
1000d7f0:	b00b883a 	mov	r5,r22
1000d7f4:	1025883a 	mov	r18,r2
1000d7f8:	000f5540 	call	1000f554 <__mulsi3>
1000d7fc:	9085883a 	add	r2,r18,r2
1000d800:	1447883a 	add	r3,r2,r17
1000d804:	b805883a 	mov	r2,r23
1000d808:	dfc00917 	ldw	ra,36(sp)
1000d80c:	df000817 	ldw	fp,32(sp)
1000d810:	ddc00717 	ldw	r23,28(sp)
1000d814:	dd800617 	ldw	r22,24(sp)
1000d818:	dd400517 	ldw	r21,20(sp)
1000d81c:	dd000417 	ldw	r20,16(sp)
1000d820:	dcc00317 	ldw	r19,12(sp)
1000d824:	dc800217 	ldw	r18,8(sp)
1000d828:	dc400117 	ldw	r17,4(sp)
1000d82c:	dc000017 	ldw	r16,0(sp)
1000d830:	dec00a04 	addi	sp,sp,40
1000d834:	f800283a 	ret

1000d838 <__fixunsdfsi>:
1000d838:	defffd04 	addi	sp,sp,-12
1000d83c:	000d883a 	mov	r6,zero
1000d840:	01d07834 	movhi	r7,16864
1000d844:	dc400115 	stw	r17,4(sp)
1000d848:	dc000015 	stw	r16,0(sp)
1000d84c:	dfc00215 	stw	ra,8(sp)
1000d850:	2023883a 	mov	r17,r4
1000d854:	2821883a 	mov	r16,r5
1000d858:	000eff40 	call	1000eff4 <__gedf2>
1000d85c:	1000080e 	bge	r2,zero,1000d880 <__fixunsdfsi+0x48>
1000d860:	8809883a 	mov	r4,r17
1000d864:	800b883a 	mov	r5,r16
1000d868:	000f1e40 	call	1000f1e4 <__fixdfsi>
1000d86c:	dfc00217 	ldw	ra,8(sp)
1000d870:	dc400117 	ldw	r17,4(sp)
1000d874:	dc000017 	ldw	r16,0(sp)
1000d878:	dec00304 	addi	sp,sp,12
1000d87c:	f800283a 	ret
1000d880:	000d883a 	mov	r6,zero
1000d884:	01d07834 	movhi	r7,16864
1000d888:	8809883a 	mov	r4,r17
1000d88c:	800b883a 	mov	r5,r16
1000d890:	000e9e00 	call	1000e9e0 <__subdf3>
1000d894:	180b883a 	mov	r5,r3
1000d898:	1009883a 	mov	r4,r2
1000d89c:	000f1e40 	call	1000f1e4 <__fixdfsi>
1000d8a0:	00e00034 	movhi	r3,32768
1000d8a4:	10c5883a 	add	r2,r2,r3
1000d8a8:	dfc00217 	ldw	ra,8(sp)
1000d8ac:	dc400117 	ldw	r17,4(sp)
1000d8b0:	dc000017 	ldw	r16,0(sp)
1000d8b4:	dec00304 	addi	sp,sp,12
1000d8b8:	f800283a 	ret

1000d8bc <__udivdi3>:
1000d8bc:	defff504 	addi	sp,sp,-44
1000d8c0:	dd000515 	stw	r20,20(sp)
1000d8c4:	dcc00415 	stw	r19,16(sp)
1000d8c8:	dc800315 	stw	r18,12(sp)
1000d8cc:	dc400215 	stw	r17,8(sp)
1000d8d0:	dc000115 	stw	r16,4(sp)
1000d8d4:	dfc00a15 	stw	ra,40(sp)
1000d8d8:	df000915 	stw	fp,36(sp)
1000d8dc:	ddc00815 	stw	r23,32(sp)
1000d8e0:	dd800715 	stw	r22,28(sp)
1000d8e4:	dd400615 	stw	r21,24(sp)
1000d8e8:	2025883a 	mov	r18,r4
1000d8ec:	2823883a 	mov	r17,r5
1000d8f0:	3021883a 	mov	r16,r6
1000d8f4:	2027883a 	mov	r19,r4
1000d8f8:	2829883a 	mov	r20,r5
1000d8fc:	3800451e 	bne	r7,zero,1000da14 <__udivdi3+0x158>
1000d900:	2980652e 	bgeu	r5,r6,1000da98 <__udivdi3+0x1dc>
1000d904:	00bfffd4 	movui	r2,65535
1000d908:	1180b436 	bltu	r2,r6,1000dbdc <__udivdi3+0x320>
1000d90c:	00803fc4 	movi	r2,255
1000d910:	11816636 	bltu	r2,r6,1000deac <__udivdi3+0x5f0>
1000d914:	0005883a 	mov	r2,zero
1000d918:	0007883a 	mov	r3,zero
1000d91c:	3084d83a 	srl	r2,r6,r2
1000d920:	01040074 	movhi	r4,4097
1000d924:	210a5204 	addi	r4,r4,10568
1000d928:	2085883a 	add	r2,r4,r2
1000d92c:	10800003 	ldbu	r2,0(r2)
1000d930:	10c7883a 	add	r3,r2,r3
1000d934:	00800804 	movi	r2,32
1000d938:	10c5c83a 	sub	r2,r2,r3
1000d93c:	10000526 	beq	r2,zero,1000d954 <__udivdi3+0x98>
1000d940:	88a2983a 	sll	r17,r17,r2
1000d944:	90c6d83a 	srl	r3,r18,r3
1000d948:	30a0983a 	sll	r16,r6,r2
1000d94c:	90a6983a 	sll	r19,r18,r2
1000d950:	88e8b03a 	or	r20,r17,r3
1000d954:	8022d43a 	srli	r17,r16,16
1000d958:	a009883a 	mov	r4,r20
1000d95c:	857fffcc 	andi	r21,r16,65535
1000d960:	880b883a 	mov	r5,r17
1000d964:	000f54c0 	call	1000f54c <__umodsi3>
1000d968:	a009883a 	mov	r4,r20
1000d96c:	880b883a 	mov	r5,r17
1000d970:	102d883a 	mov	r22,r2
1000d974:	000f5440 	call	1000f544 <__udivsi3>
1000d978:	1009883a 	mov	r4,r2
1000d97c:	a80b883a 	mov	r5,r21
1000d980:	1025883a 	mov	r18,r2
1000d984:	000f5540 	call	1000f554 <__mulsi3>
1000d988:	1009883a 	mov	r4,r2
1000d98c:	b006943a 	slli	r3,r22,16
1000d990:	9804d43a 	srli	r2,r19,16
1000d994:	1886b03a 	or	r3,r3,r2
1000d998:	1900052e 	bgeu	r3,r4,1000d9b0 <__udivdi3+0xf4>
1000d99c:	1c07883a 	add	r3,r3,r16
1000d9a0:	90bfffc4 	addi	r2,r18,-1
1000d9a4:	1c000136 	bltu	r3,r16,1000d9ac <__udivdi3+0xf0>
1000d9a8:	19015536 	bltu	r3,r4,1000df00 <__udivdi3+0x644>
1000d9ac:	1025883a 	mov	r18,r2
1000d9b0:	1929c83a 	sub	r20,r3,r4
1000d9b4:	880b883a 	mov	r5,r17
1000d9b8:	a009883a 	mov	r4,r20
1000d9bc:	000f54c0 	call	1000f54c <__umodsi3>
1000d9c0:	102d883a 	mov	r22,r2
1000d9c4:	880b883a 	mov	r5,r17
1000d9c8:	a009883a 	mov	r4,r20
1000d9cc:	b02c943a 	slli	r22,r22,16
1000d9d0:	000f5440 	call	1000f544 <__udivsi3>
1000d9d4:	1009883a 	mov	r4,r2
1000d9d8:	a80b883a 	mov	r5,r21
1000d9dc:	9cffffcc 	andi	r19,r19,65535
1000d9e0:	1023883a 	mov	r17,r2
1000d9e4:	b4e6b03a 	or	r19,r22,r19
1000d9e8:	000f5540 	call	1000f554 <__mulsi3>
1000d9ec:	9880052e 	bgeu	r19,r2,1000da04 <__udivdi3+0x148>
1000d9f0:	9c27883a 	add	r19,r19,r16
1000d9f4:	88ffffc4 	addi	r3,r17,-1
1000d9f8:	9c011436 	bltu	r19,r16,1000de4c <__udivdi3+0x590>
1000d9fc:	9881132e 	bgeu	r19,r2,1000de4c <__udivdi3+0x590>
1000da00:	8c7fff84 	addi	r17,r17,-2
1000da04:	9004943a 	slli	r2,r18,16
1000da08:	0007883a 	mov	r3,zero
1000da0c:	8884b03a 	or	r2,r17,r2
1000da10:	00001506 	br	1000da68 <__udivdi3+0x1ac>
1000da14:	29c06a36 	bltu	r5,r7,1000dbc0 <__udivdi3+0x304>
1000da18:	00bfffd4 	movui	r2,65535
1000da1c:	11c06a2e 	bgeu	r2,r7,1000dbc8 <__udivdi3+0x30c>
1000da20:	00804034 	movhi	r2,256
1000da24:	10bfffc4 	addi	r2,r2,-1
1000da28:	11c11436 	bltu	r2,r7,1000de7c <__udivdi3+0x5c0>
1000da2c:	00c00404 	movi	r3,16
1000da30:	180b883a 	mov	r5,r3
1000da34:	38c6d83a 	srl	r3,r7,r3
1000da38:	01040074 	movhi	r4,4097
1000da3c:	210a5204 	addi	r4,r4,10568
1000da40:	04000804 	movi	r16,32
1000da44:	20c7883a 	add	r3,r4,r3
1000da48:	18800003 	ldbu	r2,0(r3)
1000da4c:	1145883a 	add	r2,r2,r5
1000da50:	80a1c83a 	sub	r16,r16,r2
1000da54:	80006e1e 	bne	r16,zero,1000dc10 <__udivdi3+0x354>
1000da58:	0007883a 	mov	r3,zero
1000da5c:	3c406a36 	bltu	r7,r17,1000dc08 <__udivdi3+0x34c>
1000da60:	9180692e 	bgeu	r18,r6,1000dc08 <__udivdi3+0x34c>
1000da64:	0005883a 	mov	r2,zero
1000da68:	dfc00a17 	ldw	ra,40(sp)
1000da6c:	df000917 	ldw	fp,36(sp)
1000da70:	ddc00817 	ldw	r23,32(sp)
1000da74:	dd800717 	ldw	r22,28(sp)
1000da78:	dd400617 	ldw	r21,24(sp)
1000da7c:	dd000517 	ldw	r20,20(sp)
1000da80:	dcc00417 	ldw	r19,16(sp)
1000da84:	dc800317 	ldw	r18,12(sp)
1000da88:	dc400217 	ldw	r17,8(sp)
1000da8c:	dc000117 	ldw	r16,4(sp)
1000da90:	dec00b04 	addi	sp,sp,44
1000da94:	f800283a 	ret
1000da98:	3000041e 	bne	r6,zero,1000daac <__udivdi3+0x1f0>
1000da9c:	01000044 	movi	r4,1
1000daa0:	000b883a 	mov	r5,zero
1000daa4:	000f5440 	call	1000f544 <__udivsi3>
1000daa8:	1021883a 	mov	r16,r2
1000daac:	00bfffd4 	movui	r2,65535
1000dab0:	1400502e 	bgeu	r2,r16,1000dbf4 <__udivdi3+0x338>
1000dab4:	00804034 	movhi	r2,256
1000dab8:	10bfffc4 	addi	r2,r2,-1
1000dabc:	1400f536 	bltu	r2,r16,1000de94 <__udivdi3+0x5d8>
1000dac0:	00800404 	movi	r2,16
1000dac4:	1007883a 	mov	r3,r2
1000dac8:	8084d83a 	srl	r2,r16,r2
1000dacc:	01040074 	movhi	r4,4097
1000dad0:	210a5204 	addi	r4,r4,10568
1000dad4:	2085883a 	add	r2,r4,r2
1000dad8:	10800003 	ldbu	r2,0(r2)
1000dadc:	10c7883a 	add	r3,r2,r3
1000dae0:	00800804 	movi	r2,32
1000dae4:	10c5c83a 	sub	r2,r2,r3
1000dae8:	1000a01e 	bne	r2,zero,1000dd6c <__udivdi3+0x4b0>
1000daec:	8028d43a 	srli	r20,r16,16
1000daf0:	8c23c83a 	sub	r17,r17,r16
1000daf4:	857fffcc 	andi	r21,r16,65535
1000daf8:	00c00044 	movi	r3,1
1000dafc:	8809883a 	mov	r4,r17
1000db00:	a00b883a 	mov	r5,r20
1000db04:	d8c00015 	stw	r3,0(sp)
1000db08:	000f54c0 	call	1000f54c <__umodsi3>
1000db0c:	8809883a 	mov	r4,r17
1000db10:	a00b883a 	mov	r5,r20
1000db14:	102d883a 	mov	r22,r2
1000db18:	000f5440 	call	1000f544 <__udivsi3>
1000db1c:	1009883a 	mov	r4,r2
1000db20:	a80b883a 	mov	r5,r21
1000db24:	1025883a 	mov	r18,r2
1000db28:	000f5540 	call	1000f554 <__mulsi3>
1000db2c:	1009883a 	mov	r4,r2
1000db30:	b00c943a 	slli	r6,r22,16
1000db34:	9804d43a 	srli	r2,r19,16
1000db38:	d8c00017 	ldw	r3,0(sp)
1000db3c:	308cb03a 	or	r6,r6,r2
1000db40:	3100052e 	bgeu	r6,r4,1000db58 <__udivdi3+0x29c>
1000db44:	340d883a 	add	r6,r6,r16
1000db48:	90bfffc4 	addi	r2,r18,-1
1000db4c:	34000136 	bltu	r6,r16,1000db54 <__udivdi3+0x298>
1000db50:	3100e836 	bltu	r6,r4,1000def4 <__udivdi3+0x638>
1000db54:	1025883a 	mov	r18,r2
1000db58:	3123c83a 	sub	r17,r6,r4
1000db5c:	8809883a 	mov	r4,r17
1000db60:	a00b883a 	mov	r5,r20
1000db64:	d8c00015 	stw	r3,0(sp)
1000db68:	000f54c0 	call	1000f54c <__umodsi3>
1000db6c:	102d883a 	mov	r22,r2
1000db70:	8809883a 	mov	r4,r17
1000db74:	a00b883a 	mov	r5,r20
1000db78:	b02c943a 	slli	r22,r22,16
1000db7c:	000f5440 	call	1000f544 <__udivsi3>
1000db80:	1009883a 	mov	r4,r2
1000db84:	a80b883a 	mov	r5,r21
1000db88:	9cffffcc 	andi	r19,r19,65535
1000db8c:	1023883a 	mov	r17,r2
1000db90:	b4e6b03a 	or	r19,r22,r19
1000db94:	000f5540 	call	1000f554 <__mulsi3>
1000db98:	d8c00017 	ldw	r3,0(sp)
1000db9c:	9880052e 	bgeu	r19,r2,1000dbb4 <__udivdi3+0x2f8>
1000dba0:	9c27883a 	add	r19,r19,r16
1000dba4:	893fffc4 	addi	r4,r17,-1
1000dba8:	9c00aa36 	bltu	r19,r16,1000de54 <__udivdi3+0x598>
1000dbac:	9880a92e 	bgeu	r19,r2,1000de54 <__udivdi3+0x598>
1000dbb0:	8c7fff84 	addi	r17,r17,-2
1000dbb4:	9004943a 	slli	r2,r18,16
1000dbb8:	8884b03a 	or	r2,r17,r2
1000dbbc:	003faa06 	br	1000da68 <__alt_data_end+0xf800da68>
1000dbc0:	0007883a 	mov	r3,zero
1000dbc4:	003fa706 	br	1000da64 <__alt_data_end+0xf800da64>
1000dbc8:	00803fc4 	movi	r2,255
1000dbcc:	11c0ae36 	bltu	r2,r7,1000de88 <__udivdi3+0x5cc>
1000dbd0:	0007883a 	mov	r3,zero
1000dbd4:	000b883a 	mov	r5,zero
1000dbd8:	003f9606 	br	1000da34 <__alt_data_end+0xf800da34>
1000dbdc:	00804034 	movhi	r2,256
1000dbe0:	10bfffc4 	addi	r2,r2,-1
1000dbe4:	1180ae36 	bltu	r2,r6,1000dea0 <__udivdi3+0x5e4>
1000dbe8:	00800404 	movi	r2,16
1000dbec:	1007883a 	mov	r3,r2
1000dbf0:	003f4a06 	br	1000d91c <__alt_data_end+0xf800d91c>
1000dbf4:	00803fc4 	movi	r2,255
1000dbf8:	1400af36 	bltu	r2,r16,1000deb8 <__udivdi3+0x5fc>
1000dbfc:	0005883a 	mov	r2,zero
1000dc00:	0007883a 	mov	r3,zero
1000dc04:	003fb006 	br	1000dac8 <__alt_data_end+0xf800dac8>
1000dc08:	00800044 	movi	r2,1
1000dc0c:	003f9606 	br	1000da68 <__alt_data_end+0xf800da68>
1000dc10:	3c0e983a 	sll	r7,r7,r16
1000dc14:	3086d83a 	srl	r3,r6,r2
1000dc18:	88aed83a 	srl	r23,r17,r2
1000dc1c:	9084d83a 	srl	r2,r18,r2
1000dc20:	38e6b03a 	or	r19,r7,r3
1000dc24:	9828d43a 	srli	r20,r19,16
1000dc28:	8c22983a 	sll	r17,r17,r16
1000dc2c:	b809883a 	mov	r4,r23
1000dc30:	a00b883a 	mov	r5,r20
1000dc34:	342a983a 	sll	r21,r6,r16
1000dc38:	88a2b03a 	or	r17,r17,r2
1000dc3c:	000f54c0 	call	1000f54c <__umodsi3>
1000dc40:	b809883a 	mov	r4,r23
1000dc44:	a00b883a 	mov	r5,r20
1000dc48:	1039883a 	mov	fp,r2
1000dc4c:	9dbfffcc 	andi	r22,r19,65535
1000dc50:	000f5440 	call	1000f544 <__udivsi3>
1000dc54:	1009883a 	mov	r4,r2
1000dc58:	b00b883a 	mov	r5,r22
1000dc5c:	102f883a 	mov	r23,r2
1000dc60:	000f5540 	call	1000f554 <__mulsi3>
1000dc64:	1009883a 	mov	r4,r2
1000dc68:	e00e943a 	slli	r7,fp,16
1000dc6c:	8804d43a 	srli	r2,r17,16
1000dc70:	388eb03a 	or	r7,r7,r2
1000dc74:	3900042e 	bgeu	r7,r4,1000dc88 <__udivdi3+0x3cc>
1000dc78:	3ccf883a 	add	r7,r7,r19
1000dc7c:	b8bfffc4 	addi	r2,r23,-1
1000dc80:	3cc0942e 	bgeu	r7,r19,1000ded4 <__udivdi3+0x618>
1000dc84:	102f883a 	mov	r23,r2
1000dc88:	3939c83a 	sub	fp,r7,r4
1000dc8c:	a00b883a 	mov	r5,r20
1000dc90:	e009883a 	mov	r4,fp
1000dc94:	000f54c0 	call	1000f54c <__umodsi3>
1000dc98:	a00b883a 	mov	r5,r20
1000dc9c:	e009883a 	mov	r4,fp
1000dca0:	d8800015 	stw	r2,0(sp)
1000dca4:	000f5440 	call	1000f544 <__udivsi3>
1000dca8:	1009883a 	mov	r4,r2
1000dcac:	b00b883a 	mov	r5,r22
1000dcb0:	1029883a 	mov	r20,r2
1000dcb4:	000f5540 	call	1000f554 <__mulsi3>
1000dcb8:	d8c00017 	ldw	r3,0(sp)
1000dcbc:	8c7fffcc 	andi	r17,r17,65535
1000dcc0:	1806943a 	slli	r3,r3,16
1000dcc4:	1c46b03a 	or	r3,r3,r17
1000dcc8:	1880042e 	bgeu	r3,r2,1000dcdc <__udivdi3+0x420>
1000dccc:	1cc7883a 	add	r3,r3,r19
1000dcd0:	a13fffc4 	addi	r4,r20,-1
1000dcd4:	1cc07b2e 	bgeu	r3,r19,1000dec4 <__udivdi3+0x608>
1000dcd8:	2029883a 	mov	r20,r4
1000dcdc:	b82e943a 	slli	r23,r23,16
1000dce0:	a822d43a 	srli	r17,r21,16
1000dce4:	ad7fffcc 	andi	r21,r21,65535
1000dce8:	a5e8b03a 	or	r20,r20,r23
1000dcec:	a5bfffcc 	andi	r22,r20,65535
1000dcf0:	b009883a 	mov	r4,r22
1000dcf4:	a80b883a 	mov	r5,r21
1000dcf8:	18afc83a 	sub	r23,r3,r2
1000dcfc:	a026d43a 	srli	r19,r20,16
1000dd00:	000f5540 	call	1000f554 <__mulsi3>
1000dd04:	b009883a 	mov	r4,r22
1000dd08:	880b883a 	mov	r5,r17
1000dd0c:	1039883a 	mov	fp,r2
1000dd10:	000f5540 	call	1000f554 <__mulsi3>
1000dd14:	a80b883a 	mov	r5,r21
1000dd18:	9809883a 	mov	r4,r19
1000dd1c:	102d883a 	mov	r22,r2
1000dd20:	000f5540 	call	1000f554 <__mulsi3>
1000dd24:	9809883a 	mov	r4,r19
1000dd28:	880b883a 	mov	r5,r17
1000dd2c:	102b883a 	mov	r21,r2
1000dd30:	000f5540 	call	1000f554 <__mulsi3>
1000dd34:	100b883a 	mov	r5,r2
1000dd38:	e004d43a 	srli	r2,fp,16
1000dd3c:	ad89883a 	add	r4,r21,r22
1000dd40:	2089883a 	add	r4,r4,r2
1000dd44:	2540022e 	bgeu	r4,r21,1000dd50 <__udivdi3+0x494>
1000dd48:	00800074 	movhi	r2,1
1000dd4c:	288b883a 	add	r5,r5,r2
1000dd50:	2004d43a 	srli	r2,r4,16
1000dd54:	288b883a 	add	r5,r5,r2
1000dd58:	b9404536 	bltu	r23,r5,1000de70 <__udivdi3+0x5b4>
1000dd5c:	b9403f26 	beq	r23,r5,1000de5c <__udivdi3+0x5a0>
1000dd60:	a005883a 	mov	r2,r20
1000dd64:	0007883a 	mov	r3,zero
1000dd68:	003f3f06 	br	1000da68 <__alt_data_end+0xf800da68>
1000dd6c:	80a0983a 	sll	r16,r16,r2
1000dd70:	88eed83a 	srl	r23,r17,r3
1000dd74:	90c6d83a 	srl	r3,r18,r3
1000dd78:	8028d43a 	srli	r20,r16,16
1000dd7c:	88a2983a 	sll	r17,r17,r2
1000dd80:	b809883a 	mov	r4,r23
1000dd84:	a00b883a 	mov	r5,r20
1000dd88:	88ecb03a 	or	r22,r17,r3
1000dd8c:	90a6983a 	sll	r19,r18,r2
1000dd90:	000f54c0 	call	1000f54c <__umodsi3>
1000dd94:	b809883a 	mov	r4,r23
1000dd98:	a00b883a 	mov	r5,r20
1000dd9c:	1023883a 	mov	r17,r2
1000dda0:	857fffcc 	andi	r21,r16,65535
1000dda4:	000f5440 	call	1000f544 <__udivsi3>
1000dda8:	1009883a 	mov	r4,r2
1000ddac:	a80b883a 	mov	r5,r21
1000ddb0:	102f883a 	mov	r23,r2
1000ddb4:	000f5540 	call	1000f554 <__mulsi3>
1000ddb8:	1009883a 	mov	r4,r2
1000ddbc:	880a943a 	slli	r5,r17,16
1000ddc0:	b004d43a 	srli	r2,r22,16
1000ddc4:	288ab03a 	or	r5,r5,r2
1000ddc8:	2900062e 	bgeu	r5,r4,1000dde4 <__udivdi3+0x528>
1000ddcc:	2c0b883a 	add	r5,r5,r16
1000ddd0:	b8bfffc4 	addi	r2,r23,-1
1000ddd4:	2c004536 	bltu	r5,r16,1000deec <__udivdi3+0x630>
1000ddd8:	2900442e 	bgeu	r5,r4,1000deec <__udivdi3+0x630>
1000dddc:	bdffff84 	addi	r23,r23,-2
1000dde0:	2c0b883a 	add	r5,r5,r16
1000dde4:	2925c83a 	sub	r18,r5,r4
1000dde8:	9009883a 	mov	r4,r18
1000ddec:	a00b883a 	mov	r5,r20
1000ddf0:	000f54c0 	call	1000f54c <__umodsi3>
1000ddf4:	1023883a 	mov	r17,r2
1000ddf8:	9009883a 	mov	r4,r18
1000ddfc:	a00b883a 	mov	r5,r20
1000de00:	8822943a 	slli	r17,r17,16
1000de04:	000f5440 	call	1000f544 <__udivsi3>
1000de08:	1009883a 	mov	r4,r2
1000de0c:	a80b883a 	mov	r5,r21
1000de10:	b5bfffcc 	andi	r22,r22,65535
1000de14:	1025883a 	mov	r18,r2
1000de18:	8da2b03a 	or	r17,r17,r22
1000de1c:	000f5540 	call	1000f554 <__mulsi3>
1000de20:	8880062e 	bgeu	r17,r2,1000de3c <__udivdi3+0x580>
1000de24:	8c23883a 	add	r17,r17,r16
1000de28:	90ffffc4 	addi	r3,r18,-1
1000de2c:	8c002d36 	bltu	r17,r16,1000dee4 <__udivdi3+0x628>
1000de30:	88802c2e 	bgeu	r17,r2,1000dee4 <__udivdi3+0x628>
1000de34:	94bfff84 	addi	r18,r18,-2
1000de38:	8c23883a 	add	r17,r17,r16
1000de3c:	b806943a 	slli	r3,r23,16
1000de40:	88a3c83a 	sub	r17,r17,r2
1000de44:	90c6b03a 	or	r3,r18,r3
1000de48:	003f2c06 	br	1000dafc <__alt_data_end+0xf800dafc>
1000de4c:	1823883a 	mov	r17,r3
1000de50:	003eec06 	br	1000da04 <__alt_data_end+0xf800da04>
1000de54:	2023883a 	mov	r17,r4
1000de58:	003f5606 	br	1000dbb4 <__alt_data_end+0xf800dbb4>
1000de5c:	2008943a 	slli	r4,r4,16
1000de60:	9420983a 	sll	r16,r18,r16
1000de64:	e73fffcc 	andi	fp,fp,65535
1000de68:	2709883a 	add	r4,r4,fp
1000de6c:	813fbc2e 	bgeu	r16,r4,1000dd60 <__alt_data_end+0xf800dd60>
1000de70:	a0bfffc4 	addi	r2,r20,-1
1000de74:	0007883a 	mov	r3,zero
1000de78:	003efb06 	br	1000da68 <__alt_data_end+0xf800da68>
1000de7c:	00c00604 	movi	r3,24
1000de80:	180b883a 	mov	r5,r3
1000de84:	003eeb06 	br	1000da34 <__alt_data_end+0xf800da34>
1000de88:	00c00204 	movi	r3,8
1000de8c:	180b883a 	mov	r5,r3
1000de90:	003ee806 	br	1000da34 <__alt_data_end+0xf800da34>
1000de94:	00800604 	movi	r2,24
1000de98:	1007883a 	mov	r3,r2
1000de9c:	003f0a06 	br	1000dac8 <__alt_data_end+0xf800dac8>
1000dea0:	00800604 	movi	r2,24
1000dea4:	1007883a 	mov	r3,r2
1000dea8:	003e9c06 	br	1000d91c <__alt_data_end+0xf800d91c>
1000deac:	00800204 	movi	r2,8
1000deb0:	1007883a 	mov	r3,r2
1000deb4:	003e9906 	br	1000d91c <__alt_data_end+0xf800d91c>
1000deb8:	00800204 	movi	r2,8
1000debc:	1007883a 	mov	r3,r2
1000dec0:	003f0106 	br	1000dac8 <__alt_data_end+0xf800dac8>
1000dec4:	18bf842e 	bgeu	r3,r2,1000dcd8 <__alt_data_end+0xf800dcd8>
1000dec8:	a53fff84 	addi	r20,r20,-2
1000decc:	1cc7883a 	add	r3,r3,r19
1000ded0:	003f8206 	br	1000dcdc <__alt_data_end+0xf800dcdc>
1000ded4:	393f6b2e 	bgeu	r7,r4,1000dc84 <__alt_data_end+0xf800dc84>
1000ded8:	bdffff84 	addi	r23,r23,-2
1000dedc:	3ccf883a 	add	r7,r7,r19
1000dee0:	003f6906 	br	1000dc88 <__alt_data_end+0xf800dc88>
1000dee4:	1825883a 	mov	r18,r3
1000dee8:	003fd406 	br	1000de3c <__alt_data_end+0xf800de3c>
1000deec:	102f883a 	mov	r23,r2
1000def0:	003fbc06 	br	1000dde4 <__alt_data_end+0xf800dde4>
1000def4:	94bfff84 	addi	r18,r18,-2
1000def8:	340d883a 	add	r6,r6,r16
1000defc:	003f1606 	br	1000db58 <__alt_data_end+0xf800db58>
1000df00:	94bfff84 	addi	r18,r18,-2
1000df04:	1c07883a 	add	r3,r3,r16
1000df08:	003ea906 	br	1000d9b0 <__alt_data_end+0xf800d9b0>

1000df0c <__umoddi3>:
1000df0c:	defff304 	addi	sp,sp,-52
1000df10:	dd000715 	stw	r20,28(sp)
1000df14:	dcc00615 	stw	r19,24(sp)
1000df18:	dc800515 	stw	r18,20(sp)
1000df1c:	dc400415 	stw	r17,16(sp)
1000df20:	dc000315 	stw	r16,12(sp)
1000df24:	dfc00c15 	stw	ra,48(sp)
1000df28:	df000b15 	stw	fp,44(sp)
1000df2c:	ddc00a15 	stw	r23,40(sp)
1000df30:	dd800915 	stw	r22,36(sp)
1000df34:	dd400815 	stw	r21,32(sp)
1000df38:	2025883a 	mov	r18,r4
1000df3c:	2823883a 	mov	r17,r5
1000df40:	3021883a 	mov	r16,r6
1000df44:	2027883a 	mov	r19,r4
1000df48:	2829883a 	mov	r20,r5
1000df4c:	38003a1e 	bne	r7,zero,1000e038 <__umoddi3+0x12c>
1000df50:	2980522e 	bgeu	r5,r6,1000e09c <__umoddi3+0x190>
1000df54:	00bfffd4 	movui	r2,65535
1000df58:	1180a436 	bltu	r2,r6,1000e1ec <__umoddi3+0x2e0>
1000df5c:	00803fc4 	movi	r2,255
1000df60:	11816036 	bltu	r2,r6,1000e4e4 <__umoddi3+0x5d8>
1000df64:	0005883a 	mov	r2,zero
1000df68:	0009883a 	mov	r4,zero
1000df6c:	3084d83a 	srl	r2,r6,r2
1000df70:	00c40074 	movhi	r3,4097
1000df74:	18ca5204 	addi	r3,r3,10568
1000df78:	05400804 	movi	r21,32
1000df7c:	1885883a 	add	r2,r3,r2
1000df80:	10800003 	ldbu	r2,0(r2)
1000df84:	1109883a 	add	r4,r2,r4
1000df88:	a92bc83a 	sub	r21,r21,r4
1000df8c:	a8010e26 	beq	r21,zero,1000e3c8 <__umoddi3+0x4bc>
1000df90:	8d62983a 	sll	r17,r17,r21
1000df94:	9108d83a 	srl	r4,r18,r4
1000df98:	3560983a 	sll	r16,r6,r21
1000df9c:	9566983a 	sll	r19,r18,r21
1000dfa0:	8928b03a 	or	r20,r17,r4
1000dfa4:	8022d43a 	srli	r17,r16,16
1000dfa8:	a009883a 	mov	r4,r20
1000dfac:	84bfffcc 	andi	r18,r16,65535
1000dfb0:	880b883a 	mov	r5,r17
1000dfb4:	000f54c0 	call	1000f54c <__umodsi3>
1000dfb8:	a009883a 	mov	r4,r20
1000dfbc:	880b883a 	mov	r5,r17
1000dfc0:	102d883a 	mov	r22,r2
1000dfc4:	000f5440 	call	1000f544 <__udivsi3>
1000dfc8:	1009883a 	mov	r4,r2
1000dfcc:	900b883a 	mov	r5,r18
1000dfd0:	000f5540 	call	1000f554 <__mulsi3>
1000dfd4:	1009883a 	mov	r4,r2
1000dfd8:	b006943a 	slli	r3,r22,16
1000dfdc:	9804d43a 	srli	r2,r19,16
1000dfe0:	1886b03a 	or	r3,r3,r2
1000dfe4:	1900042e 	bgeu	r3,r4,1000dff8 <__umoddi3+0xec>
1000dfe8:	1c07883a 	add	r3,r3,r16
1000dfec:	1c000236 	bltu	r3,r16,1000dff8 <__umoddi3+0xec>
1000dff0:	1900012e 	bgeu	r3,r4,1000dff8 <__umoddi3+0xec>
1000dff4:	1c07883a 	add	r3,r3,r16
1000dff8:	1929c83a 	sub	r20,r3,r4
1000dffc:	a009883a 	mov	r4,r20
1000e000:	880b883a 	mov	r5,r17
1000e004:	000f54c0 	call	1000f54c <__umodsi3>
1000e008:	102d883a 	mov	r22,r2
1000e00c:	a009883a 	mov	r4,r20
1000e010:	880b883a 	mov	r5,r17
1000e014:	b02c943a 	slli	r22,r22,16
1000e018:	000f5440 	call	1000f544 <__udivsi3>
1000e01c:	1009883a 	mov	r4,r2
1000e020:	900b883a 	mov	r5,r18
1000e024:	9cffffcc 	andi	r19,r19,65535
1000e028:	000f5540 	call	1000f554 <__mulsi3>
1000e02c:	b4e6b03a 	or	r19,r22,r19
1000e030:	9880572e 	bgeu	r19,r2,1000e190 <__umoddi3+0x284>
1000e034:	00005206 	br	1000e180 <__umoddi3+0x274>
1000e038:	29c05936 	bltu	r5,r7,1000e1a0 <__umoddi3+0x294>
1000e03c:	00bfffd4 	movui	r2,65535
1000e040:	11c0652e 	bgeu	r2,r7,1000e1d8 <__umoddi3+0x2cc>
1000e044:	00804034 	movhi	r2,256
1000e048:	10bfffc4 	addi	r2,r2,-1
1000e04c:	11c11936 	bltu	r2,r7,1000e4b4 <__umoddi3+0x5a8>
1000e050:	00c00404 	movi	r3,16
1000e054:	1827883a 	mov	r19,r3
1000e058:	38c6d83a 	srl	r3,r7,r3
1000e05c:	01040074 	movhi	r4,4097
1000e060:	210a5204 	addi	r4,r4,10568
1000e064:	04000804 	movi	r16,32
1000e068:	20c7883a 	add	r3,r4,r3
1000e06c:	18800003 	ldbu	r2,0(r3)
1000e070:	14e7883a 	add	r19,r2,r19
1000e074:	84e1c83a 	sub	r16,r16,r19
1000e078:	8000671e 	bne	r16,zero,1000e218 <__umoddi3+0x30c>
1000e07c:	3c400136 	bltu	r7,r17,1000e084 <__umoddi3+0x178>
1000e080:	91812536 	bltu	r18,r6,1000e518 <__umoddi3+0x60c>
1000e084:	9185c83a 	sub	r2,r18,r6
1000e088:	89e3c83a 	sub	r17,r17,r7
1000e08c:	90a5803a 	cmpltu	r18,r18,r2
1000e090:	8ca9c83a 	sub	r20,r17,r18
1000e094:	a007883a 	mov	r3,r20
1000e098:	00004306 	br	1000e1a8 <__umoddi3+0x29c>
1000e09c:	3000041e 	bne	r6,zero,1000e0b0 <__umoddi3+0x1a4>
1000e0a0:	01000044 	movi	r4,1
1000e0a4:	000b883a 	mov	r5,zero
1000e0a8:	000f5440 	call	1000f544 <__udivsi3>
1000e0ac:	1021883a 	mov	r16,r2
1000e0b0:	00bfffd4 	movui	r2,65535
1000e0b4:	1400532e 	bgeu	r2,r16,1000e204 <__umoddi3+0x2f8>
1000e0b8:	00804034 	movhi	r2,256
1000e0bc:	10bfffc4 	addi	r2,r2,-1
1000e0c0:	14010536 	bltu	r2,r16,1000e4d8 <__umoddi3+0x5cc>
1000e0c4:	00800404 	movi	r2,16
1000e0c8:	1007883a 	mov	r3,r2
1000e0cc:	8084d83a 	srl	r2,r16,r2
1000e0d0:	01040074 	movhi	r4,4097
1000e0d4:	210a5204 	addi	r4,r4,10568
1000e0d8:	05400804 	movi	r21,32
1000e0dc:	2085883a 	add	r2,r4,r2
1000e0e0:	10800003 	ldbu	r2,0(r2)
1000e0e4:	10c7883a 	add	r3,r2,r3
1000e0e8:	a8ebc83a 	sub	r21,r21,r3
1000e0ec:	a800b81e 	bne	r21,zero,1000e3d0 <__umoddi3+0x4c4>
1000e0f0:	8028d43a 	srli	r20,r16,16
1000e0f4:	8c23c83a 	sub	r17,r17,r16
1000e0f8:	85bfffcc 	andi	r22,r16,65535
1000e0fc:	8809883a 	mov	r4,r17
1000e100:	a00b883a 	mov	r5,r20
1000e104:	000f54c0 	call	1000f54c <__umodsi3>
1000e108:	8809883a 	mov	r4,r17
1000e10c:	a00b883a 	mov	r5,r20
1000e110:	1025883a 	mov	r18,r2
1000e114:	000f5440 	call	1000f544 <__udivsi3>
1000e118:	1009883a 	mov	r4,r2
1000e11c:	b00b883a 	mov	r5,r22
1000e120:	000f5540 	call	1000f554 <__mulsi3>
1000e124:	1009883a 	mov	r4,r2
1000e128:	9006943a 	slli	r3,r18,16
1000e12c:	9804d43a 	srli	r2,r19,16
1000e130:	1886b03a 	or	r3,r3,r2
1000e134:	1900032e 	bgeu	r3,r4,1000e144 <__umoddi3+0x238>
1000e138:	1c07883a 	add	r3,r3,r16
1000e13c:	1c000136 	bltu	r3,r16,1000e144 <__umoddi3+0x238>
1000e140:	1900f336 	bltu	r3,r4,1000e510 <__umoddi3+0x604>
1000e144:	1923c83a 	sub	r17,r3,r4
1000e148:	8809883a 	mov	r4,r17
1000e14c:	a00b883a 	mov	r5,r20
1000e150:	000f54c0 	call	1000f54c <__umodsi3>
1000e154:	102f883a 	mov	r23,r2
1000e158:	8809883a 	mov	r4,r17
1000e15c:	a00b883a 	mov	r5,r20
1000e160:	b82e943a 	slli	r23,r23,16
1000e164:	000f5440 	call	1000f544 <__udivsi3>
1000e168:	1009883a 	mov	r4,r2
1000e16c:	b00b883a 	mov	r5,r22
1000e170:	9cffffcc 	andi	r19,r19,65535
1000e174:	000f5540 	call	1000f554 <__mulsi3>
1000e178:	bce6b03a 	or	r19,r23,r19
1000e17c:	9880042e 	bgeu	r19,r2,1000e190 <__umoddi3+0x284>
1000e180:	9c27883a 	add	r19,r19,r16
1000e184:	9c000236 	bltu	r19,r16,1000e190 <__umoddi3+0x284>
1000e188:	9880012e 	bgeu	r19,r2,1000e190 <__umoddi3+0x284>
1000e18c:	9c27883a 	add	r19,r19,r16
1000e190:	9885c83a 	sub	r2,r19,r2
1000e194:	1544d83a 	srl	r2,r2,r21
1000e198:	0007883a 	mov	r3,zero
1000e19c:	00000206 	br	1000e1a8 <__umoddi3+0x29c>
1000e1a0:	2005883a 	mov	r2,r4
1000e1a4:	2807883a 	mov	r3,r5
1000e1a8:	dfc00c17 	ldw	ra,48(sp)
1000e1ac:	df000b17 	ldw	fp,44(sp)
1000e1b0:	ddc00a17 	ldw	r23,40(sp)
1000e1b4:	dd800917 	ldw	r22,36(sp)
1000e1b8:	dd400817 	ldw	r21,32(sp)
1000e1bc:	dd000717 	ldw	r20,28(sp)
1000e1c0:	dcc00617 	ldw	r19,24(sp)
1000e1c4:	dc800517 	ldw	r18,20(sp)
1000e1c8:	dc400417 	ldw	r17,16(sp)
1000e1cc:	dc000317 	ldw	r16,12(sp)
1000e1d0:	dec00d04 	addi	sp,sp,52
1000e1d4:	f800283a 	ret
1000e1d8:	00803fc4 	movi	r2,255
1000e1dc:	11c0b236 	bltu	r2,r7,1000e4a8 <__umoddi3+0x59c>
1000e1e0:	0007883a 	mov	r3,zero
1000e1e4:	0027883a 	mov	r19,zero
1000e1e8:	003f9b06 	br	1000e058 <__alt_data_end+0xf800e058>
1000e1ec:	00804034 	movhi	r2,256
1000e1f0:	10bfffc4 	addi	r2,r2,-1
1000e1f4:	1180b236 	bltu	r2,r6,1000e4c0 <__umoddi3+0x5b4>
1000e1f8:	00800404 	movi	r2,16
1000e1fc:	1009883a 	mov	r4,r2
1000e200:	003f5a06 	br	1000df6c <__alt_data_end+0xf800df6c>
1000e204:	00803fc4 	movi	r2,255
1000e208:	1400b036 	bltu	r2,r16,1000e4cc <__umoddi3+0x5c0>
1000e20c:	0005883a 	mov	r2,zero
1000e210:	0007883a 	mov	r3,zero
1000e214:	003fad06 	br	1000e0cc <__alt_data_end+0xf800e0cc>
1000e218:	34c4d83a 	srl	r2,r6,r19
1000e21c:	3c0e983a 	sll	r7,r7,r16
1000e220:	8cf8d83a 	srl	fp,r17,r19
1000e224:	8c22983a 	sll	r17,r17,r16
1000e228:	38a8b03a 	or	r20,r7,r2
1000e22c:	a02ad43a 	srli	r21,r20,16
1000e230:	94c4d83a 	srl	r2,r18,r19
1000e234:	e009883a 	mov	r4,fp
1000e238:	a80b883a 	mov	r5,r21
1000e23c:	342c983a 	sll	r22,r6,r16
1000e240:	88a2b03a 	or	r17,r17,r2
1000e244:	000f54c0 	call	1000f54c <__umodsi3>
1000e248:	e009883a 	mov	r4,fp
1000e24c:	a80b883a 	mov	r5,r21
1000e250:	a5ffffcc 	andi	r23,r20,65535
1000e254:	d8800215 	stw	r2,8(sp)
1000e258:	000f5440 	call	1000f544 <__udivsi3>
1000e25c:	1009883a 	mov	r4,r2
1000e260:	b80b883a 	mov	r5,r23
1000e264:	1039883a 	mov	fp,r2
1000e268:	000f5540 	call	1000f554 <__mulsi3>
1000e26c:	d8c00217 	ldw	r3,8(sp)
1000e270:	1009883a 	mov	r4,r2
1000e274:	8804d43a 	srli	r2,r17,16
1000e278:	1806943a 	slli	r3,r3,16
1000e27c:	9424983a 	sll	r18,r18,r16
1000e280:	1886b03a 	or	r3,r3,r2
1000e284:	1900042e 	bgeu	r3,r4,1000e298 <__umoddi3+0x38c>
1000e288:	1d07883a 	add	r3,r3,r20
1000e28c:	e0bfffc4 	addi	r2,fp,-1
1000e290:	1d009b2e 	bgeu	r3,r20,1000e500 <__umoddi3+0x5f4>
1000e294:	1039883a 	mov	fp,r2
1000e298:	1907c83a 	sub	r3,r3,r4
1000e29c:	1809883a 	mov	r4,r3
1000e2a0:	a80b883a 	mov	r5,r21
1000e2a4:	d8c00215 	stw	r3,8(sp)
1000e2a8:	000f54c0 	call	1000f54c <__umodsi3>
1000e2ac:	d8c00217 	ldw	r3,8(sp)
1000e2b0:	a80b883a 	mov	r5,r21
1000e2b4:	d8800015 	stw	r2,0(sp)
1000e2b8:	1809883a 	mov	r4,r3
1000e2bc:	000f5440 	call	1000f544 <__udivsi3>
1000e2c0:	1009883a 	mov	r4,r2
1000e2c4:	b80b883a 	mov	r5,r23
1000e2c8:	102b883a 	mov	r21,r2
1000e2cc:	000f5540 	call	1000f554 <__mulsi3>
1000e2d0:	d9c00017 	ldw	r7,0(sp)
1000e2d4:	8c7fffcc 	andi	r17,r17,65535
1000e2d8:	380e943a 	slli	r7,r7,16
1000e2dc:	3c4eb03a 	or	r7,r7,r17
1000e2e0:	3880042e 	bgeu	r7,r2,1000e2f4 <__umoddi3+0x3e8>
1000e2e4:	3d0f883a 	add	r7,r7,r20
1000e2e8:	a8ffffc4 	addi	r3,r21,-1
1000e2ec:	3d00802e 	bgeu	r7,r20,1000e4f0 <__umoddi3+0x5e4>
1000e2f0:	182b883a 	mov	r21,r3
1000e2f4:	e038943a 	slli	fp,fp,16
1000e2f8:	b010d43a 	srli	r8,r22,16
1000e2fc:	b1bfffcc 	andi	r6,r22,65535
1000e300:	af2ab03a 	or	r21,r21,fp
1000e304:	a82ed43a 	srli	r23,r21,16
1000e308:	ad7fffcc 	andi	r21,r21,65535
1000e30c:	300b883a 	mov	r5,r6
1000e310:	a809883a 	mov	r4,r21
1000e314:	38a3c83a 	sub	r17,r7,r2
1000e318:	d9800115 	stw	r6,4(sp)
1000e31c:	da000015 	stw	r8,0(sp)
1000e320:	000f5540 	call	1000f554 <__mulsi3>
1000e324:	da000017 	ldw	r8,0(sp)
1000e328:	a809883a 	mov	r4,r21
1000e32c:	1039883a 	mov	fp,r2
1000e330:	400b883a 	mov	r5,r8
1000e334:	da000215 	stw	r8,8(sp)
1000e338:	000f5540 	call	1000f554 <__mulsi3>
1000e33c:	d9800117 	ldw	r6,4(sp)
1000e340:	b809883a 	mov	r4,r23
1000e344:	d8800015 	stw	r2,0(sp)
1000e348:	300b883a 	mov	r5,r6
1000e34c:	000f5540 	call	1000f554 <__mulsi3>
1000e350:	d8c00217 	ldw	r3,8(sp)
1000e354:	b809883a 	mov	r4,r23
1000e358:	102b883a 	mov	r21,r2
1000e35c:	180b883a 	mov	r5,r3
1000e360:	000f5540 	call	1000f554 <__mulsi3>
1000e364:	d9c00017 	ldw	r7,0(sp)
1000e368:	1007883a 	mov	r3,r2
1000e36c:	e004d43a 	srli	r2,fp,16
1000e370:	a9c9883a 	add	r4,r21,r7
1000e374:	2089883a 	add	r4,r4,r2
1000e378:	2540022e 	bgeu	r4,r21,1000e384 <__umoddi3+0x478>
1000e37c:	00800074 	movhi	r2,1
1000e380:	1887883a 	add	r3,r3,r2
1000e384:	2004d43a 	srli	r2,r4,16
1000e388:	2008943a 	slli	r4,r4,16
1000e38c:	e73fffcc 	andi	fp,fp,65535
1000e390:	1887883a 	add	r3,r3,r2
1000e394:	2709883a 	add	r4,r4,fp
1000e398:	88c03d36 	bltu	r17,r3,1000e490 <__umoddi3+0x584>
1000e39c:	88c06126 	beq	r17,r3,1000e524 <__umoddi3+0x618>
1000e3a0:	88c7c83a 	sub	r3,r17,r3
1000e3a4:	202d883a 	mov	r22,r4
1000e3a8:	95adc83a 	sub	r22,r18,r22
1000e3ac:	95a5803a 	cmpltu	r18,r18,r22
1000e3b0:	1c87c83a 	sub	r3,r3,r18
1000e3b4:	1cc4983a 	sll	r2,r3,r19
1000e3b8:	b42cd83a 	srl	r22,r22,r16
1000e3bc:	1c06d83a 	srl	r3,r3,r16
1000e3c0:	1584b03a 	or	r2,r2,r22
1000e3c4:	003f7806 	br	1000e1a8 <__alt_data_end+0xf800e1a8>
1000e3c8:	002b883a 	mov	r21,zero
1000e3cc:	003ef506 	br	1000dfa4 <__alt_data_end+0xf800dfa4>
1000e3d0:	8560983a 	sll	r16,r16,r21
1000e3d4:	88e6d83a 	srl	r19,r17,r3
1000e3d8:	90c6d83a 	srl	r3,r18,r3
1000e3dc:	8028d43a 	srli	r20,r16,16
1000e3e0:	8d62983a 	sll	r17,r17,r21
1000e3e4:	9809883a 	mov	r4,r19
1000e3e8:	a00b883a 	mov	r5,r20
1000e3ec:	88eeb03a 	or	r23,r17,r3
1000e3f0:	000f54c0 	call	1000f54c <__umodsi3>
1000e3f4:	9809883a 	mov	r4,r19
1000e3f8:	a00b883a 	mov	r5,r20
1000e3fc:	1023883a 	mov	r17,r2
1000e400:	85bfffcc 	andi	r22,r16,65535
1000e404:	000f5440 	call	1000f544 <__udivsi3>
1000e408:	1009883a 	mov	r4,r2
1000e40c:	b00b883a 	mov	r5,r22
1000e410:	000f5540 	call	1000f554 <__mulsi3>
1000e414:	1007883a 	mov	r3,r2
1000e418:	8808943a 	slli	r4,r17,16
1000e41c:	b804d43a 	srli	r2,r23,16
1000e420:	9566983a 	sll	r19,r18,r21
1000e424:	2088b03a 	or	r4,r4,r2
1000e428:	20c0042e 	bgeu	r4,r3,1000e43c <__umoddi3+0x530>
1000e42c:	2409883a 	add	r4,r4,r16
1000e430:	24000236 	bltu	r4,r16,1000e43c <__umoddi3+0x530>
1000e434:	20c0012e 	bgeu	r4,r3,1000e43c <__umoddi3+0x530>
1000e438:	2409883a 	add	r4,r4,r16
1000e43c:	20e5c83a 	sub	r18,r4,r3
1000e440:	9009883a 	mov	r4,r18
1000e444:	a00b883a 	mov	r5,r20
1000e448:	000f54c0 	call	1000f54c <__umodsi3>
1000e44c:	1023883a 	mov	r17,r2
1000e450:	9009883a 	mov	r4,r18
1000e454:	a00b883a 	mov	r5,r20
1000e458:	8822943a 	slli	r17,r17,16
1000e45c:	000f5440 	call	1000f544 <__udivsi3>
1000e460:	1009883a 	mov	r4,r2
1000e464:	b00b883a 	mov	r5,r22
1000e468:	bdffffcc 	andi	r23,r23,65535
1000e46c:	000f5540 	call	1000f554 <__mulsi3>
1000e470:	8de2b03a 	or	r17,r17,r23
1000e474:	8880042e 	bgeu	r17,r2,1000e488 <__umoddi3+0x57c>
1000e478:	8c23883a 	add	r17,r17,r16
1000e47c:	8c000236 	bltu	r17,r16,1000e488 <__umoddi3+0x57c>
1000e480:	8880012e 	bgeu	r17,r2,1000e488 <__umoddi3+0x57c>
1000e484:	8c23883a 	add	r17,r17,r16
1000e488:	88a3c83a 	sub	r17,r17,r2
1000e48c:	003f1b06 	br	1000e0fc <__alt_data_end+0xf800e0fc>
1000e490:	25adc83a 	sub	r22,r4,r22
1000e494:	1d07c83a 	sub	r3,r3,r20
1000e498:	2589803a 	cmpltu	r4,r4,r22
1000e49c:	1907c83a 	sub	r3,r3,r4
1000e4a0:	88c7c83a 	sub	r3,r17,r3
1000e4a4:	003fc006 	br	1000e3a8 <__alt_data_end+0xf800e3a8>
1000e4a8:	00c00204 	movi	r3,8
1000e4ac:	1827883a 	mov	r19,r3
1000e4b0:	003ee906 	br	1000e058 <__alt_data_end+0xf800e058>
1000e4b4:	00c00604 	movi	r3,24
1000e4b8:	1827883a 	mov	r19,r3
1000e4bc:	003ee606 	br	1000e058 <__alt_data_end+0xf800e058>
1000e4c0:	00800604 	movi	r2,24
1000e4c4:	1009883a 	mov	r4,r2
1000e4c8:	003ea806 	br	1000df6c <__alt_data_end+0xf800df6c>
1000e4cc:	00800204 	movi	r2,8
1000e4d0:	1007883a 	mov	r3,r2
1000e4d4:	003efd06 	br	1000e0cc <__alt_data_end+0xf800e0cc>
1000e4d8:	00800604 	movi	r2,24
1000e4dc:	1007883a 	mov	r3,r2
1000e4e0:	003efa06 	br	1000e0cc <__alt_data_end+0xf800e0cc>
1000e4e4:	00800204 	movi	r2,8
1000e4e8:	1009883a 	mov	r4,r2
1000e4ec:	003e9f06 	br	1000df6c <__alt_data_end+0xf800df6c>
1000e4f0:	38bf7f2e 	bgeu	r7,r2,1000e2f0 <__alt_data_end+0xf800e2f0>
1000e4f4:	ad7fff84 	addi	r21,r21,-2
1000e4f8:	3d0f883a 	add	r7,r7,r20
1000e4fc:	003f7d06 	br	1000e2f4 <__alt_data_end+0xf800e2f4>
1000e500:	193f642e 	bgeu	r3,r4,1000e294 <__alt_data_end+0xf800e294>
1000e504:	e73fff84 	addi	fp,fp,-2
1000e508:	1d07883a 	add	r3,r3,r20
1000e50c:	003f6206 	br	1000e298 <__alt_data_end+0xf800e298>
1000e510:	1c07883a 	add	r3,r3,r16
1000e514:	003f0b06 	br	1000e144 <__alt_data_end+0xf800e144>
1000e518:	9005883a 	mov	r2,r18
1000e51c:	a007883a 	mov	r3,r20
1000e520:	003f2106 	br	1000e1a8 <__alt_data_end+0xf800e1a8>
1000e524:	913fda36 	bltu	r18,r4,1000e490 <__alt_data_end+0xf800e490>
1000e528:	202d883a 	mov	r22,r4
1000e52c:	0007883a 	mov	r3,zero
1000e530:	003f9d06 	br	1000e3a8 <__alt_data_end+0xf800e3a8>

1000e534 <__nesf2>:
1000e534:	defff504 	addi	sp,sp,-44
1000e538:	d9000915 	stw	r4,36(sp)
1000e53c:	d9400815 	stw	r5,32(sp)
1000e540:	d9000904 	addi	r4,sp,36
1000e544:	d9400404 	addi	r5,sp,16
1000e548:	dfc00a15 	stw	ra,40(sp)
1000e54c:	000f6280 	call	1000f628 <__unpack_f>
1000e550:	d9000804 	addi	r4,sp,32
1000e554:	d80b883a 	mov	r5,sp
1000e558:	000f6280 	call	1000f628 <__unpack_f>
1000e55c:	d8c00417 	ldw	r3,16(sp)
1000e560:	00800044 	movi	r2,1
1000e564:	10c0052e 	bgeu	r2,r3,1000e57c <__nesf2+0x48>
1000e568:	d8c00017 	ldw	r3,0(sp)
1000e56c:	10c0032e 	bgeu	r2,r3,1000e57c <__nesf2+0x48>
1000e570:	d9000404 	addi	r4,sp,16
1000e574:	d80b883a 	mov	r5,sp
1000e578:	000f6f00 	call	1000f6f0 <__fpcmp_parts_f>
1000e57c:	dfc00a17 	ldw	ra,40(sp)
1000e580:	dec00b04 	addi	sp,sp,44
1000e584:	f800283a 	ret

1000e588 <__gtsf2>:
1000e588:	defff504 	addi	sp,sp,-44
1000e58c:	d9000915 	stw	r4,36(sp)
1000e590:	d9400815 	stw	r5,32(sp)
1000e594:	d9000904 	addi	r4,sp,36
1000e598:	d9400404 	addi	r5,sp,16
1000e59c:	dfc00a15 	stw	ra,40(sp)
1000e5a0:	000f6280 	call	1000f628 <__unpack_f>
1000e5a4:	d9000804 	addi	r4,sp,32
1000e5a8:	d80b883a 	mov	r5,sp
1000e5ac:	000f6280 	call	1000f628 <__unpack_f>
1000e5b0:	d8c00417 	ldw	r3,16(sp)
1000e5b4:	00800044 	movi	r2,1
1000e5b8:	10c0082e 	bgeu	r2,r3,1000e5dc <__gtsf2+0x54>
1000e5bc:	d8c00017 	ldw	r3,0(sp)
1000e5c0:	10c0062e 	bgeu	r2,r3,1000e5dc <__gtsf2+0x54>
1000e5c4:	d9000404 	addi	r4,sp,16
1000e5c8:	d80b883a 	mov	r5,sp
1000e5cc:	000f6f00 	call	1000f6f0 <__fpcmp_parts_f>
1000e5d0:	dfc00a17 	ldw	ra,40(sp)
1000e5d4:	dec00b04 	addi	sp,sp,44
1000e5d8:	f800283a 	ret
1000e5dc:	00bfffc4 	movi	r2,-1
1000e5e0:	003ffb06 	br	1000e5d0 <__alt_data_end+0xf800e5d0>

1000e5e4 <__ltsf2>:
1000e5e4:	defff504 	addi	sp,sp,-44
1000e5e8:	d9000915 	stw	r4,36(sp)
1000e5ec:	d9400815 	stw	r5,32(sp)
1000e5f0:	d9000904 	addi	r4,sp,36
1000e5f4:	d9400404 	addi	r5,sp,16
1000e5f8:	dfc00a15 	stw	ra,40(sp)
1000e5fc:	000f6280 	call	1000f628 <__unpack_f>
1000e600:	d9000804 	addi	r4,sp,32
1000e604:	d80b883a 	mov	r5,sp
1000e608:	000f6280 	call	1000f628 <__unpack_f>
1000e60c:	d8c00417 	ldw	r3,16(sp)
1000e610:	00800044 	movi	r2,1
1000e614:	10c0052e 	bgeu	r2,r3,1000e62c <__ltsf2+0x48>
1000e618:	d8c00017 	ldw	r3,0(sp)
1000e61c:	10c0032e 	bgeu	r2,r3,1000e62c <__ltsf2+0x48>
1000e620:	d9000404 	addi	r4,sp,16
1000e624:	d80b883a 	mov	r5,sp
1000e628:	000f6f00 	call	1000f6f0 <__fpcmp_parts_f>
1000e62c:	dfc00a17 	ldw	ra,40(sp)
1000e630:	dec00b04 	addi	sp,sp,44
1000e634:	f800283a 	ret

1000e638 <_fpadd_parts>:
1000e638:	2005883a 	mov	r2,r4
1000e63c:	21000017 	ldw	r4,0(r4)
1000e640:	01c00044 	movi	r7,1
1000e644:	3900622e 	bgeu	r7,r4,1000e7d0 <_fpadd_parts+0x198>
1000e648:	28c00017 	ldw	r3,0(r5)
1000e64c:	38c05f2e 	bgeu	r7,r3,1000e7cc <_fpadd_parts+0x194>
1000e650:	01c00104 	movi	r7,4
1000e654:	21c0c626 	beq	r4,r7,1000e970 <_fpadd_parts+0x338>
1000e658:	19c05c26 	beq	r3,r7,1000e7cc <_fpadd_parts+0x194>
1000e65c:	01c00084 	movi	r7,2
1000e660:	19c06b26 	beq	r3,r7,1000e810 <_fpadd_parts+0x1d8>
1000e664:	21c05926 	beq	r4,r7,1000e7cc <_fpadd_parts+0x194>
1000e668:	11c00217 	ldw	r7,8(r2)
1000e66c:	2ac00217 	ldw	r11,8(r5)
1000e670:	13000317 	ldw	r12,12(r2)
1000e674:	13400417 	ldw	r13,16(r2)
1000e678:	3ac9c83a 	sub	r4,r7,r11
1000e67c:	2a000317 	ldw	r8,12(r5)
1000e680:	2a400417 	ldw	r9,16(r5)
1000e684:	2015883a 	mov	r10,r4
1000e688:	20007516 	blt	r4,zero,1000e860 <_fpadd_parts+0x228>
1000e68c:	00c00fc4 	movi	r3,63
1000e690:	1a805016 	blt	r3,r10,1000e7d4 <_fpadd_parts+0x19c>
1000e694:	0100870e 	bge	zero,r4,1000e8b4 <_fpadd_parts+0x27c>
1000e698:	50fff804 	addi	r3,r10,-32
1000e69c:	18009916 	blt	r3,zero,1000e904 <_fpadd_parts+0x2cc>
1000e6a0:	48d6d83a 	srl	r11,r9,r3
1000e6a4:	001d883a 	mov	r14,zero
1000e6a8:	18009e16 	blt	r3,zero,1000e924 <_fpadd_parts+0x2ec>
1000e6ac:	01000044 	movi	r4,1
1000e6b0:	20c6983a 	sll	r3,r4,r3
1000e6b4:	0015883a 	mov	r10,zero
1000e6b8:	513fffc4 	addi	r4,r10,-1
1000e6bc:	2295403a 	cmpgeu	r10,r4,r10
1000e6c0:	1a87c83a 	sub	r3,r3,r10
1000e6c4:	1a52703a 	and	r9,r3,r9
1000e6c8:	2210703a 	and	r8,r4,r8
1000e6cc:	4250b03a 	or	r8,r8,r9
1000e6d0:	4010c03a 	cmpne	r8,r8,zero
1000e6d4:	42d0b03a 	or	r8,r8,r11
1000e6d8:	7013883a 	mov	r9,r14
1000e6dc:	11000117 	ldw	r4,4(r2)
1000e6e0:	28800117 	ldw	r2,4(r5)
1000e6e4:	20804126 	beq	r4,r2,1000e7ec <_fpadd_parts+0x1b4>
1000e6e8:	20006326 	beq	r4,zero,1000e878 <_fpadd_parts+0x240>
1000e6ec:	4305c83a 	sub	r2,r8,r12
1000e6f0:	4091803a 	cmpltu	r8,r8,r2
1000e6f4:	4b47c83a 	sub	r3,r9,r13
1000e6f8:	1a07c83a 	sub	r3,r3,r8
1000e6fc:	18006316 	blt	r3,zero,1000e88c <_fpadd_parts+0x254>
1000e700:	30000115 	stw	zero,4(r6)
1000e704:	31c00215 	stw	r7,8(r6)
1000e708:	30800315 	stw	r2,12(r6)
1000e70c:	30c00415 	stw	r3,16(r6)
1000e710:	11ffffc4 	addi	r7,r2,-1
1000e714:	388b403a 	cmpgeu	r5,r7,r2
1000e718:	194bc83a 	sub	r5,r3,r5
1000e71c:	01040034 	movhi	r4,4096
1000e720:	213fffc4 	addi	r4,r4,-1
1000e724:	21401736 	bltu	r4,r5,1000e784 <_fpadd_parts+0x14c>
1000e728:	29008226 	beq	r5,r4,1000e934 <_fpadd_parts+0x2fc>
1000e72c:	31400217 	ldw	r5,8(r6)
1000e730:	02840034 	movhi	r10,4096
1000e734:	52bfffc4 	addi	r10,r10,-1
1000e738:	033fff84 	movi	r12,-2
1000e73c:	297fffc4 	addi	r5,r5,-1
1000e740:	00000106 	br	1000e748 <_fpadd_parts+0x110>
1000e744:	3a804a26 	beq	r7,r10,1000e870 <_fpadd_parts+0x238>
1000e748:	1089883a 	add	r4,r2,r2
1000e74c:	2091803a 	cmpltu	r8,r4,r2
1000e750:	18c7883a 	add	r3,r3,r3
1000e754:	227fffc4 	addi	r9,r4,-1
1000e758:	40d1883a 	add	r8,r8,r3
1000e75c:	490f403a 	cmpgeu	r7,r9,r4
1000e760:	41cfc83a 	sub	r7,r8,r7
1000e764:	2817883a 	mov	r11,r5
1000e768:	2005883a 	mov	r2,r4
1000e76c:	4007883a 	mov	r3,r8
1000e770:	297fffc4 	addi	r5,r5,-1
1000e774:	51fff32e 	bgeu	r10,r7,1000e744 <__alt_data_end+0xf800e744>
1000e778:	31000315 	stw	r4,12(r6)
1000e77c:	32000415 	stw	r8,16(r6)
1000e780:	32c00215 	stw	r11,8(r6)
1000e784:	010000c4 	movi	r4,3
1000e788:	31000015 	stw	r4,0(r6)
1000e78c:	01080034 	movhi	r4,8192
1000e790:	213fffc4 	addi	r4,r4,-1
1000e794:	20c00b2e 	bgeu	r4,r3,1000e7c4 <_fpadd_parts+0x18c>
1000e798:	180e97fa 	slli	r7,r3,31
1000e79c:	1008d07a 	srli	r4,r2,1
1000e7a0:	31400217 	ldw	r5,8(r6)
1000e7a4:	1806d07a 	srli	r3,r3,1
1000e7a8:	1080004c 	andi	r2,r2,1
1000e7ac:	3908b03a 	or	r4,r7,r4
1000e7b0:	1108b03a 	or	r4,r2,r4
1000e7b4:	29400044 	addi	r5,r5,1
1000e7b8:	31000315 	stw	r4,12(r6)
1000e7bc:	30c00415 	stw	r3,16(r6)
1000e7c0:	31400215 	stw	r5,8(r6)
1000e7c4:	3005883a 	mov	r2,r6
1000e7c8:	f800283a 	ret
1000e7cc:	2805883a 	mov	r2,r5
1000e7d0:	f800283a 	ret
1000e7d4:	59c01e0e 	bge	r11,r7,1000e850 <_fpadd_parts+0x218>
1000e7d8:	11000117 	ldw	r4,4(r2)
1000e7dc:	28800117 	ldw	r2,4(r5)
1000e7e0:	0011883a 	mov	r8,zero
1000e7e4:	0013883a 	mov	r9,zero
1000e7e8:	20bfbf1e 	bne	r4,r2,1000e6e8 <__alt_data_end+0xf800e6e8>
1000e7ec:	4305883a 	add	r2,r8,r12
1000e7f0:	1207803a 	cmpltu	r3,r2,r8
1000e7f4:	4b53883a 	add	r9,r9,r13
1000e7f8:	1a47883a 	add	r3,r3,r9
1000e7fc:	31000115 	stw	r4,4(r6)
1000e800:	31c00215 	stw	r7,8(r6)
1000e804:	30800315 	stw	r2,12(r6)
1000e808:	30c00415 	stw	r3,16(r6)
1000e80c:	003fdd06 	br	1000e784 <__alt_data_end+0xf800e784>
1000e810:	20ffef1e 	bne	r4,r3,1000e7d0 <__alt_data_end+0xf800e7d0>
1000e814:	31000015 	stw	r4,0(r6)
1000e818:	10c00117 	ldw	r3,4(r2)
1000e81c:	30c00115 	stw	r3,4(r6)
1000e820:	10c00217 	ldw	r3,8(r2)
1000e824:	11000117 	ldw	r4,4(r2)
1000e828:	29400117 	ldw	r5,4(r5)
1000e82c:	30c00215 	stw	r3,8(r6)
1000e830:	10c00317 	ldw	r3,12(r2)
1000e834:	2908703a 	and	r4,r5,r4
1000e838:	30c00315 	stw	r3,12(r6)
1000e83c:	10c00417 	ldw	r3,16(r2)
1000e840:	31000115 	stw	r4,4(r6)
1000e844:	3005883a 	mov	r2,r6
1000e848:	30c00415 	stw	r3,16(r6)
1000e84c:	f800283a 	ret
1000e850:	580f883a 	mov	r7,r11
1000e854:	0019883a 	mov	r12,zero
1000e858:	001b883a 	mov	r13,zero
1000e85c:	003f9f06 	br	1000e6dc <__alt_data_end+0xf800e6dc>
1000e860:	0115c83a 	sub	r10,zero,r4
1000e864:	00c00fc4 	movi	r3,63
1000e868:	1abfda16 	blt	r3,r10,1000e7d4 <__alt_data_end+0xf800e7d4>
1000e86c:	003f8906 	br	1000e694 <__alt_data_end+0xf800e694>
1000e870:	627fb52e 	bgeu	r12,r9,1000e748 <__alt_data_end+0xf800e748>
1000e874:	003fc006 	br	1000e778 <__alt_data_end+0xf800e778>
1000e878:	6205c83a 	sub	r2,r12,r8
1000e87c:	6099803a 	cmpltu	r12,r12,r2
1000e880:	6a47c83a 	sub	r3,r13,r9
1000e884:	1b07c83a 	sub	r3,r3,r12
1000e888:	183f9d0e 	bge	r3,zero,1000e700 <__alt_data_end+0xf800e700>
1000e88c:	0085c83a 	sub	r2,zero,r2
1000e890:	1008c03a 	cmpne	r4,r2,zero
1000e894:	00c7c83a 	sub	r3,zero,r3
1000e898:	1907c83a 	sub	r3,r3,r4
1000e89c:	01000044 	movi	r4,1
1000e8a0:	31000115 	stw	r4,4(r6)
1000e8a4:	31c00215 	stw	r7,8(r6)
1000e8a8:	30800315 	stw	r2,12(r6)
1000e8ac:	30c00415 	stw	r3,16(r6)
1000e8b0:	003f9706 	br	1000e710 <__alt_data_end+0xf800e710>
1000e8b4:	203f8926 	beq	r4,zero,1000e6dc <__alt_data_end+0xf800e6dc>
1000e8b8:	50fff804 	addi	r3,r10,-32
1000e8bc:	3a8f883a 	add	r7,r7,r10
1000e8c0:	18002316 	blt	r3,zero,1000e950 <_fpadd_parts+0x318>
1000e8c4:	68d6d83a 	srl	r11,r13,r3
1000e8c8:	001d883a 	mov	r14,zero
1000e8cc:	18001c16 	blt	r3,zero,1000e940 <_fpadd_parts+0x308>
1000e8d0:	01000044 	movi	r4,1
1000e8d4:	20c6983a 	sll	r3,r4,r3
1000e8d8:	0015883a 	mov	r10,zero
1000e8dc:	513fffc4 	addi	r4,r10,-1
1000e8e0:	2295403a 	cmpgeu	r10,r4,r10
1000e8e4:	1a87c83a 	sub	r3,r3,r10
1000e8e8:	1b5a703a 	and	r13,r3,r13
1000e8ec:	2318703a 	and	r12,r4,r12
1000e8f0:	6358b03a 	or	r12,r12,r13
1000e8f4:	6018c03a 	cmpne	r12,r12,zero
1000e8f8:	62d8b03a 	or	r12,r12,r11
1000e8fc:	701b883a 	mov	r13,r14
1000e900:	003f7606 	br	1000e6dc <__alt_data_end+0xf800e6dc>
1000e904:	4808907a 	slli	r4,r9,1
1000e908:	02c007c4 	movi	r11,31
1000e90c:	5a97c83a 	sub	r11,r11,r10
1000e910:	22c8983a 	sll	r4,r4,r11
1000e914:	4296d83a 	srl	r11,r8,r10
1000e918:	4a9cd83a 	srl	r14,r9,r10
1000e91c:	22d6b03a 	or	r11,r4,r11
1000e920:	003f6106 	br	1000e6a8 <__alt_data_end+0xf800e6a8>
1000e924:	00c00044 	movi	r3,1
1000e928:	1a94983a 	sll	r10,r3,r10
1000e92c:	0007883a 	mov	r3,zero
1000e930:	003f6106 	br	1000e6b8 <__alt_data_end+0xf800e6b8>
1000e934:	013fff84 	movi	r4,-2
1000e938:	21ff7c2e 	bgeu	r4,r7,1000e72c <__alt_data_end+0xf800e72c>
1000e93c:	003f9106 	br	1000e784 <__alt_data_end+0xf800e784>
1000e940:	00c00044 	movi	r3,1
1000e944:	1a94983a 	sll	r10,r3,r10
1000e948:	0007883a 	mov	r3,zero
1000e94c:	003fe306 	br	1000e8dc <__alt_data_end+0xf800e8dc>
1000e950:	6816907a 	slli	r11,r13,1
1000e954:	010007c4 	movi	r4,31
1000e958:	2289c83a 	sub	r4,r4,r10
1000e95c:	5908983a 	sll	r4,r11,r4
1000e960:	6296d83a 	srl	r11,r12,r10
1000e964:	6a9cd83a 	srl	r14,r13,r10
1000e968:	22d6b03a 	or	r11,r4,r11
1000e96c:	003fd706 	br	1000e8cc <__alt_data_end+0xf800e8cc>
1000e970:	193f971e 	bne	r3,r4,1000e7d0 <__alt_data_end+0xf800e7d0>
1000e974:	11000117 	ldw	r4,4(r2)
1000e978:	28c00117 	ldw	r3,4(r5)
1000e97c:	20ff9426 	beq	r4,r3,1000e7d0 <__alt_data_end+0xf800e7d0>
1000e980:	00840074 	movhi	r2,4097
1000e984:	108a4d04 	addi	r2,r2,10548
1000e988:	f800283a 	ret

1000e98c <__adddf3>:
1000e98c:	deffec04 	addi	sp,sp,-80
1000e990:	d9001115 	stw	r4,68(sp)
1000e994:	d9401215 	stw	r5,72(sp)
1000e998:	d9001104 	addi	r4,sp,68
1000e99c:	d9400a04 	addi	r5,sp,40
1000e9a0:	dfc01315 	stw	ra,76(sp)
1000e9a4:	d9c01015 	stw	r7,64(sp)
1000e9a8:	d9800f15 	stw	r6,60(sp)
1000e9ac:	000f9fc0 	call	1000f9fc <__unpack_d>
1000e9b0:	d9000f04 	addi	r4,sp,60
1000e9b4:	d9400504 	addi	r5,sp,20
1000e9b8:	000f9fc0 	call	1000f9fc <__unpack_d>
1000e9bc:	d9000a04 	addi	r4,sp,40
1000e9c0:	d9400504 	addi	r5,sp,20
1000e9c4:	d80d883a 	mov	r6,sp
1000e9c8:	000e6380 	call	1000e638 <_fpadd_parts>
1000e9cc:	1009883a 	mov	r4,r2
1000e9d0:	000f7d80 	call	1000f7d8 <__pack_d>
1000e9d4:	dfc01317 	ldw	ra,76(sp)
1000e9d8:	dec01404 	addi	sp,sp,80
1000e9dc:	f800283a 	ret

1000e9e0 <__subdf3>:
1000e9e0:	deffec04 	addi	sp,sp,-80
1000e9e4:	d9001115 	stw	r4,68(sp)
1000e9e8:	d9401215 	stw	r5,72(sp)
1000e9ec:	d9001104 	addi	r4,sp,68
1000e9f0:	d9400a04 	addi	r5,sp,40
1000e9f4:	dfc01315 	stw	ra,76(sp)
1000e9f8:	d9c01015 	stw	r7,64(sp)
1000e9fc:	d9800f15 	stw	r6,60(sp)
1000ea00:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ea04:	d9000f04 	addi	r4,sp,60
1000ea08:	d9400504 	addi	r5,sp,20
1000ea0c:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ea10:	d8800617 	ldw	r2,24(sp)
1000ea14:	d9000a04 	addi	r4,sp,40
1000ea18:	d9400504 	addi	r5,sp,20
1000ea1c:	d80d883a 	mov	r6,sp
1000ea20:	1080005c 	xori	r2,r2,1
1000ea24:	d8800615 	stw	r2,24(sp)
1000ea28:	000e6380 	call	1000e638 <_fpadd_parts>
1000ea2c:	1009883a 	mov	r4,r2
1000ea30:	000f7d80 	call	1000f7d8 <__pack_d>
1000ea34:	dfc01317 	ldw	ra,76(sp)
1000ea38:	dec01404 	addi	sp,sp,80
1000ea3c:	f800283a 	ret

1000ea40 <__muldf3>:
1000ea40:	deffe404 	addi	sp,sp,-112
1000ea44:	d9001115 	stw	r4,68(sp)
1000ea48:	d9401215 	stw	r5,72(sp)
1000ea4c:	d9001104 	addi	r4,sp,68
1000ea50:	d9400a04 	addi	r5,sp,40
1000ea54:	dfc01b15 	stw	ra,108(sp)
1000ea58:	d9800f15 	stw	r6,60(sp)
1000ea5c:	d9c01015 	stw	r7,64(sp)
1000ea60:	ddc01a15 	stw	r23,104(sp)
1000ea64:	dd801915 	stw	r22,100(sp)
1000ea68:	dd401815 	stw	r21,96(sp)
1000ea6c:	dd001715 	stw	r20,92(sp)
1000ea70:	dcc01615 	stw	r19,88(sp)
1000ea74:	dc801515 	stw	r18,84(sp)
1000ea78:	dc401415 	stw	r17,80(sp)
1000ea7c:	dc001315 	stw	r16,76(sp)
1000ea80:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ea84:	d9000f04 	addi	r4,sp,60
1000ea88:	d9400504 	addi	r5,sp,20
1000ea8c:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ea90:	d8c00a17 	ldw	r3,40(sp)
1000ea94:	00800044 	movi	r2,1
1000ea98:	10c01136 	bltu	r2,r3,1000eae0 <__muldf3+0xa0>
1000ea9c:	d8c00b17 	ldw	r3,44(sp)
1000eaa0:	d8800617 	ldw	r2,24(sp)
1000eaa4:	d9000a04 	addi	r4,sp,40
1000eaa8:	1884c03a 	cmpne	r2,r3,r2
1000eaac:	d8800b15 	stw	r2,44(sp)
1000eab0:	000f7d80 	call	1000f7d8 <__pack_d>
1000eab4:	dfc01b17 	ldw	ra,108(sp)
1000eab8:	ddc01a17 	ldw	r23,104(sp)
1000eabc:	dd801917 	ldw	r22,100(sp)
1000eac0:	dd401817 	ldw	r21,96(sp)
1000eac4:	dd001717 	ldw	r20,92(sp)
1000eac8:	dcc01617 	ldw	r19,88(sp)
1000eacc:	dc801517 	ldw	r18,84(sp)
1000ead0:	dc401417 	ldw	r17,80(sp)
1000ead4:	dc001317 	ldw	r16,76(sp)
1000ead8:	dec01c04 	addi	sp,sp,112
1000eadc:	f800283a 	ret
1000eae0:	d9000517 	ldw	r4,20(sp)
1000eae4:	11000636 	bltu	r2,r4,1000eb00 <__muldf3+0xc0>
1000eae8:	d8800617 	ldw	r2,24(sp)
1000eaec:	d8c00b17 	ldw	r3,44(sp)
1000eaf0:	d9000504 	addi	r4,sp,20
1000eaf4:	1884c03a 	cmpne	r2,r3,r2
1000eaf8:	d8800615 	stw	r2,24(sp)
1000eafc:	003fec06 	br	1000eab0 <__alt_data_end+0xf800eab0>
1000eb00:	00800104 	movi	r2,4
1000eb04:	1880051e 	bne	r3,r2,1000eb1c <__muldf3+0xdc>
1000eb08:	00800084 	movi	r2,2
1000eb0c:	20bfe31e 	bne	r4,r2,1000ea9c <__alt_data_end+0xf800ea9c>
1000eb10:	01040074 	movhi	r4,4097
1000eb14:	210a4d04 	addi	r4,r4,10548
1000eb18:	003fe506 	br	1000eab0 <__alt_data_end+0xf800eab0>
1000eb1c:	2080031e 	bne	r4,r2,1000eb2c <__muldf3+0xec>
1000eb20:	00800084 	movi	r2,2
1000eb24:	18bffa26 	beq	r3,r2,1000eb10 <__alt_data_end+0xf800eb10>
1000eb28:	003fef06 	br	1000eae8 <__alt_data_end+0xf800eae8>
1000eb2c:	00800084 	movi	r2,2
1000eb30:	18bfda26 	beq	r3,r2,1000ea9c <__alt_data_end+0xf800ea9c>
1000eb34:	20bfec26 	beq	r4,r2,1000eae8 <__alt_data_end+0xf800eae8>
1000eb38:	dc000d17 	ldw	r16,52(sp)
1000eb3c:	dd000817 	ldw	r20,32(sp)
1000eb40:	dc800917 	ldw	r18,36(sp)
1000eb44:	8009883a 	mov	r4,r16
1000eb48:	000b883a 	mov	r5,zero
1000eb4c:	a00d883a 	mov	r6,r20
1000eb50:	000f883a 	mov	r7,zero
1000eb54:	000d7280 	call	1000d728 <__muldi3>
1000eb58:	dc400e17 	ldw	r17,56(sp)
1000eb5c:	9009883a 	mov	r4,r18
1000eb60:	800d883a 	mov	r6,r16
1000eb64:	000b883a 	mov	r5,zero
1000eb68:	000f883a 	mov	r7,zero
1000eb6c:	102f883a 	mov	r23,r2
1000eb70:	1827883a 	mov	r19,r3
1000eb74:	000d7280 	call	1000d728 <__muldi3>
1000eb78:	900d883a 	mov	r6,r18
1000eb7c:	8809883a 	mov	r4,r17
1000eb80:	000b883a 	mov	r5,zero
1000eb84:	000f883a 	mov	r7,zero
1000eb88:	102b883a 	mov	r21,r2
1000eb8c:	1821883a 	mov	r16,r3
1000eb90:	000d7280 	call	1000d728 <__muldi3>
1000eb94:	8809883a 	mov	r4,r17
1000eb98:	000b883a 	mov	r5,zero
1000eb9c:	a00d883a 	mov	r6,r20
1000eba0:	000f883a 	mov	r7,zero
1000eba4:	102d883a 	mov	r22,r2
1000eba8:	1825883a 	mov	r18,r3
1000ebac:	000d7280 	call	1000d728 <__muldi3>
1000ebb0:	154b883a 	add	r5,r2,r21
1000ebb4:	2889803a 	cmpltu	r4,r5,r2
1000ebb8:	1c07883a 	add	r3,r3,r16
1000ebbc:	20c9883a 	add	r4,r4,r3
1000ebc0:	24004b36 	bltu	r4,r16,1000ecf0 <__muldf3+0x2b0>
1000ebc4:	8100011e 	bne	r16,r4,1000ebcc <__muldf3+0x18c>
1000ebc8:	2d404936 	bltu	r5,r21,1000ecf0 <__muldf3+0x2b0>
1000ebcc:	0011883a 	mov	r8,zero
1000ebd0:	0007883a 	mov	r3,zero
1000ebd4:	2ccb883a 	add	r5,r5,r19
1000ebd8:	b80d883a 	mov	r6,r23
1000ebdc:	2cc0012e 	bgeu	r5,r19,1000ebe4 <__muldf3+0x1a4>
1000ebe0:	02000044 	movi	r8,1
1000ebe4:	258f883a 	add	r7,r4,r22
1000ebe8:	3909803a 	cmpltu	r4,r7,r4
1000ebec:	da400c17 	ldw	r9,48(sp)
1000ebf0:	2489883a 	add	r4,r4,r18
1000ebf4:	d8800717 	ldw	r2,28(sp)
1000ebf8:	20c9883a 	add	r4,r4,r3
1000ebfc:	da800b17 	ldw	r10,44(sp)
1000ec00:	d8c00617 	ldw	r3,24(sp)
1000ec04:	3a11883a 	add	r8,r7,r8
1000ec08:	4885883a 	add	r2,r9,r2
1000ec0c:	50c6c03a 	cmpne	r3,r10,r3
1000ec10:	41cf803a 	cmpltu	r7,r8,r7
1000ec14:	12400104 	addi	r9,r2,4
1000ec18:	d8c00115 	stw	r3,4(sp)
1000ec1c:	3909883a 	add	r4,r7,r4
1000ec20:	da400215 	stw	r9,8(sp)
1000ec24:	03480034 	movhi	r13,8192
1000ec28:	6b7fffc4 	addi	r13,r13,-1
1000ec2c:	4007883a 	mov	r3,r8
1000ec30:	6900102e 	bgeu	r13,r4,1000ec74 <__muldf3+0x234>
1000ec34:	10800144 	addi	r2,r2,5
1000ec38:	180ed07a 	srli	r7,r3,1
1000ec3c:	18c0004c 	andi	r3,r3,1
1000ec40:	201097fa 	slli	r8,r4,31
1000ec44:	281697fa 	slli	r11,r5,31
1000ec48:	2008d07a 	srli	r4,r4,1
1000ec4c:	3014d07a 	srli	r10,r6,1
1000ec50:	2812d07a 	srli	r9,r5,1
1000ec54:	1019883a 	mov	r12,r2
1000ec58:	18000226 	beq	r3,zero,1000ec64 <__muldf3+0x224>
1000ec5c:	5a8cb03a 	or	r6,r11,r10
1000ec60:	49600034 	orhi	r5,r9,32768
1000ec64:	41c6b03a 	or	r3,r8,r7
1000ec68:	10800044 	addi	r2,r2,1
1000ec6c:	693ff236 	bltu	r13,r4,1000ec38 <__alt_data_end+0xf800ec38>
1000ec70:	db000215 	stw	r12,8(sp)
1000ec74:	03440034 	movhi	r13,4096
1000ec78:	6b7fffc4 	addi	r13,r13,-1
1000ec7c:	69001336 	bltu	r13,r4,1000eccc <__muldf3+0x28c>
1000ec80:	d8800217 	ldw	r2,8(sp)
1000ec84:	10bfffc4 	addi	r2,r2,-1
1000ec88:	18d3883a 	add	r9,r3,r3
1000ec8c:	48c7803a 	cmpltu	r3,r9,r3
1000ec90:	2109883a 	add	r4,r4,r4
1000ec94:	190f883a 	add	r7,r3,r4
1000ec98:	3191883a 	add	r8,r6,r6
1000ec9c:	4197803a 	cmpltu	r11,r8,r6
1000eca0:	2955883a 	add	r10,r5,r5
1000eca4:	1019883a 	mov	r12,r2
1000eca8:	4807883a 	mov	r3,r9
1000ecac:	3809883a 	mov	r4,r7
1000ecb0:	2800010e 	bge	r5,zero,1000ecb8 <__muldf3+0x278>
1000ecb4:	48c00054 	ori	r3,r9,1
1000ecb8:	400d883a 	mov	r6,r8
1000ecbc:	5a8b883a 	add	r5,r11,r10
1000ecc0:	10bfffc4 	addi	r2,r2,-1
1000ecc4:	69fff02e 	bgeu	r13,r7,1000ec88 <__alt_data_end+0xf800ec88>
1000ecc8:	db000215 	stw	r12,8(sp)
1000eccc:	18803fcc 	andi	r2,r3,255
1000ecd0:	01c02004 	movi	r7,128
1000ecd4:	11c00926 	beq	r2,r7,1000ecfc <__muldf3+0x2bc>
1000ecd8:	008000c4 	movi	r2,3
1000ecdc:	d9000415 	stw	r4,16(sp)
1000ece0:	d8c00315 	stw	r3,12(sp)
1000ece4:	d8800015 	stw	r2,0(sp)
1000ece8:	d809883a 	mov	r4,sp
1000ecec:	003f7006 	br	1000eab0 <__alt_data_end+0xf800eab0>
1000ecf0:	0011883a 	mov	r8,zero
1000ecf4:	00c00044 	movi	r3,1
1000ecf8:	003fb606 	br	1000ebd4 <__alt_data_end+0xf800ebd4>
1000ecfc:	19c0400c 	andi	r7,r3,256
1000ed00:	383ff51e 	bne	r7,zero,1000ecd8 <__alt_data_end+0xf800ecd8>
1000ed04:	314ab03a 	or	r5,r6,r5
1000ed08:	283ff326 	beq	r5,zero,1000ecd8 <__alt_data_end+0xf800ecd8>
1000ed0c:	1885883a 	add	r2,r3,r2
1000ed10:	10cb803a 	cmpltu	r5,r2,r3
1000ed14:	00ffc004 	movi	r3,-256
1000ed18:	10c6703a 	and	r3,r2,r3
1000ed1c:	2909883a 	add	r4,r5,r4
1000ed20:	003fed06 	br	1000ecd8 <__alt_data_end+0xf800ecd8>

1000ed24 <__divdf3>:
1000ed24:	defff104 	addi	sp,sp,-60
1000ed28:	d9000c15 	stw	r4,48(sp)
1000ed2c:	d9400d15 	stw	r5,52(sp)
1000ed30:	d9000c04 	addi	r4,sp,48
1000ed34:	d9400504 	addi	r5,sp,20
1000ed38:	dfc00e15 	stw	ra,56(sp)
1000ed3c:	d9800a15 	stw	r6,40(sp)
1000ed40:	d9c00b15 	stw	r7,44(sp)
1000ed44:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ed48:	d9000a04 	addi	r4,sp,40
1000ed4c:	d80b883a 	mov	r5,sp
1000ed50:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ed54:	d8c00517 	ldw	r3,20(sp)
1000ed58:	00800044 	movi	r2,1
1000ed5c:	10c00536 	bltu	r2,r3,1000ed74 <__divdf3+0x50>
1000ed60:	d9000504 	addi	r4,sp,20
1000ed64:	000f7d80 	call	1000f7d8 <__pack_d>
1000ed68:	dfc00e17 	ldw	ra,56(sp)
1000ed6c:	dec00f04 	addi	sp,sp,60
1000ed70:	f800283a 	ret
1000ed74:	d9000017 	ldw	r4,0(sp)
1000ed78:	11000536 	bltu	r2,r4,1000ed90 <__divdf3+0x6c>
1000ed7c:	d809883a 	mov	r4,sp
1000ed80:	000f7d80 	call	1000f7d8 <__pack_d>
1000ed84:	dfc00e17 	ldw	ra,56(sp)
1000ed88:	dec00f04 	addi	sp,sp,60
1000ed8c:	f800283a 	ret
1000ed90:	d9800617 	ldw	r6,24(sp)
1000ed94:	d9400117 	ldw	r5,4(sp)
1000ed98:	00800104 	movi	r2,4
1000ed9c:	314af03a 	xor	r5,r6,r5
1000eda0:	d9400615 	stw	r5,24(sp)
1000eda4:	18800226 	beq	r3,r2,1000edb0 <__divdf3+0x8c>
1000eda8:	01400084 	movi	r5,2
1000edac:	1940041e 	bne	r3,r5,1000edc0 <__divdf3+0x9c>
1000edb0:	193feb1e 	bne	r3,r4,1000ed60 <__alt_data_end+0xf800ed60>
1000edb4:	01040074 	movhi	r4,4097
1000edb8:	210a4d04 	addi	r4,r4,10548
1000edbc:	003fe906 	br	1000ed64 <__alt_data_end+0xf800ed64>
1000edc0:	20803326 	beq	r4,r2,1000ee90 <__divdf3+0x16c>
1000edc4:	21403726 	beq	r4,r5,1000eea4 <__divdf3+0x180>
1000edc8:	d8800217 	ldw	r2,8(sp)
1000edcc:	d9000717 	ldw	r4,28(sp)
1000edd0:	d8c00917 	ldw	r3,36(sp)
1000edd4:	da000417 	ldw	r8,16(sp)
1000edd8:	2089c83a 	sub	r4,r4,r2
1000eddc:	d9000715 	stw	r4,28(sp)
1000ede0:	d8800817 	ldw	r2,32(sp)
1000ede4:	dbc00317 	ldw	r15,12(sp)
1000ede8:	1a000236 	bltu	r3,r8,1000edf4 <__divdf3+0xd0>
1000edec:	40c0081e 	bne	r8,r3,1000ee10 <__divdf3+0xec>
1000edf0:	13c0072e 	bgeu	r2,r15,1000ee10 <__divdf3+0xec>
1000edf4:	108b883a 	add	r5,r2,r2
1000edf8:	288d803a 	cmpltu	r6,r5,r2
1000edfc:	18c7883a 	add	r3,r3,r3
1000ee00:	213fffc4 	addi	r4,r4,-1
1000ee04:	2805883a 	mov	r2,r5
1000ee08:	30c7883a 	add	r3,r6,r3
1000ee0c:	d9000715 	stw	r4,28(sp)
1000ee10:	01400f44 	movi	r5,61
1000ee14:	000f883a 	mov	r7,zero
1000ee18:	01040034 	movhi	r4,4096
1000ee1c:	0019883a 	mov	r12,zero
1000ee20:	001b883a 	mov	r13,zero
1000ee24:	201697fa 	slli	r11,r4,31
1000ee28:	3814d07a 	srli	r10,r7,1
1000ee2c:	297fffc4 	addi	r5,r5,-1
1000ee30:	1a000936 	bltu	r3,r8,1000ee58 <__divdf3+0x134>
1000ee34:	13cdc83a 	sub	r6,r2,r15
1000ee38:	1193803a 	cmpltu	r9,r2,r6
1000ee3c:	1a1dc83a 	sub	r14,r3,r8
1000ee40:	40c0011e 	bne	r8,r3,1000ee48 <__divdf3+0x124>
1000ee44:	13c00436 	bltu	r2,r15,1000ee58 <__divdf3+0x134>
1000ee48:	3005883a 	mov	r2,r6
1000ee4c:	7247c83a 	sub	r3,r14,r9
1000ee50:	61d8b03a 	or	r12,r12,r7
1000ee54:	691ab03a 	or	r13,r13,r4
1000ee58:	108d883a 	add	r6,r2,r2
1000ee5c:	3093803a 	cmpltu	r9,r6,r2
1000ee60:	18c7883a 	add	r3,r3,r3
1000ee64:	5a8eb03a 	or	r7,r11,r10
1000ee68:	2008d07a 	srli	r4,r4,1
1000ee6c:	3005883a 	mov	r2,r6
1000ee70:	48c7883a 	add	r3,r9,r3
1000ee74:	283feb1e 	bne	r5,zero,1000ee24 <__alt_data_end+0xf800ee24>
1000ee78:	61003fcc 	andi	r4,r12,255
1000ee7c:	01402004 	movi	r5,128
1000ee80:	21400b26 	beq	r4,r5,1000eeb0 <__divdf3+0x18c>
1000ee84:	db000815 	stw	r12,32(sp)
1000ee88:	db400915 	stw	r13,36(sp)
1000ee8c:	003fb406 	br	1000ed60 <__alt_data_end+0xf800ed60>
1000ee90:	d8000815 	stw	zero,32(sp)
1000ee94:	d8000915 	stw	zero,36(sp)
1000ee98:	d8000715 	stw	zero,28(sp)
1000ee9c:	d9000504 	addi	r4,sp,20
1000eea0:	003fb006 	br	1000ed64 <__alt_data_end+0xf800ed64>
1000eea4:	d8800515 	stw	r2,20(sp)
1000eea8:	d9000504 	addi	r4,sp,20
1000eeac:	003fad06 	br	1000ed64 <__alt_data_end+0xf800ed64>
1000eeb0:	6140400c 	andi	r5,r12,256
1000eeb4:	283ff31e 	bne	r5,zero,1000ee84 <__alt_data_end+0xf800ee84>
1000eeb8:	30c4b03a 	or	r2,r6,r3
1000eebc:	103ff126 	beq	r2,zero,1000ee84 <__alt_data_end+0xf800ee84>
1000eec0:	6109883a 	add	r4,r12,r4
1000eec4:	2305803a 	cmpltu	r2,r4,r12
1000eec8:	033fc004 	movi	r12,-256
1000eecc:	2318703a 	and	r12,r4,r12
1000eed0:	135b883a 	add	r13,r2,r13
1000eed4:	003feb06 	br	1000ee84 <__alt_data_end+0xf800ee84>

1000eed8 <__eqdf2>:
1000eed8:	defff104 	addi	sp,sp,-60
1000eedc:	d9000c15 	stw	r4,48(sp)
1000eee0:	d9400d15 	stw	r5,52(sp)
1000eee4:	d9000c04 	addi	r4,sp,48
1000eee8:	d9400504 	addi	r5,sp,20
1000eeec:	dfc00e15 	stw	ra,56(sp)
1000eef0:	d9800a15 	stw	r6,40(sp)
1000eef4:	d9c00b15 	stw	r7,44(sp)
1000eef8:	000f9fc0 	call	1000f9fc <__unpack_d>
1000eefc:	d9000a04 	addi	r4,sp,40
1000ef00:	d80b883a 	mov	r5,sp
1000ef04:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ef08:	d8c00517 	ldw	r3,20(sp)
1000ef0c:	00800044 	movi	r2,1
1000ef10:	10c0052e 	bgeu	r2,r3,1000ef28 <__eqdf2+0x50>
1000ef14:	d8c00017 	ldw	r3,0(sp)
1000ef18:	10c0032e 	bgeu	r2,r3,1000ef28 <__eqdf2+0x50>
1000ef1c:	d9000504 	addi	r4,sp,20
1000ef20:	d80b883a 	mov	r5,sp
1000ef24:	000fb000 	call	1000fb00 <__fpcmp_parts_d>
1000ef28:	dfc00e17 	ldw	ra,56(sp)
1000ef2c:	dec00f04 	addi	sp,sp,60
1000ef30:	f800283a 	ret

1000ef34 <__nedf2>:
1000ef34:	defff104 	addi	sp,sp,-60
1000ef38:	d9000c15 	stw	r4,48(sp)
1000ef3c:	d9400d15 	stw	r5,52(sp)
1000ef40:	d9000c04 	addi	r4,sp,48
1000ef44:	d9400504 	addi	r5,sp,20
1000ef48:	dfc00e15 	stw	ra,56(sp)
1000ef4c:	d9800a15 	stw	r6,40(sp)
1000ef50:	d9c00b15 	stw	r7,44(sp)
1000ef54:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ef58:	d9000a04 	addi	r4,sp,40
1000ef5c:	d80b883a 	mov	r5,sp
1000ef60:	000f9fc0 	call	1000f9fc <__unpack_d>
1000ef64:	d8c00517 	ldw	r3,20(sp)
1000ef68:	00800044 	movi	r2,1
1000ef6c:	10c0052e 	bgeu	r2,r3,1000ef84 <__nedf2+0x50>
1000ef70:	d8c00017 	ldw	r3,0(sp)
1000ef74:	10c0032e 	bgeu	r2,r3,1000ef84 <__nedf2+0x50>
1000ef78:	d9000504 	addi	r4,sp,20
1000ef7c:	d80b883a 	mov	r5,sp
1000ef80:	000fb000 	call	1000fb00 <__fpcmp_parts_d>
1000ef84:	dfc00e17 	ldw	ra,56(sp)
1000ef88:	dec00f04 	addi	sp,sp,60
1000ef8c:	f800283a 	ret

1000ef90 <__gtdf2>:
1000ef90:	defff104 	addi	sp,sp,-60
1000ef94:	d9000c15 	stw	r4,48(sp)
1000ef98:	d9400d15 	stw	r5,52(sp)
1000ef9c:	d9000c04 	addi	r4,sp,48
1000efa0:	d9400504 	addi	r5,sp,20
1000efa4:	dfc00e15 	stw	ra,56(sp)
1000efa8:	d9800a15 	stw	r6,40(sp)
1000efac:	d9c00b15 	stw	r7,44(sp)
1000efb0:	000f9fc0 	call	1000f9fc <__unpack_d>
1000efb4:	d9000a04 	addi	r4,sp,40
1000efb8:	d80b883a 	mov	r5,sp
1000efbc:	000f9fc0 	call	1000f9fc <__unpack_d>
1000efc0:	d8c00517 	ldw	r3,20(sp)
1000efc4:	00800044 	movi	r2,1
1000efc8:	10c0082e 	bgeu	r2,r3,1000efec <__gtdf2+0x5c>
1000efcc:	d8c00017 	ldw	r3,0(sp)
1000efd0:	10c0062e 	bgeu	r2,r3,1000efec <__gtdf2+0x5c>
1000efd4:	d9000504 	addi	r4,sp,20
1000efd8:	d80b883a 	mov	r5,sp
1000efdc:	000fb000 	call	1000fb00 <__fpcmp_parts_d>
1000efe0:	dfc00e17 	ldw	ra,56(sp)
1000efe4:	dec00f04 	addi	sp,sp,60
1000efe8:	f800283a 	ret
1000efec:	00bfffc4 	movi	r2,-1
1000eff0:	003ffb06 	br	1000efe0 <__alt_data_end+0xf800efe0>

1000eff4 <__gedf2>:
1000eff4:	defff104 	addi	sp,sp,-60
1000eff8:	d9000c15 	stw	r4,48(sp)
1000effc:	d9400d15 	stw	r5,52(sp)
1000f000:	d9000c04 	addi	r4,sp,48
1000f004:	d9400504 	addi	r5,sp,20
1000f008:	dfc00e15 	stw	ra,56(sp)
1000f00c:	d9800a15 	stw	r6,40(sp)
1000f010:	d9c00b15 	stw	r7,44(sp)
1000f014:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f018:	d9000a04 	addi	r4,sp,40
1000f01c:	d80b883a 	mov	r5,sp
1000f020:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f024:	d8c00517 	ldw	r3,20(sp)
1000f028:	00800044 	movi	r2,1
1000f02c:	10c0082e 	bgeu	r2,r3,1000f050 <__gedf2+0x5c>
1000f030:	d8c00017 	ldw	r3,0(sp)
1000f034:	10c0062e 	bgeu	r2,r3,1000f050 <__gedf2+0x5c>
1000f038:	d9000504 	addi	r4,sp,20
1000f03c:	d80b883a 	mov	r5,sp
1000f040:	000fb000 	call	1000fb00 <__fpcmp_parts_d>
1000f044:	dfc00e17 	ldw	ra,56(sp)
1000f048:	dec00f04 	addi	sp,sp,60
1000f04c:	f800283a 	ret
1000f050:	00bfffc4 	movi	r2,-1
1000f054:	003ffb06 	br	1000f044 <__alt_data_end+0xf800f044>

1000f058 <__ltdf2>:
1000f058:	defff104 	addi	sp,sp,-60
1000f05c:	d9000c15 	stw	r4,48(sp)
1000f060:	d9400d15 	stw	r5,52(sp)
1000f064:	d9000c04 	addi	r4,sp,48
1000f068:	d9400504 	addi	r5,sp,20
1000f06c:	dfc00e15 	stw	ra,56(sp)
1000f070:	d9800a15 	stw	r6,40(sp)
1000f074:	d9c00b15 	stw	r7,44(sp)
1000f078:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f07c:	d9000a04 	addi	r4,sp,40
1000f080:	d80b883a 	mov	r5,sp
1000f084:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f088:	d8c00517 	ldw	r3,20(sp)
1000f08c:	00800044 	movi	r2,1
1000f090:	10c0052e 	bgeu	r2,r3,1000f0a8 <__ltdf2+0x50>
1000f094:	d8c00017 	ldw	r3,0(sp)
1000f098:	10c0032e 	bgeu	r2,r3,1000f0a8 <__ltdf2+0x50>
1000f09c:	d9000504 	addi	r4,sp,20
1000f0a0:	d80b883a 	mov	r5,sp
1000f0a4:	000fb000 	call	1000fb00 <__fpcmp_parts_d>
1000f0a8:	dfc00e17 	ldw	ra,56(sp)
1000f0ac:	dec00f04 	addi	sp,sp,60
1000f0b0:	f800283a 	ret

1000f0b4 <__ledf2>:
1000f0b4:	defff104 	addi	sp,sp,-60
1000f0b8:	d9000c15 	stw	r4,48(sp)
1000f0bc:	d9400d15 	stw	r5,52(sp)
1000f0c0:	d9000c04 	addi	r4,sp,48
1000f0c4:	d9400504 	addi	r5,sp,20
1000f0c8:	dfc00e15 	stw	ra,56(sp)
1000f0cc:	d9800a15 	stw	r6,40(sp)
1000f0d0:	d9c00b15 	stw	r7,44(sp)
1000f0d4:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f0d8:	d9000a04 	addi	r4,sp,40
1000f0dc:	d80b883a 	mov	r5,sp
1000f0e0:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f0e4:	d8c00517 	ldw	r3,20(sp)
1000f0e8:	00800044 	movi	r2,1
1000f0ec:	10c0052e 	bgeu	r2,r3,1000f104 <__ledf2+0x50>
1000f0f0:	d8c00017 	ldw	r3,0(sp)
1000f0f4:	10c0032e 	bgeu	r2,r3,1000f104 <__ledf2+0x50>
1000f0f8:	d9000504 	addi	r4,sp,20
1000f0fc:	d80b883a 	mov	r5,sp
1000f100:	000fb000 	call	1000fb00 <__fpcmp_parts_d>
1000f104:	dfc00e17 	ldw	ra,56(sp)
1000f108:	dec00f04 	addi	sp,sp,60
1000f10c:	f800283a 	ret

1000f110 <__floatsidf>:
1000f110:	2004d7fa 	srli	r2,r4,31
1000f114:	defff904 	addi	sp,sp,-28
1000f118:	00c000c4 	movi	r3,3
1000f11c:	dfc00615 	stw	ra,24(sp)
1000f120:	dc000515 	stw	r16,20(sp)
1000f124:	d8c00015 	stw	r3,0(sp)
1000f128:	d8800115 	stw	r2,4(sp)
1000f12c:	2000081e 	bne	r4,zero,1000f150 <__floatsidf+0x40>
1000f130:	00800084 	movi	r2,2
1000f134:	d8800015 	stw	r2,0(sp)
1000f138:	d809883a 	mov	r4,sp
1000f13c:	000f7d80 	call	1000f7d8 <__pack_d>
1000f140:	dfc00617 	ldw	ra,24(sp)
1000f144:	dc000517 	ldw	r16,20(sp)
1000f148:	dec00704 	addi	sp,sp,28
1000f14c:	f800283a 	ret
1000f150:	00c00f04 	movi	r3,60
1000f154:	d8c00215 	stw	r3,8(sp)
1000f158:	10000f1e 	bne	r2,zero,1000f198 <__floatsidf+0x88>
1000f15c:	2021883a 	mov	r16,r4
1000f160:	8009883a 	mov	r4,r16
1000f164:	000f57c0 	call	1000f57c <__clzsi2>
1000f168:	11000744 	addi	r4,r2,29
1000f16c:	0100110e 	bge	zero,r4,1000f1b4 <__floatsidf+0xa4>
1000f170:	10ffff44 	addi	r3,r2,-3
1000f174:	18001216 	blt	r3,zero,1000f1c0 <__floatsidf+0xb0>
1000f178:	80c6983a 	sll	r3,r16,r3
1000f17c:	0009883a 	mov	r4,zero
1000f180:	014007c4 	movi	r5,31
1000f184:	2885c83a 	sub	r2,r5,r2
1000f188:	d9000315 	stw	r4,12(sp)
1000f18c:	d8c00415 	stw	r3,16(sp)
1000f190:	d8800215 	stw	r2,8(sp)
1000f194:	003fe806 	br	1000f138 <__alt_data_end+0xf800f138>
1000f198:	00a00034 	movhi	r2,32768
1000f19c:	20800e26 	beq	r4,r2,1000f1d8 <__floatsidf+0xc8>
1000f1a0:	0121c83a 	sub	r16,zero,r4
1000f1a4:	8009883a 	mov	r4,r16
1000f1a8:	000f57c0 	call	1000f57c <__clzsi2>
1000f1ac:	11000744 	addi	r4,r2,29
1000f1b0:	013fef16 	blt	zero,r4,1000f170 <__alt_data_end+0xf800f170>
1000f1b4:	dc000315 	stw	r16,12(sp)
1000f1b8:	d8000415 	stw	zero,16(sp)
1000f1bc:	003fde06 	br	1000f138 <__alt_data_end+0xf800f138>
1000f1c0:	800ad07a 	srli	r5,r16,1
1000f1c4:	00c007c4 	movi	r3,31
1000f1c8:	1907c83a 	sub	r3,r3,r4
1000f1cc:	28c6d83a 	srl	r3,r5,r3
1000f1d0:	8108983a 	sll	r4,r16,r4
1000f1d4:	003fea06 	br	1000f180 <__alt_data_end+0xf800f180>
1000f1d8:	0005883a 	mov	r2,zero
1000f1dc:	00f07834 	movhi	r3,49632
1000f1e0:	003fd706 	br	1000f140 <__alt_data_end+0xf800f140>

1000f1e4 <__fixdfsi>:
1000f1e4:	defff804 	addi	sp,sp,-32
1000f1e8:	d9000515 	stw	r4,20(sp)
1000f1ec:	d9400615 	stw	r5,24(sp)
1000f1f0:	d9000504 	addi	r4,sp,20
1000f1f4:	d80b883a 	mov	r5,sp
1000f1f8:	dfc00715 	stw	ra,28(sp)
1000f1fc:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f200:	d8800017 	ldw	r2,0(sp)
1000f204:	00c00084 	movi	r3,2
1000f208:	10c01c26 	beq	r2,r3,1000f27c <__fixdfsi+0x98>
1000f20c:	00c00044 	movi	r3,1
1000f210:	18801a2e 	bgeu	r3,r2,1000f27c <__fixdfsi+0x98>
1000f214:	00c00104 	movi	r3,4
1000f218:	10c01126 	beq	r2,r3,1000f260 <__fixdfsi+0x7c>
1000f21c:	d8800217 	ldw	r2,8(sp)
1000f220:	10001616 	blt	r2,zero,1000f27c <__fixdfsi+0x98>
1000f224:	00c00784 	movi	r3,30
1000f228:	18800d16 	blt	r3,r2,1000f260 <__fixdfsi+0x7c>
1000f22c:	00c00f04 	movi	r3,60
1000f230:	1885c83a 	sub	r2,r3,r2
1000f234:	10fff804 	addi	r3,r2,-32
1000f238:	d9400317 	ldw	r5,12(sp)
1000f23c:	d9000417 	ldw	r4,16(sp)
1000f240:	18001216 	blt	r3,zero,1000f28c <__fixdfsi+0xa8>
1000f244:	20c4d83a 	srl	r2,r4,r3
1000f248:	d8c00117 	ldw	r3,4(sp)
1000f24c:	18000826 	beq	r3,zero,1000f270 <__fixdfsi+0x8c>
1000f250:	0085c83a 	sub	r2,zero,r2
1000f254:	dfc00717 	ldw	ra,28(sp)
1000f258:	dec00804 	addi	sp,sp,32
1000f25c:	f800283a 	ret
1000f260:	d8800117 	ldw	r2,4(sp)
1000f264:	00e00034 	movhi	r3,32768
1000f268:	1005003a 	cmpeq	r2,r2,zero
1000f26c:	1885c83a 	sub	r2,r3,r2
1000f270:	dfc00717 	ldw	ra,28(sp)
1000f274:	dec00804 	addi	sp,sp,32
1000f278:	f800283a 	ret
1000f27c:	0005883a 	mov	r2,zero
1000f280:	dfc00717 	ldw	ra,28(sp)
1000f284:	dec00804 	addi	sp,sp,32
1000f288:	f800283a 	ret
1000f28c:	2008907a 	slli	r4,r4,1
1000f290:	018007c4 	movi	r6,31
1000f294:	308dc83a 	sub	r6,r6,r2
1000f298:	2188983a 	sll	r4,r4,r6
1000f29c:	2884d83a 	srl	r2,r5,r2
1000f2a0:	2084b03a 	or	r2,r4,r2
1000f2a4:	003fe806 	br	1000f248 <__alt_data_end+0xf800f248>

1000f2a8 <__truncdfsf2>:
1000f2a8:	defff804 	addi	sp,sp,-32
1000f2ac:	d9000515 	stw	r4,20(sp)
1000f2b0:	d9400615 	stw	r5,24(sp)
1000f2b4:	d9000504 	addi	r4,sp,20
1000f2b8:	d80b883a 	mov	r5,sp
1000f2bc:	dfc00715 	stw	ra,28(sp)
1000f2c0:	000f9fc0 	call	1000f9fc <__unpack_d>
1000f2c4:	d8800317 	ldw	r2,12(sp)
1000f2c8:	d8c00417 	ldw	r3,16(sp)
1000f2cc:	01100034 	movhi	r4,16384
1000f2d0:	213fffc4 	addi	r4,r4,-1
1000f2d4:	100ed7ba 	srli	r7,r2,30
1000f2d8:	180690ba 	slli	r3,r3,2
1000f2dc:	1104703a 	and	r2,r2,r4
1000f2e0:	19ceb03a 	or	r7,r3,r7
1000f2e4:	10000126 	beq	r2,zero,1000f2ec <__truncdfsf2+0x44>
1000f2e8:	39c00054 	ori	r7,r7,1
1000f2ec:	d9000017 	ldw	r4,0(sp)
1000f2f0:	d9400117 	ldw	r5,4(sp)
1000f2f4:	d9800217 	ldw	r6,8(sp)
1000f2f8:	000f7ac0 	call	1000f7ac <__make_fp>
1000f2fc:	dfc00717 	ldw	ra,28(sp)
1000f300:	dec00804 	addi	sp,sp,32
1000f304:	f800283a 	ret

1000f308 <__floatunsidf>:
1000f308:	defff904 	addi	sp,sp,-28
1000f30c:	dc000515 	stw	r16,20(sp)
1000f310:	dfc00615 	stw	ra,24(sp)
1000f314:	d8000115 	stw	zero,4(sp)
1000f318:	2021883a 	mov	r16,r4
1000f31c:	20001726 	beq	r4,zero,1000f37c <__floatunsidf+0x74>
1000f320:	008000c4 	movi	r2,3
1000f324:	d8800015 	stw	r2,0(sp)
1000f328:	00800f04 	movi	r2,60
1000f32c:	d8800215 	stw	r2,8(sp)
1000f330:	000f57c0 	call	1000f57c <__clzsi2>
1000f334:	10c00744 	addi	r3,r2,29
1000f338:	18001816 	blt	r3,zero,1000f39c <__floatunsidf+0x94>
1000f33c:	18002d26 	beq	r3,zero,1000f3f4 <__floatunsidf+0xec>
1000f340:	113fff44 	addi	r4,r2,-3
1000f344:	20002e16 	blt	r4,zero,1000f400 <__floatunsidf+0xf8>
1000f348:	8108983a 	sll	r4,r16,r4
1000f34c:	0021883a 	mov	r16,zero
1000f350:	014007c4 	movi	r5,31
1000f354:	2885c83a 	sub	r2,r5,r2
1000f358:	dc000315 	stw	r16,12(sp)
1000f35c:	d9000415 	stw	r4,16(sp)
1000f360:	d8800215 	stw	r2,8(sp)
1000f364:	d809883a 	mov	r4,sp
1000f368:	000f7d80 	call	1000f7d8 <__pack_d>
1000f36c:	dfc00617 	ldw	ra,24(sp)
1000f370:	dc000517 	ldw	r16,20(sp)
1000f374:	dec00704 	addi	sp,sp,28
1000f378:	f800283a 	ret
1000f37c:	00800084 	movi	r2,2
1000f380:	d809883a 	mov	r4,sp
1000f384:	d8800015 	stw	r2,0(sp)
1000f388:	000f7d80 	call	1000f7d8 <__pack_d>
1000f38c:	dfc00617 	ldw	ra,24(sp)
1000f390:	dc000517 	ldw	r16,20(sp)
1000f394:	dec00704 	addi	sp,sp,28
1000f398:	f800283a 	ret
1000f39c:	00c7c83a 	sub	r3,zero,r3
1000f3a0:	193ff804 	addi	r4,r3,-32
1000f3a4:	20001c16 	blt	r4,zero,1000f418 <__floatunsidf+0x110>
1000f3a8:	000b883a 	mov	r5,zero
1000f3ac:	2009d7fa 	srai	r4,r4,31
1000f3b0:	80c6d83a 	srl	r3,r16,r3
1000f3b4:	297fffc4 	addi	r5,r5,-1
1000f3b8:	2c20703a 	and	r16,r5,r16
1000f3bc:	8020c03a 	cmpne	r16,r16,zero
1000f3c0:	1906703a 	and	r3,r3,r4
1000f3c4:	010007c4 	movi	r4,31
1000f3c8:	80c6b03a 	or	r3,r16,r3
1000f3cc:	2085c83a 	sub	r2,r4,r2
1000f3d0:	d809883a 	mov	r4,sp
1000f3d4:	d8c00315 	stw	r3,12(sp)
1000f3d8:	d8000415 	stw	zero,16(sp)
1000f3dc:	d8800215 	stw	r2,8(sp)
1000f3e0:	000f7d80 	call	1000f7d8 <__pack_d>
1000f3e4:	dfc00617 	ldw	ra,24(sp)
1000f3e8:	dc000517 	ldw	r16,20(sp)
1000f3ec:	dec00704 	addi	sp,sp,28
1000f3f0:	f800283a 	ret
1000f3f4:	dc000315 	stw	r16,12(sp)
1000f3f8:	d8000415 	stw	zero,16(sp)
1000f3fc:	003fd906 	br	1000f364 <__alt_data_end+0xf800f364>
1000f400:	800ad07a 	srli	r5,r16,1
1000f404:	010007c4 	movi	r4,31
1000f408:	20c9c83a 	sub	r4,r4,r3
1000f40c:	2908d83a 	srl	r4,r5,r4
1000f410:	80e0983a 	sll	r16,r16,r3
1000f414:	003fce06 	br	1000f350 <__alt_data_end+0xf800f350>
1000f418:	01400044 	movi	r5,1
1000f41c:	28ca983a 	sll	r5,r5,r3
1000f420:	003fe206 	br	1000f3ac <__alt_data_end+0xf800f3ac>

1000f424 <udivmodsi4>:
1000f424:	2005883a 	mov	r2,r4
1000f428:	2900182e 	bgeu	r5,r4,1000f48c <udivmodsi4+0x68>
1000f42c:	28001716 	blt	r5,zero,1000f48c <udivmodsi4+0x68>
1000f430:	01000804 	movi	r4,32
1000f434:	00c00044 	movi	r3,1
1000f438:	00000206 	br	1000f444 <udivmodsi4+0x20>
1000f43c:	20001126 	beq	r4,zero,1000f484 <udivmodsi4+0x60>
1000f440:	28000516 	blt	r5,zero,1000f458 <udivmodsi4+0x34>
1000f444:	294b883a 	add	r5,r5,r5
1000f448:	213fffc4 	addi	r4,r4,-1
1000f44c:	18c7883a 	add	r3,r3,r3
1000f450:	28bffa36 	bltu	r5,r2,1000f43c <__alt_data_end+0xf800f43c>
1000f454:	18000b26 	beq	r3,zero,1000f484 <udivmodsi4+0x60>
1000f458:	0009883a 	mov	r4,zero
1000f45c:	11400236 	bltu	r2,r5,1000f468 <udivmodsi4+0x44>
1000f460:	1145c83a 	sub	r2,r2,r5
1000f464:	20c8b03a 	or	r4,r4,r3
1000f468:	1806d07a 	srli	r3,r3,1
1000f46c:	280ad07a 	srli	r5,r5,1
1000f470:	183ffa1e 	bne	r3,zero,1000f45c <__alt_data_end+0xf800f45c>
1000f474:	3000021e 	bne	r6,zero,1000f480 <udivmodsi4+0x5c>
1000f478:	2005883a 	mov	r2,r4
1000f47c:	f800283a 	ret
1000f480:	f800283a 	ret
1000f484:	0009883a 	mov	r4,zero
1000f488:	003ffa06 	br	1000f474 <__alt_data_end+0xf800f474>
1000f48c:	00c00044 	movi	r3,1
1000f490:	0009883a 	mov	r4,zero
1000f494:	003ff106 	br	1000f45c <__alt_data_end+0xf800f45c>

1000f498 <__divsi3>:
1000f498:	defffe04 	addi	sp,sp,-8
1000f49c:	dfc00115 	stw	ra,4(sp)
1000f4a0:	dc000015 	stw	r16,0(sp)
1000f4a4:	20000a16 	blt	r4,zero,1000f4d0 <__divsi3+0x38>
1000f4a8:	0021883a 	mov	r16,zero
1000f4ac:	28000b16 	blt	r5,zero,1000f4dc <__divsi3+0x44>
1000f4b0:	000d883a 	mov	r6,zero
1000f4b4:	000f4240 	call	1000f424 <udivmodsi4>
1000f4b8:	80000126 	beq	r16,zero,1000f4c0 <__divsi3+0x28>
1000f4bc:	0085c83a 	sub	r2,zero,r2
1000f4c0:	dfc00117 	ldw	ra,4(sp)
1000f4c4:	dc000017 	ldw	r16,0(sp)
1000f4c8:	dec00204 	addi	sp,sp,8
1000f4cc:	f800283a 	ret
1000f4d0:	0109c83a 	sub	r4,zero,r4
1000f4d4:	04000044 	movi	r16,1
1000f4d8:	283ff50e 	bge	r5,zero,1000f4b0 <__alt_data_end+0xf800f4b0>
1000f4dc:	014bc83a 	sub	r5,zero,r5
1000f4e0:	8400005c 	xori	r16,r16,1
1000f4e4:	003ff206 	br	1000f4b0 <__alt_data_end+0xf800f4b0>

1000f4e8 <__modsi3>:
1000f4e8:	deffff04 	addi	sp,sp,-4
1000f4ec:	dfc00015 	stw	ra,0(sp)
1000f4f0:	20000516 	blt	r4,zero,1000f508 <__modsi3+0x20>
1000f4f4:	28000c16 	blt	r5,zero,1000f528 <__modsi3+0x40>
1000f4f8:	01800044 	movi	r6,1
1000f4fc:	dfc00017 	ldw	ra,0(sp)
1000f500:	dec00104 	addi	sp,sp,4
1000f504:	000f4241 	jmpi	1000f424 <udivmodsi4>
1000f508:	0109c83a 	sub	r4,zero,r4
1000f50c:	28000b16 	blt	r5,zero,1000f53c <__modsi3+0x54>
1000f510:	01800044 	movi	r6,1
1000f514:	000f4240 	call	1000f424 <udivmodsi4>
1000f518:	0085c83a 	sub	r2,zero,r2
1000f51c:	dfc00017 	ldw	ra,0(sp)
1000f520:	dec00104 	addi	sp,sp,4
1000f524:	f800283a 	ret
1000f528:	014bc83a 	sub	r5,zero,r5
1000f52c:	01800044 	movi	r6,1
1000f530:	dfc00017 	ldw	ra,0(sp)
1000f534:	dec00104 	addi	sp,sp,4
1000f538:	000f4241 	jmpi	1000f424 <udivmodsi4>
1000f53c:	014bc83a 	sub	r5,zero,r5
1000f540:	003ff306 	br	1000f510 <__alt_data_end+0xf800f510>

1000f544 <__udivsi3>:
1000f544:	000d883a 	mov	r6,zero
1000f548:	000f4241 	jmpi	1000f424 <udivmodsi4>

1000f54c <__umodsi3>:
1000f54c:	01800044 	movi	r6,1
1000f550:	000f4241 	jmpi	1000f424 <udivmodsi4>

1000f554 <__mulsi3>:
1000f554:	0005883a 	mov	r2,zero
1000f558:	20000726 	beq	r4,zero,1000f578 <__mulsi3+0x24>
1000f55c:	20c0004c 	andi	r3,r4,1
1000f560:	2008d07a 	srli	r4,r4,1
1000f564:	18000126 	beq	r3,zero,1000f56c <__mulsi3+0x18>
1000f568:	1145883a 	add	r2,r2,r5
1000f56c:	294b883a 	add	r5,r5,r5
1000f570:	203ffa1e 	bne	r4,zero,1000f55c <__alt_data_end+0xf800f55c>
1000f574:	f800283a 	ret
1000f578:	f800283a 	ret

1000f57c <__clzsi2>:
1000f57c:	00bfffd4 	movui	r2,65535
1000f580:	11000b36 	bltu	r2,r4,1000f5b0 <__clzsi2+0x34>
1000f584:	00803fc4 	movi	r2,255
1000f588:	11001e2e 	bgeu	r2,r4,1000f604 <__clzsi2+0x88>
1000f58c:	00c00204 	movi	r3,8
1000f590:	20c8d83a 	srl	r4,r4,r3
1000f594:	00c40074 	movhi	r3,4097
1000f598:	18ca5204 	addi	r3,r3,10568
1000f59c:	00800604 	movi	r2,24
1000f5a0:	1909883a 	add	r4,r3,r4
1000f5a4:	20c00003 	ldbu	r3,0(r4)
1000f5a8:	10c5c83a 	sub	r2,r2,r3
1000f5ac:	f800283a 	ret
1000f5b0:	00804034 	movhi	r2,256
1000f5b4:	10bfffc4 	addi	r2,r2,-1
1000f5b8:	11000936 	bltu	r2,r4,1000f5e0 <__clzsi2+0x64>
1000f5bc:	00800404 	movi	r2,16
1000f5c0:	1007883a 	mov	r3,r2
1000f5c4:	20c8d83a 	srl	r4,r4,r3
1000f5c8:	00c40074 	movhi	r3,4097
1000f5cc:	18ca5204 	addi	r3,r3,10568
1000f5d0:	1909883a 	add	r4,r3,r4
1000f5d4:	20c00003 	ldbu	r3,0(r4)
1000f5d8:	10c5c83a 	sub	r2,r2,r3
1000f5dc:	f800283a 	ret
1000f5e0:	00c00604 	movi	r3,24
1000f5e4:	20c8d83a 	srl	r4,r4,r3
1000f5e8:	00c40074 	movhi	r3,4097
1000f5ec:	18ca5204 	addi	r3,r3,10568
1000f5f0:	00800204 	movi	r2,8
1000f5f4:	1909883a 	add	r4,r3,r4
1000f5f8:	20c00003 	ldbu	r3,0(r4)
1000f5fc:	10c5c83a 	sub	r2,r2,r3
1000f600:	f800283a 	ret
1000f604:	0007883a 	mov	r3,zero
1000f608:	20c8d83a 	srl	r4,r4,r3
1000f60c:	00c40074 	movhi	r3,4097
1000f610:	18ca5204 	addi	r3,r3,10568
1000f614:	00800804 	movi	r2,32
1000f618:	1909883a 	add	r4,r3,r4
1000f61c:	20c00003 	ldbu	r3,0(r4)
1000f620:	10c5c83a 	sub	r2,r2,r3
1000f624:	f800283a 	ret

1000f628 <__unpack_f>:
1000f628:	20c00017 	ldw	r3,0(r4)
1000f62c:	00802034 	movhi	r2,128
1000f630:	10bfffc4 	addi	r2,r2,-1
1000f634:	1808d5fa 	srli	r4,r3,23
1000f638:	180cd7fa 	srli	r6,r3,31
1000f63c:	1884703a 	and	r2,r3,r2
1000f640:	21003fcc 	andi	r4,r4,255
1000f644:	29800115 	stw	r6,4(r5)
1000f648:	2000111e 	bne	r4,zero,1000f690 <__unpack_f+0x68>
1000f64c:	10001a26 	beq	r2,zero,1000f6b8 <__unpack_f+0x90>
1000f650:	00ffe084 	movi	r3,-126
1000f654:	100491fa 	slli	r2,r2,7
1000f658:	28c00215 	stw	r3,8(r5)
1000f65c:	00c000c4 	movi	r3,3
1000f660:	28c00015 	stw	r3,0(r5)
1000f664:	01900034 	movhi	r6,16384
1000f668:	31bfffc4 	addi	r6,r6,-1
1000f66c:	30801036 	bltu	r6,r2,1000f6b0 <__unpack_f+0x88>
1000f670:	00ffe044 	movi	r3,-127
1000f674:	1085883a 	add	r2,r2,r2
1000f678:	1809883a 	mov	r4,r3
1000f67c:	18ffffc4 	addi	r3,r3,-1
1000f680:	30bffc2e 	bgeu	r6,r2,1000f674 <__alt_data_end+0xf800f674>
1000f684:	29000215 	stw	r4,8(r5)
1000f688:	28800315 	stw	r2,12(r5)
1000f68c:	f800283a 	ret
1000f690:	01803fc4 	movi	r6,255
1000f694:	21800b26 	beq	r4,r6,1000f6c4 <__unpack_f+0x9c>
1000f698:	100491fa 	slli	r2,r2,7
1000f69c:	213fe044 	addi	r4,r4,-127
1000f6a0:	00c000c4 	movi	r3,3
1000f6a4:	10900034 	orhi	r2,r2,16384
1000f6a8:	29000215 	stw	r4,8(r5)
1000f6ac:	28c00015 	stw	r3,0(r5)
1000f6b0:	28800315 	stw	r2,12(r5)
1000f6b4:	f800283a 	ret
1000f6b8:	00800084 	movi	r2,2
1000f6bc:	28800015 	stw	r2,0(r5)
1000f6c0:	f800283a 	ret
1000f6c4:	10000526 	beq	r2,zero,1000f6dc <__unpack_f+0xb4>
1000f6c8:	18c0042c 	andhi	r3,r3,16
1000f6cc:	18000626 	beq	r3,zero,1000f6e8 <__unpack_f+0xc0>
1000f6d0:	00c00044 	movi	r3,1
1000f6d4:	28c00015 	stw	r3,0(r5)
1000f6d8:	003ff506 	br	1000f6b0 <__alt_data_end+0xf800f6b0>
1000f6dc:	00800104 	movi	r2,4
1000f6e0:	28800015 	stw	r2,0(r5)
1000f6e4:	f800283a 	ret
1000f6e8:	28000015 	stw	zero,0(r5)
1000f6ec:	003ff006 	br	1000f6b0 <__alt_data_end+0xf800f6b0>

1000f6f0 <__fpcmp_parts_f>:
1000f6f0:	20c00017 	ldw	r3,0(r4)
1000f6f4:	00800044 	movi	r2,1
1000f6f8:	10c0172e 	bgeu	r2,r3,1000f758 <__fpcmp_parts_f+0x68>
1000f6fc:	29800017 	ldw	r6,0(r5)
1000f700:	1180152e 	bgeu	r2,r6,1000f758 <__fpcmp_parts_f+0x68>
1000f704:	01c00104 	movi	r7,4
1000f708:	19c02326 	beq	r3,r7,1000f798 <__fpcmp_parts_f+0xa8>
1000f70c:	31c00926 	beq	r6,r7,1000f734 <__fpcmp_parts_f+0x44>
1000f710:	01c00084 	movi	r7,2
1000f714:	19c00626 	beq	r3,r7,1000f730 <__fpcmp_parts_f+0x40>
1000f718:	31c01126 	beq	r6,r7,1000f760 <__fpcmp_parts_f+0x70>
1000f71c:	20c00117 	ldw	r3,4(r4)
1000f720:	29800117 	ldw	r6,4(r5)
1000f724:	19801226 	beq	r3,r6,1000f770 <__fpcmp_parts_f+0x80>
1000f728:	1800041e 	bne	r3,zero,1000f73c <__fpcmp_parts_f+0x4c>
1000f72c:	f800283a 	ret
1000f730:	30c01526 	beq	r6,r3,1000f788 <__fpcmp_parts_f+0x98>
1000f734:	28800117 	ldw	r2,4(r5)
1000f738:	1000071e 	bne	r2,zero,1000f758 <__fpcmp_parts_f+0x68>
1000f73c:	00bfffc4 	movi	r2,-1
1000f740:	f800283a 	ret
1000f744:	39801216 	blt	r7,r6,1000f790 <__fpcmp_parts_f+0xa0>
1000f748:	21000317 	ldw	r4,12(r4)
1000f74c:	28800317 	ldw	r2,12(r5)
1000f750:	11000c2e 	bgeu	r2,r4,1000f784 <__fpcmp_parts_f+0x94>
1000f754:	183ff91e 	bne	r3,zero,1000f73c <__alt_data_end+0xf800f73c>
1000f758:	00800044 	movi	r2,1
1000f75c:	f800283a 	ret
1000f760:	20800117 	ldw	r2,4(r4)
1000f764:	103ff51e 	bne	r2,zero,1000f73c <__alt_data_end+0xf800f73c>
1000f768:	00800044 	movi	r2,1
1000f76c:	f800283a 	ret
1000f770:	21c00217 	ldw	r7,8(r4)
1000f774:	29800217 	ldw	r6,8(r5)
1000f778:	31fff20e 	bge	r6,r7,1000f744 <__alt_data_end+0xf800f744>
1000f77c:	183fef1e 	bne	r3,zero,1000f73c <__alt_data_end+0xf800f73c>
1000f780:	f800283a 	ret
1000f784:	20800236 	bltu	r4,r2,1000f790 <__fpcmp_parts_f+0xa0>
1000f788:	0005883a 	mov	r2,zero
1000f78c:	f800283a 	ret
1000f790:	183fea26 	beq	r3,zero,1000f73c <__alt_data_end+0xf800f73c>
1000f794:	003ff006 	br	1000f758 <__alt_data_end+0xf800f758>
1000f798:	30fff11e 	bne	r6,r3,1000f760 <__alt_data_end+0xf800f760>
1000f79c:	28c00117 	ldw	r3,4(r5)
1000f7a0:	20800117 	ldw	r2,4(r4)
1000f7a4:	1885c83a 	sub	r2,r3,r2
1000f7a8:	f800283a 	ret

1000f7ac <__make_fp>:
1000f7ac:	defffb04 	addi	sp,sp,-20
1000f7b0:	d9000015 	stw	r4,0(sp)
1000f7b4:	d809883a 	mov	r4,sp
1000f7b8:	dfc00415 	stw	ra,16(sp)
1000f7bc:	d9400115 	stw	r5,4(sp)
1000f7c0:	d9800215 	stw	r6,8(sp)
1000f7c4:	d9c00315 	stw	r7,12(sp)
1000f7c8:	000fc580 	call	1000fc58 <__pack_f>
1000f7cc:	dfc00417 	ldw	ra,16(sp)
1000f7d0:	dec00504 	addi	sp,sp,20
1000f7d4:	f800283a 	ret

1000f7d8 <__pack_d>:
1000f7d8:	20800017 	ldw	r2,0(r4)
1000f7dc:	defff804 	addi	sp,sp,-32
1000f7e0:	dcc00315 	stw	r19,12(sp)
1000f7e4:	dc800215 	stw	r18,8(sp)
1000f7e8:	dfc00715 	stw	ra,28(sp)
1000f7ec:	dd800615 	stw	r22,24(sp)
1000f7f0:	dd400515 	stw	r21,20(sp)
1000f7f4:	dd000415 	stw	r20,16(sp)
1000f7f8:	dc400115 	stw	r17,4(sp)
1000f7fc:	dc000015 	stw	r16,0(sp)
1000f800:	04800044 	movi	r18,1
1000f804:	24400317 	ldw	r17,12(r4)
1000f808:	24000417 	ldw	r16,16(r4)
1000f80c:	24c00117 	ldw	r19,4(r4)
1000f810:	9080422e 	bgeu	r18,r2,1000f91c <__pack_d+0x144>
1000f814:	00c00104 	movi	r3,4
1000f818:	10c03c26 	beq	r2,r3,1000f90c <__pack_d+0x134>
1000f81c:	00c00084 	movi	r3,2
1000f820:	10c01926 	beq	r2,r3,1000f888 <__pack_d+0xb0>
1000f824:	8c04b03a 	or	r2,r17,r16
1000f828:	10001726 	beq	r2,zero,1000f888 <__pack_d+0xb0>
1000f82c:	21000217 	ldw	r4,8(r4)
1000f830:	00bf0084 	movi	r2,-1022
1000f834:	20804016 	blt	r4,r2,1000f938 <__pack_d+0x160>
1000f838:	0080ffc4 	movi	r2,1023
1000f83c:	11003316 	blt	r2,r4,1000f90c <__pack_d+0x134>
1000f840:	88803fcc 	andi	r2,r17,255
1000f844:	00c02004 	movi	r3,128
1000f848:	10c02926 	beq	r2,r3,1000f8f0 <__pack_d+0x118>
1000f84c:	88801fc4 	addi	r2,r17,127
1000f850:	1463803a 	cmpltu	r17,r2,r17
1000f854:	8c21883a 	add	r16,r17,r16
1000f858:	1023883a 	mov	r17,r2
1000f85c:	00880034 	movhi	r2,8192
1000f860:	10bfffc4 	addi	r2,r2,-1
1000f864:	14001c36 	bltu	r2,r16,1000f8d8 <__pack_d+0x100>
1000f868:	2100ffc4 	addi	r4,r4,1023
1000f86c:	8006963a 	slli	r3,r16,24
1000f870:	8804d23a 	srli	r2,r17,8
1000f874:	8020913a 	slli	r16,r16,4
1000f878:	2101ffcc 	andi	r4,r4,2047
1000f87c:	1884b03a 	or	r2,r3,r2
1000f880:	8020d33a 	srli	r16,r16,12
1000f884:	00000306 	br	1000f894 <__pack_d+0xbc>
1000f888:	0009883a 	mov	r4,zero
1000f88c:	0005883a 	mov	r2,zero
1000f890:	0021883a 	mov	r16,zero
1000f894:	2008953a 	slli	r4,r4,20
1000f898:	982697fa 	slli	r19,r19,31
1000f89c:	00c00434 	movhi	r3,16
1000f8a0:	18ffffc4 	addi	r3,r3,-1
1000f8a4:	80e0703a 	and	r16,r16,r3
1000f8a8:	8106b03a 	or	r3,r16,r4
1000f8ac:	1cc6b03a 	or	r3,r3,r19
1000f8b0:	dfc00717 	ldw	ra,28(sp)
1000f8b4:	dd800617 	ldw	r22,24(sp)
1000f8b8:	dd400517 	ldw	r21,20(sp)
1000f8bc:	dd000417 	ldw	r20,16(sp)
1000f8c0:	dcc00317 	ldw	r19,12(sp)
1000f8c4:	dc800217 	ldw	r18,8(sp)
1000f8c8:	dc400117 	ldw	r17,4(sp)
1000f8cc:	dc000017 	ldw	r16,0(sp)
1000f8d0:	dec00804 	addi	sp,sp,32
1000f8d4:	f800283a 	ret
1000f8d8:	800697fa 	slli	r3,r16,31
1000f8dc:	8804d07a 	srli	r2,r17,1
1000f8e0:	21010004 	addi	r4,r4,1024
1000f8e4:	8020d07a 	srli	r16,r16,1
1000f8e8:	18a2b03a 	or	r17,r3,r2
1000f8ec:	003fdf06 	br	1000f86c <__alt_data_end+0xf800f86c>
1000f8f0:	88c0400c 	andi	r3,r17,256
1000f8f4:	183fd926 	beq	r3,zero,1000f85c <__alt_data_end+0xf800f85c>
1000f8f8:	8885883a 	add	r2,r17,r2
1000f8fc:	1463803a 	cmpltu	r17,r2,r17
1000f900:	8c21883a 	add	r16,r17,r16
1000f904:	1023883a 	mov	r17,r2
1000f908:	003fd406 	br	1000f85c <__alt_data_end+0xf800f85c>
1000f90c:	0101ffc4 	movi	r4,2047
1000f910:	0005883a 	mov	r2,zero
1000f914:	0021883a 	mov	r16,zero
1000f918:	003fde06 	br	1000f894 <__alt_data_end+0xf800f894>
1000f91c:	84000234 	orhi	r16,r16,8
1000f920:	00c00434 	movhi	r3,16
1000f924:	18ffffc4 	addi	r3,r3,-1
1000f928:	8805883a 	mov	r2,r17
1000f92c:	80e0703a 	and	r16,r16,r3
1000f930:	0101ffc4 	movi	r4,2047
1000f934:	003fd706 	br	1000f894 <__alt_data_end+0xf800f894>
1000f938:	1129c83a 	sub	r20,r2,r4
1000f93c:	00800e04 	movi	r2,56
1000f940:	15002716 	blt	r2,r20,1000f9e0 <__pack_d+0x208>
1000f944:	800b883a 	mov	r5,r16
1000f948:	a00d883a 	mov	r6,r20
1000f94c:	8809883a 	mov	r4,r17
1000f950:	000fbd00 	call	1000fbd0 <__lshrdi3>
1000f954:	9009883a 	mov	r4,r18
1000f958:	000b883a 	mov	r5,zero
1000f95c:	a00d883a 	mov	r6,r20
1000f960:	102d883a 	mov	r22,r2
1000f964:	182b883a 	mov	r21,r3
1000f968:	000fc140 	call	1000fc14 <__ashldi3>
1000f96c:	1009003a 	cmpeq	r4,r2,zero
1000f970:	1907c83a 	sub	r3,r3,r4
1000f974:	10bfffc4 	addi	r2,r2,-1
1000f978:	1c20703a 	and	r16,r3,r16
1000f97c:	1444703a 	and	r2,r2,r17
1000f980:	1404b03a 	or	r2,r2,r16
1000f984:	1004c03a 	cmpne	r2,r2,zero
1000f988:	1584b03a 	or	r2,r2,r22
1000f98c:	11003fcc 	andi	r4,r2,255
1000f990:	01402004 	movi	r5,128
1000f994:	a807883a 	mov	r3,r21
1000f998:	2140131e 	bne	r4,r5,1000f9e8 <__pack_d+0x210>
1000f99c:	1140400c 	andi	r5,r2,256
1000f9a0:	28000426 	beq	r5,zero,1000f9b4 <__pack_d+0x1dc>
1000f9a4:	1109883a 	add	r4,r2,r4
1000f9a8:	2085803a 	cmpltu	r2,r4,r2
1000f9ac:	1547883a 	add	r3,r2,r21
1000f9b0:	2005883a 	mov	r2,r4
1000f9b4:	1808963a 	slli	r4,r3,24
1000f9b8:	1004d23a 	srli	r2,r2,8
1000f9bc:	1820913a 	slli	r16,r3,4
1000f9c0:	01440034 	movhi	r5,4096
1000f9c4:	297fffc4 	addi	r5,r5,-1
1000f9c8:	2084b03a 	or	r2,r4,r2
1000f9cc:	8020d33a 	srli	r16,r16,12
1000f9d0:	01000044 	movi	r4,1
1000f9d4:	28ffaf36 	bltu	r5,r3,1000f894 <__alt_data_end+0xf800f894>
1000f9d8:	0009883a 	mov	r4,zero
1000f9dc:	003fad06 	br	1000f894 <__alt_data_end+0xf800f894>
1000f9e0:	0005883a 	mov	r2,zero
1000f9e4:	0007883a 	mov	r3,zero
1000f9e8:	11001fc4 	addi	r4,r2,127
1000f9ec:	2085803a 	cmpltu	r2,r4,r2
1000f9f0:	10c7883a 	add	r3,r2,r3
1000f9f4:	2005883a 	mov	r2,r4
1000f9f8:	003fee06 	br	1000f9b4 <__alt_data_end+0xf800f9b4>

1000f9fc <__unpack_d>:
1000f9fc:	21800117 	ldw	r6,4(r4)
1000fa00:	20c00017 	ldw	r3,0(r4)
1000fa04:	3004d7fa 	srli	r2,r6,31
1000fa08:	3008d53a 	srli	r4,r6,20
1000fa0c:	28800115 	stw	r2,4(r5)
1000fa10:	2101ffcc 	andi	r4,r4,2047
1000fa14:	00800434 	movhi	r2,16
1000fa18:	10bfffc4 	addi	r2,r2,-1
1000fa1c:	3084703a 	and	r2,r6,r2
1000fa20:	20001a1e 	bne	r4,zero,1000fa8c <__unpack_d+0x90>
1000fa24:	1888b03a 	or	r4,r3,r2
1000fa28:	20002626 	beq	r4,zero,1000fac4 <__unpack_d+0xc8>
1000fa2c:	1808d63a 	srli	r4,r3,24
1000fa30:	1004923a 	slli	r2,r2,8
1000fa34:	01bf0084 	movi	r6,-1022
1000fa38:	29800215 	stw	r6,8(r5)
1000fa3c:	2084b03a 	or	r2,r4,r2
1000fa40:	010000c4 	movi	r4,3
1000fa44:	29000015 	stw	r4,0(r5)
1000fa48:	02040034 	movhi	r8,4096
1000fa4c:	423fffc4 	addi	r8,r8,-1
1000fa50:	1806923a 	slli	r3,r3,8
1000fa54:	40801836 	bltu	r8,r2,1000fab8 <__unpack_d+0xbc>
1000fa58:	013f0044 	movi	r4,-1023
1000fa5c:	18cd883a 	add	r6,r3,r3
1000fa60:	30c7803a 	cmpltu	r3,r6,r3
1000fa64:	1085883a 	add	r2,r2,r2
1000fa68:	1885883a 	add	r2,r3,r2
1000fa6c:	200f883a 	mov	r7,r4
1000fa70:	3007883a 	mov	r3,r6
1000fa74:	213fffc4 	addi	r4,r4,-1
1000fa78:	40bff82e 	bgeu	r8,r2,1000fa5c <__alt_data_end+0xf800fa5c>
1000fa7c:	29c00215 	stw	r7,8(r5)
1000fa80:	28c00315 	stw	r3,12(r5)
1000fa84:	28800415 	stw	r2,16(r5)
1000fa88:	f800283a 	ret
1000fa8c:	01c1ffc4 	movi	r7,2047
1000fa90:	21c00f26 	beq	r4,r7,1000fad0 <__unpack_d+0xd4>
1000fa94:	180cd63a 	srli	r6,r3,24
1000fa98:	1004923a 	slli	r2,r2,8
1000fa9c:	213f0044 	addi	r4,r4,-1023
1000faa0:	1806923a 	slli	r3,r3,8
1000faa4:	3084b03a 	or	r2,r6,r2
1000faa8:	29000215 	stw	r4,8(r5)
1000faac:	010000c4 	movi	r4,3
1000fab0:	10840034 	orhi	r2,r2,4096
1000fab4:	29000015 	stw	r4,0(r5)
1000fab8:	28c00315 	stw	r3,12(r5)
1000fabc:	28800415 	stw	r2,16(r5)
1000fac0:	f800283a 	ret
1000fac4:	00800084 	movi	r2,2
1000fac8:	28800015 	stw	r2,0(r5)
1000facc:	f800283a 	ret
1000fad0:	1888b03a 	or	r4,r3,r2
1000fad4:	20000526 	beq	r4,zero,1000faec <__unpack_d+0xf0>
1000fad8:	3180022c 	andhi	r6,r6,8
1000fadc:	30000626 	beq	r6,zero,1000faf8 <__unpack_d+0xfc>
1000fae0:	01000044 	movi	r4,1
1000fae4:	29000015 	stw	r4,0(r5)
1000fae8:	003ff306 	br	1000fab8 <__alt_data_end+0xf800fab8>
1000faec:	00800104 	movi	r2,4
1000faf0:	28800015 	stw	r2,0(r5)
1000faf4:	f800283a 	ret
1000faf8:	28000015 	stw	zero,0(r5)
1000fafc:	003fee06 	br	1000fab8 <__alt_data_end+0xf800fab8>

1000fb00 <__fpcmp_parts_d>:
1000fb00:	20c00017 	ldw	r3,0(r4)
1000fb04:	00800044 	movi	r2,1
1000fb08:	10c0142e 	bgeu	r2,r3,1000fb5c <__fpcmp_parts_d+0x5c>
1000fb0c:	29800017 	ldw	r6,0(r5)
1000fb10:	1180122e 	bgeu	r2,r6,1000fb5c <__fpcmp_parts_d+0x5c>
1000fb14:	01c00104 	movi	r7,4
1000fb18:	19c02826 	beq	r3,r7,1000fbbc <__fpcmp_parts_d+0xbc>
1000fb1c:	31c00926 	beq	r6,r7,1000fb44 <__fpcmp_parts_d+0x44>
1000fb20:	01c00084 	movi	r7,2
1000fb24:	19c00626 	beq	r3,r7,1000fb40 <__fpcmp_parts_d+0x40>
1000fb28:	31c00a26 	beq	r6,r7,1000fb54 <__fpcmp_parts_d+0x54>
1000fb2c:	20c00117 	ldw	r3,4(r4)
1000fb30:	29800117 	ldw	r6,4(r5)
1000fb34:	19800b26 	beq	r3,r6,1000fb64 <__fpcmp_parts_d+0x64>
1000fb38:	1800041e 	bne	r3,zero,1000fb4c <__fpcmp_parts_d+0x4c>
1000fb3c:	f800283a 	ret
1000fb40:	30c01a26 	beq	r6,r3,1000fbac <__fpcmp_parts_d+0xac>
1000fb44:	28800117 	ldw	r2,4(r5)
1000fb48:	1000041e 	bne	r2,zero,1000fb5c <__fpcmp_parts_d+0x5c>
1000fb4c:	00bfffc4 	movi	r2,-1
1000fb50:	f800283a 	ret
1000fb54:	20800117 	ldw	r2,4(r4)
1000fb58:	103ffc1e 	bne	r2,zero,1000fb4c <__alt_data_end+0xf800fb4c>
1000fb5c:	00800044 	movi	r2,1
1000fb60:	f800283a 	ret
1000fb64:	21c00217 	ldw	r7,8(r4)
1000fb68:	29800217 	ldw	r6,8(r5)
1000fb6c:	31c0020e 	bge	r6,r7,1000fb78 <__fpcmp_parts_d+0x78>
1000fb70:	183ff61e 	bne	r3,zero,1000fb4c <__alt_data_end+0xf800fb4c>
1000fb74:	f800283a 	ret
1000fb78:	39800a16 	blt	r7,r6,1000fba4 <__fpcmp_parts_d+0xa4>
1000fb7c:	20800417 	ldw	r2,16(r4)
1000fb80:	29800417 	ldw	r6,16(r5)
1000fb84:	21c00317 	ldw	r7,12(r4)
1000fb88:	29000317 	ldw	r4,12(r5)
1000fb8c:	30800936 	bltu	r6,r2,1000fbb4 <__fpcmp_parts_d+0xb4>
1000fb90:	1180011e 	bne	r2,r6,1000fb98 <__fpcmp_parts_d+0x98>
1000fb94:	21c00736 	bltu	r4,r7,1000fbb4 <__fpcmp_parts_d+0xb4>
1000fb98:	11800236 	bltu	r2,r6,1000fba4 <__fpcmp_parts_d+0xa4>
1000fb9c:	3080031e 	bne	r6,r2,1000fbac <__fpcmp_parts_d+0xac>
1000fba0:	3900022e 	bgeu	r7,r4,1000fbac <__fpcmp_parts_d+0xac>
1000fba4:	183fe926 	beq	r3,zero,1000fb4c <__alt_data_end+0xf800fb4c>
1000fba8:	003fec06 	br	1000fb5c <__alt_data_end+0xf800fb5c>
1000fbac:	0005883a 	mov	r2,zero
1000fbb0:	f800283a 	ret
1000fbb4:	183fe926 	beq	r3,zero,1000fb5c <__alt_data_end+0xf800fb5c>
1000fbb8:	003fe406 	br	1000fb4c <__alt_data_end+0xf800fb4c>
1000fbbc:	30ffe51e 	bne	r6,r3,1000fb54 <__alt_data_end+0xf800fb54>
1000fbc0:	28c00117 	ldw	r3,4(r5)
1000fbc4:	20800117 	ldw	r2,4(r4)
1000fbc8:	1885c83a 	sub	r2,r3,r2
1000fbcc:	f800283a 	ret

1000fbd0 <__lshrdi3>:
1000fbd0:	2005883a 	mov	r2,r4
1000fbd4:	2807883a 	mov	r3,r5
1000fbd8:	30000826 	beq	r6,zero,1000fbfc <__lshrdi3+0x2c>
1000fbdc:	01000804 	movi	r4,32
1000fbe0:	2189c83a 	sub	r4,r4,r6
1000fbe4:	0100060e 	bge	zero,r4,1000fc00 <__lshrdi3+0x30>
1000fbe8:	1184d83a 	srl	r2,r2,r6
1000fbec:	2908983a 	sll	r4,r5,r4
1000fbf0:	298cd83a 	srl	r6,r5,r6
1000fbf4:	2084b03a 	or	r2,r4,r2
1000fbf8:	3007883a 	mov	r3,r6
1000fbfc:	f800283a 	ret
1000fc00:	0105c83a 	sub	r2,zero,r4
1000fc04:	000d883a 	mov	r6,zero
1000fc08:	2884d83a 	srl	r2,r5,r2
1000fc0c:	3007883a 	mov	r3,r6
1000fc10:	003ffa06 	br	1000fbfc <__alt_data_end+0xf800fbfc>

1000fc14 <__ashldi3>:
1000fc14:	2005883a 	mov	r2,r4
1000fc18:	2807883a 	mov	r3,r5
1000fc1c:	30000826 	beq	r6,zero,1000fc40 <__ashldi3+0x2c>
1000fc20:	01000804 	movi	r4,32
1000fc24:	2189c83a 	sub	r4,r4,r6
1000fc28:	0100060e 	bge	zero,r4,1000fc44 <__ashldi3+0x30>
1000fc2c:	1108d83a 	srl	r4,r2,r4
1000fc30:	2986983a 	sll	r3,r5,r6
1000fc34:	118c983a 	sll	r6,r2,r6
1000fc38:	20c6b03a 	or	r3,r4,r3
1000fc3c:	3005883a 	mov	r2,r6
1000fc40:	f800283a 	ret
1000fc44:	0107c83a 	sub	r3,zero,r4
1000fc48:	000d883a 	mov	r6,zero
1000fc4c:	10c6983a 	sll	r3,r2,r3
1000fc50:	3005883a 	mov	r2,r6
1000fc54:	003ffa06 	br	1000fc40 <__alt_data_end+0xf800fc40>

1000fc58 <__pack_f>:
1000fc58:	21400017 	ldw	r5,0(r4)
1000fc5c:	01800044 	movi	r6,1
1000fc60:	20c00317 	ldw	r3,12(r4)
1000fc64:	21c00117 	ldw	r7,4(r4)
1000fc68:	3140282e 	bgeu	r6,r5,1000fd0c <__pack_f+0xb4>
1000fc6c:	00800104 	movi	r2,4
1000fc70:	28802326 	beq	r5,r2,1000fd00 <__pack_f+0xa8>
1000fc74:	00800084 	movi	r2,2
1000fc78:	28800f26 	beq	r5,r2,1000fcb8 <__pack_f+0x60>
1000fc7c:	18000e26 	beq	r3,zero,1000fcb8 <__pack_f+0x60>
1000fc80:	21000217 	ldw	r4,8(r4)
1000fc84:	00bfe084 	movi	r2,-126
1000fc88:	20802616 	blt	r4,r2,1000fd24 <__pack_f+0xcc>
1000fc8c:	00801fc4 	movi	r2,127
1000fc90:	11001b16 	blt	r2,r4,1000fd00 <__pack_f+0xa8>
1000fc94:	188a703a 	and	r5,r3,r2
1000fc98:	00801004 	movi	r2,64
1000fc9c:	28801126 	beq	r5,r2,1000fce4 <__pack_f+0x8c>
1000fca0:	18c00fc4 	addi	r3,r3,63
1000fca4:	18001316 	blt	r3,zero,1000fcf4 <__pack_f+0x9c>
1000fca8:	21001fc4 	addi	r4,r4,127
1000fcac:	180690ba 	slli	r3,r3,2
1000fcb0:	1806d27a 	srli	r3,r3,9
1000fcb4:	00000206 	br	1000fcc0 <__pack_f+0x68>
1000fcb8:	0009883a 	mov	r4,zero
1000fcbc:	0007883a 	mov	r3,zero
1000fcc0:	21003fcc 	andi	r4,r4,255
1000fcc4:	200895fa 	slli	r4,r4,23
1000fcc8:	380a97fa 	slli	r5,r7,31
1000fccc:	00802034 	movhi	r2,128
1000fcd0:	10bfffc4 	addi	r2,r2,-1
1000fcd4:	1886703a 	and	r3,r3,r2
1000fcd8:	1904b03a 	or	r2,r3,r4
1000fcdc:	1144b03a 	or	r2,r2,r5
1000fce0:	f800283a 	ret
1000fce4:	1880200c 	andi	r2,r3,128
1000fce8:	103fee26 	beq	r2,zero,1000fca4 <__alt_data_end+0xf800fca4>
1000fcec:	18c01004 	addi	r3,r3,64
1000fcf0:	183fed0e 	bge	r3,zero,1000fca8 <__alt_data_end+0xf800fca8>
1000fcf4:	1806d07a 	srli	r3,r3,1
1000fcf8:	21002004 	addi	r4,r4,128
1000fcfc:	003feb06 	br	1000fcac <__alt_data_end+0xf800fcac>
1000fd00:	013fffc4 	movi	r4,-1
1000fd04:	0007883a 	mov	r3,zero
1000fd08:	003fed06 	br	1000fcc0 <__alt_data_end+0xf800fcc0>
1000fd0c:	18c00434 	orhi	r3,r3,16
1000fd10:	00802034 	movhi	r2,128
1000fd14:	10bfffc4 	addi	r2,r2,-1
1000fd18:	1886703a 	and	r3,r3,r2
1000fd1c:	013fffc4 	movi	r4,-1
1000fd20:	003fe706 	br	1000fcc0 <__alt_data_end+0xf800fcc0>
1000fd24:	1105c83a 	sub	r2,r2,r4
1000fd28:	01000644 	movi	r4,25
1000fd2c:	20801216 	blt	r4,r2,1000fd78 <__pack_f+0x120>
1000fd30:	3088983a 	sll	r4,r6,r2
1000fd34:	1884d83a 	srl	r2,r3,r2
1000fd38:	213fffc4 	addi	r4,r4,-1
1000fd3c:	20c6703a 	and	r3,r4,r3
1000fd40:	1806c03a 	cmpne	r3,r3,zero
1000fd44:	1884b03a 	or	r2,r3,r2
1000fd48:	11001fcc 	andi	r4,r2,127
1000fd4c:	00c01004 	movi	r3,64
1000fd50:	20c00a1e 	bne	r4,r3,1000fd7c <__pack_f+0x124>
1000fd54:	10c0200c 	andi	r3,r2,128
1000fd58:	18000126 	beq	r3,zero,1000fd60 <__pack_f+0x108>
1000fd5c:	10801004 	addi	r2,r2,64
1000fd60:	100690ba 	slli	r3,r2,2
1000fd64:	01100034 	movhi	r4,16384
1000fd68:	1105403a 	cmpgeu	r2,r2,r4
1000fd6c:	1806d27a 	srli	r3,r3,9
1000fd70:	1009883a 	mov	r4,r2
1000fd74:	003fd206 	br	1000fcc0 <__alt_data_end+0xf800fcc0>
1000fd78:	0005883a 	mov	r2,zero
1000fd7c:	10800fc4 	addi	r2,r2,63
1000fd80:	003ff706 	br	1000fd60 <__alt_data_end+0xf800fd60>

1000fd84 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000fd84:	defffe04 	addi	sp,sp,-8
1000fd88:	dfc00115 	stw	ra,4(sp)
1000fd8c:	df000015 	stw	fp,0(sp)
1000fd90:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000fd94:	00840074 	movhi	r2,4097
1000fd98:	10918604 	addi	r2,r2,17944
1000fd9c:	10800017 	ldw	r2,0(r2)
1000fda0:	10000526 	beq	r2,zero,1000fdb8 <alt_get_errno+0x34>
1000fda4:	00840074 	movhi	r2,4097
1000fda8:	10918604 	addi	r2,r2,17944
1000fdac:	10800017 	ldw	r2,0(r2)
1000fdb0:	103ee83a 	callr	r2
1000fdb4:	00000206 	br	1000fdc0 <alt_get_errno+0x3c>
1000fdb8:	00840074 	movhi	r2,4097
1000fdbc:	10987a04 	addi	r2,r2,25064
}
1000fdc0:	e037883a 	mov	sp,fp
1000fdc4:	dfc00117 	ldw	ra,4(sp)
1000fdc8:	df000017 	ldw	fp,0(sp)
1000fdcc:	dec00204 	addi	sp,sp,8
1000fdd0:	f800283a 	ret

1000fdd4 <close>:
 *
 * ALT_CLOSE is mapped onto the close() system call in alt_syscall.h
 */
 
int ALT_CLOSE (int fildes)
{
1000fdd4:	defffb04 	addi	sp,sp,-20
1000fdd8:	dfc00415 	stw	ra,16(sp)
1000fddc:	df000315 	stw	fp,12(sp)
1000fde0:	df000304 	addi	fp,sp,12
1000fde4:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (fildes < 0) ? NULL : &alt_fd_list[fildes];
1000fde8:	e0bfff17 	ldw	r2,-4(fp)
1000fdec:	10000716 	blt	r2,zero,1000fe0c <close+0x38>
1000fdf0:	e13fff17 	ldw	r4,-4(fp)
1000fdf4:	01400304 	movi	r5,12
1000fdf8:	000f5540 	call	1000f554 <__mulsi3>
1000fdfc:	00c40074 	movhi	r3,4097
1000fe00:	18cd0304 	addi	r3,r3,13324
1000fe04:	10c5883a 	add	r2,r2,r3
1000fe08:	00000106 	br	1000fe10 <close+0x3c>
1000fe0c:	0005883a 	mov	r2,zero
1000fe10:	e0bffd15 	stw	r2,-12(fp)

  if (fd)
1000fe14:	e0bffd17 	ldw	r2,-12(fp)
1000fe18:	10001826 	beq	r2,zero,1000fe7c <close+0xa8>
    /*
     * If the associated file system/device has a close function, call it so 
     * that any necessary cleanup code can run.
     */

    rval = (fd->dev->close) ? fd->dev->close(fd) : 0;
1000fe1c:	e0bffd17 	ldw	r2,-12(fp)
1000fe20:	10800017 	ldw	r2,0(r2)
1000fe24:	10800417 	ldw	r2,16(r2)
1000fe28:	10000626 	beq	r2,zero,1000fe44 <close+0x70>
1000fe2c:	e0bffd17 	ldw	r2,-12(fp)
1000fe30:	10800017 	ldw	r2,0(r2)
1000fe34:	10800417 	ldw	r2,16(r2)
1000fe38:	e13ffd17 	ldw	r4,-12(fp)
1000fe3c:	103ee83a 	callr	r2
1000fe40:	00000106 	br	1000fe48 <close+0x74>
1000fe44:	0005883a 	mov	r2,zero
1000fe48:	e0bffe15 	stw	r2,-8(fp)

    /* Free the file descriptor structure and return. */

    alt_release_fd (fildes);
1000fe4c:	e13fff17 	ldw	r4,-4(fp)
1000fe50:	00104cc0 	call	100104cc <alt_release_fd>
    if (rval < 0)
1000fe54:	e0bffe17 	ldw	r2,-8(fp)
1000fe58:	1000060e 	bge	r2,zero,1000fe74 <close+0xa0>
    {
      ALT_ERRNO = -rval;
1000fe5c:	000fd840 	call	1000fd84 <alt_get_errno>
1000fe60:	e0fffe17 	ldw	r3,-8(fp)
1000fe64:	00c7c83a 	sub	r3,zero,r3
1000fe68:	10c00015 	stw	r3,0(r2)
      return -1;
1000fe6c:	00bfffc4 	movi	r2,-1
1000fe70:	00000606 	br	1000fe8c <close+0xb8>
    }
    return 0;
1000fe74:	0005883a 	mov	r2,zero
1000fe78:	00000406 	br	1000fe8c <close+0xb8>
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000fe7c:	000fd840 	call	1000fd84 <alt_get_errno>
1000fe80:	00c01444 	movi	r3,81
1000fe84:	10c00015 	stw	r3,0(r2)
    return -1;
1000fe88:	00bfffc4 	movi	r2,-1
  }
}
1000fe8c:	e037883a 	mov	sp,fp
1000fe90:	dfc00117 	ldw	ra,4(sp)
1000fe94:	df000017 	ldw	fp,0(sp)
1000fe98:	dec00204 	addi	sp,sp,8
1000fe9c:	f800283a 	ret

1000fea0 <alt_dev_null_write>:
 * by the alt_dev_null device. It simple discards all data passed to it, and
 * indicates that the data has been successfully transmitted.
 */

static int alt_dev_null_write (alt_fd* fd, const char* ptr, int len)
{
1000fea0:	defffc04 	addi	sp,sp,-16
1000fea4:	df000315 	stw	fp,12(sp)
1000fea8:	df000304 	addi	fp,sp,12
1000feac:	e13ffd15 	stw	r4,-12(fp)
1000feb0:	e17ffe15 	stw	r5,-8(fp)
1000feb4:	e1bfff15 	stw	r6,-4(fp)
  return len;
1000feb8:	e0bfff17 	ldw	r2,-4(fp)
}
1000febc:	e037883a 	mov	sp,fp
1000fec0:	df000017 	ldw	fp,0(sp)
1000fec4:	dec00104 	addi	sp,sp,4
1000fec8:	f800283a 	ret

1000fecc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000fecc:	defffe04 	addi	sp,sp,-8
1000fed0:	dfc00115 	stw	ra,4(sp)
1000fed4:	df000015 	stw	fp,0(sp)
1000fed8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000fedc:	00840074 	movhi	r2,4097
1000fee0:	10918604 	addi	r2,r2,17944
1000fee4:	10800017 	ldw	r2,0(r2)
1000fee8:	10000526 	beq	r2,zero,1000ff00 <alt_get_errno+0x34>
1000feec:	00840074 	movhi	r2,4097
1000fef0:	10918604 	addi	r2,r2,17944
1000fef4:	10800017 	ldw	r2,0(r2)
1000fef8:	103ee83a 	callr	r2
1000fefc:	00000206 	br	1000ff08 <alt_get_errno+0x3c>
1000ff00:	00840074 	movhi	r2,4097
1000ff04:	10987a04 	addi	r2,r2,25064
}
1000ff08:	e037883a 	mov	sp,fp
1000ff0c:	dfc00117 	ldw	ra,4(sp)
1000ff10:	df000017 	ldw	fp,0(sp)
1000ff14:	dec00204 	addi	sp,sp,8
1000ff18:	f800283a 	ret

1000ff1c <fstat>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_FSTAT (int file, struct stat *st)
{
1000ff1c:	defffb04 	addi	sp,sp,-20
1000ff20:	dfc00415 	stw	ra,16(sp)
1000ff24:	df000315 	stw	fp,12(sp)
1000ff28:	df000304 	addi	fp,sp,12
1000ff2c:	e13ffe15 	stw	r4,-8(fp)
1000ff30:	e17fff15 	stw	r5,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1000ff34:	e0bffe17 	ldw	r2,-8(fp)
1000ff38:	10000716 	blt	r2,zero,1000ff58 <fstat+0x3c>
1000ff3c:	e13ffe17 	ldw	r4,-8(fp)
1000ff40:	01400304 	movi	r5,12
1000ff44:	000f5540 	call	1000f554 <__mulsi3>
1000ff48:	00c40074 	movhi	r3,4097
1000ff4c:	18cd0304 	addi	r3,r3,13324
1000ff50:	10c5883a 	add	r2,r2,r3
1000ff54:	00000106 	br	1000ff5c <fstat+0x40>
1000ff58:	0005883a 	mov	r2,zero
1000ff5c:	e0bffd15 	stw	r2,-12(fp)
  
  if (fd)
1000ff60:	e0bffd17 	ldw	r2,-12(fp)
1000ff64:	10001026 	beq	r2,zero,1000ffa8 <fstat+0x8c>
  {
    /* Call the drivers fstat() function to fill out the "st" structure. */

    if (fd->dev->fstat)
1000ff68:	e0bffd17 	ldw	r2,-12(fp)
1000ff6c:	10800017 	ldw	r2,0(r2)
1000ff70:	10800817 	ldw	r2,32(r2)
1000ff74:	10000726 	beq	r2,zero,1000ff94 <fstat+0x78>
    {
      return fd->dev->fstat(fd, st);
1000ff78:	e0bffd17 	ldw	r2,-12(fp)
1000ff7c:	10800017 	ldw	r2,0(r2)
1000ff80:	10800817 	ldw	r2,32(r2)
1000ff84:	e13ffd17 	ldw	r4,-12(fp)
1000ff88:	e17fff17 	ldw	r5,-4(fp)
1000ff8c:	103ee83a 	callr	r2
1000ff90:	00000906 	br	1000ffb8 <fstat+0x9c>
     * device.
     */
 
    else
    {
      st->st_mode = _IFCHR;
1000ff94:	e0bfff17 	ldw	r2,-4(fp)
1000ff98:	00c80004 	movi	r3,8192
1000ff9c:	10c00115 	stw	r3,4(r2)
      return 0;
1000ffa0:	0005883a 	mov	r2,zero
1000ffa4:	00000406 	br	1000ffb8 <fstat+0x9c>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1000ffa8:	000fecc0 	call	1000fecc <alt_get_errno>
1000ffac:	00c01444 	movi	r3,81
1000ffb0:	10c00015 	stw	r3,0(r2)
    return -1;
1000ffb4:	00bfffc4 	movi	r2,-1
  }
}
1000ffb8:	e037883a 	mov	sp,fp
1000ffbc:	dfc00117 	ldw	ra,4(sp)
1000ffc0:	df000017 	ldw	fp,0(sp)
1000ffc4:	dec00204 	addi	sp,sp,8
1000ffc8:	f800283a 	ret

1000ffcc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
1000ffcc:	defffe04 	addi	sp,sp,-8
1000ffd0:	dfc00115 	stw	ra,4(sp)
1000ffd4:	df000015 	stw	fp,0(sp)
1000ffd8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1000ffdc:	00840074 	movhi	r2,4097
1000ffe0:	10918604 	addi	r2,r2,17944
1000ffe4:	10800017 	ldw	r2,0(r2)
1000ffe8:	10000526 	beq	r2,zero,10010000 <alt_get_errno+0x34>
1000ffec:	00840074 	movhi	r2,4097
1000fff0:	10918604 	addi	r2,r2,17944
1000fff4:	10800017 	ldw	r2,0(r2)
1000fff8:	103ee83a 	callr	r2
1000fffc:	00000206 	br	10010008 <alt_get_errno+0x3c>
10010000:	00840074 	movhi	r2,4097
10010004:	10987a04 	addi	r2,r2,25064
}
10010008:	e037883a 	mov	sp,fp
1001000c:	dfc00117 	ldw	ra,4(sp)
10010010:	df000017 	ldw	fp,0(sp)
10010014:	dec00204 	addi	sp,sp,8
10010018:	f800283a 	ret

1001001c <isatty>:
 *
 * ALT_ISATTY is mapped onto the isatty() system call in alt_syscall.h
 */
 
int ALT_ISATTY (int file)
{
1001001c:	deffed04 	addi	sp,sp,-76
10010020:	dfc01215 	stw	ra,72(sp)
10010024:	df001115 	stw	fp,68(sp)
10010028:	df001104 	addi	fp,sp,68
1001002c:	e13fff15 	stw	r4,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10010030:	e0bfff17 	ldw	r2,-4(fp)
10010034:	10000716 	blt	r2,zero,10010054 <isatty+0x38>
10010038:	e13fff17 	ldw	r4,-4(fp)
1001003c:	01400304 	movi	r5,12
10010040:	000f5540 	call	1000f554 <__mulsi3>
10010044:	00c40074 	movhi	r3,4097
10010048:	18cd0304 	addi	r3,r3,13324
1001004c:	10c5883a 	add	r2,r2,r3
10010050:	00000106 	br	10010058 <isatty+0x3c>
10010054:	0005883a 	mov	r2,zero
10010058:	e0bfef15 	stw	r2,-68(fp)
  
  if (fd)
1001005c:	e0bfef17 	ldw	r2,-68(fp)
10010060:	10000e26 	beq	r2,zero,1001009c <isatty+0x80>
    /*
     * If a device driver does not provide an fstat() function, then it is 
     * treated as a terminal device by default.
     */

    if (!fd->dev->fstat)
10010064:	e0bfef17 	ldw	r2,-68(fp)
10010068:	10800017 	ldw	r2,0(r2)
1001006c:	10800817 	ldw	r2,32(r2)
10010070:	1000021e 	bne	r2,zero,1001007c <isatty+0x60>
    {
      return 1;
10010074:	00800044 	movi	r2,1
10010078:	00000c06 	br	100100ac <isatty+0x90>
     * this is called so that the device can identify itself.
     */ 

    else
    {
      fstat (file, &stat);
1001007c:	e0bff004 	addi	r2,fp,-64
10010080:	e13fff17 	ldw	r4,-4(fp)
10010084:	100b883a 	mov	r5,r2
10010088:	000ff1c0 	call	1000ff1c <fstat>
      return (stat.st_mode == _IFCHR) ? 1 : 0;
1001008c:	e0bff117 	ldw	r2,-60(fp)
10010090:	10880020 	cmpeqi	r2,r2,8192
10010094:	10803fcc 	andi	r2,r2,255
10010098:	00000406 	br	100100ac <isatty+0x90>
    }
  }
  else
  {
    ALT_ERRNO = EBADFD;
1001009c:	000ffcc0 	call	1000ffcc <alt_get_errno>
100100a0:	00c01444 	movi	r3,81
100100a4:	10c00015 	stw	r3,0(r2)
    return 0;
100100a8:	0005883a 	mov	r2,zero
  }
}
100100ac:	e037883a 	mov	sp,fp
100100b0:	dfc00117 	ldw	ra,4(sp)
100100b4:	df000017 	ldw	fp,0(sp)
100100b8:	dec00204 	addi	sp,sp,8
100100bc:	f800283a 	ret

100100c0 <alt_load_section>:
 */

static void ALT_INLINE alt_load_section (alt_u32* from, 
                                         alt_u32* to, 
                                         alt_u32* end)
{
100100c0:	defffc04 	addi	sp,sp,-16
100100c4:	df000315 	stw	fp,12(sp)
100100c8:	df000304 	addi	fp,sp,12
100100cc:	e13ffd15 	stw	r4,-12(fp)
100100d0:	e17ffe15 	stw	r5,-8(fp)
100100d4:	e1bfff15 	stw	r6,-4(fp)
  if (to != from)
100100d8:	e0fffe17 	ldw	r3,-8(fp)
100100dc:	e0bffd17 	ldw	r2,-12(fp)
100100e0:	18800e26 	beq	r3,r2,1001011c <alt_load_section+0x5c>
  {
    while( to != end )
100100e4:	00000a06 	br	10010110 <alt_load_section+0x50>
    {
      *to++ = *from++;
100100e8:	e0bffd17 	ldw	r2,-12(fp)
100100ec:	10c00017 	ldw	r3,0(r2)
100100f0:	e0bffe17 	ldw	r2,-8(fp)
100100f4:	10c00015 	stw	r3,0(r2)
100100f8:	e0bffe17 	ldw	r2,-8(fp)
100100fc:	10800104 	addi	r2,r2,4
10010100:	e0bffe15 	stw	r2,-8(fp)
10010104:	e0bffd17 	ldw	r2,-12(fp)
10010108:	10800104 	addi	r2,r2,4
1001010c:	e0bffd15 	stw	r2,-12(fp)
                                         alt_u32* to, 
                                         alt_u32* end)
{
  if (to != from)
  {
    while( to != end )
10010110:	e0fffe17 	ldw	r3,-8(fp)
10010114:	e0bfff17 	ldw	r2,-4(fp)
10010118:	18bff31e 	bne	r3,r2,100100e8 <__alt_data_end+0xf80100e8>
    {
      *to++ = *from++;
    }
  }
}
1001011c:	e037883a 	mov	sp,fp
10010120:	df000017 	ldw	fp,0(sp)
10010124:	dec00104 	addi	sp,sp,4
10010128:	f800283a 	ret

1001012c <alt_load>:
 * there is no bootloader, so this application is responsible for loading to
 * RAM any sections that are required.
 */  

void alt_load (void)
{
1001012c:	defffe04 	addi	sp,sp,-8
10010130:	dfc00115 	stw	ra,4(sp)
10010134:	df000015 	stw	fp,0(sp)
10010138:	d839883a 	mov	fp,sp
  /* 
   * Copy the .rwdata section. 
   */

  alt_load_section (&__flash_rwdata_start, 
1001013c:	01040074 	movhi	r4,4097
10010140:	21118b04 	addi	r4,r4,17964
10010144:	01440074 	movhi	r5,4097
10010148:	294a9f04 	addi	r5,r5,10876
1001014c:	01840074 	movhi	r6,4097
10010150:	31918b04 	addi	r6,r6,17964
10010154:	00100c00 	call	100100c0 <alt_load_section>

  /*
   * Copy the exception handler.
   */

  alt_load_section (&__flash_exceptions_start, 
10010158:	01040034 	movhi	r4,4096
1001015c:	21000804 	addi	r4,r4,32
10010160:	01440034 	movhi	r5,4096
10010164:	29400804 	addi	r5,r5,32
10010168:	01840034 	movhi	r6,4096
1001016c:	31806e04 	addi	r6,r6,440
10010170:	00100c00 	call	100100c0 <alt_load_section>

  /*
   * Copy the .rodata section.
   */

  alt_load_section (&__flash_rodata_start, 
10010174:	01040074 	movhi	r4,4097
10010178:	21090c04 	addi	r4,r4,9264
1001017c:	01440074 	movhi	r5,4097
10010180:	29490c04 	addi	r5,r5,9264
10010184:	01840074 	movhi	r6,4097
10010188:	318a9f04 	addi	r6,r6,10876
1001018c:	00100c00 	call	100100c0 <alt_load_section>
  
  /*
   * Now ensure that the caches are in synch.
   */
  
  alt_dcache_flush_all();
10010190:	00113900 	call	10011390 <alt_dcache_flush_all>
  alt_icache_flush_all();
10010194:	00115540 	call	10011554 <alt_icache_flush_all>
}
10010198:	e037883a 	mov	sp,fp
1001019c:	dfc00117 	ldw	ra,4(sp)
100101a0:	df000017 	ldw	fp,0(sp)
100101a4:	dec00204 	addi	sp,sp,8
100101a8:	f800283a 	ret

100101ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
100101ac:	defffe04 	addi	sp,sp,-8
100101b0:	dfc00115 	stw	ra,4(sp)
100101b4:	df000015 	stw	fp,0(sp)
100101b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100101bc:	00840074 	movhi	r2,4097
100101c0:	10918604 	addi	r2,r2,17944
100101c4:	10800017 	ldw	r2,0(r2)
100101c8:	10000526 	beq	r2,zero,100101e0 <alt_get_errno+0x34>
100101cc:	00840074 	movhi	r2,4097
100101d0:	10918604 	addi	r2,r2,17944
100101d4:	10800017 	ldw	r2,0(r2)
100101d8:	103ee83a 	callr	r2
100101dc:	00000206 	br	100101e8 <alt_get_errno+0x3c>
100101e0:	00840074 	movhi	r2,4097
100101e4:	10987a04 	addi	r2,r2,25064
}
100101e8:	e037883a 	mov	sp,fp
100101ec:	dfc00117 	ldw	ra,4(sp)
100101f0:	df000017 	ldw	fp,0(sp)
100101f4:	dec00204 	addi	sp,sp,8
100101f8:	f800283a 	ret

100101fc <lseek>:
 * ALT_LSEEK is mapped onto the lseek() system call in alt_syscall.h
 *
 */

off_t ALT_LSEEK (int file, off_t ptr, int dir)
{
100101fc:	defff904 	addi	sp,sp,-28
10010200:	dfc00615 	stw	ra,24(sp)
10010204:	df000515 	stw	fp,20(sp)
10010208:	df000504 	addi	fp,sp,20
1001020c:	e13ffd15 	stw	r4,-12(fp)
10010210:	e17ffe15 	stw	r5,-8(fp)
10010214:	e1bfff15 	stw	r6,-4(fp)
  alt_fd* fd;
  off_t   rc = 0; 
10010218:	e03ffb15 	stw	zero,-20(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
1001021c:	e0bffd17 	ldw	r2,-12(fp)
10010220:	10000716 	blt	r2,zero,10010240 <lseek+0x44>
10010224:	e13ffd17 	ldw	r4,-12(fp)
10010228:	01400304 	movi	r5,12
1001022c:	000f5540 	call	1000f554 <__mulsi3>
10010230:	00c40074 	movhi	r3,4097
10010234:	18cd0304 	addi	r3,r3,13324
10010238:	10c5883a 	add	r2,r2,r3
1001023c:	00000106 	br	10010244 <lseek+0x48>
10010240:	0005883a 	mov	r2,zero
10010244:	e0bffc15 	stw	r2,-16(fp)
  
  if (fd) 
10010248:	e0bffc17 	ldw	r2,-16(fp)
1001024c:	10001026 	beq	r2,zero,10010290 <lseek+0x94>
    /*
     * If the device driver provides an implementation of the lseek() function,
     * then call that to process the request.
     */
 
    if (fd->dev->lseek)
10010250:	e0bffc17 	ldw	r2,-16(fp)
10010254:	10800017 	ldw	r2,0(r2)
10010258:	10800717 	ldw	r2,28(r2)
1001025c:	10000926 	beq	r2,zero,10010284 <lseek+0x88>
    {
      rc = fd->dev->lseek(fd, ptr, dir);
10010260:	e0bffc17 	ldw	r2,-16(fp)
10010264:	10800017 	ldw	r2,0(r2)
10010268:	10800717 	ldw	r2,28(r2)
1001026c:	e13ffc17 	ldw	r4,-16(fp)
10010270:	e17ffe17 	ldw	r5,-8(fp)
10010274:	e1bfff17 	ldw	r6,-4(fp)
10010278:	103ee83a 	callr	r2
1001027c:	e0bffb15 	stw	r2,-20(fp)
10010280:	00000506 	br	10010298 <lseek+0x9c>
     * Otherwise return an error.
     */

    else
    {
      rc = -ENOTSUP;
10010284:	00bfde84 	movi	r2,-134
10010288:	e0bffb15 	stw	r2,-20(fp)
1001028c:	00000206 	br	10010298 <lseek+0x9c>
    }
  }
  else  
  {
    rc = -EBADFD;
10010290:	00bfebc4 	movi	r2,-81
10010294:	e0bffb15 	stw	r2,-20(fp)
  }

  if (rc < 0)
10010298:	e0bffb17 	ldw	r2,-20(fp)
1001029c:	1000060e 	bge	r2,zero,100102b8 <lseek+0xbc>
  {
    ALT_ERRNO = -rc;
100102a0:	00101ac0 	call	100101ac <alt_get_errno>
100102a4:	e0fffb17 	ldw	r3,-20(fp)
100102a8:	00c7c83a 	sub	r3,zero,r3
100102ac:	10c00015 	stw	r3,0(r2)
    rc = -1;
100102b0:	00bfffc4 	movi	r2,-1
100102b4:	e0bffb15 	stw	r2,-20(fp)
  }

  return rc;
100102b8:	e0bffb17 	ldw	r2,-20(fp)
}
100102bc:	e037883a 	mov	sp,fp
100102c0:	dfc00117 	ldw	ra,4(sp)
100102c4:	df000017 	ldw	fp,0(sp)
100102c8:	dec00204 	addi	sp,sp,8
100102cc:	f800283a 	ret

100102d0 <alt_main>:
 * devices/filesystems/components in the system; and call the entry point for
 * the users application, i.e. main().
 */

void alt_main (void)
{
100102d0:	defffd04 	addi	sp,sp,-12
100102d4:	dfc00215 	stw	ra,8(sp)
100102d8:	df000115 	stw	fp,4(sp)
100102dc:	df000104 	addi	fp,sp,4
#endif

  /* ALT LOG - please see HAL/sys/alt_log_printf.h for details */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Entering alt_main, calling alt_irq_init.\r\n");
  /* Initialize the interrupt controller. */
  alt_irq_init (NULL);
100102e0:	0009883a 	mov	r4,zero
100102e4:	00107740 	call	10010774 <alt_irq_init>

  /* Initialize the operating system */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done alt_irq_init, calling alt_os_init.\r\n");
  ALT_OS_INIT();
100102e8:	0001883a 	nop
  ALT_LOG_PRINT_BOOT("[alt_main.c] Done OS Init, calling alt_sem_create.\r\n");
  ALT_SEM_CREATE (&alt_fd_list_lock, 1);

  /* Initialize the device drivers/software components. */
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling alt_sys_init.\r\n");
  alt_sys_init();
100102ec:	00107a80 	call	100107a8 <alt_sys_init>
   * devices be present (not equal to /dev/null) and if direct drivers
   * aren't being used.
   */

    ALT_LOG_PRINT_BOOT("[alt_main.c] Redirecting IO.\r\n");
    alt_io_redirect(ALT_STDOUT, ALT_STDIN, ALT_STDERR);
100102f0:	01040074 	movhi	r4,4097
100102f4:	210a9504 	addi	r4,r4,10836
100102f8:	01440074 	movhi	r5,4097
100102fc:	294a9504 	addi	r5,r5,10836
10010300:	01840074 	movhi	r6,4097
10010304:	318a9504 	addi	r6,r6,10836
10010308:	00119180 	call	10011918 <alt_io_redirect>
  /* 
   * Call the C++ constructors 
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling C++ constructors.\r\n");
  _do_ctors ();
1001030c:	001149c0 	call	1001149c <_do_ctors>
   * redefined as _exit()). This is in the interest of reducing code footprint,
   * in that the atexit() overhead is removed when it's not needed.
   */

  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling atexit.\r\n");
  atexit (_do_dtors);
10010310:	01040074 	movhi	r4,4097
10010314:	21053e04 	addi	r4,r4,5368
10010318:	001205c0 	call	1001205c <atexit>
  ALT_LOG_PRINT_BOOT("[alt_main.c] Calling main.\r\n");

#ifdef ALT_NO_EXIT
  main (alt_argc, alt_argv, alt_envp);
#else
  result = main (alt_argc, alt_argv, alt_envp);
1001031c:	d1270317 	ldw	r4,-25588(gp)
10010320:	d0e70417 	ldw	r3,-25584(gp)
10010324:	d0a70517 	ldw	r2,-25580(gp)
10010328:	180b883a 	mov	r5,r3
1001032c:	100d883a 	mov	r6,r2
10010330:	0000ddc0 	call	10000ddc <main>
10010334:	e0bfff15 	stw	r2,-4(fp)
  close(STDOUT_FILENO);
10010338:	01000044 	movi	r4,1
1001033c:	000fdd40 	call	1000fdd4 <close>
  exit (result);
10010340:	e13fff17 	ldw	r4,-4(fp)
10010344:	00120700 	call	10012070 <exit>

10010348 <__malloc_lock>:
 * configuration is single threaded, so there is nothing to do here. Note that 
 * this requires that malloc is never called by an interrupt service routine.
 */

void __malloc_lock ( struct _reent *_r )
{
10010348:	defffe04 	addi	sp,sp,-8
1001034c:	df000115 	stw	fp,4(sp)
10010350:	df000104 	addi	fp,sp,4
10010354:	e13fff15 	stw	r4,-4(fp)
}
10010358:	e037883a 	mov	sp,fp
1001035c:	df000017 	ldw	fp,0(sp)
10010360:	dec00104 	addi	sp,sp,4
10010364:	f800283a 	ret

10010368 <__malloc_unlock>:
/*
 *
 */

void __malloc_unlock ( struct _reent *_r )
{
10010368:	defffe04 	addi	sp,sp,-8
1001036c:	df000115 	stw	fp,4(sp)
10010370:	df000104 	addi	fp,sp,4
10010374:	e13fff15 	stw	r4,-4(fp)
}
10010378:	e037883a 	mov	sp,fp
1001037c:	df000017 	ldw	fp,0(sp)
10010380:	dec00104 	addi	sp,sp,4
10010384:	f800283a 	ret

10010388 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10010388:	defffe04 	addi	sp,sp,-8
1001038c:	dfc00115 	stw	ra,4(sp)
10010390:	df000015 	stw	fp,0(sp)
10010394:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
10010398:	00840074 	movhi	r2,4097
1001039c:	10918604 	addi	r2,r2,17944
100103a0:	10800017 	ldw	r2,0(r2)
100103a4:	10000526 	beq	r2,zero,100103bc <alt_get_errno+0x34>
100103a8:	00840074 	movhi	r2,4097
100103ac:	10918604 	addi	r2,r2,17944
100103b0:	10800017 	ldw	r2,0(r2)
100103b4:	103ee83a 	callr	r2
100103b8:	00000206 	br	100103c4 <alt_get_errno+0x3c>
100103bc:	00840074 	movhi	r2,4097
100103c0:	10987a04 	addi	r2,r2,25064
}
100103c4:	e037883a 	mov	sp,fp
100103c8:	dfc00117 	ldw	ra,4(sp)
100103cc:	df000017 	ldw	fp,0(sp)
100103d0:	dec00204 	addi	sp,sp,8
100103d4:	f800283a 	ret

100103d8 <read>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_READ (int file, void *ptr, size_t len)
{
100103d8:	defff904 	addi	sp,sp,-28
100103dc:	dfc00615 	stw	ra,24(sp)
100103e0:	df000515 	stw	fp,20(sp)
100103e4:	df000504 	addi	fp,sp,20
100103e8:	e13ffd15 	stw	r4,-12(fp)
100103ec:	e17ffe15 	stw	r5,-8(fp)
100103f0:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
100103f4:	e0bffd17 	ldw	r2,-12(fp)
100103f8:	10000716 	blt	r2,zero,10010418 <read+0x40>
100103fc:	e13ffd17 	ldw	r4,-12(fp)
10010400:	01400304 	movi	r5,12
10010404:	000f5540 	call	1000f554 <__mulsi3>
10010408:	00c40074 	movhi	r3,4097
1001040c:	18cd0304 	addi	r3,r3,13324
10010410:	10c5883a 	add	r2,r2,r3
10010414:	00000106 	br	1001041c <read+0x44>
10010418:	0005883a 	mov	r2,zero
1001041c:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10010420:	e0bffb17 	ldw	r2,-20(fp)
10010424:	10002026 	beq	r2,zero,100104a8 <read+0xd0>
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10010428:	e0bffb17 	ldw	r2,-20(fp)
1001042c:	10800217 	ldw	r2,8(r2)
10010430:	108000cc 	andi	r2,r2,3
10010434:	10800060 	cmpeqi	r2,r2,1
10010438:	1000171e 	bne	r2,zero,10010498 <read+0xc0>
        (fd->dev->read))
1001043c:	e0bffb17 	ldw	r2,-20(fp)
10010440:	10800017 	ldw	r2,0(r2)
10010444:	10800517 	ldw	r2,20(r2)
     * If the file has not been opened with read access, or if the driver does
     * not provide an implementation of read(), generate an error. Otherwise
     * call the drivers read() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_WRONLY) && 
10010448:	10001326 	beq	r2,zero,10010498 <read+0xc0>
        (fd->dev->read))
      {
        if ((rval = fd->dev->read(fd, ptr, len)) < 0)
1001044c:	e0bffb17 	ldw	r2,-20(fp)
10010450:	10800017 	ldw	r2,0(r2)
10010454:	10c00517 	ldw	r3,20(r2)
10010458:	e0bfff17 	ldw	r2,-4(fp)
1001045c:	e13ffb17 	ldw	r4,-20(fp)
10010460:	e17ffe17 	ldw	r5,-8(fp)
10010464:	100d883a 	mov	r6,r2
10010468:	183ee83a 	callr	r3
1001046c:	e0bffc15 	stw	r2,-16(fp)
10010470:	e0bffc17 	ldw	r2,-16(fp)
10010474:	1000060e 	bge	r2,zero,10010490 <read+0xb8>
        {
          ALT_ERRNO = -rval;
10010478:	00103880 	call	10010388 <alt_get_errno>
1001047c:	e0fffc17 	ldw	r3,-16(fp)
10010480:	00c7c83a 	sub	r3,zero,r3
10010484:	10c00015 	stw	r3,0(r2)
          return -1;
10010488:	00bfffc4 	movi	r2,-1
1001048c:	00000a06 	br	100104b8 <read+0xe0>
        }
        return rval;
10010490:	e0bffc17 	ldw	r2,-16(fp)
10010494:	00000806 	br	100104b8 <read+0xe0>
      }
      else
      {
        ALT_ERRNO = EACCES;
10010498:	00103880 	call	10010388 <alt_get_errno>
1001049c:	00c00344 	movi	r3,13
100104a0:	10c00015 	stw	r3,0(r2)
100104a4:	00000306 	br	100104b4 <read+0xdc>
      }
    }
  else
  {
    ALT_ERRNO = EBADFD;
100104a8:	00103880 	call	10010388 <alt_get_errno>
100104ac:	00c01444 	movi	r3,81
100104b0:	10c00015 	stw	r3,0(r2)
  }
  return -1;
100104b4:	00bfffc4 	movi	r2,-1
}
100104b8:	e037883a 	mov	sp,fp
100104bc:	dfc00117 	ldw	ra,4(sp)
100104c0:	df000017 	ldw	fp,0(sp)
100104c4:	dec00204 	addi	sp,sp,8
100104c8:	f800283a 	ret

100104cc <alt_release_fd>:
 * File descriptors correcponding to standard in, standard out and standard 
 * error cannont be released backed to the pool. They are always reserved.
 */

void alt_release_fd (int fd)
{
100104cc:	defffc04 	addi	sp,sp,-16
100104d0:	dfc00315 	stw	ra,12(sp)
100104d4:	df000215 	stw	fp,8(sp)
100104d8:	dc000115 	stw	r16,4(sp)
100104dc:	df000104 	addi	fp,sp,4
100104e0:	e13fff15 	stw	r4,-4(fp)
  if (fd > 2)
100104e4:	e0bfff17 	ldw	r2,-4(fp)
100104e8:	108000d0 	cmplti	r2,r2,3
100104ec:	1000111e 	bne	r2,zero,10010534 <alt_release_fd+0x68>
  {
    alt_fd_list[fd].fd_flags = 0;
100104f0:	04040074 	movhi	r16,4097
100104f4:	840d0304 	addi	r16,r16,13324
100104f8:	e0bfff17 	ldw	r2,-4(fp)
100104fc:	1009883a 	mov	r4,r2
10010500:	01400304 	movi	r5,12
10010504:	000f5540 	call	1000f554 <__mulsi3>
10010508:	8085883a 	add	r2,r16,r2
1001050c:	10800204 	addi	r2,r2,8
10010510:	10000015 	stw	zero,0(r2)
    alt_fd_list[fd].dev      = 0;
10010514:	04040074 	movhi	r16,4097
10010518:	840d0304 	addi	r16,r16,13324
1001051c:	e0bfff17 	ldw	r2,-4(fp)
10010520:	1009883a 	mov	r4,r2
10010524:	01400304 	movi	r5,12
10010528:	000f5540 	call	1000f554 <__mulsi3>
1001052c:	8085883a 	add	r2,r16,r2
10010530:	10000015 	stw	zero,0(r2)
  }
}
10010534:	e037883a 	mov	sp,fp
10010538:	dfc00217 	ldw	ra,8(sp)
1001053c:	df000117 	ldw	fp,4(sp)
10010540:	dc000017 	ldw	r16,0(sp)
10010544:	dec00304 	addi	sp,sp,12
10010548:	f800283a 	ret

1001054c <sbrk>:
#endif
 
caddr_t ALT_SBRK (int incr) __attribute__ ((no_instrument_function ));

caddr_t ALT_SBRK (int incr)
{ 
1001054c:	defff904 	addi	sp,sp,-28
10010550:	df000615 	stw	fp,24(sp)
10010554:	df000604 	addi	fp,sp,24
10010558:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001055c:	0005303a 	rdctl	r2,status
10010560:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10010564:	e0fffc17 	ldw	r3,-16(fp)
10010568:	00bfff84 	movi	r2,-2
1001056c:	1884703a 	and	r2,r3,r2
10010570:	1001703a 	wrctl	status,r2
  
  return context;
10010574:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context context;
  char *prev_heap_end; 

  context = alt_irq_disable_all();
10010578:	e0bffa15 	stw	r2,-24(fp)

  /* Always return data aligned on a word boundary */
  heap_end = (char *)(((unsigned int)heap_end + 3) & ~3);
1001057c:	d0a00c17 	ldw	r2,-32720(gp)
10010580:	10c000c4 	addi	r3,r2,3
10010584:	00bfff04 	movi	r2,-4
10010588:	1884703a 	and	r2,r3,r2
1001058c:	d0a00c15 	stw	r2,-32720(gp)
  if (((heap_end + incr) - __alt_heap_start) > ALT_MAX_HEAP_BYTES) {
    alt_irq_enable_all(context);
    return (caddr_t)-1;
  }
#else
  if ((heap_end + incr) > __alt_heap_limit) {
10010590:	d0e00c17 	ldw	r3,-32720(gp)
10010594:	e0bfff17 	ldw	r2,-4(fp)
10010598:	1885883a 	add	r2,r3,r2
1001059c:	00c60034 	movhi	r3,6144
100105a0:	18c00004 	addi	r3,r3,0
100105a4:	1880062e 	bgeu	r3,r2,100105c0 <sbrk+0x74>
100105a8:	e0bffa17 	ldw	r2,-24(fp)
100105ac:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
100105b0:	e0bffd17 	ldw	r2,-12(fp)
100105b4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
    return (caddr_t)-1;
100105b8:	00bfffc4 	movi	r2,-1
100105bc:	00000b06 	br	100105ec <sbrk+0xa0>
  }
#endif

  prev_heap_end = heap_end; 
100105c0:	d0a00c17 	ldw	r2,-32720(gp)
100105c4:	e0bffb15 	stw	r2,-20(fp)
  heap_end += incr; 
100105c8:	d0e00c17 	ldw	r3,-32720(gp)
100105cc:	e0bfff17 	ldw	r2,-4(fp)
100105d0:	1885883a 	add	r2,r3,r2
100105d4:	d0a00c15 	stw	r2,-32720(gp)
100105d8:	e0bffa17 	ldw	r2,-24(fp)
100105dc:	e0bffe15 	stw	r2,-8(fp)
100105e0:	e0bffe17 	ldw	r2,-8(fp)
100105e4:	1001703a 	wrctl	status,r2

#endif

  alt_irq_enable_all(context);

  return (caddr_t) prev_heap_end; 
100105e8:	e0bffb17 	ldw	r2,-20(fp)
} 
100105ec:	e037883a 	mov	sp,fp
100105f0:	df000017 	ldw	fp,0(sp)
100105f4:	dec00104 	addi	sp,sp,4
100105f8:	f800283a 	ret

100105fc <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
100105fc:	defffe04 	addi	sp,sp,-8
10010600:	dfc00115 	stw	ra,4(sp)
10010604:	df000015 	stw	fp,0(sp)
10010608:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
1001060c:	00840074 	movhi	r2,4097
10010610:	10918604 	addi	r2,r2,17944
10010614:	10800017 	ldw	r2,0(r2)
10010618:	10000526 	beq	r2,zero,10010630 <alt_get_errno+0x34>
1001061c:	00840074 	movhi	r2,4097
10010620:	10918604 	addi	r2,r2,17944
10010624:	10800017 	ldw	r2,0(r2)
10010628:	103ee83a 	callr	r2
1001062c:	00000206 	br	10010638 <alt_get_errno+0x3c>
10010630:	00840074 	movhi	r2,4097
10010634:	10987a04 	addi	r2,r2,25064
}
10010638:	e037883a 	mov	sp,fp
1001063c:	dfc00117 	ldw	ra,4(sp)
10010640:	df000017 	ldw	fp,0(sp)
10010644:	dec00204 	addi	sp,sp,8
10010648:	f800283a 	ret

1001064c <write>:
}

#else /* !ALT_USE_DIRECT_DRIVERS */

int ALT_WRITE (int file, const void *ptr, size_t len)
{
1001064c:	defff904 	addi	sp,sp,-28
10010650:	dfc00615 	stw	ra,24(sp)
10010654:	df000515 	stw	fp,20(sp)
10010658:	df000504 	addi	fp,sp,20
1001065c:	e13ffd15 	stw	r4,-12(fp)
10010660:	e17ffe15 	stw	r5,-8(fp)
10010664:	e1bfff15 	stw	r6,-4(fp)
   * A common error case is that when the file descriptor was created, the call
   * to open() failed resulting in a negative file descriptor. This is trapped
   * below so that we don't try and process an invalid file descriptor.
   */

  fd = (file < 0) ? NULL : &alt_fd_list[file];
10010668:	e0bffd17 	ldw	r2,-12(fp)
1001066c:	10000716 	blt	r2,zero,1001068c <write+0x40>
10010670:	e13ffd17 	ldw	r4,-12(fp)
10010674:	01400304 	movi	r5,12
10010678:	000f5540 	call	1000f554 <__mulsi3>
1001067c:	00c40074 	movhi	r3,4097
10010680:	18cd0304 	addi	r3,r3,13324
10010684:	10c5883a 	add	r2,r2,r3
10010688:	00000106 	br	10010690 <write+0x44>
1001068c:	0005883a 	mov	r2,zero
10010690:	e0bffb15 	stw	r2,-20(fp)
  
  if (fd)
10010694:	e0bffb17 	ldw	r2,-20(fp)
10010698:	10001f26 	beq	r2,zero,10010718 <write+0xcc>
     * If the file has not been opened with write access, or if the driver does
     * not provide an implementation of write(), generate an error. Otherwise
     * call the drivers write() function to process the request.
     */

    if (((fd->fd_flags & O_ACCMODE) != O_RDONLY) && fd->dev->write)
1001069c:	e0bffb17 	ldw	r2,-20(fp)
100106a0:	10800217 	ldw	r2,8(r2)
100106a4:	108000cc 	andi	r2,r2,3
100106a8:	10001726 	beq	r2,zero,10010708 <write+0xbc>
100106ac:	e0bffb17 	ldw	r2,-20(fp)
100106b0:	10800017 	ldw	r2,0(r2)
100106b4:	10800617 	ldw	r2,24(r2)
100106b8:	10001326 	beq	r2,zero,10010708 <write+0xbc>
    {
      
      /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */
      ALT_LOG_WRITE_FUNCTION(ptr,len);

      if ((rval = fd->dev->write(fd, ptr, len)) < 0)
100106bc:	e0bffb17 	ldw	r2,-20(fp)
100106c0:	10800017 	ldw	r2,0(r2)
100106c4:	10c00617 	ldw	r3,24(r2)
100106c8:	e0bfff17 	ldw	r2,-4(fp)
100106cc:	e13ffb17 	ldw	r4,-20(fp)
100106d0:	e17ffe17 	ldw	r5,-8(fp)
100106d4:	100d883a 	mov	r6,r2
100106d8:	183ee83a 	callr	r3
100106dc:	e0bffc15 	stw	r2,-16(fp)
100106e0:	e0bffc17 	ldw	r2,-16(fp)
100106e4:	1000060e 	bge	r2,zero,10010700 <write+0xb4>
      {
        ALT_ERRNO = -rval;
100106e8:	00105fc0 	call	100105fc <alt_get_errno>
100106ec:	e0fffc17 	ldw	r3,-16(fp)
100106f0:	00c7c83a 	sub	r3,zero,r3
100106f4:	10c00015 	stw	r3,0(r2)
        return -1;
100106f8:	00bfffc4 	movi	r2,-1
100106fc:	00000a06 	br	10010728 <write+0xdc>
      }
      return rval;
10010700:	e0bffc17 	ldw	r2,-16(fp)
10010704:	00000806 	br	10010728 <write+0xdc>
    }
    else
    {
      ALT_ERRNO = EACCES;
10010708:	00105fc0 	call	100105fc <alt_get_errno>
1001070c:	00c00344 	movi	r3,13
10010710:	10c00015 	stw	r3,0(r2)
10010714:	00000306 	br	10010724 <write+0xd8>
    }
  }
  else  
  {
    ALT_ERRNO = EBADFD;
10010718:	00105fc0 	call	100105fc <alt_get_errno>
1001071c:	00c01444 	movi	r3,81
10010720:	10c00015 	stw	r3,0(r2)
  }
  return -1;
10010724:	00bfffc4 	movi	r2,-1
}
10010728:	e037883a 	mov	sp,fp
1001072c:	dfc00117 	ldw	ra,4(sp)
10010730:	df000017 	ldw	fp,0(sp)
10010734:	dec00204 	addi	sp,sp,8
10010738:	f800283a 	ret

1001073c <alt_dev_reg>:
 */

extern int alt_fs_reg  (alt_dev* dev); 

static ALT_INLINE int alt_dev_reg (alt_dev* dev)
{
1001073c:	defffd04 	addi	sp,sp,-12
10010740:	dfc00215 	stw	ra,8(sp)
10010744:	df000115 	stw	fp,4(sp)
10010748:	df000104 	addi	fp,sp,4
1001074c:	e13fff15 	stw	r4,-4(fp)
  extern alt_llist alt_dev_list;

  return alt_dev_llist_insert ((alt_dev_llist*) dev, &alt_dev_list);
10010750:	e13fff17 	ldw	r4,-4(fp)
10010754:	01440074 	movhi	r5,4097
10010758:	29518304 	addi	r5,r5,17932
1001075c:	00113fc0 	call	100113fc <alt_dev_llist_insert>
}
10010760:	e037883a 	mov	sp,fp
10010764:	dfc00117 	ldw	ra,4(sp)
10010768:	df000017 	ldw	fp,0(sp)
1001076c:	dec00204 	addi	sp,sp,8
10010770:	f800283a 	ret

10010774 <alt_irq_init>:
 * The "base" parameter is ignored and only
 * present for backwards-compatibility.
 */

void alt_irq_init ( const void* base )
{
10010774:	defffd04 	addi	sp,sp,-12
10010778:	dfc00215 	stw	ra,8(sp)
1001077c:	df000115 	stw	fp,4(sp)
10010780:	df000104 	addi	fp,sp,4
10010784:	e13fff15 	stw	r4,-4(fp)
    ALTERA_NIOS2_QSYS_IRQ_INIT ( NIOS2_QSYS_0, nios2_qsys_0);
10010788:	0011dc40 	call	10011dc4 <altera_nios2_qsys_irq_init>
 * alt_irq_cpu_enable_interrupts() enables the CPU to start taking interrupts.
 */
static ALT_INLINE void ALT_ALWAYS_INLINE 
       alt_irq_cpu_enable_interrupts ()
{
    NIOS2_WRITE_STATUS(NIOS2_STATUS_PIE_MSK
1001078c:	00800044 	movi	r2,1
10010790:	1001703a 	wrctl	status,r2
    alt_irq_cpu_enable_interrupts();
}
10010794:	e037883a 	mov	sp,fp
10010798:	dfc00117 	ldw	ra,4(sp)
1001079c:	df000017 	ldw	fp,0(sp)
100107a0:	dec00204 	addi	sp,sp,8
100107a4:	f800283a 	ret

100107a8 <alt_sys_init>:
 * Initialize the non-interrupt controller devices.
 * Called after alt_irq_init().
 */

void alt_sys_init( void )
{
100107a8:	defffe04 	addi	sp,sp,-8
100107ac:	dfc00115 	stw	ra,4(sp)
100107b0:	df000015 	stw	fp,0(sp)
100107b4:	d839883a 	mov	fp,sp
    ALTERA_AVALON_JTAG_UART_INIT ( JTAG_UART_0, jtag_uart_0);
100107b8:	01040074 	movhi	r4,4097
100107bc:	210d6d04 	addi	r4,r4,13748
100107c0:	000b883a 	mov	r5,zero
100107c4:	01800144 	movi	r6,5
100107c8:	00109540 	call	10010954 <altera_avalon_jtag_uart_init>
100107cc:	01040074 	movhi	r4,4097
100107d0:	210d6304 	addi	r4,r4,13708
100107d4:	001073c0 	call	1001073c <alt_dev_reg>
    ALTERA_AVALON_SYSID_QSYS_INIT ( SYSID_QSYS_0, sysid_qsys_0);
100107d8:	0001883a 	nop
}
100107dc:	e037883a 	mov	sp,fp
100107e0:	dfc00117 	ldw	ra,4(sp)
100107e4:	df000017 	ldw	fp,0(sp)
100107e8:	dec00204 	addi	sp,sp,8
100107ec:	f800283a 	ret

100107f0 <altera_avalon_jtag_uart_read_fd>:
 *
 */

int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
100107f0:	defffa04 	addi	sp,sp,-24
100107f4:	dfc00515 	stw	ra,20(sp)
100107f8:	df000415 	stw	fp,16(sp)
100107fc:	df000404 	addi	fp,sp,16
10010800:	e13ffd15 	stw	r4,-12(fp)
10010804:	e17ffe15 	stw	r5,-8(fp)
10010808:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001080c:	e0bffd17 	ldw	r2,-12(fp)
10010810:	10800017 	ldw	r2,0(r2)
10010814:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
10010818:	e0bffc17 	ldw	r2,-16(fp)
1001081c:	10c00a04 	addi	r3,r2,40
      fd->fd_flags);
10010820:	e0bffd17 	ldw	r2,-12(fp)
int 
altera_avalon_jtag_uart_read_fd(alt_fd* fd, char* buffer, int space)
{
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_read(&dev->state, buffer, space,
10010824:	10800217 	ldw	r2,8(r2)
10010828:	1809883a 	mov	r4,r3
1001082c:	e17ffe17 	ldw	r5,-8(fp)
10010830:	e1bfff17 	ldw	r6,-4(fp)
10010834:	100f883a 	mov	r7,r2
10010838:	0010e180 	call	10010e18 <altera_avalon_jtag_uart_read>
      fd->fd_flags);
}
1001083c:	e037883a 	mov	sp,fp
10010840:	dfc00117 	ldw	ra,4(sp)
10010844:	df000017 	ldw	fp,0(sp)
10010848:	dec00204 	addi	sp,sp,8
1001084c:	f800283a 	ret

10010850 <altera_avalon_jtag_uart_write_fd>:

int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
10010850:	defffa04 	addi	sp,sp,-24
10010854:	dfc00515 	stw	ra,20(sp)
10010858:	df000415 	stw	fp,16(sp)
1001085c:	df000404 	addi	fp,sp,16
10010860:	e13ffd15 	stw	r4,-12(fp)
10010864:	e17ffe15 	stw	r5,-8(fp)
10010868:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
1001086c:	e0bffd17 	ldw	r2,-12(fp)
10010870:	10800017 	ldw	r2,0(r2)
10010874:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
10010878:	e0bffc17 	ldw	r2,-16(fp)
1001087c:	10c00a04 	addi	r3,r2,40
      fd->fd_flags);
10010880:	e0bffd17 	ldw	r2,-12(fp)
int 
altera_avalon_jtag_uart_write_fd(alt_fd* fd, const char* buffer, int space)
{
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 

    return altera_avalon_jtag_uart_write(&dev->state, buffer, space,
10010884:	10800217 	ldw	r2,8(r2)
10010888:	1809883a 	mov	r4,r3
1001088c:	e17ffe17 	ldw	r5,-8(fp)
10010890:	e1bfff17 	ldw	r6,-4(fp)
10010894:	100f883a 	mov	r7,r2
10010898:	00110300 	call	10011030 <altera_avalon_jtag_uart_write>
      fd->fd_flags);
}
1001089c:	e037883a 	mov	sp,fp
100108a0:	dfc00117 	ldw	ra,4(sp)
100108a4:	df000017 	ldw	fp,0(sp)
100108a8:	dec00204 	addi	sp,sp,8
100108ac:	f800283a 	ret

100108b0 <altera_avalon_jtag_uart_close_fd>:

#ifndef ALTERA_AVALON_JTAG_UART_SMALL

int 
altera_avalon_jtag_uart_close_fd(alt_fd* fd)
{
100108b0:	defffc04 	addi	sp,sp,-16
100108b4:	dfc00315 	stw	ra,12(sp)
100108b8:	df000215 	stw	fp,8(sp)
100108bc:	df000204 	addi	fp,sp,8
100108c0:	e13fff15 	stw	r4,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev; 
100108c4:	e0bfff17 	ldw	r2,-4(fp)
100108c8:	10800017 	ldw	r2,0(r2)
100108cc:	e0bffe15 	stw	r2,-8(fp)

    return altera_avalon_jtag_uart_close(&dev->state, fd->fd_flags);
100108d0:	e0bffe17 	ldw	r2,-8(fp)
100108d4:	10c00a04 	addi	r3,r2,40
100108d8:	e0bfff17 	ldw	r2,-4(fp)
100108dc:	10800217 	ldw	r2,8(r2)
100108e0:	1809883a 	mov	r4,r3
100108e4:	100b883a 	mov	r5,r2
100108e8:	0010cbc0 	call	10010cbc <altera_avalon_jtag_uart_close>
}
100108ec:	e037883a 	mov	sp,fp
100108f0:	dfc00117 	ldw	ra,4(sp)
100108f4:	df000017 	ldw	fp,0(sp)
100108f8:	dec00204 	addi	sp,sp,8
100108fc:	f800283a 	ret

10010900 <altera_avalon_jtag_uart_ioctl_fd>:

int 
altera_avalon_jtag_uart_ioctl_fd(alt_fd* fd, int req, void* arg)
{
10010900:	defffa04 	addi	sp,sp,-24
10010904:	dfc00515 	stw	ra,20(sp)
10010908:	df000415 	stw	fp,16(sp)
1001090c:	df000404 	addi	fp,sp,16
10010910:	e13ffd15 	stw	r4,-12(fp)
10010914:	e17ffe15 	stw	r5,-8(fp)
10010918:	e1bfff15 	stw	r6,-4(fp)
    altera_avalon_jtag_uart_dev* dev = (altera_avalon_jtag_uart_dev*) fd->dev;
1001091c:	e0bffd17 	ldw	r2,-12(fp)
10010920:	10800017 	ldw	r2,0(r2)
10010924:	e0bffc15 	stw	r2,-16(fp)

    return altera_avalon_jtag_uart_ioctl(&dev->state, req, arg);
10010928:	e0bffc17 	ldw	r2,-16(fp)
1001092c:	10800a04 	addi	r2,r2,40
10010930:	1009883a 	mov	r4,r2
10010934:	e17ffe17 	ldw	r5,-8(fp)
10010938:	e1bfff17 	ldw	r6,-4(fp)
1001093c:	0010d240 	call	10010d24 <altera_avalon_jtag_uart_ioctl>
}
10010940:	e037883a 	mov	sp,fp
10010944:	dfc00117 	ldw	ra,4(sp)
10010948:	df000017 	ldw	fp,0(sp)
1001094c:	dec00204 	addi	sp,sp,8
10010950:	f800283a 	ret

10010954 <altera_avalon_jtag_uart_init>:
 * Return 1 on sucessful IRQ register and 0 on failure.
 */

void altera_avalon_jtag_uart_init(altera_avalon_jtag_uart_state* sp, 
                                  int irq_controller_id, int irq)
{
10010954:	defffa04 	addi	sp,sp,-24
10010958:	dfc00515 	stw	ra,20(sp)
1001095c:	df000415 	stw	fp,16(sp)
10010960:	df000404 	addi	fp,sp,16
10010964:	e13ffd15 	stw	r4,-12(fp)
10010968:	e17ffe15 	stw	r5,-8(fp)
1001096c:	e1bfff15 	stw	r6,-4(fp)
  ALT_FLAG_CREATE(&sp->events, 0);
  ALT_SEM_CREATE(&sp->read_lock, 1);
  ALT_SEM_CREATE(&sp->write_lock, 1);

  /* enable read interrupts at the device */
  sp->irq_enable = ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10010970:	e0bffd17 	ldw	r2,-12(fp)
10010974:	00c00044 	movi	r3,1
10010978:	10c00815 	stw	r3,32(r2)

  IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable); 
1001097c:	e0bffd17 	ldw	r2,-12(fp)
10010980:	10800017 	ldw	r2,0(r2)
10010984:	10800104 	addi	r2,r2,4
10010988:	e0fffd17 	ldw	r3,-12(fp)
1001098c:	18c00817 	ldw	r3,32(r3)
10010990:	10c00035 	stwio	r3,0(r2)
  
  /* register the interrupt handler */
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
  alt_ic_isr_register(irq_controller_id, irq, altera_avalon_jtag_uart_irq, 
10010994:	e0fffe17 	ldw	r3,-8(fp)
10010998:	e0bfff17 	ldw	r2,-4(fp)
1001099c:	d8000015 	stw	zero,0(sp)
100109a0:	1809883a 	mov	r4,r3
100109a4:	100b883a 	mov	r5,r2
100109a8:	01840074 	movhi	r6,4097
100109ac:	31828504 	addi	r6,r6,2580
100109b0:	e1fffd17 	ldw	r7,-12(fp)
100109b4:	00115700 	call	10011570 <alt_ic_isr_register>
#else
  alt_irq_register(irq, sp, altera_avalon_jtag_uart_irq);
#endif  

  /* Register an alarm to go off every second to check for presence of host */
  sp->host_inactive = 0;
100109b8:	e0bffd17 	ldw	r2,-12(fp)
100109bc:	10000915 	stw	zero,36(r2)

  if (alt_alarm_start(&sp->alarm, alt_ticks_per_second(), 
100109c0:	e0bffd17 	ldw	r2,-12(fp)
100109c4:	10c00204 	addi	r3,r2,8
 * Obtain the system clock rate in ticks/s. 
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_ticks_per_second (void)
{
  return _alt_tick_rate;
100109c8:	00840074 	movhi	r2,4097
100109cc:	10988204 	addi	r2,r2,25096
100109d0:	10800017 	ldw	r2,0(r2)
100109d4:	1809883a 	mov	r4,r3
100109d8:	100b883a 	mov	r5,r2
100109dc:	01840074 	movhi	r6,4097
100109e0:	31830604 	addi	r6,r6,3096
100109e4:	e1fffd17 	ldw	r7,-12(fp)
100109e8:	00112500 	call	10011250 <alt_alarm_start>
100109ec:	1000040e 	bge	r2,zero,10010a00 <altera_avalon_jtag_uart_init+0xac>
    &altera_avalon_jtag_uart_timeout, sp) < 0)
  {
    /* If we can't set the alarm then record "don't know if host present" 
     * and behave as though the host is present.
     */
    sp->timeout = INT_MAX;
100109f0:	e0bffd17 	ldw	r2,-12(fp)
100109f4:	00e00034 	movhi	r3,32768
100109f8:	18ffffc4 	addi	r3,r3,-1
100109fc:	10c00115 	stw	r3,4(r2)
  }

  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ALARM_REGISTER(sp, sp->base);
}
10010a00:	e037883a 	mov	sp,fp
10010a04:	dfc00117 	ldw	ra,4(sp)
10010a08:	df000017 	ldw	fp,0(sp)
10010a0c:	dec00204 	addi	sp,sp,8
10010a10:	f800283a 	ret

10010a14 <altera_avalon_jtag_uart_irq>:
#ifdef ALT_ENHANCED_INTERRUPT_API_PRESENT
static void altera_avalon_jtag_uart_irq(void* context)
#else
static void altera_avalon_jtag_uart_irq(void* context, alt_u32 id)
#endif
{
10010a14:	defff804 	addi	sp,sp,-32
10010a18:	df000715 	stw	fp,28(sp)
10010a1c:	df000704 	addi	fp,sp,28
10010a20:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state*) context;
10010a24:	e0bfff17 	ldw	r2,-4(fp)
10010a28:	e0bffb15 	stw	r2,-20(fp)
  unsigned int base = sp->base;
10010a2c:	e0bffb17 	ldw	r2,-20(fp)
10010a30:	10800017 	ldw	r2,0(r2)
10010a34:	e0bffc15 	stw	r2,-16(fp)
10010a38:	00000106 	br	10010a40 <altera_avalon_jtag_uart_irq+0x2c>
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
10010a3c:	0001883a 	nop
  /* ALT_LOG - see altera_hal/HAL/inc/sys/alt_log_printf.h */ 
  ALT_LOG_JTAG_UART_ISR_FUNCTION(base, sp);

  for ( ; ; )
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10010a40:	e0bffc17 	ldw	r2,-16(fp)
10010a44:	10800104 	addi	r2,r2,4
10010a48:	10800037 	ldwio	r2,0(r2)
10010a4c:	e0bffd15 	stw	r2,-12(fp)

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
10010a50:	e0bffd17 	ldw	r2,-12(fp)
10010a54:	1080c00c 	andi	r2,r2,768
10010a58:	10006a26 	beq	r2,zero,10010c04 <altera_avalon_jtag_uart_irq+0x1f0>
      break;

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK)
10010a5c:	e0bffd17 	ldw	r2,-12(fp)
10010a60:	1080400c 	andi	r2,r2,256
10010a64:	10003326 	beq	r2,zero,10010b34 <altera_avalon_jtag_uart_irq+0x120>
    {
      /* process a read irq.  Start by assuming that there is data in the
       * receive FIFO (otherwise why would we have been interrupted?)
       */
      unsigned int data = 1 << ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_OFST;
10010a68:	00800074 	movhi	r2,1
10010a6c:	e0bff915 	stw	r2,-28(fp)
      for ( ; ; )
      {
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10010a70:	e0bffb17 	ldw	r2,-20(fp)
10010a74:	10800a17 	ldw	r2,40(r2)
10010a78:	10800044 	addi	r2,r2,1
10010a7c:	1081ffcc 	andi	r2,r2,2047
10010a80:	e0bffe15 	stw	r2,-8(fp)
        if (next == sp->rx_out)
10010a84:	e0bffb17 	ldw	r2,-20(fp)
10010a88:	10c00b17 	ldw	r3,44(r2)
10010a8c:	e0bffe17 	ldw	r2,-8(fp)
10010a90:	18801426 	beq	r3,r2,10010ae4 <altera_avalon_jtag_uart_irq+0xd0>
          break;

        /* Try to remove a character from the FIFO and find out whether there
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
10010a94:	e0bffc17 	ldw	r2,-16(fp)
10010a98:	10800037 	ldwio	r2,0(r2)
10010a9c:	e0bff915 	stw	r2,-28(fp)
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
10010aa0:	e0bff917 	ldw	r2,-28(fp)
10010aa4:	10a0000c 	andi	r2,r2,32768
10010aa8:	10001026 	beq	r2,zero,10010aec <altera_avalon_jtag_uart_irq+0xd8>
          break;

        sp->rx_buf[sp->rx_in] = (data & ALTERA_AVALON_JTAG_UART_DATA_DATA_MSK) >> ALTERA_AVALON_JTAG_UART_DATA_DATA_OFST;
10010aac:	e0bffb17 	ldw	r2,-20(fp)
10010ab0:	10800a17 	ldw	r2,40(r2)
10010ab4:	e0fff917 	ldw	r3,-28(fp)
10010ab8:	e13ffb17 	ldw	r4,-20(fp)
10010abc:	2085883a 	add	r2,r4,r2
10010ac0:	10800e04 	addi	r2,r2,56
10010ac4:	10c00005 	stb	r3,0(r2)
        sp->rx_in = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10010ac8:	e0bffb17 	ldw	r2,-20(fp)
10010acc:	10800a17 	ldw	r2,40(r2)
10010ad0:	10800044 	addi	r2,r2,1
10010ad4:	10c1ffcc 	andi	r3,r2,2047
10010ad8:	e0bffb17 	ldw	r2,-20(fp)
10010adc:	10c00a15 	stw	r3,40(r2)

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }
10010ae0:	003fe306 	br	10010a70 <__alt_data_end+0xf8010a70>
        /* Check whether there is space in the buffer.  If not then we must not
         * read any characters from the buffer as they will be lost.
         */
        unsigned int next = (sp->rx_in + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
        if (next == sp->rx_out)
          break;
10010ae4:	0001883a 	nop
10010ae8:	00000106 	br	10010af0 <altera_avalon_jtag_uart_irq+0xdc>
         * are any more characters remaining.
         */
        data = IORD_ALTERA_AVALON_JTAG_UART_DATA(base);
        
        if ((data & ALTERA_AVALON_JTAG_UART_DATA_RVALID_MSK) == 0)
          break;
10010aec:	0001883a 	nop

        /* Post an event to notify jtag_uart_read that a character has been read */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_READ_RDY, OS_FLAG_SET);
      }

      if (data & ALTERA_AVALON_JTAG_UART_DATA_RAVAIL_MSK)
10010af0:	e0bff917 	ldw	r2,-28(fp)
10010af4:	10bfffec 	andhi	r2,r2,65535
10010af8:	10000e26 	beq	r2,zero,10010b34 <altera_avalon_jtag_uart_irq+0x120>
      {
        /* If there is still data available here then the buffer is full 
         * so turn off receive interrupts until some space becomes available.
         */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10010afc:	e0bffb17 	ldw	r2,-20(fp)
10010b00:	10c00817 	ldw	r3,32(r2)
10010b04:	00bfff84 	movi	r2,-2
10010b08:	1886703a 	and	r3,r3,r2
10010b0c:	e0bffb17 	ldw	r2,-20(fp)
10010b10:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(base, sp->irq_enable);
10010b14:	e0bffc17 	ldw	r2,-16(fp)
10010b18:	10800104 	addi	r2,r2,4
10010b1c:	e0fffb17 	ldw	r3,-20(fp)
10010b20:	18c00817 	ldw	r3,32(r3)
10010b24:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10010b28:	e0bffc17 	ldw	r2,-16(fp)
10010b2c:	10800104 	addi	r2,r2,4
10010b30:	10800037 	ldwio	r2,0(r2)
      }
    }

    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
10010b34:	e0bffd17 	ldw	r2,-12(fp)
10010b38:	1080800c 	andi	r2,r2,512
10010b3c:	103fbf26 	beq	r2,zero,10010a3c <__alt_data_end+0xf8010a3c>
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;
10010b40:	e0bffd17 	ldw	r2,-12(fp)
10010b44:	1004d43a 	srli	r2,r2,16
10010b48:	e0bffa15 	stw	r2,-24(fp)

      while (space > 0 && sp->tx_out != sp->tx_in)
10010b4c:	00001406 	br	10010ba0 <altera_avalon_jtag_uart_irq+0x18c>
      {
        IOWR_ALTERA_AVALON_JTAG_UART_DATA(base, sp->tx_buf[sp->tx_out]);
10010b50:	e0bffc17 	ldw	r2,-16(fp)
10010b54:	e0fffb17 	ldw	r3,-20(fp)
10010b58:	18c00d17 	ldw	r3,52(r3)
10010b5c:	e13ffb17 	ldw	r4,-20(fp)
10010b60:	20c7883a 	add	r3,r4,r3
10010b64:	18c20e04 	addi	r3,r3,2104
10010b68:	18c00003 	ldbu	r3,0(r3)
10010b6c:	18c03fcc 	andi	r3,r3,255
10010b70:	18c0201c 	xori	r3,r3,128
10010b74:	18ffe004 	addi	r3,r3,-128
10010b78:	10c00035 	stwio	r3,0(r2)

        sp->tx_out = (sp->tx_out + 1) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10010b7c:	e0bffb17 	ldw	r2,-20(fp)
10010b80:	10800d17 	ldw	r2,52(r2)
10010b84:	10800044 	addi	r2,r2,1
10010b88:	10c1ffcc 	andi	r3,r2,2047
10010b8c:	e0bffb17 	ldw	r2,-20(fp)
10010b90:	10c00d15 	stw	r3,52(r2)

        /* Post an event to notify jtag_uart_write that a character has been written */
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
10010b94:	e0bffa17 	ldw	r2,-24(fp)
10010b98:	10bfffc4 	addi	r2,r2,-1
10010b9c:	e0bffa15 	stw	r2,-24(fp)
    if (control & ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)
    {
      /* process a write irq */
      unsigned int space = (control & ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_MSK) >> ALTERA_AVALON_JTAG_UART_CONTROL_WSPACE_OFST;

      while (space > 0 && sp->tx_out != sp->tx_in)
10010ba0:	e0bffa17 	ldw	r2,-24(fp)
10010ba4:	10000526 	beq	r2,zero,10010bbc <altera_avalon_jtag_uart_irq+0x1a8>
10010ba8:	e0bffb17 	ldw	r2,-20(fp)
10010bac:	10c00d17 	ldw	r3,52(r2)
10010bb0:	e0bffb17 	ldw	r2,-20(fp)
10010bb4:	10800c17 	ldw	r2,48(r2)
10010bb8:	18bfe51e 	bne	r3,r2,10010b50 <__alt_data_end+0xf8010b50>
        ALT_FLAG_POST (sp->events, ALT_JTAG_UART_WRITE_RDY, OS_FLAG_SET);

        space--;
      }

      if (space > 0)
10010bbc:	e0bffa17 	ldw	r2,-24(fp)
10010bc0:	103f9e26 	beq	r2,zero,10010a3c <__alt_data_end+0xf8010a3c>
      {
        /* If we don't have any more data available then turn off the TX interrupt */
        sp->irq_enable &= ~ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
10010bc4:	e0bffb17 	ldw	r2,-20(fp)
10010bc8:	10c00817 	ldw	r3,32(r2)
10010bcc:	00bfff44 	movi	r2,-3
10010bd0:	1886703a 	and	r3,r3,r2
10010bd4:	e0bffb17 	ldw	r2,-20(fp)
10010bd8:	10c00815 	stw	r3,32(r2)
        IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10010bdc:	e0bffb17 	ldw	r2,-20(fp)
10010be0:	10800017 	ldw	r2,0(r2)
10010be4:	10800104 	addi	r2,r2,4
10010be8:	e0fffb17 	ldw	r3,-20(fp)
10010bec:	18c00817 	ldw	r3,32(r3)
10010bf0:	10c00035 	stwio	r3,0(r2)
        
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
10010bf4:	e0bffc17 	ldw	r2,-16(fp)
10010bf8:	10800104 	addi	r2,r2,4
10010bfc:	10800037 	ldwio	r2,0(r2)
      }
    }
  }
10010c00:	003f8e06 	br	10010a3c <__alt_data_end+0xf8010a3c>
  {
    unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);

    /* Return once nothing more to do */
    if ((control & (ALTERA_AVALON_JTAG_UART_CONTROL_RI_MSK | ALTERA_AVALON_JTAG_UART_CONTROL_WI_MSK)) == 0)
      break;
10010c04:	0001883a 	nop
        /* Dummy read to ensure IRQ is cleared prior to ISR completion */
        IORD_ALTERA_AVALON_JTAG_UART_CONTROL(base);
      }
    }
  }
}
10010c08:	e037883a 	mov	sp,fp
10010c0c:	df000017 	ldw	fp,0(sp)
10010c10:	dec00104 	addi	sp,sp,4
10010c14:	f800283a 	ret

10010c18 <altera_avalon_jtag_uart_timeout>:
 * Timeout routine is called every second
 */

static alt_u32 
altera_avalon_jtag_uart_timeout(void* context) 
{
10010c18:	defffc04 	addi	sp,sp,-16
10010c1c:	df000315 	stw	fp,12(sp)
10010c20:	df000304 	addi	fp,sp,12
10010c24:	e13fff15 	stw	r4,-4(fp)
  altera_avalon_jtag_uart_state* sp = (altera_avalon_jtag_uart_state *) context;
10010c28:	e0bfff17 	ldw	r2,-4(fp)
10010c2c:	e0bffd15 	stw	r2,-12(fp)

  unsigned int control = IORD_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base);
10010c30:	e0bffd17 	ldw	r2,-12(fp)
10010c34:	10800017 	ldw	r2,0(r2)
10010c38:	10800104 	addi	r2,r2,4
10010c3c:	10800037 	ldwio	r2,0(r2)
10010c40:	e0bffe15 	stw	r2,-8(fp)

  if (control & ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK)
10010c44:	e0bffe17 	ldw	r2,-8(fp)
10010c48:	1081000c 	andi	r2,r2,1024
10010c4c:	10000a26 	beq	r2,zero,10010c78 <altera_avalon_jtag_uart_timeout+0x60>
  {
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable | ALTERA_AVALON_JTAG_UART_CONTROL_AC_MSK);
10010c50:	e0bffd17 	ldw	r2,-12(fp)
10010c54:	10800017 	ldw	r2,0(r2)
10010c58:	10800104 	addi	r2,r2,4
10010c5c:	e0fffd17 	ldw	r3,-12(fp)
10010c60:	18c00817 	ldw	r3,32(r3)
10010c64:	18c10014 	ori	r3,r3,1024
10010c68:	10c00035 	stwio	r3,0(r2)
    sp->host_inactive = 0;
10010c6c:	e0bffd17 	ldw	r2,-12(fp)
10010c70:	10000915 	stw	zero,36(r2)
10010c74:	00000a06 	br	10010ca0 <altera_avalon_jtag_uart_timeout+0x88>
  }
  else if (sp->host_inactive < INT_MAX - 2) {
10010c78:	e0bffd17 	ldw	r2,-12(fp)
10010c7c:	10800917 	ldw	r2,36(r2)
10010c80:	00e00034 	movhi	r3,32768
10010c84:	18ffff04 	addi	r3,r3,-4
10010c88:	18800536 	bltu	r3,r2,10010ca0 <altera_avalon_jtag_uart_timeout+0x88>
    sp->host_inactive++;
10010c8c:	e0bffd17 	ldw	r2,-12(fp)
10010c90:	10800917 	ldw	r2,36(r2)
10010c94:	10c00044 	addi	r3,r2,1
10010c98:	e0bffd17 	ldw	r2,-12(fp)
10010c9c:	10c00915 	stw	r3,36(r2)
10010ca0:	00840074 	movhi	r2,4097
10010ca4:	10988204 	addi	r2,r2,25096
10010ca8:	10800017 	ldw	r2,0(r2)
      ALT_FLAG_POST (sp->events, ALT_JTAG_UART_TIMEOUT, OS_FLAG_SET);
    }
  }

  return alt_ticks_per_second();
}
10010cac:	e037883a 	mov	sp,fp
10010cb0:	df000017 	ldw	fp,0(sp)
10010cb4:	dec00104 	addi	sp,sp,4
10010cb8:	f800283a 	ret

10010cbc <altera_avalon_jtag_uart_close>:
 * The close routine is not implemented for the small driver; instead it will
 * map to null. This is because the small driver simply waits while characters
 * are transmitted; there is no interrupt-serviced buffer to empty 
 */
int altera_avalon_jtag_uart_close(altera_avalon_jtag_uart_state* sp, int flags)
{
10010cbc:	defffd04 	addi	sp,sp,-12
10010cc0:	df000215 	stw	fp,8(sp)
10010cc4:	df000204 	addi	fp,sp,8
10010cc8:	e13ffe15 	stw	r4,-8(fp)
10010ccc:	e17fff15 	stw	r5,-4(fp)
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10010cd0:	00000506 	br	10010ce8 <altera_avalon_jtag_uart_close+0x2c>
    if (flags & O_NONBLOCK) {
10010cd4:	e0bfff17 	ldw	r2,-4(fp)
10010cd8:	1090000c 	andi	r2,r2,16384
10010cdc:	10000226 	beq	r2,zero,10010ce8 <altera_avalon_jtag_uart_close+0x2c>
      return -EWOULDBLOCK; 
10010ce0:	00bffd44 	movi	r2,-11
10010ce4:	00000b06 	br	10010d14 <altera_avalon_jtag_uart_close+0x58>
{
  /* 
   * Wait for all transmit data to be emptied by the JTAG UART ISR, or
   * for a host-inactivity timeout, in which case transmit data will be lost
   */
  while ( (sp->tx_out != sp->tx_in) && (sp->host_inactive < sp->timeout) ) {
10010ce8:	e0bffe17 	ldw	r2,-8(fp)
10010cec:	10c00d17 	ldw	r3,52(r2)
10010cf0:	e0bffe17 	ldw	r2,-8(fp)
10010cf4:	10800c17 	ldw	r2,48(r2)
10010cf8:	18800526 	beq	r3,r2,10010d10 <altera_avalon_jtag_uart_close+0x54>
10010cfc:	e0bffe17 	ldw	r2,-8(fp)
10010d00:	10c00917 	ldw	r3,36(r2)
10010d04:	e0bffe17 	ldw	r2,-8(fp)
10010d08:	10800117 	ldw	r2,4(r2)
10010d0c:	18bff136 	bltu	r3,r2,10010cd4 <__alt_data_end+0xf8010cd4>
    if (flags & O_NONBLOCK) {
      return -EWOULDBLOCK; 
    }
  }

  return 0;
10010d10:	0005883a 	mov	r2,zero
}
10010d14:	e037883a 	mov	sp,fp
10010d18:	df000017 	ldw	fp,0(sp)
10010d1c:	dec00104 	addi	sp,sp,4
10010d20:	f800283a 	ret

10010d24 <altera_avalon_jtag_uart_ioctl>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_ioctl(altera_avalon_jtag_uart_state* sp, int req,
  void* arg)
{
10010d24:	defffa04 	addi	sp,sp,-24
10010d28:	df000515 	stw	fp,20(sp)
10010d2c:	df000504 	addi	fp,sp,20
10010d30:	e13ffd15 	stw	r4,-12(fp)
10010d34:	e17ffe15 	stw	r5,-8(fp)
10010d38:	e1bfff15 	stw	r6,-4(fp)
  int rc = -ENOTTY;
10010d3c:	00bff9c4 	movi	r2,-25
10010d40:	e0bffb15 	stw	r2,-20(fp)

  switch (req)
10010d44:	e0bffe17 	ldw	r2,-8(fp)
10010d48:	10da8060 	cmpeqi	r3,r2,27137
10010d4c:	1800031e 	bne	r3,zero,10010d5c <altera_avalon_jtag_uart_ioctl+0x38>
10010d50:	109a80a0 	cmpeqi	r2,r2,27138
10010d54:	1000181e 	bne	r2,zero,10010db8 <altera_avalon_jtag_uart_ioctl+0x94>
10010d58:	00002606 	br	10010df4 <altera_avalon_jtag_uart_ioctl+0xd0>
  {
  case TIOCSTIMEOUT:
    /* Set the time to wait until assuming host is not connected */
    if (sp->timeout != INT_MAX)
10010d5c:	e0bffd17 	ldw	r2,-12(fp)
10010d60:	10c00117 	ldw	r3,4(r2)
10010d64:	00a00034 	movhi	r2,32768
10010d68:	10bfffc4 	addi	r2,r2,-1
10010d6c:	18802226 	beq	r3,r2,10010df8 <altera_avalon_jtag_uart_ioctl+0xd4>
    {
      int timeout = *((int *)arg);
10010d70:	e0bfff17 	ldw	r2,-4(fp)
10010d74:	10800017 	ldw	r2,0(r2)
10010d78:	e0bffc15 	stw	r2,-16(fp)
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
10010d7c:	e0bffc17 	ldw	r2,-16(fp)
10010d80:	10800090 	cmplti	r2,r2,2
10010d84:	1000061e 	bne	r2,zero,10010da0 <altera_avalon_jtag_uart_ioctl+0x7c>
10010d88:	e0fffc17 	ldw	r3,-16(fp)
10010d8c:	00a00034 	movhi	r2,32768
10010d90:	10bfffc4 	addi	r2,r2,-1
10010d94:	18800226 	beq	r3,r2,10010da0 <altera_avalon_jtag_uart_ioctl+0x7c>
10010d98:	e0bffc17 	ldw	r2,-16(fp)
10010d9c:	00000206 	br	10010da8 <altera_avalon_jtag_uart_ioctl+0x84>
10010da0:	00a00034 	movhi	r2,32768
10010da4:	10bfff84 	addi	r2,r2,-2
10010da8:	e0fffd17 	ldw	r3,-12(fp)
10010dac:	18800115 	stw	r2,4(r3)
      rc = 0;
10010db0:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
10010db4:	00001006 	br	10010df8 <altera_avalon_jtag_uart_ioctl+0xd4>

  case TIOCGCONNECTED:
    /* Find out whether host is connected */
    if (sp->timeout != INT_MAX)
10010db8:	e0bffd17 	ldw	r2,-12(fp)
10010dbc:	10c00117 	ldw	r3,4(r2)
10010dc0:	00a00034 	movhi	r2,32768
10010dc4:	10bfffc4 	addi	r2,r2,-1
10010dc8:	18800d26 	beq	r3,r2,10010e00 <altera_avalon_jtag_uart_ioctl+0xdc>
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
10010dcc:	e0bffd17 	ldw	r2,-12(fp)
10010dd0:	10c00917 	ldw	r3,36(r2)
10010dd4:	e0bffd17 	ldw	r2,-12(fp)
10010dd8:	10800117 	ldw	r2,4(r2)
10010ddc:	1885803a 	cmpltu	r2,r3,r2
10010de0:	10c03fcc 	andi	r3,r2,255
10010de4:	e0bfff17 	ldw	r2,-4(fp)
10010de8:	10c00015 	stw	r3,0(r2)
      rc = 0;
10010dec:	e03ffb15 	stw	zero,-20(fp)
    }
    break;
10010df0:	00000306 	br	10010e00 <altera_avalon_jtag_uart_ioctl+0xdc>

  default:
    break;
10010df4:	00000306 	br	10010e04 <altera_avalon_jtag_uart_ioctl+0xe0>
    {
      int timeout = *((int *)arg);
      sp->timeout = (timeout >= 2 && timeout < INT_MAX) ? timeout : INT_MAX - 1;
      rc = 0;
    }
    break;
10010df8:	0001883a 	nop
10010dfc:	00000106 	br	10010e04 <altera_avalon_jtag_uart_ioctl+0xe0>
    if (sp->timeout != INT_MAX)
    {
      *((int *)arg) = (sp->host_inactive < sp->timeout) ? 1 : 0;
      rc = 0;
    }
    break;
10010e00:	0001883a 	nop

  default:
    break;
  }

  return rc;
10010e04:	e0bffb17 	ldw	r2,-20(fp)
}
10010e08:	e037883a 	mov	sp,fp
10010e0c:	df000017 	ldw	fp,0(sp)
10010e10:	dec00104 	addi	sp,sp,4
10010e14:	f800283a 	ret

10010e18 <altera_avalon_jtag_uart_read>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_read(altera_avalon_jtag_uart_state* sp, 
  char * buffer, int space, int flags)
{
10010e18:	defff304 	addi	sp,sp,-52
10010e1c:	dfc00c15 	stw	ra,48(sp)
10010e20:	df000b15 	stw	fp,44(sp)
10010e24:	df000b04 	addi	fp,sp,44
10010e28:	e13ffc15 	stw	r4,-16(fp)
10010e2c:	e17ffd15 	stw	r5,-12(fp)
10010e30:	e1bffe15 	stw	r6,-8(fp)
10010e34:	e1ffff15 	stw	r7,-4(fp)
  char * ptr = buffer;
10010e38:	e0bffd17 	ldw	r2,-12(fp)
10010e3c:	e0bff515 	stw	r2,-44(fp)
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
10010e40:	00004706 	br	10010f60 <altera_avalon_jtag_uart_read+0x148>
    unsigned int in, out;

    /* Read as much data as possible */
    do
    {
      in  = sp->rx_in;
10010e44:	e0bffc17 	ldw	r2,-16(fp)
10010e48:	10800a17 	ldw	r2,40(r2)
10010e4c:	e0bff715 	stw	r2,-36(fp)
      out = sp->rx_out;
10010e50:	e0bffc17 	ldw	r2,-16(fp)
10010e54:	10800b17 	ldw	r2,44(r2)
10010e58:	e0bff815 	stw	r2,-32(fp)

      if (in >= out)
10010e5c:	e0fff717 	ldw	r3,-36(fp)
10010e60:	e0bff817 	ldw	r2,-32(fp)
10010e64:	18800536 	bltu	r3,r2,10010e7c <altera_avalon_jtag_uart_read+0x64>
        n = in - out;
10010e68:	e0fff717 	ldw	r3,-36(fp)
10010e6c:	e0bff817 	ldw	r2,-32(fp)
10010e70:	1885c83a 	sub	r2,r3,r2
10010e74:	e0bff615 	stw	r2,-40(fp)
10010e78:	00000406 	br	10010e8c <altera_avalon_jtag_uart_read+0x74>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;
10010e7c:	00c20004 	movi	r3,2048
10010e80:	e0bff817 	ldw	r2,-32(fp)
10010e84:	1885c83a 	sub	r2,r3,r2
10010e88:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
10010e8c:	e0bff617 	ldw	r2,-40(fp)
10010e90:	10001e26 	beq	r2,zero,10010f0c <altera_avalon_jtag_uart_read+0xf4>
        break; /* No more data available */

      if (n > space)
10010e94:	e0fffe17 	ldw	r3,-8(fp)
10010e98:	e0bff617 	ldw	r2,-40(fp)
10010e9c:	1880022e 	bgeu	r3,r2,10010ea8 <altera_avalon_jtag_uart_read+0x90>
        n = space;
10010ea0:	e0bffe17 	ldw	r2,-8(fp)
10010ea4:	e0bff615 	stw	r2,-40(fp)

      memcpy(ptr, sp->rx_buf + out, n);
10010ea8:	e0bff817 	ldw	r2,-32(fp)
10010eac:	10800e04 	addi	r2,r2,56
10010eb0:	e0fffc17 	ldw	r3,-16(fp)
10010eb4:	1885883a 	add	r2,r3,r2
10010eb8:	e13ff517 	ldw	r4,-44(fp)
10010ebc:	100b883a 	mov	r5,r2
10010ec0:	e1bff617 	ldw	r6,-40(fp)
10010ec4:	0007e500 	call	10007e50 <memcpy>
      ptr   += n;
10010ec8:	e0fff517 	ldw	r3,-44(fp)
10010ecc:	e0bff617 	ldw	r2,-40(fp)
10010ed0:	1885883a 	add	r2,r3,r2
10010ed4:	e0bff515 	stw	r2,-44(fp)
      space -= n;
10010ed8:	e0fffe17 	ldw	r3,-8(fp)
10010edc:	e0bff617 	ldw	r2,-40(fp)
10010ee0:	1885c83a 	sub	r2,r3,r2
10010ee4:	e0bffe15 	stw	r2,-8(fp)

      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10010ee8:	e0fff817 	ldw	r3,-32(fp)
10010eec:	e0bff617 	ldw	r2,-40(fp)
10010ef0:	1885883a 	add	r2,r3,r2
10010ef4:	10c1ffcc 	andi	r3,r2,2047
10010ef8:	e0bffc17 	ldw	r2,-16(fp)
10010efc:	10c00b15 	stw	r3,44(r2)
    }
    while (space > 0);
10010f00:	e0bffe17 	ldw	r2,-8(fp)
10010f04:	00bfcf16 	blt	zero,r2,10010e44 <__alt_data_end+0xf8010e44>
10010f08:	00000106 	br	10010f10 <altera_avalon_jtag_uart_read+0xf8>
        n = in - out;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - out;

      if (n == 0)
        break; /* No more data available */
10010f0c:	0001883a 	nop
      sp->rx_out = (out + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
10010f10:	e0fff517 	ldw	r3,-44(fp)
10010f14:	e0bffd17 	ldw	r2,-12(fp)
10010f18:	1880141e 	bne	r3,r2,10010f6c <altera_avalon_jtag_uart_read+0x154>
      break;

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
10010f1c:	e0bfff17 	ldw	r2,-4(fp)
10010f20:	1090000c 	andi	r2,r2,16384
10010f24:	1000131e 	bne	r2,zero,10010f74 <altera_avalon_jtag_uart_read+0x15c>
      while (in == sp->rx_in && sp->host_inactive < sp->timeout)
        ;
    }
#else
    /* No OS: Always spin */
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
10010f28:	0001883a 	nop
10010f2c:	e0bffc17 	ldw	r2,-16(fp)
10010f30:	10c00a17 	ldw	r3,40(r2)
10010f34:	e0bff717 	ldw	r2,-36(fp)
10010f38:	1880051e 	bne	r3,r2,10010f50 <altera_avalon_jtag_uart_read+0x138>
10010f3c:	e0bffc17 	ldw	r2,-16(fp)
10010f40:	10c00917 	ldw	r3,36(r2)
10010f44:	e0bffc17 	ldw	r2,-16(fp)
10010f48:	10800117 	ldw	r2,4(r2)
10010f4c:	18bff736 	bltu	r3,r2,10010f2c <__alt_data_end+0xf8010f2c>
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
10010f50:	e0bffc17 	ldw	r2,-16(fp)
10010f54:	10c00a17 	ldw	r3,40(r2)
10010f58:	e0bff717 	ldw	r2,-36(fp)
10010f5c:	18800726 	beq	r3,r2,10010f7c <altera_avalon_jtag_uart_read+0x164>
   * When running in a multi threaded environment, obtain the "read_lock"
   * semaphore. This ensures that reading from the device is thread-safe.
   */
  ALT_SEM_PEND (sp->read_lock, 0);

  while (space > 0)
10010f60:	e0bffe17 	ldw	r2,-8(fp)
10010f64:	00bfb716 	blt	zero,r2,10010e44 <__alt_data_end+0xf8010e44>
10010f68:	00000506 	br	10010f80 <altera_avalon_jtag_uart_read+0x168>
    }
    while (space > 0);

    /* If we read any data then return it */
    if (ptr != buffer)
      break;
10010f6c:	0001883a 	nop
10010f70:	00000306 	br	10010f80 <altera_avalon_jtag_uart_read+0x168>

    /* If in non-blocking mode then return error */
    if (flags & O_NONBLOCK)
      break;
10010f74:	0001883a 	nop
10010f78:	00000106 	br	10010f80 <altera_avalon_jtag_uart_read+0x168>
    while (in == sp->rx_in && sp->host_inactive < sp->timeout)
      ;
#endif /* __ucosii__ */

    if (in == sp->rx_in)
      break;
10010f7c:	0001883a 	nop
   * semaphore so that other threads can access the buffer.
   */

  ALT_SEM_POST (sp->read_lock);

  if (ptr != buffer)
10010f80:	e0fff517 	ldw	r3,-44(fp)
10010f84:	e0bffd17 	ldw	r2,-12(fp)
10010f88:	18801726 	beq	r3,r2,10010fe8 <altera_avalon_jtag_uart_read+0x1d0>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10010f8c:	0005303a 	rdctl	r2,status
10010f90:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10010f94:	e0fffa17 	ldw	r3,-24(fp)
10010f98:	00bfff84 	movi	r2,-2
10010f9c:	1884703a 	and	r2,r3,r2
10010fa0:	1001703a 	wrctl	status,r2
  
  return context;
10010fa4:	e0bffa17 	ldw	r2,-24(fp)
  {
    /* If we read any data then there is space in the buffer so enable interrupts */
    context = alt_irq_disable_all();
10010fa8:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_RE_MSK;
10010fac:	e0bffc17 	ldw	r2,-16(fp)
10010fb0:	10800817 	ldw	r2,32(r2)
10010fb4:	10c00054 	ori	r3,r2,1
10010fb8:	e0bffc17 	ldw	r2,-16(fp)
10010fbc:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10010fc0:	e0bffc17 	ldw	r2,-16(fp)
10010fc4:	10800017 	ldw	r2,0(r2)
10010fc8:	10800104 	addi	r2,r2,4
10010fcc:	e0fffc17 	ldw	r3,-16(fp)
10010fd0:	18c00817 	ldw	r3,32(r3)
10010fd4:	10c00035 	stwio	r3,0(r2)
10010fd8:	e0bff917 	ldw	r2,-28(fp)
10010fdc:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10010fe0:	e0bffb17 	ldw	r2,-20(fp)
10010fe4:	1001703a 	wrctl	status,r2
    alt_irq_enable_all(context);
  }

  if (ptr != buffer)
10010fe8:	e0fff517 	ldw	r3,-44(fp)
10010fec:	e0bffd17 	ldw	r2,-12(fp)
10010ff0:	18800426 	beq	r3,r2,10011004 <altera_avalon_jtag_uart_read+0x1ec>
    return ptr - buffer;
10010ff4:	e0fff517 	ldw	r3,-44(fp)
10010ff8:	e0bffd17 	ldw	r2,-12(fp)
10010ffc:	1885c83a 	sub	r2,r3,r2
10011000:	00000606 	br	1001101c <altera_avalon_jtag_uart_read+0x204>
  else if (flags & O_NONBLOCK)
10011004:	e0bfff17 	ldw	r2,-4(fp)
10011008:	1090000c 	andi	r2,r2,16384
1001100c:	10000226 	beq	r2,zero,10011018 <altera_avalon_jtag_uart_read+0x200>
    return -EWOULDBLOCK;
10011010:	00bffd44 	movi	r2,-11
10011014:	00000106 	br	1001101c <altera_avalon_jtag_uart_read+0x204>
  else
    return -EIO;
10011018:	00bffec4 	movi	r2,-5
}
1001101c:	e037883a 	mov	sp,fp
10011020:	dfc00117 	ldw	ra,4(sp)
10011024:	df000017 	ldw	fp,0(sp)
10011028:	dec00204 	addi	sp,sp,8
1001102c:	f800283a 	ret

10011030 <altera_avalon_jtag_uart_write>:
/* ----------------------------------------------------------- */

int 
altera_avalon_jtag_uart_write(altera_avalon_jtag_uart_state* sp, 
  const char * ptr, int count, int flags)
{
10011030:	defff304 	addi	sp,sp,-52
10011034:	dfc00c15 	stw	ra,48(sp)
10011038:	df000b15 	stw	fp,44(sp)
1001103c:	df000b04 	addi	fp,sp,44
10011040:	e13ffc15 	stw	r4,-16(fp)
10011044:	e17ffd15 	stw	r5,-12(fp)
10011048:	e1bffe15 	stw	r6,-8(fp)
1001104c:	e1ffff15 	stw	r7,-4(fp)
  /* Remove warning at optimisation level 03 by seting out to 0 */
  unsigned int in, out=0;
10011050:	e03ff515 	stw	zero,-44(fp)
  unsigned int n;
  alt_irq_context context;

  const char * start = ptr;
10011054:	e0bffd17 	ldw	r2,-12(fp)
10011058:	e0bff715 	stw	r2,-36(fp)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1001105c:	00003706 	br	1001113c <altera_avalon_jtag_uart_write+0x10c>
    {
      /* We need a stable value of the out pointer to calculate the space available */
      in  = sp->tx_in;
10011060:	e0bffc17 	ldw	r2,-16(fp)
10011064:	10800c17 	ldw	r2,48(r2)
10011068:	e0bff815 	stw	r2,-32(fp)
      out = sp->tx_out;
1001106c:	e0bffc17 	ldw	r2,-16(fp)
10011070:	10800d17 	ldw	r2,52(r2)
10011074:	e0bff515 	stw	r2,-44(fp)

      if (in < out)
10011078:	e0fff817 	ldw	r3,-32(fp)
1001107c:	e0bff517 	ldw	r2,-44(fp)
10011080:	1880062e 	bgeu	r3,r2,1001109c <altera_avalon_jtag_uart_write+0x6c>
        n = out - 1 - in;
10011084:	e0fff517 	ldw	r3,-44(fp)
10011088:	e0bff817 	ldw	r2,-32(fp)
1001108c:	1885c83a 	sub	r2,r3,r2
10011090:	10bfffc4 	addi	r2,r2,-1
10011094:	e0bff615 	stw	r2,-40(fp)
10011098:	00000b06 	br	100110c8 <altera_avalon_jtag_uart_write+0x98>
      else if (out > 0)
1001109c:	e0bff517 	ldw	r2,-44(fp)
100110a0:	10000526 	beq	r2,zero,100110b8 <altera_avalon_jtag_uart_write+0x88>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
100110a4:	00c20004 	movi	r3,2048
100110a8:	e0bff817 	ldw	r2,-32(fp)
100110ac:	1885c83a 	sub	r2,r3,r2
100110b0:	e0bff615 	stw	r2,-40(fp)
100110b4:	00000406 	br	100110c8 <altera_avalon_jtag_uart_write+0x98>
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;
100110b8:	00c1ffc4 	movi	r3,2047
100110bc:	e0bff817 	ldw	r2,-32(fp)
100110c0:	1885c83a 	sub	r2,r3,r2
100110c4:	e0bff615 	stw	r2,-40(fp)

      if (n == 0)
100110c8:	e0bff617 	ldw	r2,-40(fp)
100110cc:	10001e26 	beq	r2,zero,10011148 <altera_avalon_jtag_uart_write+0x118>
        break;

      if (n > count)
100110d0:	e0fffe17 	ldw	r3,-8(fp)
100110d4:	e0bff617 	ldw	r2,-40(fp)
100110d8:	1880022e 	bgeu	r3,r2,100110e4 <altera_avalon_jtag_uart_write+0xb4>
        n = count;
100110dc:	e0bffe17 	ldw	r2,-8(fp)
100110e0:	e0bff615 	stw	r2,-40(fp)

      memcpy(sp->tx_buf + in, ptr, n);
100110e4:	e0bff817 	ldw	r2,-32(fp)
100110e8:	10820e04 	addi	r2,r2,2104
100110ec:	e0fffc17 	ldw	r3,-16(fp)
100110f0:	1885883a 	add	r2,r3,r2
100110f4:	1009883a 	mov	r4,r2
100110f8:	e17ffd17 	ldw	r5,-12(fp)
100110fc:	e1bff617 	ldw	r6,-40(fp)
10011100:	0007e500 	call	10007e50 <memcpy>
      ptr   += n;
10011104:	e0fffd17 	ldw	r3,-12(fp)
10011108:	e0bff617 	ldw	r2,-40(fp)
1001110c:	1885883a 	add	r2,r3,r2
10011110:	e0bffd15 	stw	r2,-12(fp)
      count -= n;
10011114:	e0fffe17 	ldw	r3,-8(fp)
10011118:	e0bff617 	ldw	r2,-40(fp)
1001111c:	1885c83a 	sub	r2,r3,r2
10011120:	e0bffe15 	stw	r2,-8(fp)

      sp->tx_in = (in + n) % ALTERA_AVALON_JTAG_UART_BUF_LEN;
10011124:	e0fff817 	ldw	r3,-32(fp)
10011128:	e0bff617 	ldw	r2,-40(fp)
1001112c:	1885883a 	add	r2,r3,r2
10011130:	10c1ffcc 	andi	r3,r2,2047
10011134:	e0bffc17 	ldw	r2,-16(fp)
10011138:	10c00c15 	stw	r3,48(r2)
  ALT_SEM_PEND (sp->write_lock, 0);

  do
  {
    /* Copy as much as we can into the transmit buffer */
    while (count > 0)
1001113c:	e0bffe17 	ldw	r2,-8(fp)
10011140:	00bfc716 	blt	zero,r2,10011060 <__alt_data_end+0xf8011060>
10011144:	00000106 	br	1001114c <altera_avalon_jtag_uart_write+0x11c>
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - in;
      else
        n = ALTERA_AVALON_JTAG_UART_BUF_LEN - 1 - in;

      if (n == 0)
        break;
10011148:	0001883a 	nop
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
1001114c:	0005303a 	rdctl	r2,status
10011150:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10011154:	e0fffa17 	ldw	r3,-24(fp)
10011158:	00bfff84 	movi	r2,-2
1001115c:	1884703a 	and	r2,r3,r2
10011160:	1001703a 	wrctl	status,r2
  
  return context;
10011164:	e0bffa17 	ldw	r2,-24(fp)
     * to enable interrupts if there is no space left in the FIFO
     *
     * For now kick the interrupt routine every time to make it transmit 
     * the data 
     */
    context = alt_irq_disable_all();
10011168:	e0bff915 	stw	r2,-28(fp)
    sp->irq_enable |= ALTERA_AVALON_JTAG_UART_CONTROL_WE_MSK;
1001116c:	e0bffc17 	ldw	r2,-16(fp)
10011170:	10800817 	ldw	r2,32(r2)
10011174:	10c00094 	ori	r3,r2,2
10011178:	e0bffc17 	ldw	r2,-16(fp)
1001117c:	10c00815 	stw	r3,32(r2)
    IOWR_ALTERA_AVALON_JTAG_UART_CONTROL(sp->base, sp->irq_enable);
10011180:	e0bffc17 	ldw	r2,-16(fp)
10011184:	10800017 	ldw	r2,0(r2)
10011188:	10800104 	addi	r2,r2,4
1001118c:	e0fffc17 	ldw	r3,-16(fp)
10011190:	18c00817 	ldw	r3,32(r3)
10011194:	10c00035 	stwio	r3,0(r2)
10011198:	e0bff917 	ldw	r2,-28(fp)
1001119c:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
100111a0:	e0bffb17 	ldw	r2,-20(fp)
100111a4:	1001703a 	wrctl	status,r2
    /* 
     * If there is any data left then either return now or block until 
     * some has been sent 
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
100111a8:	e0bffe17 	ldw	r2,-8(fp)
100111ac:	0080100e 	bge	zero,r2,100111f0 <altera_avalon_jtag_uart_write+0x1c0>
    {
      if (flags & O_NONBLOCK)
100111b0:	e0bfff17 	ldw	r2,-4(fp)
100111b4:	1090000c 	andi	r2,r2,16384
100111b8:	1000101e 	bne	r2,zero,100111fc <altera_avalon_jtag_uart_write+0x1cc>
      /*
       * No OS present: Always wait for data to be removed from buffer.  Once
       * the interrupt routine has removed some data then we will be able to
       * insert some more.
       */
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
100111bc:	0001883a 	nop
100111c0:	e0bffc17 	ldw	r2,-16(fp)
100111c4:	10c00d17 	ldw	r3,52(r2)
100111c8:	e0bff517 	ldw	r2,-44(fp)
100111cc:	1880051e 	bne	r3,r2,100111e4 <altera_avalon_jtag_uart_write+0x1b4>
100111d0:	e0bffc17 	ldw	r2,-16(fp)
100111d4:	10c00917 	ldw	r3,36(r2)
100111d8:	e0bffc17 	ldw	r2,-16(fp)
100111dc:	10800117 	ldw	r2,4(r2)
100111e0:	18bff736 	bltu	r3,r2,100111c0 <__alt_data_end+0xf80111c0>
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
100111e4:	e0bffc17 	ldw	r2,-16(fp)
100111e8:	10800917 	ldw	r2,36(r2)
100111ec:	1000051e 	bne	r2,zero,10011204 <altera_avalon_jtag_uart_write+0x1d4>
         break;
    }
  }
  while (count > 0);
100111f0:	e0bffe17 	ldw	r2,-8(fp)
100111f4:	00bfd116 	blt	zero,r2,1001113c <__alt_data_end+0xf801113c>
100111f8:	00000306 	br	10011208 <altera_avalon_jtag_uart_write+0x1d8>
     */
    /* consider: test whether there is anything there while doing this and delay for at most 2s. */
    if (count > 0)
    {
      if (flags & O_NONBLOCK)
        break;
100111fc:	0001883a 	nop
10011200:	00000106 	br	10011208 <altera_avalon_jtag_uart_write+0x1d8>
      while (out == sp->tx_out && sp->host_inactive < sp->timeout)
        ;
#endif /* __ucosii__ */

      if  (sp->host_inactive)
         break;
10011204:	0001883a 	nop
   * Now that access to the circular buffer is complete, release the write
   * semaphore so that other threads can access the buffer.
   */
  ALT_SEM_POST (sp->write_lock);

  if (ptr != start)
10011208:	e0fffd17 	ldw	r3,-12(fp)
1001120c:	e0bff717 	ldw	r2,-36(fp)
10011210:	18800426 	beq	r3,r2,10011224 <altera_avalon_jtag_uart_write+0x1f4>
    return ptr - start;
10011214:	e0fffd17 	ldw	r3,-12(fp)
10011218:	e0bff717 	ldw	r2,-36(fp)
1001121c:	1885c83a 	sub	r2,r3,r2
10011220:	00000606 	br	1001123c <altera_avalon_jtag_uart_write+0x20c>
  else if (flags & O_NONBLOCK)
10011224:	e0bfff17 	ldw	r2,-4(fp)
10011228:	1090000c 	andi	r2,r2,16384
1001122c:	10000226 	beq	r2,zero,10011238 <altera_avalon_jtag_uart_write+0x208>
    return -EWOULDBLOCK;
10011230:	00bffd44 	movi	r2,-11
10011234:	00000106 	br	1001123c <altera_avalon_jtag_uart_write+0x20c>
    sp->tx_out = sp->tx_in = 0;
    return ptr - start + count;
  }
#endif
  else
    return -EIO; /* Host not connected */
10011238:	00bffec4 	movi	r2,-5
}
1001123c:	e037883a 	mov	sp,fp
10011240:	dfc00117 	ldw	ra,4(sp)
10011244:	df000017 	ldw	fp,0(sp)
10011248:	dec00204 	addi	sp,sp,8
1001124c:	f800283a 	ret

10011250 <alt_alarm_start>:
 */ 

int alt_alarm_start (alt_alarm* alarm, alt_u32 nticks,
                     alt_u32 (*callback) (void* context),
                     void* context)
{
10011250:	defff504 	addi	sp,sp,-44
10011254:	df000a15 	stw	fp,40(sp)
10011258:	df000a04 	addi	fp,sp,40
1001125c:	e13ffc15 	stw	r4,-16(fp)
10011260:	e17ffd15 	stw	r5,-12(fp)
10011264:	e1bffe15 	stw	r6,-8(fp)
10011268:	e1ffff15 	stw	r7,-4(fp)
  alt_irq_context irq_context;
  alt_u32 current_nticks = 0;
1001126c:	e03ff615 	stw	zero,-40(fp)
10011270:	00840074 	movhi	r2,4097
10011274:	10988204 	addi	r2,r2,25096
10011278:	10800017 	ldw	r2,0(r2)
  
  if (alt_ticks_per_second ())
1001127c:	10003f26 	beq	r2,zero,1001137c <alt_alarm_start+0x12c>
  {
    if (alarm)
10011280:	e0bffc17 	ldw	r2,-16(fp)
10011284:	10003b26 	beq	r2,zero,10011374 <alt_alarm_start+0x124>
    {
      alarm->callback = callback;
10011288:	e0bffc17 	ldw	r2,-16(fp)
1001128c:	e0fffe17 	ldw	r3,-8(fp)
10011290:	10c00315 	stw	r3,12(r2)
      alarm->context  = context;
10011294:	e0bffc17 	ldw	r2,-16(fp)
10011298:	e0ffff17 	ldw	r3,-4(fp)
1001129c:	10c00515 	stw	r3,20(r2)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
100112a0:	0005303a 	rdctl	r2,status
100112a4:	e0bff815 	stw	r2,-32(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100112a8:	e0fff817 	ldw	r3,-32(fp)
100112ac:	00bfff84 	movi	r2,-2
100112b0:	1884703a 	and	r2,r3,r2
100112b4:	1001703a 	wrctl	status,r2
  
  return context;
100112b8:	e0bff817 	ldw	r2,-32(fp)
 
      irq_context = alt_irq_disable_all ();
100112bc:	e0bff715 	stw	r2,-36(fp)
 * alt_nticks() returns the elapsed number of system clock ticks since reset.
 */

static ALT_INLINE alt_u32 ALT_ALWAYS_INLINE alt_nticks (void)
{
  return _alt_nticks;
100112c0:	00840074 	movhi	r2,4097
100112c4:	10988304 	addi	r2,r2,25100
100112c8:	10800017 	ldw	r2,0(r2)
      
      current_nticks = alt_nticks();
100112cc:	e0bff615 	stw	r2,-40(fp)
      
      alarm->time = nticks + current_nticks + 1; 
100112d0:	e0fffd17 	ldw	r3,-12(fp)
100112d4:	e0bff617 	ldw	r2,-40(fp)
100112d8:	1885883a 	add	r2,r3,r2
100112dc:	10c00044 	addi	r3,r2,1
100112e0:	e0bffc17 	ldw	r2,-16(fp)
100112e4:	10c00215 	stw	r3,8(r2)
      /* 
       * If the desired alarm time causes a roll-over, set the rollover
       * flag. This will prevent the subsequent tick event from causing
       * an alarm too early.
       */
      if(alarm->time < current_nticks)
100112e8:	e0bffc17 	ldw	r2,-16(fp)
100112ec:	10c00217 	ldw	r3,8(r2)
100112f0:	e0bff617 	ldw	r2,-40(fp)
100112f4:	1880042e 	bgeu	r3,r2,10011308 <alt_alarm_start+0xb8>
      {
        alarm->rollover = 1;
100112f8:	e0bffc17 	ldw	r2,-16(fp)
100112fc:	00c00044 	movi	r3,1
10011300:	10c00405 	stb	r3,16(r2)
10011304:	00000206 	br	10011310 <alt_alarm_start+0xc0>
      }
      else
      {
        alarm->rollover = 0;
10011308:	e0bffc17 	ldw	r2,-16(fp)
1001130c:	10000405 	stb	zero,16(r2)
      }
    
      alt_llist_insert (&alt_alarm_list, &alarm->llist);
10011310:	e0bffc17 	ldw	r2,-16(fp)
10011314:	00c40074 	movhi	r3,4097
10011318:	18d18904 	addi	r3,r3,17956
1001131c:	e0fff915 	stw	r3,-28(fp)
10011320:	e0bffa15 	stw	r2,-24(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
10011324:	e0bffa17 	ldw	r2,-24(fp)
10011328:	e0fff917 	ldw	r3,-28(fp)
1001132c:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10011330:	e0bff917 	ldw	r2,-28(fp)
10011334:	10c00017 	ldw	r3,0(r2)
10011338:	e0bffa17 	ldw	r2,-24(fp)
1001133c:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10011340:	e0bff917 	ldw	r2,-28(fp)
10011344:	10800017 	ldw	r2,0(r2)
10011348:	e0fffa17 	ldw	r3,-24(fp)
1001134c:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10011350:	e0bff917 	ldw	r2,-28(fp)
10011354:	e0fffa17 	ldw	r3,-24(fp)
10011358:	10c00015 	stw	r3,0(r2)
1001135c:	e0bff717 	ldw	r2,-36(fp)
10011360:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10011364:	e0bffb17 	ldw	r2,-20(fp)
10011368:	1001703a 	wrctl	status,r2
      alt_irq_enable_all (irq_context);

      return 0;
1001136c:	0005883a 	mov	r2,zero
10011370:	00000306 	br	10011380 <alt_alarm_start+0x130>
    }
    else
    {
      return -EINVAL;
10011374:	00bffa84 	movi	r2,-22
10011378:	00000106 	br	10011380 <alt_alarm_start+0x130>
    }
  }
  else
  {
    return -ENOTSUP;
1001137c:	00bfde84 	movi	r2,-134
  }
}
10011380:	e037883a 	mov	sp,fp
10011384:	df000017 	ldw	fp,0(sp)
10011388:	dec00104 	addi	sp,sp,4
1001138c:	f800283a 	ret

10011390 <alt_dcache_flush_all>:
/*
 * alt_dcache_flush_all() is called to flush the entire data cache.
 */

void alt_dcache_flush_all (void)
{
10011390:	deffff04 	addi	sp,sp,-4
10011394:	df000015 	stw	fp,0(sp)
10011398:	d839883a 	mov	fp,sp
  for (i = (char*) 0; i < (char*) NIOS2_DCACHE_SIZE; i+= NIOS2_DCACHE_LINE_SIZE)
  { 
    __asm__ volatile ("flushd (%0)" :: "r" (i));
  }
#endif /* NIOS2_DCACHE_SIZE > 0 */
}
1001139c:	e037883a 	mov	sp,fp
100113a0:	df000017 	ldw	fp,0(sp)
100113a4:	dec00104 	addi	sp,sp,4
100113a8:	f800283a 	ret

100113ac <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
100113ac:	defffe04 	addi	sp,sp,-8
100113b0:	dfc00115 	stw	ra,4(sp)
100113b4:	df000015 	stw	fp,0(sp)
100113b8:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100113bc:	00840074 	movhi	r2,4097
100113c0:	10918604 	addi	r2,r2,17944
100113c4:	10800017 	ldw	r2,0(r2)
100113c8:	10000526 	beq	r2,zero,100113e0 <alt_get_errno+0x34>
100113cc:	00840074 	movhi	r2,4097
100113d0:	10918604 	addi	r2,r2,17944
100113d4:	10800017 	ldw	r2,0(r2)
100113d8:	103ee83a 	callr	r2
100113dc:	00000206 	br	100113e8 <alt_get_errno+0x3c>
100113e0:	00840074 	movhi	r2,4097
100113e4:	10987a04 	addi	r2,r2,25064
}
100113e8:	e037883a 	mov	sp,fp
100113ec:	dfc00117 	ldw	ra,4(sp)
100113f0:	df000017 	ldw	fp,0(sp)
100113f4:	dec00204 	addi	sp,sp,8
100113f8:	f800283a 	ret

100113fc <alt_dev_llist_insert>:
/*
 *
 */

int alt_dev_llist_insert (alt_dev_llist* dev, alt_llist* list)
{
100113fc:	defffa04 	addi	sp,sp,-24
10011400:	dfc00515 	stw	ra,20(sp)
10011404:	df000415 	stw	fp,16(sp)
10011408:	df000404 	addi	fp,sp,16
1001140c:	e13ffe15 	stw	r4,-8(fp)
10011410:	e17fff15 	stw	r5,-4(fp)
  /*
   * check that the device exists, and that it has a valid name.
   */

  if (!dev || !dev->name)
10011414:	e0bffe17 	ldw	r2,-8(fp)
10011418:	10000326 	beq	r2,zero,10011428 <alt_dev_llist_insert+0x2c>
1001141c:	e0bffe17 	ldw	r2,-8(fp)
10011420:	10800217 	ldw	r2,8(r2)
10011424:	1000051e 	bne	r2,zero,1001143c <alt_dev_llist_insert+0x40>
  {
    ALT_ERRNO = EINVAL;
10011428:	00113ac0 	call	100113ac <alt_get_errno>
1001142c:	00c00584 	movi	r3,22
10011430:	10c00015 	stw	r3,0(r2)
    return -EINVAL;
10011434:	00bffa84 	movi	r2,-22
10011438:	00001306 	br	10011488 <alt_dev_llist_insert+0x8c>
  
  /*
   * register the device.
   */
  
  alt_llist_insert(list, &dev->llist);
1001143c:	e0bffe17 	ldw	r2,-8(fp)
10011440:	e0ffff17 	ldw	r3,-4(fp)
10011444:	e0fffc15 	stw	r3,-16(fp)
10011448:	e0bffd15 	stw	r2,-12(fp)
 */

static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_insert(alt_llist* list, 
                alt_llist* entry)
{
  entry->previous = list;
1001144c:	e0bffd17 	ldw	r2,-12(fp)
10011450:	e0fffc17 	ldw	r3,-16(fp)
10011454:	10c00115 	stw	r3,4(r2)
  entry->next     = list->next;
10011458:	e0bffc17 	ldw	r2,-16(fp)
1001145c:	10c00017 	ldw	r3,0(r2)
10011460:	e0bffd17 	ldw	r2,-12(fp)
10011464:	10c00015 	stw	r3,0(r2)

  list->next->previous = entry;
10011468:	e0bffc17 	ldw	r2,-16(fp)
1001146c:	10800017 	ldw	r2,0(r2)
10011470:	e0fffd17 	ldw	r3,-12(fp)
10011474:	10c00115 	stw	r3,4(r2)
  list->next           = entry;
10011478:	e0bffc17 	ldw	r2,-16(fp)
1001147c:	e0fffd17 	ldw	r3,-12(fp)
10011480:	10c00015 	stw	r3,0(r2)

  return 0;  
10011484:	0005883a 	mov	r2,zero
}
10011488:	e037883a 	mov	sp,fp
1001148c:	dfc00117 	ldw	ra,4(sp)
10011490:	df000017 	ldw	fp,0(sp)
10011494:	dec00204 	addi	sp,sp,8
10011498:	f800283a 	ret

1001149c <_do_ctors>:
/*
 * Run the C++ static constructors.
 */

void _do_ctors(void)
{
1001149c:	defffd04 	addi	sp,sp,-12
100114a0:	dfc00215 	stw	ra,8(sp)
100114a4:	df000115 	stw	fp,4(sp)
100114a8:	df000104 	addi	fp,sp,4
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
100114ac:	00840074 	movhi	r2,4097
100114b0:	10890b04 	addi	r2,r2,9260
100114b4:	e0bfff15 	stw	r2,-4(fp)
100114b8:	00000606 	br	100114d4 <_do_ctors+0x38>
        (*ctor) (); 
100114bc:	e0bfff17 	ldw	r2,-4(fp)
100114c0:	10800017 	ldw	r2,0(r2)
100114c4:	103ee83a 	callr	r2

void _do_ctors(void)
{
  constructor* ctor;

  for (ctor = &__CTOR_END__[-1]; ctor >= __CTOR_LIST__; ctor--)
100114c8:	e0bfff17 	ldw	r2,-4(fp)
100114cc:	10bfff04 	addi	r2,r2,-4
100114d0:	e0bfff15 	stw	r2,-4(fp)
100114d4:	e0ffff17 	ldw	r3,-4(fp)
100114d8:	00840074 	movhi	r2,4097
100114dc:	10890c04 	addi	r2,r2,9264
100114e0:	18bff62e 	bgeu	r3,r2,100114bc <__alt_data_end+0xf80114bc>
        (*ctor) (); 
}
100114e4:	e037883a 	mov	sp,fp
100114e8:	dfc00117 	ldw	ra,4(sp)
100114ec:	df000017 	ldw	fp,0(sp)
100114f0:	dec00204 	addi	sp,sp,8
100114f4:	f800283a 	ret

100114f8 <_do_dtors>:
/*
 * Run the C++ static destructors.
 */

void _do_dtors(void)
{
100114f8:	defffd04 	addi	sp,sp,-12
100114fc:	dfc00215 	stw	ra,8(sp)
10011500:	df000115 	stw	fp,4(sp)
10011504:	df000104 	addi	fp,sp,4
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
10011508:	00840074 	movhi	r2,4097
1001150c:	10890b04 	addi	r2,r2,9260
10011510:	e0bfff15 	stw	r2,-4(fp)
10011514:	00000606 	br	10011530 <_do_dtors+0x38>
        (*dtor) (); 
10011518:	e0bfff17 	ldw	r2,-4(fp)
1001151c:	10800017 	ldw	r2,0(r2)
10011520:	103ee83a 	callr	r2

void _do_dtors(void)
{
  destructor* dtor;

  for (dtor = &__DTOR_END__[-1]; dtor >= __DTOR_LIST__; dtor--)
10011524:	e0bfff17 	ldw	r2,-4(fp)
10011528:	10bfff04 	addi	r2,r2,-4
1001152c:	e0bfff15 	stw	r2,-4(fp)
10011530:	e0ffff17 	ldw	r3,-4(fp)
10011534:	00840074 	movhi	r2,4097
10011538:	10890c04 	addi	r2,r2,9264
1001153c:	18bff62e 	bgeu	r3,r2,10011518 <__alt_data_end+0xf8011518>
        (*dtor) (); 
}
10011540:	e037883a 	mov	sp,fp
10011544:	dfc00117 	ldw	ra,4(sp)
10011548:	df000017 	ldw	fp,0(sp)
1001154c:	dec00204 	addi	sp,sp,8
10011550:	f800283a 	ret

10011554 <alt_icache_flush_all>:
/*
 * alt_icache_flush_all() is called to flush the entire instruction cache.
 */

void alt_icache_flush_all (void)
{
10011554:	deffff04 	addi	sp,sp,-4
10011558:	df000015 	stw	fp,0(sp)
1001155c:	d839883a 	mov	fp,sp
#if NIOS2_ICACHE_SIZE > 0
  alt_icache_flush (0, NIOS2_ICACHE_SIZE);
#endif
}
10011560:	e037883a 	mov	sp,fp
10011564:	df000017 	ldw	fp,0(sp)
10011568:	dec00104 	addi	sp,sp,4
1001156c:	f800283a 	ret

10011570 <alt_ic_isr_register>:
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10011570:	defff904 	addi	sp,sp,-28
10011574:	dfc00615 	stw	ra,24(sp)
10011578:	df000515 	stw	fp,20(sp)
1001157c:	df000504 	addi	fp,sp,20
10011580:	e13ffc15 	stw	r4,-16(fp)
10011584:	e17ffd15 	stw	r5,-12(fp)
10011588:	e1bffe15 	stw	r6,-8(fp)
1001158c:	e1ffff15 	stw	r7,-4(fp)
    return alt_iic_isr_register(ic_id, irq, isr, isr_context, flags);
10011590:	e0800217 	ldw	r2,8(fp)
10011594:	d8800015 	stw	r2,0(sp)
10011598:	e13ffc17 	ldw	r4,-16(fp)
1001159c:	e17ffd17 	ldw	r5,-12(fp)
100115a0:	e1bffe17 	ldw	r6,-8(fp)
100115a4:	e1ffff17 	ldw	r7,-4(fp)
100115a8:	00117480 	call	10011748 <alt_iic_isr_register>
}  
100115ac:	e037883a 	mov	sp,fp
100115b0:	dfc00117 	ldw	ra,4(sp)
100115b4:	df000017 	ldw	fp,0(sp)
100115b8:	dec00204 	addi	sp,sp,8
100115bc:	f800283a 	ret

100115c0 <alt_ic_irq_enable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_enable (alt_u32 ic_id, alt_u32 irq)
{
100115c0:	defff904 	addi	sp,sp,-28
100115c4:	df000615 	stw	fp,24(sp)
100115c8:	df000604 	addi	fp,sp,24
100115cc:	e13ffe15 	stw	r4,-8(fp)
100115d0:	e17fff15 	stw	r5,-4(fp)
100115d4:	e0bfff17 	ldw	r2,-4(fp)
100115d8:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
100115dc:	0005303a 	rdctl	r2,status
100115e0:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
100115e4:	e0fffb17 	ldw	r3,-20(fp)
100115e8:	00bfff84 	movi	r2,-2
100115ec:	1884703a 	and	r2,r3,r2
100115f0:	1001703a 	wrctl	status,r2
  
  return context;
100115f4:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_enable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
100115f8:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active |= (1 << id);
100115fc:	e0bffa17 	ldw	r2,-24(fp)
10011600:	00c00044 	movi	r3,1
10011604:	1884983a 	sll	r2,r3,r2
10011608:	1007883a 	mov	r3,r2
1001160c:	00840074 	movhi	r2,4097
10011610:	10988104 	addi	r2,r2,25092
10011614:	10800017 	ldw	r2,0(r2)
10011618:	1886b03a 	or	r3,r3,r2
1001161c:	00840074 	movhi	r2,4097
10011620:	10988104 	addi	r2,r2,25092
10011624:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
10011628:	00840074 	movhi	r2,4097
1001162c:	10988104 	addi	r2,r2,25092
10011630:	10800017 	ldw	r2,0(r2)
10011634:	100170fa 	wrctl	ienable,r2
10011638:	e0bffc17 	ldw	r2,-16(fp)
1001163c:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10011640:	e0bffd17 	ldw	r2,-12(fp)
10011644:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
10011648:	0005883a 	mov	r2,zero
    return alt_irq_enable(irq);
}
1001164c:	e037883a 	mov	sp,fp
10011650:	df000017 	ldw	fp,0(sp)
10011654:	dec00104 	addi	sp,sp,4
10011658:	f800283a 	ret

1001165c <alt_ic_irq_disable>:
  * @param ic_id            Ignored.
  * @param irq              IRQ number
  * @return                 0 if successful, else error (-1)
  */
int alt_ic_irq_disable(alt_u32 ic_id, alt_u32 irq)
{
1001165c:	defff904 	addi	sp,sp,-28
10011660:	df000615 	stw	fp,24(sp)
10011664:	df000604 	addi	fp,sp,24
10011668:	e13ffe15 	stw	r4,-8(fp)
1001166c:	e17fff15 	stw	r5,-4(fp)
10011670:	e0bfff17 	ldw	r2,-4(fp)
10011674:	e0bffa15 	stw	r2,-24(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10011678:	0005303a 	rdctl	r2,status
1001167c:	e0bffb15 	stw	r2,-20(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10011680:	e0fffb17 	ldw	r3,-20(fp)
10011684:	00bfff84 	movi	r2,-2
10011688:	1884703a 	and	r2,r3,r2
1001168c:	1001703a 	wrctl	status,r2
  
  return context;
10011690:	e0bffb17 	ldw	r2,-20(fp)
static ALT_INLINE int ALT_ALWAYS_INLINE alt_irq_disable (alt_u32 id)
{
  alt_irq_context  status;
  extern volatile alt_u32 alt_irq_active;

  status = alt_irq_disable_all ();
10011694:	e0bffc15 	stw	r2,-16(fp)

  alt_irq_active &= ~(1 << id);
10011698:	e0bffa17 	ldw	r2,-24(fp)
1001169c:	00c00044 	movi	r3,1
100116a0:	1884983a 	sll	r2,r3,r2
100116a4:	0084303a 	nor	r2,zero,r2
100116a8:	1007883a 	mov	r3,r2
100116ac:	00840074 	movhi	r2,4097
100116b0:	10988104 	addi	r2,r2,25092
100116b4:	10800017 	ldw	r2,0(r2)
100116b8:	1886703a 	and	r3,r3,r2
100116bc:	00840074 	movhi	r2,4097
100116c0:	10988104 	addi	r2,r2,25092
100116c4:	10c00015 	stw	r3,0(r2)
  NIOS2_WRITE_IENABLE (alt_irq_active);
100116c8:	00840074 	movhi	r2,4097
100116cc:	10988104 	addi	r2,r2,25092
100116d0:	10800017 	ldw	r2,0(r2)
100116d4:	100170fa 	wrctl	ienable,r2
100116d8:	e0bffc17 	ldw	r2,-16(fp)
100116dc:	e0bffd15 	stw	r2,-12(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
100116e0:	e0bffd17 	ldw	r2,-12(fp)
100116e4:	1001703a 	wrctl	status,r2

  alt_irq_enable_all(status);

  return 0;
100116e8:	0005883a 	mov	r2,zero
    return alt_irq_disable(irq);
}
100116ec:	e037883a 	mov	sp,fp
100116f0:	df000017 	ldw	fp,0(sp)
100116f4:	dec00104 	addi	sp,sp,4
100116f8:	f800283a 	ret

100116fc <alt_ic_irq_enabled>:
  * @param irq              IRQ number
  * @return                 Zero if corresponding interrupt is disabled and
  *                         non-zero otherwise.
  */
alt_u32 alt_ic_irq_enabled(alt_u32 ic_id, alt_u32 irq)
{
100116fc:	defffc04 	addi	sp,sp,-16
10011700:	df000315 	stw	fp,12(sp)
10011704:	df000304 	addi	fp,sp,12
10011708:	e13ffe15 	stw	r4,-8(fp)
1001170c:	e17fff15 	stw	r5,-4(fp)
    alt_u32 irq_enabled;

    NIOS2_READ_IENABLE(irq_enabled);
10011710:	000530fa 	rdctl	r2,ienable
10011714:	e0bffd15 	stw	r2,-12(fp)

    return (irq_enabled & (1 << irq)) ? 1: 0;
10011718:	e0bfff17 	ldw	r2,-4(fp)
1001171c:	00c00044 	movi	r3,1
10011720:	1884983a 	sll	r2,r3,r2
10011724:	1007883a 	mov	r3,r2
10011728:	e0bffd17 	ldw	r2,-12(fp)
1001172c:	1884703a 	and	r2,r3,r2
10011730:	1004c03a 	cmpne	r2,r2,zero
10011734:	10803fcc 	andi	r2,r2,255
}
10011738:	e037883a 	mov	sp,fp
1001173c:	df000017 	ldw	fp,0(sp)
10011740:	dec00104 	addi	sp,sp,4
10011744:	f800283a 	ret

10011748 <alt_iic_isr_register>:
  * @param flags            
  * @return                 0 if successful, else error (-1)
  */
int alt_iic_isr_register(alt_u32 ic_id, alt_u32 irq, alt_isr_func isr, 
  void *isr_context, void *flags)
{
10011748:	defff504 	addi	sp,sp,-44
1001174c:	dfc00a15 	stw	ra,40(sp)
10011750:	df000915 	stw	fp,36(sp)
10011754:	df000904 	addi	fp,sp,36
10011758:	e13ffc15 	stw	r4,-16(fp)
1001175c:	e17ffd15 	stw	r5,-12(fp)
10011760:	e1bffe15 	stw	r6,-8(fp)
10011764:	e1ffff15 	stw	r7,-4(fp)
  int rc = -EINVAL;  
10011768:	00bffa84 	movi	r2,-22
1001176c:	e0bff715 	stw	r2,-36(fp)
  int id = irq;             /* IRQ interpreted as the interrupt ID. */
10011770:	e0bffd17 	ldw	r2,-12(fp)
10011774:	e0bff815 	stw	r2,-32(fp)
  alt_irq_context status;

  if (id < ALT_NIRQ)
10011778:	e0bff817 	ldw	r2,-32(fp)
1001177c:	10800808 	cmpgei	r2,r2,32
10011780:	1000271e 	bne	r2,zero,10011820 <alt_iic_isr_register+0xd8>
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10011784:	0005303a 	rdctl	r2,status
10011788:	e0bffa15 	stw	r2,-24(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
1001178c:	e0fffa17 	ldw	r3,-24(fp)
10011790:	00bfff84 	movi	r2,-2
10011794:	1884703a 	and	r2,r3,r2
10011798:	1001703a 	wrctl	status,r2
  
  return context;
1001179c:	e0bffa17 	ldw	r2,-24(fp)
     * interrupts are disabled while the handler tables are updated to ensure
     * that an interrupt doesn't occur while the tables are in an inconsistant
     * state.
     */

    status = alt_irq_disable_all();
100117a0:	e0bff915 	stw	r2,-28(fp)

    alt_irq[id].handler = isr;
100117a4:	00c40074 	movhi	r3,4097
100117a8:	18d8ce04 	addi	r3,r3,25400
100117ac:	e0bff817 	ldw	r2,-32(fp)
100117b0:	100490fa 	slli	r2,r2,3
100117b4:	1885883a 	add	r2,r3,r2
100117b8:	e0fffe17 	ldw	r3,-8(fp)
100117bc:	10c00015 	stw	r3,0(r2)
    alt_irq[id].context = isr_context;
100117c0:	00c40074 	movhi	r3,4097
100117c4:	18d8ce04 	addi	r3,r3,25400
100117c8:	e0bff817 	ldw	r2,-32(fp)
100117cc:	100490fa 	slli	r2,r2,3
100117d0:	1885883a 	add	r2,r3,r2
100117d4:	10800104 	addi	r2,r2,4
100117d8:	e0ffff17 	ldw	r3,-4(fp)
100117dc:	10c00015 	stw	r3,0(r2)

    rc = (isr) ? alt_ic_irq_enable(ic_id, id) : alt_ic_irq_disable(ic_id, id);
100117e0:	e0bffe17 	ldw	r2,-8(fp)
100117e4:	10000526 	beq	r2,zero,100117fc <alt_iic_isr_register+0xb4>
100117e8:	e0bff817 	ldw	r2,-32(fp)
100117ec:	e13ffc17 	ldw	r4,-16(fp)
100117f0:	100b883a 	mov	r5,r2
100117f4:	00115c00 	call	100115c0 <alt_ic_irq_enable>
100117f8:	00000406 	br	1001180c <alt_iic_isr_register+0xc4>
100117fc:	e0bff817 	ldw	r2,-32(fp)
10011800:	e13ffc17 	ldw	r4,-16(fp)
10011804:	100b883a 	mov	r5,r2
10011808:	001165c0 	call	1001165c <alt_ic_irq_disable>
1001180c:	e0bff715 	stw	r2,-36(fp)
10011810:	e0bff917 	ldw	r2,-28(fp)
10011814:	e0bffb15 	stw	r2,-20(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10011818:	e0bffb17 	ldw	r2,-20(fp)
1001181c:	1001703a 	wrctl	status,r2

    alt_irq_enable_all(status);
  }

  return rc; 
10011820:	e0bff717 	ldw	r2,-36(fp)
}
10011824:	e037883a 	mov	sp,fp
10011828:	dfc00117 	ldw	ra,4(sp)
1001182c:	df000017 	ldw	fp,0(sp)
10011830:	dec00204 	addi	sp,sp,8
10011834:	f800283a 	ret

10011838 <alt_open_fd>:
 * If the device can not be succesfully opened, then the input file descriptor
 * remains unchanged.
 */

static void alt_open_fd(alt_fd* fd, const char* name, int flags, int mode)
{
10011838:	defff804 	addi	sp,sp,-32
1001183c:	dfc00715 	stw	ra,28(sp)
10011840:	df000615 	stw	fp,24(sp)
10011844:	dc000515 	stw	r16,20(sp)
10011848:	df000504 	addi	fp,sp,20
1001184c:	e13ffc15 	stw	r4,-16(fp)
10011850:	e17ffd15 	stw	r5,-12(fp)
10011854:	e1bffe15 	stw	r6,-8(fp)
10011858:	e1ffff15 	stw	r7,-4(fp)
  int old;

  old = open (name, flags, mode);
1001185c:	e13ffd17 	ldw	r4,-12(fp)
10011860:	e17ffe17 	ldw	r5,-8(fp)
10011864:	e1bfff17 	ldw	r6,-4(fp)
10011868:	0011ad00 	call	10011ad0 <open>
1001186c:	e0bffb15 	stw	r2,-20(fp)

  if (old >= 0)
10011870:	e0bffb17 	ldw	r2,-20(fp)
10011874:	10002216 	blt	r2,zero,10011900 <alt_open_fd+0xc8>
  {
    fd->dev      = alt_fd_list[old].dev;
10011878:	04040074 	movhi	r16,4097
1001187c:	840d0304 	addi	r16,r16,13324
10011880:	e0bffb17 	ldw	r2,-20(fp)
10011884:	1009883a 	mov	r4,r2
10011888:	01400304 	movi	r5,12
1001188c:	000f5540 	call	1000f554 <__mulsi3>
10011890:	8085883a 	add	r2,r16,r2
10011894:	10c00017 	ldw	r3,0(r2)
10011898:	e0bffc17 	ldw	r2,-16(fp)
1001189c:	10c00015 	stw	r3,0(r2)
    fd->priv     = alt_fd_list[old].priv;
100118a0:	04040074 	movhi	r16,4097
100118a4:	840d0304 	addi	r16,r16,13324
100118a8:	e0bffb17 	ldw	r2,-20(fp)
100118ac:	1009883a 	mov	r4,r2
100118b0:	01400304 	movi	r5,12
100118b4:	000f5540 	call	1000f554 <__mulsi3>
100118b8:	8085883a 	add	r2,r16,r2
100118bc:	10800104 	addi	r2,r2,4
100118c0:	10c00017 	ldw	r3,0(r2)
100118c4:	e0bffc17 	ldw	r2,-16(fp)
100118c8:	10c00115 	stw	r3,4(r2)
    fd->fd_flags = alt_fd_list[old].fd_flags;
100118cc:	04040074 	movhi	r16,4097
100118d0:	840d0304 	addi	r16,r16,13324
100118d4:	e0bffb17 	ldw	r2,-20(fp)
100118d8:	1009883a 	mov	r4,r2
100118dc:	01400304 	movi	r5,12
100118e0:	000f5540 	call	1000f554 <__mulsi3>
100118e4:	8085883a 	add	r2,r16,r2
100118e8:	10800204 	addi	r2,r2,8
100118ec:	10c00017 	ldw	r3,0(r2)
100118f0:	e0bffc17 	ldw	r2,-16(fp)
100118f4:	10c00215 	stw	r3,8(r2)

    alt_release_fd (old);
100118f8:	e13ffb17 	ldw	r4,-20(fp)
100118fc:	00104cc0 	call	100104cc <alt_release_fd>
  }
} 
10011900:	e037883a 	mov	sp,fp
10011904:	dfc00217 	ldw	ra,8(sp)
10011908:	df000117 	ldw	fp,4(sp)
1001190c:	dc000017 	ldw	r16,0(sp)
10011910:	dec00304 	addi	sp,sp,12
10011914:	f800283a 	ret

10011918 <alt_io_redirect>:
 */
 
void alt_io_redirect(const char* stdout_dev, 
                     const char* stdin_dev, 
                     const char* stderr_dev)
{
10011918:	defffb04 	addi	sp,sp,-20
1001191c:	dfc00415 	stw	ra,16(sp)
10011920:	df000315 	stw	fp,12(sp)
10011924:	df000304 	addi	fp,sp,12
10011928:	e13ffd15 	stw	r4,-12(fp)
1001192c:	e17ffe15 	stw	r5,-8(fp)
10011930:	e1bfff15 	stw	r6,-4(fp)
  /* Redirect the channels */

  alt_open_fd (&alt_fd_list[STDOUT_FILENO], stdout_dev, O_WRONLY, 0777);
10011934:	01040074 	movhi	r4,4097
10011938:	210d0604 	addi	r4,r4,13336
1001193c:	e17ffd17 	ldw	r5,-12(fp)
10011940:	01800044 	movi	r6,1
10011944:	01c07fc4 	movi	r7,511
10011948:	00118380 	call	10011838 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDIN_FILENO], stdin_dev, O_RDONLY, 0777);
1001194c:	01040074 	movhi	r4,4097
10011950:	210d0304 	addi	r4,r4,13324
10011954:	e17ffe17 	ldw	r5,-8(fp)
10011958:	000d883a 	mov	r6,zero
1001195c:	01c07fc4 	movi	r7,511
10011960:	00118380 	call	10011838 <alt_open_fd>
  alt_open_fd (&alt_fd_list[STDERR_FILENO], stderr_dev, O_WRONLY, 0777);
10011964:	01040074 	movhi	r4,4097
10011968:	210d0904 	addi	r4,r4,13348
1001196c:	e17fff17 	ldw	r5,-4(fp)
10011970:	01800044 	movi	r6,1
10011974:	01c07fc4 	movi	r7,511
10011978:	00118380 	call	10011838 <alt_open_fd>
}  
1001197c:	e037883a 	mov	sp,fp
10011980:	dfc00117 	ldw	ra,4(sp)
10011984:	df000017 	ldw	fp,0(sp)
10011988:	dec00204 	addi	sp,sp,8
1001198c:	f800283a 	ret

10011990 <alt_get_errno>:
#undef errno

extern int errno;

static ALT_INLINE int* alt_get_errno(void)
{
10011990:	defffe04 	addi	sp,sp,-8
10011994:	dfc00115 	stw	ra,4(sp)
10011998:	df000015 	stw	fp,0(sp)
1001199c:	d839883a 	mov	fp,sp
  return ((alt_errno) ? alt_errno() : &errno);
100119a0:	00840074 	movhi	r2,4097
100119a4:	10918604 	addi	r2,r2,17944
100119a8:	10800017 	ldw	r2,0(r2)
100119ac:	10000526 	beq	r2,zero,100119c4 <alt_get_errno+0x34>
100119b0:	00840074 	movhi	r2,4097
100119b4:	10918604 	addi	r2,r2,17944
100119b8:	10800017 	ldw	r2,0(r2)
100119bc:	103ee83a 	callr	r2
100119c0:	00000206 	br	100119cc <alt_get_errno+0x3c>
100119c4:	00840074 	movhi	r2,4097
100119c8:	10987a04 	addi	r2,r2,25064
}
100119cc:	e037883a 	mov	sp,fp
100119d0:	dfc00117 	ldw	ra,4(sp)
100119d4:	df000017 	ldw	fp,0(sp)
100119d8:	dec00204 	addi	sp,sp,8
100119dc:	f800283a 	ret

100119e0 <alt_file_locked>:
 * performed for devices. Filesystems are required to handle the ioctl() call
 * themselves, and report the error from the filesystems open() function. 
 */ 

static int alt_file_locked (alt_fd* fd)
{
100119e0:	defffb04 	addi	sp,sp,-20
100119e4:	dfc00415 	stw	ra,16(sp)
100119e8:	df000315 	stw	fp,12(sp)
100119ec:	dc000215 	stw	r16,8(sp)
100119f0:	df000204 	addi	fp,sp,8
100119f4:	e13fff15 	stw	r4,-4(fp)

  /*
   * Mark the file descriptor as belonging to a device.
   */

  fd->fd_flags |= ALT_FD_DEV;
100119f8:	e0bfff17 	ldw	r2,-4(fp)
100119fc:	10800217 	ldw	r2,8(r2)
10011a00:	10d00034 	orhi	r3,r2,16384
10011a04:	e0bfff17 	ldw	r2,-4(fp)
10011a08:	10c00215 	stw	r3,8(r2)
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
10011a0c:	e03ffe15 	stw	zero,-8(fp)
10011a10:	00002206 	br	10011a9c <alt_file_locked+0xbc>
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
10011a14:	04040074 	movhi	r16,4097
10011a18:	840d0304 	addi	r16,r16,13324
10011a1c:	e0bffe17 	ldw	r2,-8(fp)
10011a20:	1009883a 	mov	r4,r2
10011a24:	01400304 	movi	r5,12
10011a28:	000f5540 	call	1000f554 <__mulsi3>
10011a2c:	8085883a 	add	r2,r16,r2
10011a30:	10c00017 	ldw	r3,0(r2)
10011a34:	e0bfff17 	ldw	r2,-4(fp)
10011a38:	10800017 	ldw	r2,0(r2)
10011a3c:	1880141e 	bne	r3,r2,10011a90 <alt_file_locked+0xb0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10011a40:	04040074 	movhi	r16,4097
10011a44:	840d0304 	addi	r16,r16,13324
10011a48:	e0bffe17 	ldw	r2,-8(fp)
10011a4c:	1009883a 	mov	r4,r2
10011a50:	01400304 	movi	r5,12
10011a54:	000f5540 	call	1000f554 <__mulsi3>
10011a58:	8085883a 	add	r2,r16,r2
10011a5c:	10800204 	addi	r2,r2,8
10011a60:	10800017 	ldw	r2,0(r2)
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
10011a64:	10000a0e 	bge	r2,zero,10011a90 <alt_file_locked+0xb0>
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
        (&alt_fd_list[i] != fd))
10011a68:	e13ffe17 	ldw	r4,-8(fp)
10011a6c:	01400304 	movi	r5,12
10011a70:	000f5540 	call	1000f554 <__mulsi3>
10011a74:	00c40074 	movhi	r3,4097
10011a78:	18cd0304 	addi	r3,r3,13324
10011a7c:	10c7883a 	add	r3,r2,r3
   */

  for (i = 0; i <= alt_max_fd; i++)
  {
    if ((alt_fd_list[i].dev == fd->dev) &&
        (alt_fd_list[i].fd_flags & ALT_FD_EXCL) &&
10011a80:	e0bfff17 	ldw	r2,-4(fp)
10011a84:	18800226 	beq	r3,r2,10011a90 <alt_file_locked+0xb0>
        (&alt_fd_list[i] != fd))
    {
      return -EACCES;
10011a88:	00bffcc4 	movi	r2,-13
10011a8c:	00000a06 	br	10011ab8 <alt_file_locked+0xd8>
  /*
   * Loop through all current file descriptors searching for one that's locked
   * for exclusive access. If a match is found, generate an error.
   */

  for (i = 0; i <= alt_max_fd; i++)
10011a90:	e0bffe17 	ldw	r2,-8(fp)
10011a94:	10800044 	addi	r2,r2,1
10011a98:	e0bffe15 	stw	r2,-8(fp)
10011a9c:	00840074 	movhi	r2,4097
10011aa0:	10918504 	addi	r2,r2,17940
10011aa4:	10800017 	ldw	r2,0(r2)
10011aa8:	1007883a 	mov	r3,r2
10011aac:	e0bffe17 	ldw	r2,-8(fp)
10011ab0:	18bfd82e 	bgeu	r3,r2,10011a14 <__alt_data_end+0xf8011a14>
    }
  }
  
  /* The device is not locked */
 
  return 0;
10011ab4:	0005883a 	mov	r2,zero
}
10011ab8:	e037883a 	mov	sp,fp
10011abc:	dfc00217 	ldw	ra,8(sp)
10011ac0:	df000117 	ldw	fp,4(sp)
10011ac4:	dc000017 	ldw	r16,0(sp)
10011ac8:	dec00304 	addi	sp,sp,12
10011acc:	f800283a 	ret

10011ad0 <open>:
 *
 * ALT_OPEN is mapped onto the open() system call in alt_syscall.h
 */
 
int ALT_OPEN (const char* file, int flags, int mode)
{ 
10011ad0:	defff604 	addi	sp,sp,-40
10011ad4:	dfc00915 	stw	ra,36(sp)
10011ad8:	df000815 	stw	fp,32(sp)
10011adc:	df000804 	addi	fp,sp,32
10011ae0:	e13ffd15 	stw	r4,-12(fp)
10011ae4:	e17ffe15 	stw	r5,-8(fp)
10011ae8:	e1bfff15 	stw	r6,-4(fp)
  alt_dev* dev;
  alt_fd*  fd;
  int index  = -1;
10011aec:	00bfffc4 	movi	r2,-1
10011af0:	e0bff915 	stw	r2,-28(fp)
  int status = -ENODEV;
10011af4:	00bffb44 	movi	r2,-19
10011af8:	e0bffa15 	stw	r2,-24(fp)
  int isafs = 0;
10011afc:	e03ffb15 	stw	zero,-20(fp)
  /* 
   * Check the device list, to see if a device with a matching name is 
   * registered.
   */
  
  if (!(dev = alt_find_dev (file, &alt_dev_list)))
10011b00:	e13ffd17 	ldw	r4,-12(fp)
10011b04:	01440074 	movhi	r5,4097
10011b08:	29518304 	addi	r5,r5,17932
10011b0c:	0011de40 	call	10011de4 <alt_find_dev>
10011b10:	e0bff815 	stw	r2,-32(fp)
10011b14:	e0bff817 	ldw	r2,-32(fp)
10011b18:	1000051e 	bne	r2,zero,10011b30 <open+0x60>
  {
    /* No matching device, so try the filesystem list */

    dev   = alt_find_file (file);
10011b1c:	e13ffd17 	ldw	r4,-12(fp)
10011b20:	0011e740 	call	10011e74 <alt_find_file>
10011b24:	e0bff815 	stw	r2,-32(fp)
    isafs = 1;
10011b28:	00800044 	movi	r2,1
10011b2c:	e0bffb15 	stw	r2,-20(fp)

  /* 
   * If a matching device or filesystem is found, allocate a file descriptor. 
   */

  if (dev)
10011b30:	e0bff817 	ldw	r2,-32(fp)
10011b34:	10002a26 	beq	r2,zero,10011be0 <open+0x110>
  {
    if ((index = alt_get_fd (dev)) < 0)
10011b38:	e13ff817 	ldw	r4,-32(fp)
10011b3c:	0011f880 	call	10011f88 <alt_get_fd>
10011b40:	e0bff915 	stw	r2,-28(fp)
10011b44:	e0bff917 	ldw	r2,-28(fp)
10011b48:	1000030e 	bge	r2,zero,10011b58 <open+0x88>
    {
      status = index;
10011b4c:	e0bff917 	ldw	r2,-28(fp)
10011b50:	e0bffa15 	stw	r2,-24(fp)
10011b54:	00002406 	br	10011be8 <open+0x118>
    }
    else
    {
      fd = &alt_fd_list[index];
10011b58:	e13ff917 	ldw	r4,-28(fp)
10011b5c:	01400304 	movi	r5,12
10011b60:	000f5540 	call	1000f554 <__mulsi3>
10011b64:	00c40074 	movhi	r3,4097
10011b68:	18cd0304 	addi	r3,r3,13324
10011b6c:	10c5883a 	add	r2,r2,r3
10011b70:	e0bffc15 	stw	r2,-16(fp)
      fd->fd_flags = (flags & ~ALT_FD_FLAGS_MASK);
10011b74:	e0fffe17 	ldw	r3,-8(fp)
10011b78:	00900034 	movhi	r2,16384
10011b7c:	10bfffc4 	addi	r2,r2,-1
10011b80:	1886703a 	and	r3,r3,r2
10011b84:	e0bffc17 	ldw	r2,-16(fp)
10011b88:	10c00215 	stw	r3,8(r2)
      
      /* If this is a device, ensure it isn't already locked */

      if (isafs || ((status = alt_file_locked (fd)) >= 0))
10011b8c:	e0bffb17 	ldw	r2,-20(fp)
10011b90:	1000051e 	bne	r2,zero,10011ba8 <open+0xd8>
10011b94:	e13ffc17 	ldw	r4,-16(fp)
10011b98:	00119e00 	call	100119e0 <alt_file_locked>
10011b9c:	e0bffa15 	stw	r2,-24(fp)
10011ba0:	e0bffa17 	ldw	r2,-24(fp)
10011ba4:	10001016 	blt	r2,zero,10011be8 <open+0x118>
        /* 
         * If the device or filesystem provides an open() callback function,
         * call it now to perform any device/filesystem specific operations.
         */
    
        status = (dev->open) ? dev->open(fd, file, flags, mode): 0;
10011ba8:	e0bff817 	ldw	r2,-32(fp)
10011bac:	10800317 	ldw	r2,12(r2)
10011bb0:	10000826 	beq	r2,zero,10011bd4 <open+0x104>
10011bb4:	e0bff817 	ldw	r2,-32(fp)
10011bb8:	10800317 	ldw	r2,12(r2)
10011bbc:	e13ffc17 	ldw	r4,-16(fp)
10011bc0:	e17ffd17 	ldw	r5,-12(fp)
10011bc4:	e1bffe17 	ldw	r6,-8(fp)
10011bc8:	e1ffff17 	ldw	r7,-4(fp)
10011bcc:	103ee83a 	callr	r2
10011bd0:	00000106 	br	10011bd8 <open+0x108>
10011bd4:	0005883a 	mov	r2,zero
10011bd8:	e0bffa15 	stw	r2,-24(fp)
10011bdc:	00000206 	br	10011be8 <open+0x118>
      }
    }
  }
  else
  {
    status = -ENODEV;
10011be0:	00bffb44 	movi	r2,-19
10011be4:	e0bffa15 	stw	r2,-24(fp)
  }

  /* Allocation failed, so clean up and return an error */ 

  if (status < 0)
10011be8:	e0bffa17 	ldw	r2,-24(fp)
10011bec:	1000080e 	bge	r2,zero,10011c10 <open+0x140>
  {
    alt_release_fd (index);  
10011bf0:	e13ff917 	ldw	r4,-28(fp)
10011bf4:	00104cc0 	call	100104cc <alt_release_fd>
    ALT_ERRNO = -status;
10011bf8:	00119900 	call	10011990 <alt_get_errno>
10011bfc:	e0fffa17 	ldw	r3,-24(fp)
10011c00:	00c7c83a 	sub	r3,zero,r3
10011c04:	10c00015 	stw	r3,0(r2)
    return -1;
10011c08:	00bfffc4 	movi	r2,-1
10011c0c:	00000106 	br	10011c14 <open+0x144>
  }
  
  /* return the reference upon success */

  return index;
10011c10:	e0bff917 	ldw	r2,-28(fp)
}
10011c14:	e037883a 	mov	sp,fp
10011c18:	dfc00117 	ldw	ra,4(sp)
10011c1c:	df000017 	ldw	fp,0(sp)
10011c20:	dec00204 	addi	sp,sp,8
10011c24:	f800283a 	ret

10011c28 <alt_alarm_stop>:
 * alarms. Alternatively an alarm can unregister itself by returning zero when 
 * the alarm executes.
 */

void alt_alarm_stop (alt_alarm* alarm)
{
10011c28:	defffa04 	addi	sp,sp,-24
10011c2c:	df000515 	stw	fp,20(sp)
10011c30:	df000504 	addi	fp,sp,20
10011c34:	e13fff15 	stw	r4,-4(fp)
static ALT_INLINE alt_irq_context ALT_ALWAYS_INLINE 
       alt_irq_disable_all (void)
{
  alt_irq_context context;

  NIOS2_READ_STATUS (context);
10011c38:	0005303a 	rdctl	r2,status
10011c3c:	e0bffc15 	stw	r2,-16(fp)

  NIOS2_WRITE_STATUS (context & ~NIOS2_STATUS_PIE_MSK);
10011c40:	e0fffc17 	ldw	r3,-16(fp)
10011c44:	00bfff84 	movi	r2,-2
10011c48:	1884703a 	and	r2,r3,r2
10011c4c:	1001703a 	wrctl	status,r2
  
  return context;
10011c50:	e0bffc17 	ldw	r2,-16(fp)
  alt_irq_context irq_context;

  irq_context = alt_irq_disable_all();
10011c54:	e0bffb15 	stw	r2,-20(fp)
  alt_llist_remove (&alarm->llist);
10011c58:	e0bfff17 	ldw	r2,-4(fp)
10011c5c:	e0bffd15 	stw	r2,-12(fp)
 * input argument is the element to remove.
 */
     
static ALT_INLINE void ALT_ALWAYS_INLINE alt_llist_remove(alt_llist* entry)
{
  entry->next->previous = entry->previous;
10011c60:	e0bffd17 	ldw	r2,-12(fp)
10011c64:	10800017 	ldw	r2,0(r2)
10011c68:	e0fffd17 	ldw	r3,-12(fp)
10011c6c:	18c00117 	ldw	r3,4(r3)
10011c70:	10c00115 	stw	r3,4(r2)
  entry->previous->next = entry->next;
10011c74:	e0bffd17 	ldw	r2,-12(fp)
10011c78:	10800117 	ldw	r2,4(r2)
10011c7c:	e0fffd17 	ldw	r3,-12(fp)
10011c80:	18c00017 	ldw	r3,0(r3)
10011c84:	10c00015 	stw	r3,0(r2)
  /* 
   * Set the entry to point to itself, so that any further calls to
   * alt_llist_remove() are harmless.
   */

  entry->previous = entry;
10011c88:	e0bffd17 	ldw	r2,-12(fp)
10011c8c:	e0fffd17 	ldw	r3,-12(fp)
10011c90:	10c00115 	stw	r3,4(r2)
  entry->next     = entry;
10011c94:	e0bffd17 	ldw	r2,-12(fp)
10011c98:	e0fffd17 	ldw	r3,-12(fp)
10011c9c:	10c00015 	stw	r3,0(r2)
10011ca0:	e0bffb17 	ldw	r2,-20(fp)
10011ca4:	e0bffe15 	stw	r2,-8(fp)
  status &= ~NIOS2_STATUS_PIE_MSK;
  status |= (context & NIOS2_STATUS_PIE_MSK);
  
  NIOS2_WRITE_STATUS (status);
#else
  NIOS2_WRITE_STATUS (context);
10011ca8:	e0bffe17 	ldw	r2,-8(fp)
10011cac:	1001703a 	wrctl	status,r2
  alt_irq_enable_all (irq_context);
}
10011cb0:	e037883a 	mov	sp,fp
10011cb4:	df000017 	ldw	fp,0(sp)
10011cb8:	dec00104 	addi	sp,sp,4
10011cbc:	f800283a 	ret

10011cc0 <alt_tick>:
 * 
 * alt_tick() is expected to run at interrupt level.
 */

void alt_tick (void)
{
10011cc0:	defffb04 	addi	sp,sp,-20
10011cc4:	dfc00415 	stw	ra,16(sp)
10011cc8:	df000315 	stw	fp,12(sp)
10011ccc:	df000304 	addi	fp,sp,12
  alt_alarm* next;
  alt_alarm* alarm = (alt_alarm*) alt_alarm_list.next;
10011cd0:	d0a00e17 	ldw	r2,-32712(gp)
10011cd4:	e0bffd15 	stw	r2,-12(fp)

  alt_u32    next_callback;

  /* update the tick counter */

  _alt_nticks++;
10011cd8:	d0a70817 	ldw	r2,-25568(gp)
10011cdc:	10800044 	addi	r2,r2,1
10011ce0:	d0a70815 	stw	r2,-25568(gp)

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10011ce4:	00002e06 	br	10011da0 <alt_tick+0xe0>
  {
    next = (alt_alarm*) alarm->llist.next;
10011ce8:	e0bffd17 	ldw	r2,-12(fp)
10011cec:	10800017 	ldw	r2,0(r2)
10011cf0:	e0bffe15 	stw	r2,-8(fp)
    /* 
     * Upon the tick-counter rolling over it is safe to clear the 
     * roll-over flag; once the flag is cleared this (or subsequnt)
     * tick events are enabled to generate an alarm event. 
     */
    if ((alarm->rollover) && (_alt_nticks == 0))
10011cf4:	e0bffd17 	ldw	r2,-12(fp)
10011cf8:	10800403 	ldbu	r2,16(r2)
10011cfc:	10803fcc 	andi	r2,r2,255
10011d00:	10000426 	beq	r2,zero,10011d14 <alt_tick+0x54>
10011d04:	d0a70817 	ldw	r2,-25568(gp)
10011d08:	1000021e 	bne	r2,zero,10011d14 <alt_tick+0x54>
    {
      alarm->rollover = 0;
10011d0c:	e0bffd17 	ldw	r2,-12(fp)
10011d10:	10000405 	stb	zero,16(r2)
    }
    
    /* if the alarm period has expired, make the callback */    
    if ((alarm->time <= _alt_nticks) && (alarm->rollover == 0))
10011d14:	e0bffd17 	ldw	r2,-12(fp)
10011d18:	10800217 	ldw	r2,8(r2)
10011d1c:	d0e70817 	ldw	r3,-25568(gp)
10011d20:	18801d36 	bltu	r3,r2,10011d98 <alt_tick+0xd8>
10011d24:	e0bffd17 	ldw	r2,-12(fp)
10011d28:	10800403 	ldbu	r2,16(r2)
10011d2c:	10803fcc 	andi	r2,r2,255
10011d30:	1000191e 	bne	r2,zero,10011d98 <alt_tick+0xd8>
    {
      next_callback = alarm->callback (alarm->context);
10011d34:	e0bffd17 	ldw	r2,-12(fp)
10011d38:	10c00317 	ldw	r3,12(r2)
10011d3c:	e0bffd17 	ldw	r2,-12(fp)
10011d40:	10800517 	ldw	r2,20(r2)
10011d44:	1009883a 	mov	r4,r2
10011d48:	183ee83a 	callr	r3
10011d4c:	e0bfff15 	stw	r2,-4(fp)

      /* deactivate the alarm if the return value is zero */

      if (next_callback == 0)
10011d50:	e0bfff17 	ldw	r2,-4(fp)
10011d54:	1000031e 	bne	r2,zero,10011d64 <alt_tick+0xa4>
      {
        alt_alarm_stop (alarm);
10011d58:	e13ffd17 	ldw	r4,-12(fp)
10011d5c:	0011c280 	call	10011c28 <alt_alarm_stop>
10011d60:	00000d06 	br	10011d98 <alt_tick+0xd8>
      }
      else
      {
        alarm->time += next_callback;
10011d64:	e0bffd17 	ldw	r2,-12(fp)
10011d68:	10c00217 	ldw	r3,8(r2)
10011d6c:	e0bfff17 	ldw	r2,-4(fp)
10011d70:	1887883a 	add	r3,r3,r2
10011d74:	e0bffd17 	ldw	r2,-12(fp)
10011d78:	10c00215 	stw	r3,8(r2)
        /* 
         * If the desired alarm time causes a roll-over, set the rollover
         * flag. This will prevent the subsequent tick event from causing
         * an alarm too early.
         */
        if(alarm->time < _alt_nticks)
10011d7c:	e0bffd17 	ldw	r2,-12(fp)
10011d80:	10c00217 	ldw	r3,8(r2)
10011d84:	d0a70817 	ldw	r2,-25568(gp)
10011d88:	1880032e 	bgeu	r3,r2,10011d98 <alt_tick+0xd8>
        {
          alarm->rollover = 1;
10011d8c:	e0bffd17 	ldw	r2,-12(fp)
10011d90:	00c00044 	movi	r3,1
10011d94:	10c00405 	stb	r3,16(r2)
        }
      }
    }
    alarm = next;
10011d98:	e0bffe17 	ldw	r2,-8(fp)
10011d9c:	e0bffd15 	stw	r2,-12(fp)

  _alt_nticks++;

  /* process the registered callbacks */

  while (alarm != (alt_alarm*) &alt_alarm_list)
10011da0:	e0fffd17 	ldw	r3,-12(fp)
10011da4:	d0a00e04 	addi	r2,gp,-32712
10011da8:	18bfcf1e 	bne	r3,r2,10011ce8 <__alt_data_end+0xf8011ce8>

  /* 
   * Update the operating system specific timer facilities.
   */

  ALT_OS_TIME_TICK();
10011dac:	0001883a 	nop
}
10011db0:	e037883a 	mov	sp,fp
10011db4:	dfc00117 	ldw	ra,4(sp)
10011db8:	df000017 	ldw	fp,0(sp)
10011dbc:	dec00204 	addi	sp,sp,8
10011dc0:	f800283a 	ret

10011dc4 <altera_nios2_qsys_irq_init>:
/*
 * To initialize the internal interrupt controller, just clear the IENABLE
 * register so that all possible IRQs are disabled.
 */
void altera_nios2_qsys_irq_init(void) 
{
10011dc4:	deffff04 	addi	sp,sp,-4
10011dc8:	df000015 	stw	fp,0(sp)
10011dcc:	d839883a 	mov	fp,sp
    NIOS2_WRITE_IENABLE(0);
10011dd0:	000170fa 	wrctl	ienable,zero
}
10011dd4:	e037883a 	mov	sp,fp
10011dd8:	df000017 	ldw	fp,0(sp)
10011ddc:	dec00104 	addi	sp,sp,4
10011de0:	f800283a 	ret

10011de4 <alt_find_dev>:
 * "name" must be an exact match for the devices registered name for a match to
 * be found.
 */
 
alt_dev* alt_find_dev(const char* name, alt_llist* llist)
{
10011de4:	defffa04 	addi	sp,sp,-24
10011de8:	dfc00515 	stw	ra,20(sp)
10011dec:	df000415 	stw	fp,16(sp)
10011df0:	df000404 	addi	fp,sp,16
10011df4:	e13ffe15 	stw	r4,-8(fp)
10011df8:	e17fff15 	stw	r5,-4(fp)
  alt_dev* next = (alt_dev*) llist->next;
10011dfc:	e0bfff17 	ldw	r2,-4(fp)
10011e00:	10800017 	ldw	r2,0(r2)
10011e04:	e0bffc15 	stw	r2,-16(fp)
  alt_32 len;

  len  = strlen(name) + 1;
10011e08:	e13ffe17 	ldw	r4,-8(fp)
10011e0c:	0009fd00 	call	10009fd0 <strlen>
10011e10:	10800044 	addi	r2,r2,1
10011e14:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10011e18:	00000d06 	br	10011e50 <alt_find_dev+0x6c>
    /* 
     * memcmp() is used here rather than strcmp() in order to reduce the size
     * of the executable.
     */

    if (!memcmp (next->name, name, len))
10011e1c:	e0bffc17 	ldw	r2,-16(fp)
10011e20:	10c00217 	ldw	r3,8(r2)
10011e24:	e0bffd17 	ldw	r2,-12(fp)
10011e28:	1809883a 	mov	r4,r3
10011e2c:	e17ffe17 	ldw	r5,-8(fp)
10011e30:	100d883a 	mov	r6,r2
10011e34:	00120a80 	call	100120a8 <memcmp>
10011e38:	1000021e 	bne	r2,zero,10011e44 <alt_find_dev+0x60>
    {
      /* match found */

      return next;
10011e3c:	e0bffc17 	ldw	r2,-16(fp)
10011e40:	00000706 	br	10011e60 <alt_find_dev+0x7c>
    }
    next = (alt_dev*) next->llist.next;
10011e44:	e0bffc17 	ldw	r2,-16(fp)
10011e48:	10800017 	ldw	r2,0(r2)
10011e4c:	e0bffc15 	stw	r2,-16(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 

  while (next != (alt_dev*) llist)
10011e50:	e0fffc17 	ldw	r3,-16(fp)
10011e54:	e0bfff17 	ldw	r2,-4(fp)
10011e58:	18bff01e 	bne	r3,r2,10011e1c <__alt_data_end+0xf8011e1c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;
10011e5c:	0005883a 	mov	r2,zero
}
10011e60:	e037883a 	mov	sp,fp
10011e64:	dfc00117 	ldw	ra,4(sp)
10011e68:	df000017 	ldw	fp,0(sp)
10011e6c:	dec00204 	addi	sp,sp,8
10011e70:	f800283a 	ret

10011e74 <alt_find_file>:
 * either '/' or '\0' is the prefix of the filename. For example the filename:
 * "/myfilesystem/junk.txt" would match: "/myfilesystem", but not: "/myfile". 
 */
 
alt_dev* alt_find_file (const char* name)
{
10011e74:	defffb04 	addi	sp,sp,-20
10011e78:	dfc00415 	stw	ra,16(sp)
10011e7c:	df000315 	stw	fp,12(sp)
10011e80:	df000304 	addi	fp,sp,12
10011e84:	e13fff15 	stw	r4,-4(fp)
  alt_dev* next = (alt_dev*) alt_fs_list.next;   
10011e88:	00840074 	movhi	r2,4097
10011e8c:	10918104 	addi	r2,r2,17924
10011e90:	10800017 	ldw	r2,0(r2)
10011e94:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10011e98:	00003106 	br	10011f60 <alt_find_file+0xec>
  {
    len = strlen(next->name);
10011e9c:	e0bffd17 	ldw	r2,-12(fp)
10011ea0:	10800217 	ldw	r2,8(r2)
10011ea4:	1009883a 	mov	r4,r2
10011ea8:	0009fd00 	call	10009fd0 <strlen>
10011eac:	e0bffe15 	stw	r2,-8(fp)
    
    if (next->name[len-1] == '/')
10011eb0:	e0bffd17 	ldw	r2,-12(fp)
10011eb4:	10c00217 	ldw	r3,8(r2)
10011eb8:	e0bffe17 	ldw	r2,-8(fp)
10011ebc:	10bfffc4 	addi	r2,r2,-1
10011ec0:	1885883a 	add	r2,r3,r2
10011ec4:	10800003 	ldbu	r2,0(r2)
10011ec8:	10803fcc 	andi	r2,r2,255
10011ecc:	1080201c 	xori	r2,r2,128
10011ed0:	10bfe004 	addi	r2,r2,-128
10011ed4:	10800bd8 	cmpnei	r2,r2,47
10011ed8:	1000031e 	bne	r2,zero,10011ee8 <alt_find_file+0x74>
    {
      len -= 1;
10011edc:	e0bffe17 	ldw	r2,-8(fp)
10011ee0:	10bfffc4 	addi	r2,r2,-1
10011ee4:	e0bffe15 	stw	r2,-8(fp)
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10011ee8:	e0bffe17 	ldw	r2,-8(fp)
10011eec:	e0ffff17 	ldw	r3,-4(fp)
10011ef0:	1885883a 	add	r2,r3,r2
10011ef4:	10800003 	ldbu	r2,0(r2)
10011ef8:	10803fcc 	andi	r2,r2,255
10011efc:	1080201c 	xori	r2,r2,128
10011f00:	10bfe004 	addi	r2,r2,-128
10011f04:	10800be0 	cmpeqi	r2,r2,47
10011f08:	1000081e 	bne	r2,zero,10011f2c <alt_find_file+0xb8>
10011f0c:	e0bffe17 	ldw	r2,-8(fp)
10011f10:	e0ffff17 	ldw	r3,-4(fp)
10011f14:	1885883a 	add	r2,r3,r2
10011f18:	10800003 	ldbu	r2,0(r2)
10011f1c:	10803fcc 	andi	r2,r2,255
10011f20:	1080201c 	xori	r2,r2,128
10011f24:	10bfe004 	addi	r2,r2,-128
10011f28:	10000a1e 	bne	r2,zero,10011f54 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
10011f2c:	e0bffd17 	ldw	r2,-12(fp)
10011f30:	10c00217 	ldw	r3,8(r2)
10011f34:	e0bffe17 	ldw	r2,-8(fp)
10011f38:	1809883a 	mov	r4,r3
10011f3c:	e17fff17 	ldw	r5,-4(fp)
10011f40:	100d883a 	mov	r6,r2
10011f44:	00120a80 	call	100120a8 <memcmp>
    if (next->name[len-1] == '/')
    {
      len -= 1;
    }

    if (((name[len] == '/') || (name[len] == '\0')) && 
10011f48:	1000021e 	bne	r2,zero,10011f54 <alt_find_file+0xe0>
        !memcmp (next->name, name, len))
    {
      /* match found */

      return next;
10011f4c:	e0bffd17 	ldw	r2,-12(fp)
10011f50:	00000806 	br	10011f74 <alt_find_file+0x100>
    }
    next = (alt_dev*) next->llist.next;
10011f54:	e0bffd17 	ldw	r2,-12(fp)
10011f58:	10800017 	ldw	r2,0(r2)
10011f5c:	e0bffd15 	stw	r2,-12(fp)
  /*
   * Check each list entry in turn, until a match is found, or we reach the
   * end of the list (i.e. next winds up pointing back to the list head).
   */ 
 
  while (next != (alt_dev*) &alt_fs_list)
10011f60:	e0fffd17 	ldw	r3,-12(fp)
10011f64:	00840074 	movhi	r2,4097
10011f68:	10918104 	addi	r2,r2,17924
10011f6c:	18bfcb1e 	bne	r3,r2,10011e9c <__alt_data_end+0xf8011e9c>
    next = (alt_dev*) next->llist.next;
  }
  
  /* No match found */
  
  return NULL;     
10011f70:	0005883a 	mov	r2,zero
}
10011f74:	e037883a 	mov	sp,fp
10011f78:	dfc00117 	ldw	ra,4(sp)
10011f7c:	df000017 	ldw	fp,0(sp)
10011f80:	dec00204 	addi	sp,sp,8
10011f84:	f800283a 	ret

10011f88 <alt_get_fd>:
 * the offset of the file descriptor within the file descriptor array). A
 * negative value indicates failure.
 */

int alt_get_fd (alt_dev* dev)
{
10011f88:	defffa04 	addi	sp,sp,-24
10011f8c:	dfc00515 	stw	ra,20(sp)
10011f90:	df000415 	stw	fp,16(sp)
10011f94:	dc000315 	stw	r16,12(sp)
10011f98:	df000304 	addi	fp,sp,12
10011f9c:	e13fff15 	stw	r4,-4(fp)
  alt_32 i;
  int rc = -EMFILE;
10011fa0:	00bffa04 	movi	r2,-24
10011fa4:	e0bffe15 	stw	r2,-8(fp)
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10011fa8:	e03ffd15 	stw	zero,-12(fp)
10011fac:	00002106 	br	10012034 <alt_get_fd+0xac>
  {
    if (!alt_fd_list[i].dev)
10011fb0:	04040074 	movhi	r16,4097
10011fb4:	840d0304 	addi	r16,r16,13324
10011fb8:	e0bffd17 	ldw	r2,-12(fp)
10011fbc:	1009883a 	mov	r4,r2
10011fc0:	01400304 	movi	r5,12
10011fc4:	000f5540 	call	1000f554 <__mulsi3>
10011fc8:	8085883a 	add	r2,r16,r2
10011fcc:	10800017 	ldw	r2,0(r2)
10011fd0:	1000151e 	bne	r2,zero,10012028 <alt_get_fd+0xa0>
    {
      alt_fd_list[i].dev = dev;
10011fd4:	04040074 	movhi	r16,4097
10011fd8:	840d0304 	addi	r16,r16,13324
10011fdc:	e0bffd17 	ldw	r2,-12(fp)
10011fe0:	1009883a 	mov	r4,r2
10011fe4:	01400304 	movi	r5,12
10011fe8:	000f5540 	call	1000f554 <__mulsi3>
10011fec:	8085883a 	add	r2,r16,r2
10011ff0:	e0ffff17 	ldw	r3,-4(fp)
10011ff4:	10c00015 	stw	r3,0(r2)
      if (i > alt_max_fd)
10011ff8:	00840074 	movhi	r2,4097
10011ffc:	10918504 	addi	r2,r2,17940
10012000:	10c00017 	ldw	r3,0(r2)
10012004:	e0bffd17 	ldw	r2,-12(fp)
10012008:	1880040e 	bge	r3,r2,1001201c <alt_get_fd+0x94>
      {
        alt_max_fd = i;
1001200c:	00840074 	movhi	r2,4097
10012010:	10918504 	addi	r2,r2,17940
10012014:	e0fffd17 	ldw	r3,-12(fp)
10012018:	10c00015 	stw	r3,0(r2)
      }
      rc = i;
1001201c:	e0bffd17 	ldw	r2,-12(fp)
10012020:	e0bffe15 	stw	r2,-8(fp)
      goto alt_get_fd_exit;
10012024:	00000606 	br	10012040 <alt_get_fd+0xb8>
   * indicates the highest file descriptor ever allocated. This is used to
   * improve efficency when searching the file descriptor list, and 
   * therefore reduce contention on the alt_fd_list_lock semaphore. 
   */

  for (i = 0; i < ALT_MAX_FD; i++)
10012028:	e0bffd17 	ldw	r2,-12(fp)
1001202c:	10800044 	addi	r2,r2,1
10012030:	e0bffd15 	stw	r2,-12(fp)
10012034:	e0bffd17 	ldw	r2,-12(fp)
10012038:	10800810 	cmplti	r2,r2,32
1001203c:	103fdc1e 	bne	r2,zero,10011fb0 <__alt_data_end+0xf8011fb0>
   * file descriptor pool.
   */

  ALT_SEM_POST(alt_fd_list_lock);

  return rc;
10012040:	e0bffe17 	ldw	r2,-8(fp)
}
10012044:	e037883a 	mov	sp,fp
10012048:	dfc00217 	ldw	ra,8(sp)
1001204c:	df000117 	ldw	fp,4(sp)
10012050:	dc000017 	ldw	r16,0(sp)
10012054:	dec00304 	addi	sp,sp,12
10012058:	f800283a 	ret

1001205c <atexit>:
1001205c:	200b883a 	mov	r5,r4
10012060:	000d883a 	mov	r6,zero
10012064:	0009883a 	mov	r4,zero
10012068:	000f883a 	mov	r7,zero
1001206c:	00121241 	jmpi	10012124 <__register_exitproc>

10012070 <exit>:
10012070:	defffe04 	addi	sp,sp,-8
10012074:	000b883a 	mov	r5,zero
10012078:	dc000015 	stw	r16,0(sp)
1001207c:	dfc00115 	stw	ra,4(sp)
10012080:	2021883a 	mov	r16,r4
10012084:	00122540 	call	10012254 <__call_exitprocs>
10012088:	00840074 	movhi	r2,4097
1001208c:	10917e04 	addi	r2,r2,17912
10012090:	11000017 	ldw	r4,0(r2)
10012094:	20800f17 	ldw	r2,60(r4)
10012098:	10000126 	beq	r2,zero,100120a0 <exit+0x30>
1001209c:	103ee83a 	callr	r2
100120a0:	8009883a 	mov	r4,r16
100120a4:	00123f40 	call	100123f4 <_exit>

100120a8 <memcmp>:
100120a8:	01c000c4 	movi	r7,3
100120ac:	3980192e 	bgeu	r7,r6,10012114 <memcmp+0x6c>
100120b0:	2904b03a 	or	r2,r5,r4
100120b4:	11c4703a 	and	r2,r2,r7
100120b8:	10000f26 	beq	r2,zero,100120f8 <memcmp+0x50>
100120bc:	20c00003 	ldbu	r3,0(r4)
100120c0:	28800003 	ldbu	r2,0(r5)
100120c4:	1880151e 	bne	r3,r2,1001211c <memcmp+0x74>
100120c8:	31bfff84 	addi	r6,r6,-2
100120cc:	01ffffc4 	movi	r7,-1
100120d0:	00000406 	br	100120e4 <memcmp+0x3c>
100120d4:	20c00003 	ldbu	r3,0(r4)
100120d8:	28800003 	ldbu	r2,0(r5)
100120dc:	31bfffc4 	addi	r6,r6,-1
100120e0:	18800e1e 	bne	r3,r2,1001211c <memcmp+0x74>
100120e4:	21000044 	addi	r4,r4,1
100120e8:	29400044 	addi	r5,r5,1
100120ec:	31fff91e 	bne	r6,r7,100120d4 <__alt_data_end+0xf80120d4>
100120f0:	0005883a 	mov	r2,zero
100120f4:	f800283a 	ret
100120f8:	20c00017 	ldw	r3,0(r4)
100120fc:	28800017 	ldw	r2,0(r5)
10012100:	1880041e 	bne	r3,r2,10012114 <memcmp+0x6c>
10012104:	31bfff04 	addi	r6,r6,-4
10012108:	21000104 	addi	r4,r4,4
1001210c:	29400104 	addi	r5,r5,4
10012110:	39bff936 	bltu	r7,r6,100120f8 <__alt_data_end+0xf80120f8>
10012114:	303fe91e 	bne	r6,zero,100120bc <__alt_data_end+0xf80120bc>
10012118:	003ff506 	br	100120f0 <__alt_data_end+0xf80120f0>
1001211c:	1885c83a 	sub	r2,r3,r2
10012120:	f800283a 	ret

10012124 <__register_exitproc>:
10012124:	defffa04 	addi	sp,sp,-24
10012128:	00840074 	movhi	r2,4097
1001212c:	10917e04 	addi	r2,r2,17912
10012130:	dc000315 	stw	r16,12(sp)
10012134:	14000017 	ldw	r16,0(r2)
10012138:	dc400415 	stw	r17,16(sp)
1001213c:	dfc00515 	stw	ra,20(sp)
10012140:	80805217 	ldw	r2,328(r16)
10012144:	2023883a 	mov	r17,r4
10012148:	10003e26 	beq	r2,zero,10012244 <__register_exitproc+0x120>
1001214c:	10c00117 	ldw	r3,4(r2)
10012150:	020007c4 	movi	r8,31
10012154:	40c0180e 	bge	r8,r3,100121b8 <__register_exitproc+0x94>
10012158:	00840034 	movhi	r2,4096
1001215c:	1083ad04 	addi	r2,r2,3764
10012160:	1000061e 	bne	r2,zero,1001217c <__register_exitproc+0x58>
10012164:	00bfffc4 	movi	r2,-1
10012168:	dfc00517 	ldw	ra,20(sp)
1001216c:	dc400417 	ldw	r17,16(sp)
10012170:	dc000317 	ldw	r16,12(sp)
10012174:	dec00604 	addi	sp,sp,24
10012178:	f800283a 	ret
1001217c:	01006404 	movi	r4,400
10012180:	d9400015 	stw	r5,0(sp)
10012184:	d9800115 	stw	r6,4(sp)
10012188:	d9c00215 	stw	r7,8(sp)
1001218c:	0000eb40 	call	10000eb4 <malloc>
10012190:	d9400017 	ldw	r5,0(sp)
10012194:	d9800117 	ldw	r6,4(sp)
10012198:	d9c00217 	ldw	r7,8(sp)
1001219c:	103ff126 	beq	r2,zero,10012164 <__alt_data_end+0xf8012164>
100121a0:	80c05217 	ldw	r3,328(r16)
100121a4:	10000115 	stw	zero,4(r2)
100121a8:	10c00015 	stw	r3,0(r2)
100121ac:	80805215 	stw	r2,328(r16)
100121b0:	10006215 	stw	zero,392(r2)
100121b4:	10006315 	stw	zero,396(r2)
100121b8:	10c00117 	ldw	r3,4(r2)
100121bc:	88000d1e 	bne	r17,zero,100121f4 <__register_exitproc+0xd0>
100121c0:	19000084 	addi	r4,r3,2
100121c4:	2109883a 	add	r4,r4,r4
100121c8:	18c00044 	addi	r3,r3,1
100121cc:	2109883a 	add	r4,r4,r4
100121d0:	1109883a 	add	r4,r2,r4
100121d4:	10c00115 	stw	r3,4(r2)
100121d8:	0005883a 	mov	r2,zero
100121dc:	21400015 	stw	r5,0(r4)
100121e0:	dfc00517 	ldw	ra,20(sp)
100121e4:	dc400417 	ldw	r17,16(sp)
100121e8:	dc000317 	ldw	r16,12(sp)
100121ec:	dec00604 	addi	sp,sp,24
100121f0:	f800283a 	ret
100121f4:	02400044 	movi	r9,1
100121f8:	12806217 	ldw	r10,392(r2)
100121fc:	48d2983a 	sll	r9,r9,r3
10012200:	19000804 	addi	r4,r3,32
10012204:	18d1883a 	add	r8,r3,r3
10012208:	2109883a 	add	r4,r4,r4
1001220c:	4211883a 	add	r8,r8,r8
10012210:	2109883a 	add	r4,r4,r4
10012214:	1109883a 	add	r4,r2,r4
10012218:	1211883a 	add	r8,r2,r8
1001221c:	5254b03a 	or	r10,r10,r9
10012220:	21c02215 	stw	r7,136(r4)
10012224:	41802215 	stw	r6,136(r8)
10012228:	12806215 	stw	r10,392(r2)
1001222c:	01000084 	movi	r4,2
10012230:	893fe31e 	bne	r17,r4,100121c0 <__alt_data_end+0xf80121c0>
10012234:	11006317 	ldw	r4,396(r2)
10012238:	2252b03a 	or	r9,r4,r9
1001223c:	12406315 	stw	r9,396(r2)
10012240:	003fdf06 	br	100121c0 <__alt_data_end+0xf80121c0>
10012244:	00840074 	movhi	r2,4097
10012248:	10990e04 	addi	r2,r2,25656
1001224c:	80805215 	stw	r2,328(r16)
10012250:	003fbe06 	br	1001214c <__alt_data_end+0xf801214c>

10012254 <__call_exitprocs>:
10012254:	00840074 	movhi	r2,4097
10012258:	10917e04 	addi	r2,r2,17912
1001225c:	10800017 	ldw	r2,0(r2)
10012260:	defff304 	addi	sp,sp,-52
10012264:	df000b15 	stw	fp,44(sp)
10012268:	d8800015 	stw	r2,0(sp)
1001226c:	10805204 	addi	r2,r2,328
10012270:	dd400815 	stw	r21,32(sp)
10012274:	dfc00c15 	stw	ra,48(sp)
10012278:	ddc00a15 	stw	r23,40(sp)
1001227c:	dd800915 	stw	r22,36(sp)
10012280:	dd000715 	stw	r20,28(sp)
10012284:	dcc00615 	stw	r19,24(sp)
10012288:	dc800515 	stw	r18,20(sp)
1001228c:	dc400415 	stw	r17,16(sp)
10012290:	dc000315 	stw	r16,12(sp)
10012294:	d9000115 	stw	r4,4(sp)
10012298:	2839883a 	mov	fp,r5
1001229c:	d8800215 	stw	r2,8(sp)
100122a0:	057fffc4 	movi	r21,-1
100122a4:	d8800017 	ldw	r2,0(sp)
100122a8:	ddc00217 	ldw	r23,8(sp)
100122ac:	14805217 	ldw	r18,328(r2)
100122b0:	90001726 	beq	r18,zero,10012310 <__call_exitprocs+0xbc>
100122b4:	94400117 	ldw	r17,4(r18)
100122b8:	8c3fffc4 	addi	r16,r17,-1
100122bc:	80001116 	blt	r16,zero,10012304 <__call_exitprocs+0xb0>
100122c0:	8c400044 	addi	r17,r17,1
100122c4:	8427883a 	add	r19,r16,r16
100122c8:	8c63883a 	add	r17,r17,r17
100122cc:	95802204 	addi	r22,r18,136
100122d0:	9ce7883a 	add	r19,r19,r19
100122d4:	8c63883a 	add	r17,r17,r17
100122d8:	b4e7883a 	add	r19,r22,r19
100122dc:	9463883a 	add	r17,r18,r17
100122e0:	e0001726 	beq	fp,zero,10012340 <__call_exitprocs+0xec>
100122e4:	8c87c83a 	sub	r3,r17,r18
100122e8:	b0c7883a 	add	r3,r22,r3
100122ec:	18c01e17 	ldw	r3,120(r3)
100122f0:	1f001326 	beq	r3,fp,10012340 <__call_exitprocs+0xec>
100122f4:	843fffc4 	addi	r16,r16,-1
100122f8:	9cffff04 	addi	r19,r19,-4
100122fc:	8c7fff04 	addi	r17,r17,-4
10012300:	857ff71e 	bne	r16,r21,100122e0 <__alt_data_end+0xf80122e0>
10012304:	00840034 	movhi	r2,4096
10012308:	1083b204 	addi	r2,r2,3784
1001230c:	10002a1e 	bne	r2,zero,100123b8 <__call_exitprocs+0x164>
10012310:	dfc00c17 	ldw	ra,48(sp)
10012314:	df000b17 	ldw	fp,44(sp)
10012318:	ddc00a17 	ldw	r23,40(sp)
1001231c:	dd800917 	ldw	r22,36(sp)
10012320:	dd400817 	ldw	r21,32(sp)
10012324:	dd000717 	ldw	r20,28(sp)
10012328:	dcc00617 	ldw	r19,24(sp)
1001232c:	dc800517 	ldw	r18,20(sp)
10012330:	dc400417 	ldw	r17,16(sp)
10012334:	dc000317 	ldw	r16,12(sp)
10012338:	dec00d04 	addi	sp,sp,52
1001233c:	f800283a 	ret
10012340:	91000117 	ldw	r4,4(r18)
10012344:	88c00017 	ldw	r3,0(r17)
10012348:	213fffc4 	addi	r4,r4,-1
1001234c:	24001526 	beq	r4,r16,100123a4 <__call_exitprocs+0x150>
10012350:	88000015 	stw	zero,0(r17)
10012354:	183fe726 	beq	r3,zero,100122f4 <__alt_data_end+0xf80122f4>
10012358:	00800044 	movi	r2,1
1001235c:	1408983a 	sll	r4,r2,r16
10012360:	91406217 	ldw	r5,392(r18)
10012364:	95000117 	ldw	r20,4(r18)
10012368:	214a703a 	and	r5,r4,r5
1001236c:	28000b26 	beq	r5,zero,1001239c <__call_exitprocs+0x148>
10012370:	91406317 	ldw	r5,396(r18)
10012374:	2148703a 	and	r4,r4,r5
10012378:	20000c1e 	bne	r4,zero,100123ac <__call_exitprocs+0x158>
1001237c:	99400017 	ldw	r5,0(r19)
10012380:	d9000117 	ldw	r4,4(sp)
10012384:	183ee83a 	callr	r3
10012388:	90c00117 	ldw	r3,4(r18)
1001238c:	1d3fc51e 	bne	r3,r20,100122a4 <__alt_data_end+0xf80122a4>
10012390:	b8c00017 	ldw	r3,0(r23)
10012394:	1cbfd726 	beq	r3,r18,100122f4 <__alt_data_end+0xf80122f4>
10012398:	003fc206 	br	100122a4 <__alt_data_end+0xf80122a4>
1001239c:	183ee83a 	callr	r3
100123a0:	003ff906 	br	10012388 <__alt_data_end+0xf8012388>
100123a4:	94000115 	stw	r16,4(r18)
100123a8:	003fea06 	br	10012354 <__alt_data_end+0xf8012354>
100123ac:	99000017 	ldw	r4,0(r19)
100123b0:	183ee83a 	callr	r3
100123b4:	003ff406 	br	10012388 <__alt_data_end+0xf8012388>
100123b8:	90c00117 	ldw	r3,4(r18)
100123bc:	1800071e 	bne	r3,zero,100123dc <__call_exitprocs+0x188>
100123c0:	90c00017 	ldw	r3,0(r18)
100123c4:	18000926 	beq	r3,zero,100123ec <__call_exitprocs+0x198>
100123c8:	9009883a 	mov	r4,r18
100123cc:	b8c00015 	stw	r3,0(r23)
100123d0:	0000ec80 	call	10000ec8 <free>
100123d4:	bc800017 	ldw	r18,0(r23)
100123d8:	003fb506 	br	100122b0 <__alt_data_end+0xf80122b0>
100123dc:	90c00017 	ldw	r3,0(r18)
100123e0:	902f883a 	mov	r23,r18
100123e4:	1825883a 	mov	r18,r3
100123e8:	003fb106 	br	100122b0 <__alt_data_end+0xf80122b0>
100123ec:	0007883a 	mov	r3,zero
100123f0:	003ffb06 	br	100123e0 <__alt_data_end+0xf80123e0>

100123f4 <_exit>:
 *
 * ALT_EXIT is mapped onto the _exit() system call in alt_syscall.h
 */

void ALT_EXIT (int exit_code)
{
100123f4:	defffc04 	addi	sp,sp,-16
100123f8:	df000315 	stw	fp,12(sp)
100123fc:	df000304 	addi	fp,sp,12
10012400:	e13fff15 	stw	r4,-4(fp)
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Entering _exit() function.\r\n");
  ALT_LOG_PRINT_BOOT("[alt_exit.c] Exit code from main was %d.\r\n",exit_code);
  /* Stop all other threads */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Calling ALT_OS_STOP().\r\n");
  ALT_OS_STOP();
10012404:	0001883a 	nop
10012408:	e0bfff17 	ldw	r2,-4(fp)
1001240c:	e0bffd15 	stw	r2,-12(fp)
/*
 * Routine called on exit.
 */
static ALT_INLINE ALT_ALWAYS_INLINE void alt_sim_halt(int exit_code)
{
  int r2 = exit_code;
10012410:	e0bffd17 	ldw	r2,-12(fp)
10012414:	e0bffe15 	stw	r2,-8(fp)
  __asm__ volatile ("\n0:\n\taddi %0,%0, -1\n\tbgt %0,zero,0b" : : "r" (ALT_CPU_FREQ/100) ); /* Delay for >30ms */

  __asm__ volatile ("break 2" : : "D02"(r2), "D03"(r3) ALT_GMON_DATA );

#else /* !DEBUG_STUB */
  if (r2) {
10012418:	e0bffe17 	ldw	r2,-8(fp)
1001241c:	10000226 	beq	r2,zero,10012428 <_exit+0x34>
    ALT_SIM_FAIL();
10012420:	002af070 	cmpltui	zero,zero,43969
10012424:	00000106 	br	1001242c <_exit+0x38>
  } else {
    ALT_SIM_PASS();
10012428:	002af0b0 	cmpltui	zero,zero,43970
  ALT_SIM_HALT(exit_code);

  /* spin forever, since there's no where to go back to */

  ALT_LOG_PRINT_BOOT("[alt_exit.c] Spinning forever.\r\n");
  while (1);
1001242c:	003fff06 	br	1001242c <__alt_data_end+0xf801242c>
